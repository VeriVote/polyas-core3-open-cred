\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 15 03:14:06 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Nov 15 03:14:06 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initPolyasVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].Non-interference contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initPolyasVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "122670")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "eqSymm" (formula "10") (term "1,0,0,1"))
(rule "eqSymm" (formula "10") (term "0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,0"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "9") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "boxToDiamond" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "6") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "6") (term "1,0,0,1,0"))
(rule "expand_inInt" (formula "6") (term "1,0,0,1"))
(rule "replace_int_MIN" (formula "6") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "6") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "6") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "6") (term "0,1,1,0,0,1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "eqSymm" (formula "6"))
(rule "castedGetAny" (formula "8") (term "0,0,1,0"))
(rule "castedGetAny" (formula "7") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "exLeft" (formula "14") (inst "sk=i_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "exLeft" (formula "11") (inst "sk=i_2_0"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "castedGetAny" (formula "15") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "castedGetAny" (formula "10") (term "0,0,1,0"))
(rule "castedGetAny" (formula "18") (term "0"))
(rule "castedGetAny" (formula "13") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "9"))
(rule "commute_and" (formula "19") (term "0,0"))
(rule "commute_and" (formula "8") (term "1,0,0"))
(rule "commute_and" (formula "8") (term "0,0,0"))
(rule "commute_and" (formula "19") (term "0,0,1,0"))
(rule "commute_and" (formula "7") (term "0,0,0"))
(rule "commute_and" (formula "7") (term "1,0,0"))
(rule "methodBodyExpand" (formula "42") (term "1") (newnames "heapBefore_initPolyasVals,savedHeapBefore_initPolyasVals"))
 (builtin "One Step Simplification" (formula "42"))
(rule "commute_and" (formula "15") (term "0,0"))
(rule "commute_and" (formula "14") (term "0,0"))
(rule "commute_and" (formula "10") (term "0,0"))
(rule "commute_and_2" (formula "19") (term "0,1,0"))
(rule "shift_paren_and" (formula "8") (term "0,0"))
(rule "commute_and_2" (formula "8") (term "0,0,0"))
(rule "shift_paren_and" (formula "7") (term "0,0"))
(rule "commute_and_2" (formula "7") (term "0,0,0"))
 (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_initPolyasVals_addInputCols,exc_386,heapAfter_initPolyasVals_addInputCols,anon_heap_initPolyasVals_addInputCols") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addInputCols(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
(branch "Post (initPolyasVals_addInputCols)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "1")) (ifInst ""  (formula "47")) (ifInst ""  (formula "4")) (ifInst ""  (formula "48")) (ifInst ""  (formula "5")))
    (builtin "One Step Simplification" (formula "23"))
    (builtin "One Step Simplification" (formula "22"))
    (builtin "One Step Simplification" (formula "46"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "26"))
   (rule "notLeft" (formula "24"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "26"))
   (rule "notLeft" (formula "27"))
   (rule "notLeft" (formula "26"))
   (rule "eqSymm" (formula "31") (term "1,0,1,0"))
   (rule "castedGetAny" (formula "31") (term "0,1,0,1,0"))
   (rule "castedGetAny" (formula "31") (term "1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
   (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
   (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0"))
   (rule "replaceKnownSelect_taclet0_1" (formula "33") (term "1,0"))
   (rule "replaceKnownSelect_taclet0_1" (formula "27") (term "0,0"))
   (rule "elementOfSingleton" (formula "24") (term "0,0"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "hideAuxiliaryEq" (formula "24"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "33") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "24") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "26") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "32") (term "1,0"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "28") (inst "i=i") (inst "i_0=i_0"))
   (rule "expand_inInt" (formula "28") (term "1,0,0,1,0"))
   (rule "expand_inInt" (formula "28") (term "1,0,0,1"))
   (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0,1"))
   (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0,1"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "eqSymm" (formula "28"))
   (rule "castedGetAny" (formula "29") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "28") (term "0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "32"))
   (rule "notLeft" (formula "31"))
   (rule "notLeft" (formula "30"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "30") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "34")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "30"))
   (rule "exLeft" (formula "34") (inst "sk=i_1"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "34"))
   (rule "exLeft" (formula "31") (inst "sk=i_2_1"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "31"))
   (rule "castedGetAny" (formula "35") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "34") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "30") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "38") (term "0"))
   (rule "castedGetAny" (formula "33") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "36"))
   (rule "inEqSimp_commuteLeq" (formula "31"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "notLeft" (formula "26"))
   (rule "andLeft" (formula "25"))
   (rule "notLeft" (formula "25"))
   (rule "notLeft" (formula "25"))
   (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "6")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "41") (term "0"))
   (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "6")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "40") (term "0"))
   (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "39") (term "0"))
   (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "24"))
   (rule "true_left" (formula "24"))
   (rule "commute_and" (formula "37") (term "0,0"))
   (rule "commute_and" (formula "37") (term "0,0,1,0"))
   (rule "commute_and" (formula "27") (term "0,0,0"))
   (rule "commute_and" (formula "27") (term "1,0,0"))
   (rule "commute_and" (formula "26") (term "0,0,0"))
   (rule "commute_and" (formula "26") (term "1,0,0"))
   (rule "commute_and" (formula "33") (term "0,0"))
   (rule "commute_and" (formula "32") (term "0,0"))
   (rule "commute_and" (formula "28") (term "0,0"))
   (rule "commute_and_2" (formula "34") (term "0,1,0"))
    (builtin "Use Operation Contract" (formula "58") (newnames "heapBefore_initPolyasVals_addDataForVoter,exc_387,heapAfter_initPolyasVals_addDataForVoter,anon_heap_initPolyasVals_addDataForVoter") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addDataForVoter(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
   (branch "Post (initPolyasVals_addDataForVoter)"
       (builtin "One Step Simplification" (formula "36"))
       (builtin "One Step Simplification" (formula "62"))
       (builtin "One Step Simplification" (formula "35"))
       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "63")) (ifInst ""  (formula "64")) (ifInst ""  (formula "63")) (ifInst ""  (formula "64")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1") (ifseqformula "22"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0,1") (ifseqformula "22"))
      (rule "replaceKnownSelect_taclet0_1" (formula "35") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet0_1" (formula "37") (term "1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "35") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "37") (term "1,1,0,0"))
      (rule "replaceKnownSelect_taclet0_1" (formula "37") (term "0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "37") (term "0,0,0,0,0"))
      (rule "andLeft" (formula "35"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "39"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "38"))
      (rule "notLeft" (formula "38"))
      (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "true_left" (formula "42"))
      (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "true_left" (formula "41"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "39"))
      (rule "replaceKnownSelect_taclet0_3" (formula "39") (term "0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "39") (term "0,0,1"))
      (rule "replaceKnownSelect_taclet0_7" (formula "39") (term "0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_5" (formula "39") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "39") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "39") (term "0,0,0,0"))
      (rule "andLeft" (formula "39"))
      (rule "notLeft" (formula "40"))
      (rule "andLeft" (formula "39"))
      (rule "notLeft" (formula "40"))
      (rule "notLeft" (formula "39"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "38"))
      (rule "true_left" (formula "38"))
      (rule "shift_paren_and" (formula "27") (term "0,0"))
      (rule "shift_paren_and" (formula "26") (term "0,0"))
      (rule "lenNonNegative" (formula "6") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "lenNonNegative" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "commute_and_2" (formula "29") (term "0,0,0"))
      (rule "commute_and_2" (formula "28") (term "0,0,0"))
      (rule "methodCallEmpty" (formula "63") (term "1"))
      (rule "lenNonNegative" (formula "19") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "tryEmpty" (formula "64") (term "1"))
      (rule "lenNonNegative" (formula "14") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "emptyModality" (formula "65") (term "1"))
       (builtin "One Step Simplification" (formula "65"))
      (rule "notRight" (formula "65"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "2"))
      (rule "seqGetAlphaCast" (formula "25") (term "0"))
      (rule "castedGetAny" (formula "25") (term "0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "seqGetAlphaCast" (formula "19") (term "0"))
      (rule "castedGetAny" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "lenNonNegative" (formula "21") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "seqGetAlphaCast" (formula "39") (term "0"))
      (rule "castedGetAny" (formula "39") (term "0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "true_left" (formula "39"))
      (rule "seqGetAlphaCast" (formula "36") (term "0"))
      (rule "castedGetAny" (formula "36") (term "0"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "true_left" (formula "36"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "1,0,1") (ifseqformula "9"))
      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "68"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "1") (ifseqformula "11"))
      (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "12"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "13"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "14"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "15"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1") (ifseqformula "16"))
      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "16"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "17"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "18"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "19"))
      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "64"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "applyEqRigid" (formula "30") (term "1,0") (ifseqformula "31"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "1,0") (ifseqformula "47"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "Use_information_flow_contract_for_initPolyasVals_addDataForVoter_1614999068_2" (formula "62") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")))
      (rule "true_left" (formula "62"))
      (rule "Use_information_flow_contract_for_initPolyasVals_addInputCols_2065249566_2" (formula "52") (inst "i#31=i#31") (inst "j#28=j#28") (inst "i#29=i#29") (ifseqformula "52"))
       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")))
      (rule "true_left" (formula "52"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "48"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "50"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "49"))
      (rule "andLeft" (formula "53"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "57"))
      (rule "notLeft" (formula "48"))
      (rule "notLeft" (formula "56"))
      (rule "notLeft" (formula "56"))
      (rule "eqSymm" (formula "56") (term "1,0,0,1"))
      (rule "eqSymm" (formula "56") (term "0,0,0,1"))
      (rule "eqSymm" (formula "55") (term "1,0,1,0"))
      (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "74"))
       (builtin "One Step Simplification" (formula "50"))
      (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "73"))
       (builtin "One Step Simplification" (formula "51"))
      (rule "castedGetAny" (formula "55") (term "1,1,0,1,0"))
      (rule "castedGetAny" (formula "55") (term "0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
      (rule "assignment" (formula "56") (term "1"))
       (builtin "One Step Simplification" (formula "56"))
      (rule "boxToDiamond" (formula "56") (term "1"))
       (builtin "One Step Simplification" (formula "56"))
      (rule "notLeft" (formula "56"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "52") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "52") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "52") (term "1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,0,1"))
      (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,0,1,0"))
      (rule "andLeft" (formula "52"))
      (rule "andLeft" (formula "52"))
      (rule "eqSymm" (formula "52"))
      (rule "castedGetAny" (formula "54") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "53") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "54") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
      (rule "applyEq" (formula "54") (term "1,1,0,0,0") (ifseqformula "52"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "notLeft" (formula "56"))
      (rule "notLeft" (formula "55"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "55") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "55"))
      (rule "notLeft" (formula "55"))
      (rule "exLeft" (formula "60") (inst "sk=i_2"))
      (rule "andLeft" (formula "60"))
      (rule "andLeft" (formula "60"))
      (rule "exLeft" (formula "57") (inst "sk=i_2_2"))
      (rule "andLeft" (formula "57"))
      (rule "andLeft" (formula "57"))
      (rule "castedGetAny" (formula "61") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "60") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "56") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "64") (term "0"))
      (rule "castedGetAny" (formula "59") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "62"))
      (rule "inEqSimp_commuteLeq" (formula "57"))
      (rule "applyEqRigid" (formula "85") (term "0") (ifseqformula "55"))
      (rule "commute_and" (formula "65") (term "0,0"))
      (rule "commute_and" (formula "65") (term "0,0,1,0"))
      (rule "commute_and" (formula "54") (term "1,0,0"))
      (rule "commute_and" (formula "53") (term "1,0,0"))
      (rule "commute_and" (formula "53") (term "0,0,0"))
      (rule "commute_and" (formula "54") (term "0,0,0"))
      (rule "methodBodyExpand" (formula "100") (term "1") (newnames "heapBefore_initPolyasVals_0,savedHeapBefore_initPolyasVals_0"))
       (builtin "One Step Simplification" (formula "100"))
      (rule "commute_and" (formula "61") (term "0,0"))
      (rule "commute_and" (formula "60") (term "0,0"))
      (rule "commute_and" (formula "56") (term "0,0"))
      (rule "commute_and_2" (formula "65") (term "0,1,0"))
      (rule "shift_paren_and" (formula "53") (term "0,0"))
      (rule "commute_and_2" (formula "53") (term "0,0,0"))
      (rule "shift_paren_and" (formula "54") (term "0,0"))
      (rule "commute_and_2" (formula "54") (term "0,0,0"))
       (builtin "Use Operation Contract" (formula "100") (newnames "heapBefore_initPolyasVals_addInputCols_0,exc_388,heapAfter_initPolyasVals_addInputCols_0,anon_heap_initPolyasVals_addInputCols_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addInputCols(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
      (branch "Post (initPolyasVals_addInputCols)"
          (builtin "One Step Simplification" (formula "84"))
          (builtin "One Step Simplification" (formula "104"))
          (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "106")) (ifInst ""  (formula "105")) (ifInst ""  (formula "47")) (ifInst ""  (formula "106")) (ifInst ""  (formula "50")) (ifInst ""  (formula "105")) (ifInst ""  (formula "51")))
          (builtin "One Step Simplification" (formula "83"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "83"))
         (rule "andLeft" (formula "87"))
         (rule "andLeft" (formula "84"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "87"))
         (rule "notLeft" (formula "85"))
         (rule "andLeft" (formula "87"))
         (rule "andLeft" (formula "87"))
         (rule "notLeft" (formula "88"))
         (rule "notLeft" (formula "87"))
         (rule "eqSymm" (formula "92") (term "1,0,1,0"))
         (rule "castedGetAny" (formula "92") (term "0,1,0,1,0"))
         (rule "castedGetAny" (formula "92") (term "1,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0,1,0"))
         (rule "applyEq" (formula "88") (term "5") (ifseqformula "84"))
         (rule "pullOutSelect" (formula "85") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
         (rule "applyEq" (formula "95") (term "0") (ifseqformula "85"))
         (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "85"))
         (rule "applyEq" (formula "94") (term "1,0") (ifseqformula "85"))
         (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "83"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "elementOfSingleton" (formula "85") (term "0,0"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "applyEqReverse" (formula "94") (term "1,0") (ifseqformula "85"))
         (rule "applyEqReverse" (formula "88") (term "0,0") (ifseqformula "85"))
         (rule "applyEqReverse" (formula "95") (term "0") (ifseqformula "85"))
         (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "85"))
         (rule "hideAuxiliaryEq" (formula "85"))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "89") (inst "i=i") (inst "i_0=i_0"))
         (rule "expand_inInt" (formula "89") (term "1,0,0,1,0"))
         (rule "expand_inInt" (formula "89") (term "1,0,0,1"))
         (rule "replace_int_MIN" (formula "89") (term "0,1,1,0,0,1,0"))
         (rule "replace_int_MAX" (formula "89") (term "1,0,1,0,0,1,0"))
         (rule "replace_int_MIN" (formula "89") (term "0,1,1,0,0,1"))
         (rule "replace_int_MAX" (formula "89") (term "1,0,1,0,0,1"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "eqSymm" (formula "89"))
         (rule "castedGetAny" (formula "90") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "89") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "90") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "90") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "89") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,0"))
         (rule "applyEq" (formula "90") (term "1,1,0,0,0") (ifseqformula "52"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "notLeft" (formula "93"))
         (rule "notLeft" (formula "92"))
         (rule "notLeft" (formula "91"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "91") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
          (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "96")) (ifInst ""  (formula "95")) (ifInst ""  (formula "97")) (ifInst ""  (formula "123")) (ifInst ""  (formula "124")) (ifInst ""  (formula "125")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "104")) (ifInst ""  (formula "105")) (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
         (rule "andLeft" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "notLeft" (formula "91"))
         (rule "exLeft" (formula "95") (inst "sk=i_3"))
         (rule "andLeft" (formula "95"))
         (rule "andLeft" (formula "95"))
         (rule "exLeft" (formula "92") (inst "sk=i_2_3"))
         (rule "andLeft" (formula "92"))
         (rule "andLeft" (formula "92"))
         (rule "castedGetAny" (formula "96") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "95") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "91") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "99") (term "0"))
         (rule "castedGetAny" (formula "94") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "96") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "97"))
         (rule "inEqSimp_commuteLeq" (formula "92"))
         (rule "applyEqRigid" (formula "101") (term "0") (ifseqformula "55"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "86"))
         (rule "andLeft" (formula "86"))
         (rule "andLeft" (formula "86"))
         (rule "notLeft" (formula "88"))
         (rule "notLeft" (formula "86"))
         (rule "notLeft" (formula "86"))
         (rule "pullOutSelect" (formula "102") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "125")) (ifInst ""  (formula "52")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "125")))
         (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "101") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "124")) (ifInst ""  (formula "52")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "124")))
         (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "123")) (ifInst ""  (formula "52")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "123")))
         (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "85"))
         (rule "true_left" (formula "85"))
         (rule "commute_and" (formula "98") (term "0,0"))
         (rule "commute_and" (formula "98") (term "0,0,1,0"))
         (rule "commute_and" (formula "88") (term "1,0,0"))
         (rule "commute_and" (formula "87") (term "1,0,0"))
         (rule "commute_and" (formula "87") (term "0,0,0"))
         (rule "commute_and" (formula "88") (term "0,0,0"))
         (rule "commute_and" (formula "94") (term "0,0"))
         (rule "commute_and" (formula "93") (term "0,0"))
         (rule "commute_and" (formula "89") (term "0,0"))
         (rule "commute_and_2" (formula "95") (term "0,1,0"))
          (builtin "Use Operation Contract" (formula "115") (newnames "heapBefore_initPolyasVals_addDataForVoter_0,exc_389,heapAfter_initPolyasVals_addDataForVoter_0,anon_heap_initPolyasVals_addDataForVoter_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addDataForVoter(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
         (branch "Post (initPolyasVals_addDataForVoter)"
             (builtin "One Step Simplification" (formula "96"))
             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "121")) (ifInst ""  (formula "120")) (ifInst ""  (formula "121")) (ifInst ""  (formula "120")))
             (builtin "One Step Simplification" (formula "97"))
             (builtin "One Step Simplification" (formula "119"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,1") (ifseqformula "83"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,0,1") (ifseqformula "83"))
            (rule "replaceKnownSelect_taclet000_11" (formula "96") (term "0,1,0,0"))
            (rule "replaceKnownSelect_taclet000_11" (formula "98") (term "1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "96") (term "0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "98") (term "1,1,0,0"))
            (rule "replaceKnownSelect_taclet000_11" (formula "98") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "98") (term "0,0,0,0,0"))
            (rule "andLeft" (formula "96"))
            (rule "andLeft" (formula "99"))
            (rule "andLeft" (formula "99"))
            (rule "andLeft" (formula "101"))
            (rule "andLeft" (formula "99"))
            (rule "andLeft" (formula "102"))
            (rule "notLeft" (formula "99"))
            (rule "replace_known_left" (formula "102") (term "0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "102"))
            (rule "true_left" (formula "102"))
            (rule "replace_known_left" (formula "102") (term "0") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "102"))
            (rule "true_left" (formula "102"))
            (rule "applyEq" (formula "98") (term "5") (ifseqformula "97"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "100"))
            (rule "replaceKnownSelect_taclet000_13" (formula "100") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "100") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet000_15" (formula "100") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet000_17" (formula "100") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_16" (formula "100") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_18" (formula "100") (term "0,0,1,0"))
            (rule "andLeft" (formula "100"))
            (rule "andLeft" (formula "100"))
            (rule "notLeft" (formula "102"))
            (rule "notLeft" (formula "101"))
            (rule "notLeft" (formula "100"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "99"))
            (rule "true_left" (formula "99"))
            (rule "shift_paren_and" (formula "87") (term "0,0"))
            (rule "shift_paren_and" (formula "88") (term "0,0"))
            (rule "lenNonNegative" (formula "52") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "52"))
            (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
            (rule "lenNonNegative" (formula "53") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "53"))
            (rule "commute_and_2" (formula "88") (term "0,0,0"))
            (rule "commute_and_2" (formula "88") (term "0,0,0"))
            (rule "methodCallEmpty" (formula "119") (term "1"))
            (rule "lenNonNegative" (formula "64") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "64"))
            (rule "lenNonNegative" (formula "59") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "59"))
            (rule "tryEmpty" (formula "121") (term "1"))
            (rule "seqGetAlphaCast" (formula "67") (term "0"))
            (rule "castedGetAny" (formula "67") (term "0"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "true_left" (formula "67"))
            (rule "seqGetAlphaCast" (formula "61") (term "0"))
            (rule "castedGetAny" (formula "61") (term "0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "true_left" (formula "61"))
            (rule "emptyModality" (formula "121") (term "1"))
            (rule "Use_information_flow_contract_for_initPolyasVals_addInputCols_2065249566_2" (formula "89") (inst "i#31=i#31") (inst "j#28=j#28") (inst "i#29=i#29") (ifseqformula "73"))
            (rule "Use_information_flow_contract_for_initPolyasVals_addInputCols_2065249566_3" (formula "90") (inst "i#61=i#61") (inst "j#58=j#58") (inst "i#59=i#59") (ifseqformula "73"))
            (rule "Use_information_flow_contract_for_initPolyasVals_addDataForVoter_1614999068_2" (formula "100") (ifseqformula "83"))
            (rule "Use_information_flow_contract_for_initPolyasVals_addDataForVoter_1614999068_3" (formula "101") (ifseqformula "83"))
             (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "125")) (ifInst ""  (formula "124")) (ifInst ""  (formula "151")) (ifInst ""  (formula "152")))
             (builtin "One Step Simplification" (formula "123"))
            (rule "replaceKnownSelect_taclet000_11" (formula "89") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet0_1" (formula "89") (term "1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "89") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "89") (term "1,0,1"))
            (rule "replaceKnownSelect_taclet0_3" (formula "100") (term "1,1,0,1"))
            (rule "replaceKnownSelect_taclet000_13" (formula "100") (term "0,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "100") (term "1,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "100") (term "0,1,0,1"))
            (rule "replaceKnownSelect_taclet0_1" (formula "100") (term "1,1,0,1,0"))
            (rule "replaceKnownSelect_taclet000_11" (formula "100") (term "1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0_7" (formula "100") (term "1,1,0,0,1"))
            (rule "replaceKnownSelect_taclet000_17" (formula "100") (term "0,1,0,0,1"))
            (rule "replaceKnownSelect_taclet0_1" (formula "89") (term "1,1,1,1,1"))
            (rule "replaceKnownSelect_taclet000_11" (formula "89") (term "1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet000_11" (formula "100") (term "0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0_1" (formula "100") (term "0,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0_1" (formula "100") (term "1,1,0,0,0,1"))
            (rule "replaceKnownSelect_taclet000_11" (formula "100") (term "1,0,0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "100") (term "1,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "100") (term "1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "100") (term "1,1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_18" (formula "100") (term "0,1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "89") (term "1,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "89") (term "1,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "100") (term "0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "100") (term "0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "100") (term "1,1,0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "100") (term "1,0,0,0,0,1"))
            (rule "impRight" (formula "154"))
            (rule "notRight" (formula "124"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "eqSymm" (formula "98") (term "1,0,1,0,1,1,1,0,0"))
            (rule "eqSymm" (formula "98") (term "1,0,1,0,1,1,1,1,0"))
            (rule "eqSymm" (formula "162"))
            (rule "eqSymm" (formula "9"))
            (rule "eqSymm" (formula "8"))
            (rule "eqSymm" (formula "2"))
            (rule "eqSymm" (formula "7"))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "4"))
            (rule "eqSymm" (formula "5"))
            (rule "replace_known_left" (formula "98") (term "1,0,1,1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")))
            (rule "replace_known_right" (formula "109") (term "0,1,1,1,0,0") (ifseqformula "132"))
             (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "113")) (ifInst ""  (formula "133")) (ifInst ""  (formula "137")) (ifInst ""  (formula "159")) (ifInst ""  (formula "160")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
            (rule "inEqSimp_ltToLeq" (formula "87"))
            (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "87") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "104"))
            (rule "polySimp_mulComm0" (formula "104") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "104") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "52"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "52") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "69"))
            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "44"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "75"))
            (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "84"))
            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "101"))
            (rule "polySimp_mulComm0" (formula "101") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "69") (term "0"))
            (rule "polySimp_addComm1" (formula "44") (term "0"))
            (rule "polySimp_addComm1" (formula "75") (term "0"))
            (rule "polySimp_addComm1" (formula "84") (term "0"))
            (rule "polySimp_addComm1" (formula "101") (term "0"))
            (rule "castedGetAny" (formula "7") (term "0,2,1"))
            (rule "castedGetAny" (formula "7") (term "0,2,0"))
            (rule "castedGetAny" (formula "98") (term "1,1,0,1,0,1,1,1,1,0"))
            (rule "castedGetAny" (formula "98") (term "0,1,0,1,0,1,1,1,0,0"))
            (rule "castedGetAny" (formula "98") (term "1,1,0,1,0,1,1,1,0,0"))
            (rule "castedGetAny" (formula "98") (term "0,1,0,1,0,1,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "98") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "98") (term "1,0,0,1,0,1,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,1,0,0,1,0,1,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "98") (term "1,0,0,1,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,1,0,0,1,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "98") (term "1,0,0,1,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,1,0,0,1,0,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,1,0,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,1,1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,1,0,1,1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,1,1,1,1,0"))
            (rule "applyEq" (formula "72") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "146") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "105") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,1,0,1,1,1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "52") (term "1,1,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "77") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "76") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "98") (term "1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "7") (term "1,1,0,1,1") (ifseqformula "26"))
            (rule "applyEq" (formula "98") (term "0,1,1,0,1,0,1,1,1,0,0") (ifseqformula "4"))
            (rule "applyEq" (formula "7") (term "1,1,0,1,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "162") (term "0,1") (ifseqformula "28"))
            (rule "applyEq" (formula "75") (term "0,0,1,0") (ifseqformula "6"))
            (rule "applyEq" (formula "99") (term "4") (ifseqformula "1"))
            (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "162") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "162") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "69") (term "1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "26"))
            (rule "applyEq" (formula "7") (term "1,1,0,0,2,0") (ifseqformula "1"))
            (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "84") (term "1,1,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "127") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "72") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "44") (term "1,1,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "98") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "7") (term "1,1,0,0,2,1") (ifseqformula "26"))
            (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,1,0,0,1,1,1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "48") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "99") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "46") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "135") (term "0") (ifseqformula "40"))
            (rule "applyEq" (formula "77") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "41") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "92") (term "5") (ifseqformula "91"))
            (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "98") (term "0,0,1,0,0,1,0,0,1,0,1,1,1,0,0") (ifseqformula "4"))
            (rule "applyEq" (formula "87") (term "1,1,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "82") (term "0") (ifseqformula "26"))
            (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "66") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "74") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "105") (term "0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "4"))
            (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "26"))
            (rule "applyEq" (formula "63") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEq" (formula "103") (term "0,0,1,0") (ifseqformula "6"))
            (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "48") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "150") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "91") (term "4") (ifseqformula "26"))
            (rule "applyEq" (formula "46") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "70") (term "0,0,0,1,0") (ifseqformula "6"))
            (rule "applyEq" (formula "76") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
            (rule "applyEq" (formula "81") (term "5") (ifseqformula "79"))
            (rule "applyEq" (formula "130") (term "0") (ifseqformula "9"))
            (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "109") (term "4") (ifseqformula "1"))
            (rule "applyEq" (formula "76") (term "0,1,1,0,0,1,0") (ifseqformula "4"))
            (rule "applyEq" (formula "81") (term "4") (ifseqformula "26"))
            (rule "applyEq" (formula "146") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "62") (term "0,0,0,1,0") (ifseqformula "4"))
            (rule "applyEq" (formula "150") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "55") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "158") (term "0") (ifseqformula "26"))
            (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "147") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "65") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "145") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "6") (term "1,1,1") (ifseqformula "26"))
            (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "75") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "63") (term "0,0,0,1,0") (ifseqformula "5"))
            (rule "applyEq" (formula "152") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "69") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "26"))
            (rule "applyEq" (formula "100") (term "1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "148") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "151") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "91") (term "0") (ifseqformula "26"))
            (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "129") (term "0") (ifseqformula "8"))
            (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "5"))
            (rule "eqSymm" (formula "61"))
            (rule "applyEq" (formula "143") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "109") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
            (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "157") (term "0,1,1") (ifseqformula "28"))
            (rule "replace_known_right" (formula "107") (term "1,1") (ifseqformula "157"))
             (builtin "One Step Simplification" (formula "107"))
            (rule "applyEq" (formula "61") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "65") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "99") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "53") (term "1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "85") (term "1,1") (ifseqformula "26"))
            (rule "applyEq" (formula "54") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "40") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "95") (term "1,0,1,1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "129") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "116") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
            (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "59"))
            (rule "applyEq" (formula "7") (term "0,0,2,0") (ifseqformula "6"))
            (rule "applyEq" (formula "93") (term "0,0,1,0,0,1,0,0,1,1,1,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "66") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "applyEq" (formula "65") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "25"))
            (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0") (ifseqformula "6"))
            (rule "applyEq" (formula "67") (term "1,1,0,0,1,0") (ifseqformula "25"))
            (rule "applyEq" (formula "96") (term "1,1,0,0,1,0") (ifseqformula "25"))
            (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "25"))
            (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "25"))
            (rule "applyEq" (formula "96") (term "1,1,0,0") (ifseqformula "25"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
            (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
            (rule "polySimp_elimOne" (formula "49") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "63"))
            (rule "polySimp_mulLiterals" (formula "63") (term "0"))
            (rule "polySimp_elimOne" (formula "63") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "75"))
            (rule "polySimp_mulLiterals" (formula "75") (term "0"))
            (rule "polySimp_elimOne" (formula "75") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "41"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0"))
            (rule "polySimp_elimOne" (formula "41") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
            (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,1,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,1,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "78"))
            (rule "polySimp_mulLiterals" (formula "78") (term "0"))
            (rule "polySimp_elimOne" (formula "78") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
            (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
            (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "92"))
            (rule "polySimp_mulLiterals" (formula "92") (term "0"))
            (rule "polySimp_elimOne" (formula "92") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "67"))
            (rule "polySimp_mulLiterals" (formula "67") (term "0"))
            (rule "polySimp_elimOne" (formula "67") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "95"))
            (rule "polySimp_mulLiterals" (formula "95") (term "0"))
            (rule "polySimp_elimOne" (formula "95") (term "0"))
            (rule "pullOutSelect" (formula "89") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
            (rule "applyEq" (formula "101") (term "1,0,1") (ifseqformula "89"))
            (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "126")) (ifInst ""  (formula "125")))
            (rule "applyEqReverse" (formula "90") (term "1,1,1") (ifseqformula "89"))
            (rule "applyEqReverse" (formula "101") (term "1,0,1") (ifseqformula "89"))
            (rule "hideAuxiliaryEq" (formula "89"))
            (rule "pullOutSelect" (formula "89") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "applyEq" (formula "101") (term "0,0,1") (ifseqformula "89"))
            (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "86"))
             (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "105")) (ifInst ""  (formula "104")))
            (rule "applyEqReverse" (formula "90") (term "0,1,1") (ifseqformula "89"))
            (rule "applyEqReverse" (formula "101") (term "0,0,1") (ifseqformula "89"))
            (rule "hideAuxiliaryEq" (formula "89"))
            (rule "equalityToSeqGetAndSeqLenRight" (formula "150") (inst "iv=iv"))
            (rule "inEqSimp_ltToLeq" (formula "150") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "150") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "150") (term "0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "150") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "150") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "150") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "150") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "150") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "150") (term "1,1,1,0,0,1"))
            (rule "pullOutSelect" (formula "150") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_2"))
            (rule "applyEq" (formula "151") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "151") (term "0,0,1,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "99"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "87"))
            (rule "eqSymm" (formula "151") (term "0"))
            (rule "eqSymm" (formula "151") (term "1,0,1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "151") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_3"))
            (rule "applyEq" (formula "152") (term "0,0,1,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "72"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
            (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "1,0,0,0,1,1,0,0") (ifseqformula "2"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "101"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replaceKnownSelect_taclet000_11" (formula "2") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "2") (term "2,0"))
            (rule "eqSymm" (formula "3") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
            (rule "replaceKnownSelect_taclet0000_22" (formula "3") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_23" (formula "3") (term "2,0"))
            (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "153") (term "0,1,1,1,0,0,1") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "153") (term "1,0,1,1,1,0,0,1") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "153") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "153") (term "0,1,1,0,1") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "eqSymm" (formula "151") (term "0"))
            (rule "eqSymm" (formula "151") (term "1,0,1"))
            (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
            (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "2,0"))
            (rule "eqSymm" (formula "2") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
            (rule "replaceKnownSelect_taclet0000_20" (formula "2") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "2") (term "2,0"))
            (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "127")) (ifInst ""  (formula "126")) (ifInst ""  (formula "11")))
            (rule "applyEqReverse" (formula "152") (term "0,1,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "152") (term "0,1,1,0,1") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
            (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
            (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "89") (term "0,1,1,0"))
            (rule "replace_known_right" (formula "89") (term "0,1,0,0,1,1,0") (ifseqformula "145"))
             (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "144")) (ifInst ""  (formula "146")))
            (rule "nnf_imp2or" (formula "65") (term "0"))
            (rule "nnf_imp2or" (formula "45") (term "0"))
            (rule "nnf_imp2or" (formula "43") (term "0"))
            (rule "nnf_imp2or" (formula "38") (term "0"))
            (rule "nnf_imp2or" (formula "60") (term "0"))
            (rule "nnf_imp2or" (formula "52") (term "0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_imp2or" (formula "58") (term "0"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "100") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "nnf_imp2or" (formula "150") (term "0,1"))
            (rule "nnf_notAnd" (formula "65") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
            (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
            (rule "mul_literals" (formula "65") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "45") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
            (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
            (rule "mul_literals" (formula "45") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "43") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
            (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
            (rule "mul_literals" (formula "43") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "38") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
            (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
            (rule "mul_literals" (formula "38") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "60") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
            (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
            (rule "mul_literals" (formula "60") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "52") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
            (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
            (rule "mul_literals" (formula "52") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "58") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
            (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
            (rule "mul_literals" (formula "58") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "150") (term "0,0,1"))
            (rule "inEqSimp_notLeq" (formula "150") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "150") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "150") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "150") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "150") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "150") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "150") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "150") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "150") (term "1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "150") (term "0,0,0,1"))
            (rule "mul_literals" (formula "150") (term "1,0,0,0,0,0,1"))
            (rule "add_literals" (formula "150") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "150") (term "0,0,0,1"))
            (rule "mul_literals" (formula "150") (term "1,0,0,0,1"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,1,1,0"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "58") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "58") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "58") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
            (rule "mul_literals" (formula "58") (term "1,1,0,0,0"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
            (rule "applyEq" (formula "5") (term "0,0,1,0,0,1,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
            (rule "andLeft" (formula "5"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
            (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,1,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,1,1,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,1,1,0"))
            (rule "times_zero_1" (formula "89") (term "1,0,0,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,1,1,0,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,1,1,0,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "89") (term "0,1,1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
             (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "127")) (ifInst ""  (formula "126")) (ifInst ""  (formula "128")) (ifInst ""  (formula "129")) (ifInst ""  (formula "130")) (ifInst ""  (formula "131")) (ifInst ""  (formula "133")) (ifInst ""  (formula "134")) (ifInst ""  (formula "135")) (ifInst ""  (formula "136")) (ifInst ""  (formula "137")) (ifInst ""  (formula "138")) (ifInst ""  (formula "139")) (ifInst ""  (formula "140")) (ifInst ""  (formula "141")) (ifInst ""  (formula "142")) (ifInst ""  (formula "143")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0,0,0,1,1,0"))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
            (rule "castedGetAny" (formula "89") (term "0,1,0,1,0,0,0,0,1,1,0"))
            (rule "castedGetAny" (formula "89") (term "0,1,0,1,0,1,1,0"))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,0,0,1,1,0"))
            (rule "applyEqRigid" (formula "89") (term "0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "37"))
            (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0,0,1,1,0") (ifseqformula "132"))
             (builtin "One Step Simplification" (formula "89"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,0,0,1,1,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "100") (term "1,0,0"))
            (rule "replaceKnownSelect_taclet000_13" (formula "100") (term "0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "100") (term "0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet000_17" (formula "100") (term "0,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet000_15" (formula "100") (term "0,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_18" (formula "100") (term "0,0,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_16" (formula "100") (term "0,0,0,0,1,0,0"))
            (rule "replace_known_right" (formula "100") (term "0,0,0,1,0,0") (ifseqformula "120"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "applyEq" (formula "100") (term "0,0,0,1,0,0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "100") (term "0,0,1,0,0") (ifseqformula "145"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "applyEq" (formula "100") (term "0,0,1,0,0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "100") (term "0,1,0,0") (ifseqformula "146"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "seqGetAlphaCast" (formula "42") (term "0"))
            (rule "castedGetAny" (formula "42") (term "0"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "true_left" (formula "42"))
            (rule "commute_or_2" (formula "65") (term "0"))
            (rule "commute_or_2" (formula "45") (term "0"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,0,0,1,1,0"))
            (rule "commute_or_2" (formula "43") (term "0"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
            (rule "andLeft" (formula "6"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "seqGetAlphaCast" (formula "64") (term "0"))
            (rule "castedGetAny" (formula "64") (term "0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "true_left" (formula "64"))
            (rule "commute_or_2" (formula "38") (term "0"))
            (rule "lenNonNegative" (formula "40") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "40"))
            (rule "nnf_imp2or" (formula "89") (term "0,0,0,0,0,0,1,1,0"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,0,0,0,1,1,0"))
            (rule "seqGetAlphaCast" (formula "79") (term "0"))
            (rule "castedGetAny" (formula "79") (term "0"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "true_left" (formula "79"))
            (rule "commute_or_2" (formula "60") (term "0"))
            (rule "lenNonNegative" (formula "62") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "62"))
            (rule "seqGetAlphaCast" (formula "93") (term "0"))
            (rule "castedGetAny" (formula "93") (term "0"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "true_left" (formula "93"))
            (rule "seqGetAlphaCast" (formula "76") (term "0"))
            (rule "castedGetAny" (formula "76") (term "0"))
             (builtin "One Step Simplification" (formula "76"))
            (rule "true_left" (formula "76"))
            (rule "seqGetAlphaCast" (formula "51") (term "0"))
            (rule "castedGetAny" (formula "51") (term "0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "true_left" (formula "51"))
            (rule "lenNonNegative" (formula "47") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "47"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "89") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0,1,1,0"))
            (rule "lenNonNegative" (formula "44") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "44"))
            (rule "commute_and" (formula "52") (term "0,0,1,0"))
            (rule "seqGetAlphaCast" (formula "68") (term "0"))
            (rule "castedGetAny" (formula "68") (term "0"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "true_left" (formula "68"))
            (rule "commute_or" (formula "52") (term "0,0"))
            (rule "seqGetAlphaCast" (formula "96") (term "0"))
            (rule "castedGetAny" (formula "96") (term "0"))
             (builtin "One Step Simplification" (formula "96"))
            (rule "true_left" (formula "96"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "89") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,0,0,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "89") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0"))
            (rule "commute_or_2" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "58") (term "0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "89") (term "0,1,1,0,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
             (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "106")) (ifInst ""  (formula "105")) (ifInst ""  (formula "107")) (ifInst ""  (formula "129")) (ifInst ""  (formula "130")) (ifInst ""  (formula "131")) (ifInst ""  (formula "109")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "115")) (ifInst ""  (formula "116")) (ifInst ""  (formula "117")) (ifInst ""  (formula "118")) (ifInst ""  (formula "119")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0,0,1,1,0,0"))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0,0,0,0,0,1,1,0,0"))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0,0,0,1,1,0,0"))
            (rule "castedGetAny" (formula "89") (term "0,1,0,1,0,1,1,0,0"))
            (rule "castedGetAny" (formula "89") (term "0,1,0,1,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,0,1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,0,1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,0,0,0,0,0,1,1,0,0"))
            (rule "applyEq" (formula "89") (term "0,0,0,0,0,0,0,0,1,1,0,0") (ifseqformula "59"))
            (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0,0,1,1,0,0") (ifseqformula "108"))
             (builtin "One Step Simplification" (formula "89"))
            (rule "applyEq" (formula "89") (term "0,0,0,1,0,1,0,0,0,1,1,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "89") (term "0,0,1,0,0,1,0,0,1,0,1,1,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "89") (term "0,0,1,0,1,0,1,1,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "89") (term "0,0,1,0,0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "6"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,0,0,1,1,0,0"))
            (rule "nnf_imp2or" (formula "89") (term "0,0,0,0,0,0,1,1,0,0"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "100") (term "0,0"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,0,0,0,1,1,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0,1,1,0,0"))
            (rule "times_zero_1" (formula "89") (term "1,0,0,0,0,0,1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0,1,1,0,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0,1,1,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0,0,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,0,1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0,0,1,1,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,0,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0,0,0,1,1,0,0"))
            (rule "lenNonNegative" (formula "150") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "commute_or" (formula "66") (term "0,0"))
            (rule "commute_or" (formula "46") (term "0,0"))
            (rule "commute_or" (formula "44") (term "0,0"))
            (rule "lenNonNegative" (formula "151") (term "1,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "commute_or" (formula "40") (term "0,0"))
            (rule "commute_or" (formula "62") (term "0,0"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "91") (term "0,0,0") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "91") (term "1,0,0,1,0,0,0"))
            (rule "expand_inInt" (formula "91") (term "1,0,0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "91") (term "1,0,1,0,0,1,0,0,0"))
            (rule "replace_int_MIN" (formula "91") (term "0,1,1,0,0,1,0,0,0"))
            (rule "replace_int_MAX" (formula "91") (term "1,0,1,0,0,1,0,0,0,0"))
            (rule "replace_int_MIN" (formula "91") (term "0,1,1,0,0,1,0,0,0,0"))
            (rule "eqSymm" (formula "91") (term "0,0,0,0,0"))
            (rule "castedGetAny" (formula "91") (term "0,0,1,0,1,0,0,0"))
            (rule "castedGetAny" (formula "91") (term "0,0,1,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "1,1,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "1,1,0,0,1,0,0,0,0"))
            (rule "applyEq" (formula "91") (term "0,0,1,0,0,1,0,0,0,1,0,0,0") (ifseqformula "7"))
            (rule "applyEq" (formula "91") (term "0,1,0,0,0,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "91") (term "0,0,0,1,0,1,0,0,0") (ifseqformula "7"))
            (rule "applyEq" (formula "91") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
            (rule "replace_known_left" (formula "91") (term "0,0,0,0,0") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "91"))
            (rule "applyEq" (formula "91") (term "0,0,1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "91") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
            (rule "applyEq" (formula "91") (term "0,1,0,0,1,0,0,0,1,0,0,0") (ifseqformula "36"))
            (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "91") (term "1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "91") (term "1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "91") (term "1,1,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "0,1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "91") (term "1,1,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "91") (term "1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "91") (term "1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "91") (term "1,1,1,0,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "0,1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "91") (term "1,1,1,0,0,0,1,0,0,0"))
            (rule "nnf_imp2or" (formula "91") (term "0,0,0,0,0"))
            (rule "nnf_imp2or" (formula "91") (term "0,1,0,0,0"))
            (rule "nnf_notAnd" (formula "91") (term "0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "91") (term "0,0,1,0,0,0"))
            (rule "nnf_notAnd" (formula "91") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "91") (term "1,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,1,1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "91") (term "0,0,1,1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "1,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,1,1,0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "91") (term "0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,0,1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "91") (term "0,0,0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "91") (term "0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,1,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "91") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "91") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "91") (term "1,0,0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "91") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "91") (term "0,0,0,1,0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "91") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "91") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "91") (term "0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "91") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "91") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "91") (term "0,0,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,0,0,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "91") (term "0,0,0,0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,0,0,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "91") (term "1,0,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "91") (term "1,0,0,1,0,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "0,1,0,0,1,0,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "91") (term "0,0,1,0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "91") (term "0,0,0,1,0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "91") (term "0,0,1,0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "91") (term "1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,1,0,0,0"))
            (rule "nnf_notAnd" (formula "91") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "91") (term "0,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,0,1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "91") (term "0,0,0,1,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "91") (term "0,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,1,0,0,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "91") (term "1,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,0,0,1,1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "91") (term "0,0,1,1,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "1,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "91") (term "1,1,1,0,0,1,0,0,0"))
            (rule "commute_or_2" (formula "37") (term "0,0"))
            (rule "commute_or_2" (formula "60") (term "0,0"))
            (rule "commute_and_2" (formula "54") (term "0,1,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "102") (term "0"))
            (rule "replaceKnownSelect_taclet0_3" (formula "102") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "102") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet0_5" (formula "102") (term "0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0_7" (formula "102") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "102") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "102") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "102") (term "0,1,0,0") (ifseqformula "147"))
             (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "146")) (ifInst ""  (formula "148")))
            (rule "notLeft" (formula "102"))
            (rule "replace_known_right" (formula "91") (term "1,1") (ifseqformula "104"))
             (builtin "One Step Simplification" (formula "91"))
            (rule "notLeft" (formula "91"))
            (rule "equalityToSeqGetAndSeqLenRight" (formula "104") (inst "iv=iv"))
            (rule "inEqSimp_ltToLeq" (formula "104") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "104") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "104") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "104") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "104") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "104") (term "1,1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "104") (term "0,1"))
            (rule "nnf_notAnd" (formula "104") (term "0,0,1"))
            (rule "inEqSimp_notLeq" (formula "104") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "104") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "104") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "104") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "104") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "104") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "104") (term "1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "104") (term "0,0,0,1"))
            (rule "mul_literals" (formula "104") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "104") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "0,0,0,1"))
            (rule "mul_literals" (formula "104") (term "1,0,0,0,1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "55"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "56"))
            (rule "applyEqRigid" (formula "62") (term "0,0") (ifseqformula "63"))
            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "112"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "applyEqRigid" (formula "62") (term "1,0") (ifseqformula "63"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "1") (ifseqformula "56"))
            (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "62")))
            (rule "true_left" (formula "63"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0,0") (ifseqformula "89"))
            (rule "replace_known_right" (formula "92") (term "0") (ifseqformula "109"))
             (builtin "One Step Simplification" (formula "92"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "56"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "57"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "58"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "59"))
            (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "155"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "15"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "60"))
            (rule "applyEq" (formula "13") (term "1,0,1") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "155"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "commute_or_2" (formula "74") (term "0"))
            (rule "commute_or_2" (formula "53") (term "0"))
            (rule "commute_or_2" (formula "51") (term "0"))
            (rule "commute_or_2" (formula "46") (term "0"))
            (rule "commute_or_2" (formula "69") (term "0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "61"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "1") (ifseqformula "62"))
            (rule "replace_known_right" (formula "78") (term "0") (ifseqformula "124"))
             (builtin "One Step Simplification" (formula "78"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "146") (term "0") (ifseqformula "37"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "147"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
            (rule "true_left" (formula "1"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "113") (term "0,1") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "113") (term "1,0,0,1,0,1"))
            (rule "expand_inInt" (formula "113") (term "1,0,0,1,0,0,1"))
            (rule "replace_int_MAX" (formula "113") (term "1,0,1,0,0,1,0,1"))
            (rule "replace_int_MIN" (formula "113") (term "0,1,1,0,0,1,0,1"))
            (rule "replace_int_MAX" (formula "113") (term "1,0,1,0,0,1,0,0,1"))
            (rule "replace_int_MIN" (formula "113") (term "0,1,1,0,0,1,0,0,1"))
            (rule "eqSymm" (formula "113") (term "0,0,0,1"))
            (rule "replace_known_left" (formula "113") (term "0,0,0,1") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "113"))
            (rule "castedGetAny" (formula "113") (term "0,0,1,0,1,0,1"))
            (rule "castedGetAny" (formula "113") (term "0,0,1,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0,0,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1,0,0,0,0,1"))
            (rule "applyEq" (formula "113") (term "0,1,0,0,1,0,0,0,1,0,1") (ifseqformula "43"))
            (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "113") (term "1,1,0,0,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "113") (term "1,1,0,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "0,1,1,0,0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "113") (term "1,1,1,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "113") (term "1,1,0,0,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "113") (term "1,1,0,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "0,1,1,0,0,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "113") (term "1,1,1,0,0,0,1,0,1"))
            (rule "nnf_imp2or" (formula "113") (term "0,0,0,1"))
            (rule "nnf_imp2or" (formula "113") (term "0,1,0,1"))
            (rule "nnf_notAnd" (formula "113") (term "0,0,0,0,1"))
            (rule "nnf_notAnd" (formula "113") (term "0,0,1,0,1"))
            (rule "nnf_notAnd" (formula "113") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0,0,0,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0,0,0,1"))
            (rule "add_zero_left" (formula "113") (term "0,0,1,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0,0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0,0,0,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0,0,1"))
            (rule "nnf_notAnd" (formula "113") (term "1,0,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "113") (term "0,1,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,0,1,0,0,0,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,1,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,1,0,0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "113") (term "1,1,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,1,1,0,0,0,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,1,1,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,1,0,0,0,0,1"))
            (rule "mul_literals" (formula "113") (term "1,1,1,0,0,0,0,1"))
            (rule "nnf_notAnd" (formula "113") (term "1,0,0,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "113") (term "1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,1,1,0,0,1,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,1,1,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "1,1,1,0,0,1,0,1"))
            (rule "inEqSimp_notLeq" (formula "113") (term "0,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,0,1,0,0,1,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,1,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,1,0,0,1,0,1"))
            (rule "nnf_notAnd" (formula "113") (term "0,0,0,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0,0,1,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,0,0,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "1,0,0,0,0,1,0,1"))
            (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0,0,1,0,1"))
            (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0,0,1,0,1"))
            (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0,0,1,0,1"))
            (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0,1,0,1"))
            (rule "add_zero_left" (formula "113") (term "0,0,1,0,0,0,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0,0,1,0,1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "1,0,0") (ifseqformula "37"))
            (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "151"))
             (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "22")))
            (rule "true_left" (formula "51"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0") (ifseqformula "37"))
            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "146"))
             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "29")))
            (rule "true_left" (formula "28"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "131") (term "0") (ifseqformula "62"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "132"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,0") (ifseqformula "38"))
            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "153"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "26")))
            (rule "true_left" (formula "25"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "131") (term "0") (ifseqformula "63"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "132"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "64"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1") (ifseqformula "40"))
            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "152")))
            (rule "true_left" (formula "54"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "65"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "66"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "130") (term "0") (ifseqformula "67"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "131"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "158") (term "0") (ifseqformula "43"))
            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "64"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "159")))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "155") (term "0") (ifseqformula "43"))
            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "34"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "156")))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "159") (term "0") (ifseqformula "43"))
            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "160")))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1,0") (ifseqformula "43"))
            (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "162")))
            (rule "true_left" (formula "27"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "68"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "161") (term "0") (ifseqformula "44"))
            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "162")))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "154") (term "0") (ifseqformula "44"))
            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "155")))
            (rule "true_left" (formula "1"))
            (rule "commute_or" (formula "51") (term "0,0,0"))
            (rule "commute_or" (formula "74") (term "0,0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "130") (term "0") (ifseqformula "69"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "131"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "130") (term "0") (ifseqformula "70"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "131"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "122") (term "0,1,0"))
            (rule "replace_known_right" (formula "122") (term "0,0,0,0,1,0") (ifseqformula "141"))
             (builtin "One Step Simplification" (formula "122"))
            (rule "applyEq" (formula "122") (term "0,0,1,0,1,0") (ifseqformula "26"))
            (rule "replace_known_right" (formula "122") (term "0,1,0,1,0") (ifseqformula "167"))
             (builtin "One Step Simplification" (formula "122"))
            (rule "applyEq" (formula "122") (term "0,0,0,1,0") (ifseqformula "24"))
            (rule "replace_known_right" (formula "122") (term "0,0,1,0") (ifseqformula "166"))
             (builtin "One Step Simplification" (formula "122"))
            (rule "ex_pull_out3" (formula "70") (term "0"))
            (rule "commute_or_2" (formula "53") (term "0,0"))
            (rule "commute_or_2" (formula "53") (term "0"))
            (rule "commute_or_2" (formula "76") (term "0,0"))
            (rule "commute_or_2" (formula "76") (term "0"))
            (rule "cnf_rightDist" (formula "70") (term "0,0"))
            (rule "shift_paren_or" (formula "70") (term "1,0,0"))
            (rule "lenNonNegative" (formula "123") (term "1,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "lenNonNegative" (formula "124") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "cnf_rightDist" (formula "72") (term "0,0,0"))
            (rule "commute_or_2" (formula "72") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "72") (term "1,0,0,0"))
            (rule "commute_or" (formula "72") (term "0,0,0,0,0"))
            (rule "lenNonNegative" (formula "86") (term "1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "86"))
            (rule "andRight" (formula "125"))
            (branch
               (rule "andRight" (formula "125"))
               (branch
                  (rule "andRight" (formula "125"))
                  (branch
                     (rule "allRight" (formula "125") (inst "sk=i_0_0"))
                     (rule "orRight" (formula "125"))
                     (rule "orRight" (formula "125"))
                     (rule "notRight" (formula "127"))
                     (rule "orRight" (formula "126"))
                     (rule "orRight" (formula "128"))
                     (rule "inEqSimp_geqRight" (formula "127"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "127"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "128"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "129"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "allLeft" (formula "59") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "59") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1"))
                     (rule "add_literals" (formula "59") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "59") (term "1,0,0,1"))
                     (rule "add_literals" (formula "59") (term "0,0,1"))
                     (rule "leq_literals" (formula "59") (term "0,1"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "inEqSimp_contradInEq1" (formula "59") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "59") (term "0,0"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "59"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_contradInEq0" (formula "58") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "58") (term "0"))
                      (builtin "One Step Simplification" (formula "58"))
                     (rule "closeFalse" (formula "58"))
                  )
                  (branch
                     (rule "allRight" (formula "125") (inst "sk=i_4"))
                     (rule "orRight" (formula "125"))
                     (rule "orRight" (formula "125"))
                     (rule "notRight" (formula "127"))
                     (rule "orRight" (formula "126"))
                     (rule "orRight" (formula "128"))
                     (rule "inEqSimp_geqRight" (formula "127"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "127"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "129"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_geqRight" (formula "129"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "allLeft" (formula "82") (inst "t=i_4"))
                     (rule "replace_known_left" (formula "82") (term "0,0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                     (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                     (rule "add_literals" (formula "82") (term "0,0,1"))
                     (rule "leq_literals" (formula "82") (term "0,1"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "82") (term "0,0"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "82"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch
                  (rule "andRight" (formula "125"))
                  (branch
                     (rule "andRight" (formula "125"))
                     (branch
                        (rule "andRight" (formula "125"))
                        (branch
                           (rule "andRight" (formula "125"))
                           (branch
                              (rule "andRight" (formula "125"))
                              (branch
                                 (rule "allRight" (formula "125") (inst "sk=i_3_0"))
                                 (rule "orRight" (formula "125"))
                                 (rule "notRight" (formula "126"))
                                 (rule "orRight" (formula "126"))
                                 (rule "inEqSimp_geqRight" (formula "127"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "127"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "84") (inst "t=i_3_0"))
                                 (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "84"))
                                 (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "84") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "84") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1"))
                                 (rule "add_literals" (formula "84") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "84") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "84") (term "0,0,1"))
                                 (rule "leq_literals" (formula "84") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "84"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "84"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch
                                 (rule "nnf_ex2all" (formula "125"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "allLeft" (formula "82") (inst "t=i_2_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                 (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "118"))
                                 (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "true_left" (formula "82"))
                                 (rule "allLeft" (formula "59") (inst "t=i_2_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                 (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "101"))
                                 (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "true_left" (formula "59"))
                                 (rule "allLeft" (formula "82") (inst "t=i_2_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                 (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "87"))
                                 (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "true_left" (formula "82"))
                                 (rule "allLeft" (formula "59") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                 (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "64"))
                                 (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "true_left" (formula "59"))
                                 (rule "allLeft" (formula "64") (inst "t=i_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "104"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "allLeft" (formula "64") (inst "t=i_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "73"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "allLeft" (formula "64") (inst "t=i_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "121"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "allLeft" (formula "64") (inst "t=i_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "93"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "commute_and" (formula "73") (term "0,0,0"))
                                 (rule "allLeft" (formula "1") (inst "t=i_2_3"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "118"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "2") (inst "t=i_2_2"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "88"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "118"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "leq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "85"))
                                 (rule "qeq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradInEq0" (formula "117") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "117") (term "0"))
                                  (builtin "One Step Simplification" (formula "117"))
                                 (rule "closeFalse" (formula "117"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "125") (inst "sk=i_1_0"))
                              (rule "orRight" (formula "125"))
                              (rule "notRight" (formula "126"))
                              (rule "orRight" (formula "126"))
                              (rule "inEqSimp_geqRight" (formula "127"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "127"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "allLeft" (formula "66") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                              (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                              (rule "add_literals" (formula "66") (term "0,0,1"))
                              (rule "leq_literals" (formula "66") (term "0,1"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_contradInEq1" (formula "66") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "66") (term "0"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "closeFalse" (formula "66"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "125") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "125"))
                           (rule "notRight" (formula "126"))
                           (rule "orRight" (formula "126"))
                           (rule "inEqSimp_geqRight" (formula "127"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "127"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "allLeft" (formula "90") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "90") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "90"))
                           (rule "inEqSimp_commuteGeq" (formula "90") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "90") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "90") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "90") (term "0,0,1"))
                           (rule "add_literals" (formula "90") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "90") (term "1,0,0,1"))
                           (rule "add_literals" (formula "90") (term "0,0,1"))
                           (rule "leq_literals" (formula "90") (term "0,1"))
                            (builtin "One Step Simplification" (formula "90"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "90"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch
                        (rule "nnf_ex2all" (formula "125"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "allLeft" (formula "64") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "104"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "82") (inst "t=i_2_3"))
                        (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                        (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "118"))
                        (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "82"))
                        (rule "true_left" (formula "82"))
                        (rule "allLeft" (formula "82") (inst "t=i_2_2"))
                        (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                        (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "87"))
                        (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "82"))
                        (rule "true_left" (formula "82"))
                        (rule "allLeft" (formula "64") (inst "t=i_3"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "121"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "59") (inst "t=i_2_1"))
                        (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                        (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "101"))
                        (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "allLeft" (formula "59") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                        (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "64"))
                        (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "allLeft" (formula "64") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "73"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "64") (inst "t=i_2"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "93"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "commute_and" (formula "73") (term "0,0,0"))
                        (rule "allLeft" (formula "1") (inst "t=i_3"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "121"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "allLeft" (formula "2") (inst "t=i_2"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "94"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "91"))
                        (rule "qeq_literals" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "121"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "92") (ifseqformula "2"))
                        (rule "andLeft" (formula "92"))
                        (rule "inEqSimp_homoInEq1" (formula "92"))
                        (rule "polySimp_pullOutFactor1b" (formula "92") (term "0"))
                        (rule "add_literals" (formula "92") (term "1,1,0"))
                        (rule "times_zero_1" (formula "92") (term "1,0"))
                        (rule "add_zero_right" (formula "92") (term "0"))
                        (rule "leq_literals" (formula "92"))
                        (rule "closeFalse" (formula "92"))
                     )
                  )
                  (branch
                     (rule "allRight" (formula "125") (inst "sk=j_28_0"))
                     (rule "orRight" (formula "125"))
                     (rule "orRight" (formula "125"))
                     (rule "eqSymm" (formula "127") (term "1,0"))
                     (rule "inEqSimp_leqRight" (formula "125"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "126"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "nnf_ex2all" (formula "127"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "allLeft" (formula "66") (inst "t=i_1"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "106"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "allLeft" (formula "66") (inst "t=i_0"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "allLeft" (formula "66") (inst "t=i_3"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "123"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "allLeft" (formula "61") (inst "t=i_2_1"))
                     (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                     (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "103"))
                     (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "allLeft" (formula "61") (inst "t=i_2_0"))
                     (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                     (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "66"))
                     (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "allLeft" (formula "84") (inst "t=i_2_3"))
                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                     (rule "applyEq" (formula "84") (term "0,0,0,0") (ifseqformula "120"))
                     (rule "replace_known_right" (formula "84") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "true_left" (formula "84"))
                     (rule "allLeft" (formula "66") (inst "t=i_2"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "95"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "allLeft" (formula "84") (inst "t=i_2_2"))
                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                     (rule "applyEq" (formula "84") (term "0,0,0,0") (ifseqformula "89"))
                     (rule "replace_known_right" (formula "84") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "true_left" (formula "84"))
                     (rule "commute_and" (formula "75") (term "0,0,0"))
                     (rule "allLeft" (formula "66") (inst "t=j_28_0"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "66") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                     (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "66") (term "0,0,1"))
                     (rule "leq_literals" (formula "66") (term "0,1"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "notLeft" (formula "66"))
                     (rule "commute_and_2" (formula "75") (term "0,0"))
                     (rule "allLeft" (formula "75") (inst "t=j_28_0"))
                     (rule "exLeft" (formula "75") (inst "sk=i_4"))
                     (rule "andLeft" (formula "75"))
                     (rule "andLeft" (formula "75"))
                     (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "76") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "76") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "76"))
                     (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,1"))
                     (rule "add_literals" (formula "77") (term "0,0,1"))
                     (rule "leq_literals" (formula "77") (term "0,1"))
                      (builtin "One Step Simplification" (formula "77"))
                     (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1"))
                     (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                     (rule "add_literals" (formula "75") (term "0,0,1"))
                     (rule "leq_literals" (formula "75") (term "0,1"))
                      (builtin "One Step Simplification" (formula "75"))
                     (rule "inEqSimp_contradInEq1" (formula "76") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1"))
                     (rule "add_literals" (formula "76") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                     (rule "add_literals" (formula "76") (term "0,0,1"))
                     (rule "leq_literals" (formula "76") (term "0,1"))
                      (builtin "One Step Simplification" (formula "76"))
                     (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "75") (term "0,1"))
                      (builtin "One Step Simplification" (formula "75"))
                     (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "77") (term "0,1"))
                      (builtin "One Step Simplification" (formula "77"))
                     (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "77"))
                     (rule "applyEq" (formula "131") (term "0") (ifseqformula "77"))
                     (rule "allLeft" (formula "78") (inst "t=i_3"))
                     (rule "exLeft" (formula "78") (inst "sk=i_5"))
                     (rule "andLeft" (formula "78"))
                     (rule "andLeft" (formula "78"))
                     (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "78") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "79") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "79") (term "0,0,0"))
                     (rule "applyEq" (formula "80") (term "0,0,0") (ifseqformula "128"))
                     (rule "eqSymm" (formula "80") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "79") (term "1,0,0"))
                     (rule "mul_literals" (formula "79") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "80") (term "1,0") (ifseqformula "126"))
                     (rule "qeq_literals" (formula "80") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "inEqSimp_contradInEq1" (formula "78") (term "1,0") (ifseqformula "126"))
                     (rule "qeq_literals" (formula "78") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "78"))
                     (rule "inEqSimp_contradInEq1" (formula "79") (term "1,0") (ifseqformula "126"))
                     (rule "qeq_literals" (formula "79") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "inEqSimp_contradInEq1" (formula "80") (term "1") (ifseqformula "127"))
                     (rule "inEqSimp_homoInEq1" (formula "80") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,1"))
                     (rule "add_literals" (formula "80") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "80") (term "1,0,0,1"))
                     (rule "add_literals" (formula "80") (term "0,0,1"))
                     (rule "leq_literals" (formula "80") (term "0,1"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "inEqSimp_contradInEq1" (formula "78") (term "1") (ifseqformula "127"))
                     (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                     (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                     (rule "add_literals" (formula "78") (term "0,0,1"))
                     (rule "leq_literals" (formula "78") (term "0,1"))
                      (builtin "One Step Simplification" (formula "78"))
                     (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "127"))
                     (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                     (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "79") (term "0,0,1"))
                     (rule "leq_literals" (formula "79") (term "0,1"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "allLeft" (formula "81") (inst "t=i_1"))
                     (rule "exLeft" (formula "81") (inst "sk=i_6"))
                     (rule "andLeft" (formula "81"))
                     (rule "andLeft" (formula "81"))
                     (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "82") (term "0,0,0"))
                     (rule "applyEq" (formula "83") (term "0,0,0") (ifseqformula "114"))
                     (rule "eqSymm" (formula "83") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "82") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "82") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "83") (term "1,0") (ifseqformula "112"))
                     (rule "qeq_literals" (formula "83") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0") (ifseqformula "112"))
                     (rule "qeq_literals" (formula "81") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "1,0") (ifseqformula "112"))
                     (rule "qeq_literals" (formula "82") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "113"))
                     (rule "inEqSimp_homoInEq1" (formula "83") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,1"))
                     (rule "add_literals" (formula "83") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "83") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "83") (term "0,0,1"))
                     (rule "leq_literals" (formula "83") (term "0,1"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "113"))
                     (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                     (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                     (rule "add_literals" (formula "82") (term "0,0,1"))
                     (rule "leq_literals" (formula "82") (term "0,1"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "113"))
                     (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                     (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                     (rule "add_literals" (formula "81") (term "0,0,1"))
                     (rule "leq_literals" (formula "81") (term "0,1"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "allLeft" (formula "84") (inst "t=i_2"))
                     (rule "exLeft" (formula "84") (inst "sk=i_7"))
                     (rule "andLeft" (formula "84"))
                     (rule "andLeft" (formula "84"))
                     (rule "inEqSimp_commuteGeq" (formula "86") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "85") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "85") (term "0,0,0"))
                     (rule "applyEq" (formula "86") (term "0,0,0") (ifseqformula "106"))
                     (rule "eqSymm" (formula "86") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "85") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "85") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "86") (term "1,0") (ifseqformula "103"))
                     (rule "qeq_literals" (formula "86") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "inEqSimp_contradInEq1" (formula "84") (term "1,0") (ifseqformula "103"))
                     (rule "qeq_literals" (formula "84") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "103"))
                     (rule "qeq_literals" (formula "85") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "85"))
                     (rule "inEqSimp_contradInEq1" (formula "86") (term "1") (ifseqformula "104"))
                     (rule "inEqSimp_homoInEq1" (formula "86") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,1"))
                     (rule "add_literals" (formula "86") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "86") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "86") (term "0,0,1"))
                     (rule "leq_literals" (formula "86") (term "0,1"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "inEqSimp_contradInEq1" (formula "84") (term "1") (ifseqformula "104"))
                     (rule "inEqSimp_homoInEq1" (formula "84") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1"))
                     (rule "add_literals" (formula "84") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "84") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "84") (term "0,0,1"))
                     (rule "leq_literals" (formula "84") (term "0,1"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "inEqSimp_contradInEq1" (formula "85") (term "1") (ifseqformula "104"))
                     (rule "inEqSimp_homoInEq1" (formula "85") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,0,1"))
                     (rule "add_literals" (formula "85") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "85") (term "1,0,0,1"))
                     (rule "add_literals" (formula "85") (term "0,0,1"))
                     (rule "leq_literals" (formula "85") (term "0,1"))
                      (builtin "One Step Simplification" (formula "85"))
                     (rule "allLeft" (formula "87") (inst "t=i_0"))
                     (rule "exLeft" (formula "87") (inst "sk=i_8"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "inEqSimp_commuteGeq" (formula "89") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "87") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "88") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "88") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "88") (term "0,0,0"))
                     (rule "applyEq" (formula "89") (term "0,0,0") (ifseqformula "74"))
                     (rule "eqSymm" (formula "89") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "88") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "88") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "87") (term "1,0") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "87") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "inEqSimp_contradInEq1" (formula "88") (term "1") (ifseqformula "72"))
                     (rule "inEqSimp_homoInEq1" (formula "88") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "88") (term "0,0,1"))
                     (rule "add_literals" (formula "88") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "88") (term "1,0,0,1"))
                     (rule "add_literals" (formula "88") (term "0,0,1"))
                     (rule "leq_literals" (formula "88") (term "0,1"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "inEqSimp_contradInEq1" (formula "89") (term "1") (ifseqformula "72"))
                     (rule "inEqSimp_homoInEq1" (formula "89") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "89") (term "0,0,1"))
                     (rule "add_literals" (formula "89") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "89") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "89") (term "0,0,1"))
                     (rule "leq_literals" (formula "89") (term "0,1"))
                      (builtin "One Step Simplification" (formula "89"))
                     (rule "inEqSimp_contradInEq1" (formula "87") (term "1") (ifseqformula "72"))
                     (rule "inEqSimp_homoInEq1" (formula "87") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,1"))
                     (rule "add_literals" (formula "87") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "87") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "87") (term "0,0,1"))
                     (rule "leq_literals" (formula "87") (term "0,1"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "inEqSimp_contradInEq1" (formula "88") (term "1") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "88") (term "0,1"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "inEqSimp_contradInEq1" (formula "89") (term "1") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "89") (term "0,1"))
                      (builtin "One Step Simplification" (formula "89"))
                     (rule "allLeft" (formula "1") (inst "t=i_4"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "76"))
                     (rule "qeq_literals" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "77") (ifseqformula "1"))
                     (rule "andLeft" (formula "77"))
                     (rule "inEqSimp_homoInEq1" (formula "77"))
                     (rule "polySimp_pullOutFactor1b" (formula "77") (term "0"))
                     (rule "add_literals" (formula "77") (term "1,1,0"))
                     (rule "times_zero_1" (formula "77") (term "1,0"))
                     (rule "add_literals" (formula "77") (term "0"))
                     (rule "leq_literals" (formula "77"))
                     (rule "closeFalse" (formula "77"))
                  )
               )
            )
            (branch
               (rule "andRight" (formula "125"))
               (branch
                  (rule "andRight" (formula "125"))
                  (branch
                     (rule "allRight" (formula "125") (inst "sk=i_0_0"))
                     (rule "orRight" (formula "125"))
                     (rule "orRight" (formula "125"))
                     (rule "notRight" (formula "127"))
                     (rule "orRight" (formula "126"))
                     (rule "orRight" (formula "128"))
                     (rule "inEqSimp_geqRight" (formula "127"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "127"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "129"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_geqRight" (formula "129"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "allLeft" (formula "59") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "59") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "59") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "inEqSimp_contradInEq1" (formula "59") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1"))
                     (rule "add_literals" (formula "59") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "59") (term "1,0,0,1"))
                     (rule "add_literals" (formula "59") (term "0,0,1"))
                     (rule "leq_literals" (formula "59") (term "0,1"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "59"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch
                     (rule "allRight" (formula "125") (inst "sk=i_4"))
                     (rule "orRight" (formula "125"))
                     (rule "orRight" (formula "125"))
                     (rule "notRight" (formula "127"))
                     (rule "orRight" (formula "126"))
                     (rule "orRight" (formula "128"))
                     (rule "inEqSimp_geqRight" (formula "127"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "127"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "129"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_geqRight" (formula "129"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "allLeft" (formula "82") (inst "t=i_4"))
                     (rule "replace_known_left" (formula "82") (term "0,0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                     (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                     (rule "add_literals" (formula "82") (term "0,0,1"))
                     (rule "leq_literals" (formula "82") (term "0,1"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "82") (term "0,0"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq0" (formula "82") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "82") (term "0"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "closeFalse" (formula "82"))
                  )
               )
               (branch
                  (rule "andRight" (formula "125"))
                  (branch
                     (rule "andRight" (formula "125"))
                     (branch
                        (rule "andRight" (formula "125"))
                        (branch
                           (rule "andRight" (formula "125"))
                           (branch
                              (rule "andRight" (formula "125"))
                              (branch
                                 (rule "allRight" (formula "125") (inst "sk=i_3_0"))
                                 (rule "orRight" (formula "125"))
                                 (rule "notRight" (formula "126"))
                                 (rule "orRight" (formula "126"))
                                 (rule "inEqSimp_geqRight" (formula "127"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "127"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "61") (inst "t=i_3_0"))
                                 (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "61") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "61") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "inEqSimp_contradInEq1" (formula "61") (ifseqformula "2"))
                                 (rule "andLeft" (formula "61"))
                                 (rule "inEqSimp_homoInEq1" (formula "61"))
                                 (rule "polySimp_pullOutFactor1b" (formula "61") (term "0"))
                                 (rule "add_literals" (formula "61") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "61") (term "1,0"))
                                 (rule "add_zero_right" (formula "61") (term "0"))
                                 (rule "leq_literals" (formula "61"))
                                 (rule "closeFalse" (formula "61"))
                              )
                              (branch
                                 (rule "nnf_ex2all" (formula "125"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "allLeft" (formula "82") (inst "t=i_2_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                 (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "118"))
                                 (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "true_left" (formula "82"))
                                 (rule "allLeft" (formula "59") (inst "t=i_2_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                 (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "101"))
                                 (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "true_left" (formula "59"))
                                 (rule "allLeft" (formula "82") (inst "t=i_2_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                 (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "87"))
                                 (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "true_left" (formula "82"))
                                 (rule "allLeft" (formula "59") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                 (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "64"))
                                 (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "true_left" (formula "59"))
                                 (rule "allLeft" (formula "64") (inst "t=i_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "104"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "allLeft" (formula "64") (inst "t=i_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "73"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "allLeft" (formula "64") (inst "t=i_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "121"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "allLeft" (formula "64") (inst "t=i_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "93"))
                                 (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "commute_and" (formula "73") (term "0,0,0"))
                                 (rule "allLeft" (formula "1") (inst "t=i_2_1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "101"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "2") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "65"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "101"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "leq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "62"))
                                 (rule "qeq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradInEq0" (formula "100") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "100") (term "0"))
                                  (builtin "One Step Simplification" (formula "100"))
                                 (rule "closeFalse" (formula "100"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "125") (inst "sk=i_1_0"))
                              (rule "orRight" (formula "125"))
                              (rule "notRight" (formula "126"))
                              (rule "orRight" (formula "126"))
                              (rule "inEqSimp_geqRight" (formula "127"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "127"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "allLeft" (formula "66") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                              (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                              (rule "add_literals" (formula "66") (term "0,0,1"))
                              (rule "leq_literals" (formula "66") (term "0,1"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_contradInEq1" (formula "66") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "66") (term "0"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "closeFalse" (formula "66"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "125") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "125"))
                           (rule "notRight" (formula "126"))
                           (rule "orRight" (formula "126"))
                           (rule "inEqSimp_geqRight" (formula "127"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "127"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "allLeft" (formula "68") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "68"))
                           (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "68") (term "0,0"))
                            (builtin "One Step Simplification" (formula "68"))
                           (rule "inEqSimp_contradInEq1" (formula "68") (ifseqformula "2"))
                           (rule "andLeft" (formula "68"))
                           (rule "inEqSimp_homoInEq1" (formula "68"))
                           (rule "polySimp_pullOutFactor1b" (formula "68") (term "0"))
                           (rule "add_literals" (formula "68") (term "1,1,0"))
                           (rule "times_zero_1" (formula "68") (term "1,0"))
                           (rule "add_zero_right" (formula "68") (term "0"))
                           (rule "leq_literals" (formula "68"))
                           (rule "closeFalse" (formula "68"))
                        )
                     )
                     (branch
                        (rule "nnf_ex2all" (formula "125"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "allLeft" (formula "64") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "104"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "82") (inst "t=i_2_3"))
                        (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                        (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "118"))
                        (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "82"))
                        (rule "true_left" (formula "82"))
                        (rule "allLeft" (formula "82") (inst "t=i_2_2"))
                        (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                        (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "87"))
                        (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "82"))
                        (rule "true_left" (formula "82"))
                        (rule "allLeft" (formula "64") (inst "t=i_3"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "121"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "59") (inst "t=i_2_1"))
                        (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                        (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "101"))
                        (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "allLeft" (formula "59") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                        (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "64"))
                        (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "allLeft" (formula "64") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "73"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "161"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "64") (inst "t=i_2"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "93"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "137"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "commute_and" (formula "73") (term "0,0,0"))
                        (rule "allLeft" (formula "1") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "104"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "allLeft" (formula "2") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "69"))
                        (rule "qeq_literals" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "104"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "72") (ifseqformula "2"))
                        (rule "andLeft" (formula "72"))
                        (rule "inEqSimp_homoInEq1" (formula "72"))
                        (rule "polySimp_pullOutFactor1b" (formula "72") (term "0"))
                        (rule "add_literals" (formula "72") (term "1,1,0"))
                        (rule "times_zero_1" (formula "72") (term "1,0"))
                        (rule "add_zero_right" (formula "72") (term "0"))
                        (rule "leq_literals" (formula "72"))
                        (rule "closeFalse" (formula "72"))
                     )
                  )
                  (branch
                     (rule "allRight" (formula "125") (inst "sk=j_28_0"))
                     (rule "orRight" (formula "125"))
                     (rule "orRight" (formula "125"))
                     (rule "eqSymm" (formula "127") (term "1,0"))
                     (rule "inEqSimp_geqRight" (formula "126"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "126"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "nnf_ex2all" (formula "127"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "allLeft" (formula "84") (inst "t=i_2_3"))
                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                     (rule "applyEq" (formula "84") (term "0,0,0,0") (ifseqformula "120"))
                     (rule "replace_known_right" (formula "84") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "true_left" (formula "84"))
                     (rule "allLeft" (formula "84") (inst "t=i_2_2"))
                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                     (rule "applyEq" (formula "84") (term "0,0,0,0") (ifseqformula "89"))
                     (rule "replace_known_right" (formula "84") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "true_left" (formula "84"))
                     (rule "allLeft" (formula "61") (inst "t=i_2_1"))
                     (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                     (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "103"))
                     (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "allLeft" (formula "61") (inst "t=i_2_0"))
                     (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                     (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "66"))
                     (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "allLeft" (formula "66") (inst "t=i_2"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "95"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "allLeft" (formula "66") (inst "t=i_3"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "123"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "139"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "allLeft" (formula "66") (inst "t=i_1"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "106"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "allLeft" (formula "66") (inst "t=i_0"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                     (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "163"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "true_left" (formula "66"))
                     (rule "commute_and" (formula "75") (term "0,0,0"))
                     (rule "allLeft" (formula "66") (inst "t=j_28_0"))
                     (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "66") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                     (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "66") (term "0,0,1"))
                     (rule "leq_literals" (formula "66") (term "0,1"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "notLeft" (formula "66"))
                     (rule "commute_and_2" (formula "75") (term "0,0"))
                     (rule "allLeft" (formula "75") (inst "t=j_28_0"))
                     (rule "exLeft" (formula "75") (inst "sk=i_4"))
                     (rule "andLeft" (formula "75"))
                     (rule "andLeft" (formula "75"))
                     (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "76") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "77") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "77"))
                     (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "76") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "76"))
                     (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "75") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "75"))
                     (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1"))
                     (rule "add_literals" (formula "77") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "77") (term "1,0,0,1"))
                     (rule "add_literals" (formula "77") (term "0,0,1"))
                     (rule "leq_literals" (formula "77") (term "0,1"))
                      (builtin "One Step Simplification" (formula "77"))
                     (rule "applyEq" (formula "131") (term "0") (ifseqformula "77"))
                     (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "77"))
                     (rule "inEqSimp_contradInEq1" (formula "76") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1"))
                     (rule "add_literals" (formula "76") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                     (rule "add_literals" (formula "76") (term "0,0,1"))
                     (rule "leq_literals" (formula "76") (term "0,1"))
                      (builtin "One Step Simplification" (formula "76"))
                     (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1"))
                     (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                     (rule "add_literals" (formula "75") (term "0,0,1"))
                     (rule "leq_literals" (formula "75") (term "0,1"))
                      (builtin "One Step Simplification" (formula "75"))
                     (rule "allLeft" (formula "78") (inst "t=i_3"))
                     (rule "exLeft" (formula "78") (inst "sk=i_5"))
                     (rule "andLeft" (formula "78"))
                     (rule "andLeft" (formula "78"))
                     (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "79") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "78") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "79") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "79") (term "0,0,0"))
                     (rule "applyEq" (formula "80") (term "0,0,0") (ifseqformula "128"))
                     (rule "eqSymm" (formula "80") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "79") (term "1,0,0"))
                     (rule "mul_literals" (formula "79") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "80") (term "1,0") (ifseqformula "126"))
                     (rule "qeq_literals" (formula "80") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "127"))
                     (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                     (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                     (rule "add_literals" (formula "79") (term "0,0,1"))
                     (rule "leq_literals" (formula "79") (term "0,1"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "inEqSimp_contradInEq1" (formula "78") (term "1") (ifseqformula "127"))
                     (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                     (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                     (rule "add_literals" (formula "78") (term "0,0,1"))
                     (rule "leq_literals" (formula "78") (term "0,1"))
                      (builtin "One Step Simplification" (formula "78"))
                     (rule "inEqSimp_contradInEq1" (formula "80") (term "1") (ifseqformula "127"))
                     (rule "inEqSimp_homoInEq1" (formula "80") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,1"))
                     (rule "add_literals" (formula "80") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "80") (term "1,0,0,1"))
                     (rule "add_literals" (formula "80") (term "0,0,1"))
                     (rule "leq_literals" (formula "80") (term "0,1"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "126"))
                     (rule "qeq_literals" (formula "79") (term "0,1"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "inEqSimp_contradInEq1" (formula "78") (term "1") (ifseqformula "126"))
                     (rule "qeq_literals" (formula "78") (term "0,1"))
                      (builtin "One Step Simplification" (formula "78"))
                     (rule "allLeft" (formula "81") (inst "t=i_1"))
                     (rule "exLeft" (formula "81") (inst "sk=i_6"))
                     (rule "andLeft" (formula "81"))
                     (rule "andLeft" (formula "81"))
                     (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "82") (term "0,0,0"))
                     (rule "applyEq" (formula "83") (term "0,0,0") (ifseqformula "114"))
                     (rule "eqSymm" (formula "83") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "82") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "82") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0") (ifseqformula "112"))
                     (rule "qeq_literals" (formula "81") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "113"))
                     (rule "inEqSimp_homoInEq1" (formula "83") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,1"))
                     (rule "add_literals" (formula "83") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "83") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "83") (term "0,0,1"))
                     (rule "leq_literals" (formula "83") (term "0,1"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "113"))
                     (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                     (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                     (rule "add_literals" (formula "82") (term "0,0,1"))
                     (rule "leq_literals" (formula "82") (term "0,1"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "113"))
                     (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                     (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                     (rule "add_literals" (formula "81") (term "0,0,1"))
                     (rule "leq_literals" (formula "81") (term "0,1"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "112"))
                     (rule "qeq_literals" (formula "82") (term "0,1"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "112"))
                     (rule "qeq_literals" (formula "83") (term "0,1"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "allLeft" (formula "84") (inst "t=i_2"))
                     (rule "exLeft" (formula "84") (inst "sk=i_7"))
                     (rule "andLeft" (formula "84"))
                     (rule "andLeft" (formula "84"))
                     (rule "inEqSimp_commuteGeq" (formula "86") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "85") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "85") (term "0,0,0"))
                     (rule "applyEq" (formula "86") (term "0,0,0") (ifseqformula "106"))
                     (rule "eqSymm" (formula "86") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "85") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "85") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "84") (term "1,0") (ifseqformula "103"))
                     (rule "qeq_literals" (formula "84") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "inEqSimp_contradInEq1" (formula "85") (term "1") (ifseqformula "104"))
                     (rule "inEqSimp_homoInEq1" (formula "85") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,0,1"))
                     (rule "add_literals" (formula "85") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "85") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "85") (term "0,0,1"))
                     (rule "leq_literals" (formula "85") (term "0,1"))
                      (builtin "One Step Simplification" (formula "85"))
                     (rule "inEqSimp_contradInEq1" (formula "86") (term "1") (ifseqformula "104"))
                     (rule "inEqSimp_homoInEq1" (formula "86") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,1"))
                     (rule "add_literals" (formula "86") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "86") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "86") (term "0,0,1"))
                     (rule "leq_literals" (formula "86") (term "0,1"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "inEqSimp_contradInEq1" (formula "85") (term "1") (ifseqformula "103"))
                     (rule "qeq_literals" (formula "85") (term "0,1"))
                      (builtin "One Step Simplification" (formula "85"))
                     (rule "inEqSimp_contradInEq1" (formula "84") (term "1") (ifseqformula "104"))
                     (rule "inEqSimp_homoInEq1" (formula "84") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1"))
                     (rule "add_literals" (formula "84") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "84") (term "1,0,0,1"))
                     (rule "add_literals" (formula "84") (term "0,0,1"))
                     (rule "leq_literals" (formula "84") (term "0,1"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "inEqSimp_contradInEq1" (formula "86") (term "1") (ifseqformula "103"))
                     (rule "qeq_literals" (formula "86") (term "0,1"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "allLeft" (formula "87") (inst "t=i_0"))
                     (rule "exLeft" (formula "87") (inst "sk=i_8"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "inEqSimp_commuteGeq" (formula "89") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "88") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "87") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "88") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "88") (term "0,0,0"))
                     (rule "applyEq" (formula "89") (term "0,0,0") (ifseqformula "74"))
                     (rule "eqSymm" (formula "89") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "88") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "88") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "88") (term "1,0") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "88") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "inEqSimp_contradInEq1" (formula "87") (term "1") (ifseqformula "72"))
                     (rule "inEqSimp_homoInEq1" (formula "87") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,1"))
                     (rule "add_literals" (formula "87") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "87") (term "1,0,0,1"))
                     (rule "add_literals" (formula "87") (term "0,0,1"))
                     (rule "leq_literals" (formula "87") (term "0,1"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "inEqSimp_contradInEq1" (formula "89") (term "1") (ifseqformula "72"))
                     (rule "inEqSimp_homoInEq1" (formula "89") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "89") (term "0,0,1"))
                     (rule "add_literals" (formula "89") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "89") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "89") (term "0,0,1"))
                     (rule "leq_literals" (formula "89") (term "0,1"))
                      (builtin "One Step Simplification" (formula "89"))
                     (rule "inEqSimp_contradInEq1" (formula "88") (term "1") (ifseqformula "72"))
                     (rule "inEqSimp_homoInEq1" (formula "88") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "88") (term "0,0,1"))
                     (rule "add_literals" (formula "88") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "88") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "88") (term "0,0,1"))
                     (rule "leq_literals" (formula "88") (term "0,1"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "inEqSimp_contradInEq1" (formula "89") (term "1") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "89") (term "0,1"))
                      (builtin "One Step Simplification" (formula "89"))
                     (rule "inEqSimp_contradInEq1" (formula "87") (term "1") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "87") (term "0,1"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "allLeft" (formula "1") (inst "t=i_4"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "76"))
                     (rule "qeq_literals" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "77"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch "Exceptional Post (initPolyasVals_addDataForVoter)"
             (builtin "One Step Simplification" (formula "117"))
             (builtin "One Step Simplification" (formula "96"))
            (rule "replaceKnownSelect_taclet000_11" (formula "96") (term "0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "96") (term "0,1,0,0"))
            (rule "andLeft" (formula "96"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "1,0") (ifseqformula "96"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,1,0") (ifseqformula "83"))
            (rule "andLeft" (formula "97"))
            (rule "andLeft" (formula "97"))
            (rule "notLeft" (formula "97"))
            (rule "close" (formula "99") (ifseqformula "98"))
         )
         (branch "Pre (initPolyasVals_addDataForVoter)"
             (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "117")) (ifInst ""  (formula "116")) (ifInst ""  (formula "117")) (ifInst ""  (formula "116")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "1,1") (ifseqformula "83"))
            (rule "wellFormedAnonEQ" (formula "115") (term "0,0,1") (ifseqformula "83"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "1,0,1") (ifseqformula "83"))
            (rule "replaceKnownSelect_taclet000_11" (formula "115") (term "1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "115") (term "1,1,0,0"))
            (rule "replaceKnownSelect_taclet000_11" (formula "115") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "115") (term "0,0,0,0,0"))
            (rule "impRight" (formula "146"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "152"))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "5"))
            (rule "eqSymm" (formula "4"))
            (rule "eqSymm" (formula "3"))
            (rule "eqSymm" (formula "2"))
            (rule "eqSymm" (formula "1"))
            (rule "replace_known_left" (formula "121") (term "1,0,0,1") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "102")) (ifInst ""  (formula "53")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
            (rule "castedGetAny" (formula "4") (term "0,2,1"))
            (rule "castedGetAny" (formula "4") (term "0,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "64"))
            (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "64") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "78"))
            (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "78") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "49"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "49") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "69"))
            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "69") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "96"))
            (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "96") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "99"))
            (rule "polySimp_mulComm0" (formula "99") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "99") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "41"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "41") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "81"))
            (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "81") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
            (rule "applyEq" (formula "81") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "69") (term "0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "45") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "120") (term "0") (ifseqformula "6"))
            (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "58"))
            (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "78") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "66") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "49") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "66") (term "0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "4") (term "1,1,0,0,2,1") (ifseqformula "23"))
            (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "149") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "75") (term "5") (ifseqformula "73"))
            (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "52") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "92") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "3") (term "1,1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "85") (term "4") (ifseqformula "23"))
            (rule "applyEq" (formula "92") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "150") (term "0,1") (ifseqformula "25"))
            (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "41") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "38") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "118") (term "0") (ifseqformula "5"))
            (rule "applyEq" (formula "75") (term "4") (ifseqformula "23"))
            (rule "applyEq" (formula "40") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "142") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
            (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEqRigid" (formula "120") (term "0") (ifseqformula "36"))
            (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "42") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "146") (term "0,1,1") (ifseqformula "25"))
            (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "91") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "83") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "73") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "42") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "4") (term "1,1,0,1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "91") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "79") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "68") (term "0,1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
            (rule "applyEq" (formula "96") (term "0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "97") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "68") (term "0,0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "4") (term "0,0,2,0") (ifseqformula "3"))
            (rule "applyEq" (formula "68") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "57"))
            (rule "applyEq" (formula "4") (term "1,1,0,1,0") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "applyEq" (formula "64") (term "1,1,0,0,1,0") (ifseqformula "22"))
            (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "31"))
            (rule "inEqSimp_sepNegMonomial0" (formula "59"))
            (rule "polySimp_mulLiterals" (formula "59") (term "0"))
            (rule "polySimp_elimOne" (formula "59") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "89"))
            (rule "polySimp_mulLiterals" (formula "89") (term "0"))
            (rule "polySimp_elimOne" (formula "89") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
            (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "74"))
            (rule "polySimp_mulLiterals" (formula "74") (term "0"))
            (rule "polySimp_elimOne" (formula "74") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "71"))
            (rule "polySimp_mulLiterals" (formula "71") (term "0"))
            (rule "polySimp_elimOne" (formula "71") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "46"))
            (rule "polySimp_mulLiterals" (formula "46") (term "0"))
            (rule "polySimp_elimOne" (formula "46") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "38"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0"))
            (rule "polySimp_elimOne" (formula "38") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
            (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "92"))
            (rule "polySimp_mulLiterals" (formula "92") (term "0"))
            (rule "polySimp_elimOne" (formula "92") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "63"))
            (rule "polySimp_mulLiterals" (formula "63") (term "0"))
            (rule "polySimp_elimOne" (formula "63") (term "0"))
            (rule "pullOutSelect" (formula "142") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
            (rule "pullOutSelect" (formula "143") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "79"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "2,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "144") (term "1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "equalityToSeqGetAndSeqLenRight" (formula "143") (inst "iv=iv"))
            (rule "inEqSimp_ltToLeq" (formula "143") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "143") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "143") (term "0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "143") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "143") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "143") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "143") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "143") (term "1,1,1,0,0,1"))
            (rule "pullOutSelect" (formula "143") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_0"))
            (rule "applyEq" (formula "144") (term "0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "79"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "68"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "118"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "144") (term "0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "144") (term "0,1,1,0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "143") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "applyEq" (formula "144") (term "0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "144") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
            (rule "eqSymm" (formula "144") (term "1,0,1"))
            (rule "eqSymm" (formula "144") (term "0"))
            (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
            (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
            (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "nnf_imp2or" (formula "59") (term "0"))
            (rule "nnf_imp2or" (formula "63") (term "0"))
            (rule "nnf_imp2or" (formula "51") (term "0"))
            (rule "nnf_imp2or" (formula "88") (term "0"))
            (rule "nnf_imp2or" (formula "37") (term "0"))
            (rule "nnf_imp2or" (formula "42") (term "0"))
            (rule "nnf_imp2or" (formula "44") (term "0"))
            (rule "nnf_imp2or" (formula "89") (term "0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "114") (term "1"))
            (rule "replaceKnownSelect_taclet000_13" (formula "114") (term "0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "114") (term "0,0,1,1"))
            (rule "replaceKnownSelect_taclet000_17" (formula "114") (term "0,0,1,0,1"))
            (rule "replaceKnownSelect_taclet000_15" (formula "114") (term "0,0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_18" (formula "114") (term "0,0,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_16" (formula "114") (term "0,0,0,0,1"))
            (rule "replace_known_right" (formula "114") (term "0,0,0,1") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "applyEq" (formula "114") (term "0,0,1,1") (ifseqformula "7"))
            (rule "replace_known_right" (formula "114") (term "0,1,1") (ifseqformula "140"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "applyEq" (formula "114") (term "0,0,1") (ifseqformula "6"))
            (rule "replace_known_right" (formula "114") (term "0,1") (ifseqformula "139"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_imp2or" (formula "57") (term "0"))
            (rule "nnf_imp2or" (formula "144") (term "0,1"))
            (rule "nnf_notAnd" (formula "59") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "59") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
            (rule "mul_literals" (formula "59") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "63") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
            (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
            (rule "mul_literals" (formula "63") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "51") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
            (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
            (rule "mul_literals" (formula "51") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "88") (term "0,0"))
            (rule "nnf_notAnd" (formula "37") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
            (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
            (rule "mul_literals" (formula "37") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
            (rule "mul_literals" (formula "42") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "44") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
            (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
            (rule "mul_literals" (formula "44") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "mul_literals" (formula "34") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "57") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
            (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
            (rule "mul_literals" (formula "57") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "144") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "144") (term "0,0,0,1"))
            (rule "mul_literals" (formula "144") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "144") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0,1"))
            (rule "mul_literals" (formula "144") (term "1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "144") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "144") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "144") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0,1"))
            (rule "nnf_notAnd" (formula "88") (term "1,0,0"))
            (rule "inEqSimp_notGeq" (formula "88") (term "0,1,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,1,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "88") (term "1,1,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "88") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,1,0,0"))
            (rule "mul_literals" (formula "88") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "88") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "88") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "88") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "88") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "88") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "88") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "88") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "88") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0,0"))
            (rule "mul_literals" (formula "88") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "1,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,1,0,0"))
            (rule "mul_literals" (formula "89") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "57") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
            (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "57") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0,0"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "114"))
            (rule "closeTrue" (formula "114"))
         )
      )
      (branch "Exceptional Post (initPolyasVals_addInputCols)"
          (builtin "One Step Simplification" (formula "83"))
          (builtin "One Step Simplification" (formula "102"))
         (rule "andLeft" (formula "83"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,0") (ifseqformula "83"))
         (rule "andLeft" (formula "84"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "84"))
         (rule "andLeft" (formula "86"))
         (rule "notLeft" (formula "84"))
         (rule "close" (formula "88") (ifseqformula "87"))
      )
      (branch "Pre (initPolyasVals_addInputCols)"
          (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "102")) (ifInst ""  (formula "101")) (ifInst ""  (formula "47")) (ifInst ""  (formula "102")) (ifInst ""  (formula "50")) (ifInst ""  (formula "101")) (ifInst ""  (formula "51")))
         (rule "impRight" (formula "131"))
         (rule "andRight" (formula "101"))
         (branch
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "137"))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "5"))
            (rule "eqSymm" (formula "4"))
            (rule "eqSymm" (formula "3"))
            (rule "eqSymm" (formula "2"))
            (rule "eqSymm" (formula "1"))
            (rule "castedGetAny" (formula "4") (term "0,2,1"))
            (rule "castedGetAny" (formula "4") (term "0,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "69"))
            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "69") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "81"))
            (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "81") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "41"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "41") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "49"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "49") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "64"))
            (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "64") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "78"))
            (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "78") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
            (rule "applyEq" (formula "78") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "58"))
            (rule "applyEq" (formula "38") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "76") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "1,1,0,0,2,1") (ifseqformula "23"))
            (rule "applyEq" (formula "3") (term "1,1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "105") (term "0") (ifseqformula "6"))
            (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "86") (term "5") (ifseqformula "85"))
            (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "49") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "52") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "136") (term "0,1,1") (ifseqformula "25"))
            (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
            (rule "applyEq" (formula "135") (term "0,1") (ifseqformula "25"))
            (rule "applyEq" (formula "103") (term "0") (ifseqformula "5"))
            (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "59") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "40") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "81") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "58") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "74") (term "5") (ifseqformula "72"))
            (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "42") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "84") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "74") (term "4") (ifseqformula "23"))
            (rule "applyEq" (formula "79") (term "1,1,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "69") (term "0,1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "77") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "23"))
            (rule "applyEqRigid" (formula "106") (term "0") (ifseqformula "36"))
            (rule "applyEq" (formula "116") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "84") (term "4") (ifseqformula "23"))
            (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "4") (term "1,1,0,1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "23"))
            (rule "applyEq" (formula "42") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
            (rule "applyEq" (formula "131") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "69") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "64") (term "0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "57"))
            (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "4") (term "0,0,2,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "applyEq" (formula "62") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "31"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "59"))
            (rule "polySimp_mulLiterals" (formula "59") (term "0"))
            (rule "polySimp_elimOne" (formula "59") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "71"))
            (rule "polySimp_mulLiterals" (formula "71") (term "0"))
            (rule "polySimp_elimOne" (formula "71") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "46"))
            (rule "polySimp_mulLiterals" (formula "46") (term "0"))
            (rule "polySimp_elimOne" (formula "46") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "38"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0"))
            (rule "polySimp_elimOne" (formula "38") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "74"))
            (rule "polySimp_mulLiterals" (formula "74") (term "0"))
            (rule "polySimp_elimOne" (formula "74") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "63"))
            (rule "polySimp_mulLiterals" (formula "63") (term "0"))
            (rule "polySimp_elimOne" (formula "63") (term "0"))
            (rule "equalityToSeqGetAndSeqLenRight" (formula "127") (inst "iv=iv"))
            (rule "inEqSimp_ltToLeq" (formula "127") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "127") (term "0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "127") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "127") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "127") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "127") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "127") (term "1,1,1,0,0,1"))
            (rule "pullOutSelect" (formula "127") (term "0,1,0") (inst "selectSK=java_util_Collection_seq_0"))
            (rule "applyEq" (formula "128") (term "0,1,1,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "67"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "128") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
            (rule "applyEq" (formula "129") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "129") (term "1,0,0,1,0,1") (ifseqformula "1"))
            (rule "pullOutSelect" (formula "2") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
            (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "1,0,0,0,1,1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "80"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "2,0"))
            (rule "eqSymm" (formula "3") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,1,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "105")) (ifInst ""  (formula "104")) (ifInst ""  (formula "9")))
            (rule "applyEqReverse" (formula "130") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "130") (term "0,1,1,0,1") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "pullOutSelect" (formula "128") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "applyEq" (formula "129") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "129") (term "0,0,1,0,1") (ifseqformula "1"))
            (rule "eqSymm" (formula "129") (term "0"))
            (rule "eqSymm" (formula "129") (term "1,0,1"))
            (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
            (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
            (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "nnf_imp2or" (formula "63") (term "0"))
            (rule "nnf_imp2or" (formula "59") (term "0"))
            (rule "nnf_imp2or" (formula "44") (term "0"))
            (rule "nnf_imp2or" (formula "37") (term "0"))
            (rule "nnf_imp2or" (formula "42") (term "0"))
            (rule "nnf_imp2or" (formula "51") (term "0"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "99") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "99") (term "1,0,0,1"))
            (rule "expand_inInt" (formula "99") (term "1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "99") (term "1,0,1,0,0,1"))
            (rule "replace_int_MIN" (formula "99") (term "0,1,1,0,0,1"))
            (rule "replace_int_MAX" (formula "99") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "99") (term "0,1,1,0,0,1,0"))
            (rule "eqSymm" (formula "99") (term "0,0"))
            (rule "castedGetAny" (formula "99") (term "0,0,1,0,1"))
            (rule "castedGetAny" (formula "99") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "99") (term "1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,1,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "99") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "99") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "99") (term "0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "99") (term "1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "99") (term "1,1,0,0,1,0"))
            (rule "applyEq" (formula "99") (term "0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "99") (term "0,0,1,0,0,1,0,0,0,1") (ifseqformula "4"))
            (rule "applyEq" (formula "99") (term "0,1,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "99") (term "0,0,0,1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "99") (term "0,0,0,1,0,1") (ifseqformula "4"))
            (rule "applyEq" (formula "99") (term "0,0,0,0") (ifseqformula "4"))
            (rule "replace_known_left" (formula "99") (term "0,0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "99"))
            (rule "applyEq" (formula "99") (term "0,1,0,0,1,0,0,0,1") (ifseqformula "33"))
            (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "99") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,0,1"))
            (rule "mul_literals" (formula "99") (term "0,1,1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,0,1"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_imp2or" (formula "57") (term "0"))
            (rule "nnf_imp2or" (formula "129") (term "0,1"))
            (rule "nnf_notAnd" (formula "63") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
            (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
            (rule "mul_literals" (formula "63") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "59") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
            (rule "mul_literals" (formula "59") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "44") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
            (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
            (rule "mul_literals" (formula "44") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "37") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
            (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
            (rule "mul_literals" (formula "37") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
            (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
            (rule "mul_literals" (formula "42") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "51") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
            (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
            (rule "mul_literals" (formula "51") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "99") (term "0,0"))
            (rule "nnf_imp2or" (formula "99") (term "0,1"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "mul_literals" (formula "34") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "57") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
            (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
            (rule "mul_literals" (formula "57") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "129") (term "0,0,1"))
            (rule "inEqSimp_notLeq" (formula "129") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "129") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "129") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "129") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "129") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "129") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "129") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "129") (term "1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "129") (term "0,0,0,1"))
            (rule "mul_literals" (formula "129") (term "1,0,0,0,0,0,1"))
            (rule "add_literals" (formula "129") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "0,0,0,1"))
            (rule "mul_literals" (formula "129") (term "1,0,0,0,1"))
            (rule "nnf_notAnd" (formula "99") (term "0,0,0"))
            (rule "nnf_notAnd" (formula "99") (term "0,0,1"))
            (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "57") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0,0"))
            (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
            (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "99") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "99") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "99") (term "1,0,0,1,1,0,0,0"))
            (rule "add_literals" (formula "99") (term "0,0,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "99") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "99") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "99") (term "1,0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "99") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "99") (term "1,0,1,0,0,0"))
            (rule "nnf_notAnd" (formula "99") (term "0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "99") (term "0,0,0,0,0"))
            (rule "times_zero_1" (formula "99") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "99") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "99") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "99") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "99") (term "1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "99") (term "0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "99") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "99") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "99") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "99") (term "0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "99") (term "0,0,0,0,1"))
            (rule "mul_literals" (formula "99") (term "1,0,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "99") (term "0,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0,0,1"))
            (rule "mul_literals" (formula "99") (term "1,0,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "99") (term "1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "99") (term "1,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "99") (term "0,1,0,0,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "99") (term "0,0,1,0,0,0,1"))
            (rule "add_literals" (formula "99") (term "0,0,0,1,0,0,0,1"))
            (rule "add_zero_left" (formula "99") (term "0,0,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0,1"))
            (rule "nnf_notAnd" (formula "99") (term "1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "99") (term "0,1,0,0,1"))
            (rule "mul_literals" (formula "99") (term "1,0,0,0,1,0,0,1"))
            (rule "add_literals" (formula "99") (term "0,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,1,0,0,1"))
            (rule "mul_literals" (formula "99") (term "1,0,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "99") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "99") (term "1,0,0,1,1,0,0,1"))
            (rule "add_literals" (formula "99") (term "0,0,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "99") (term "1,1,1,0,0,1"))
            (rule "seqGetAlphaCast" (formula "62") (term "0"))
            (rule "castedGetAny" (formula "62") (term "0"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "true_left" (formula "62"))
            (rule "commute_or_2" (formula "63") (term "0"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
            (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "3") (inst "iv=iv"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
            (rule "applyEq" (formula "4") (term "0,0,1,0,0,1,0,0") (ifseqformula "5"))
            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "commute_or_2" (formula "59") (term "0"))
            (rule "commute_or_2" (formula "44") (term "0"))
            (rule "commute_and" (formula "51") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "37") (term "0"))
            (rule "commute_or_2" (formula "42") (term "0"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
            (rule "andLeft" (formula "5"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
            (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "seqGetAlphaCast" (formula "74") (term "0"))
            (rule "castedGetAny" (formula "74") (term "0"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "true_left" (formula "74"))
            (rule "seqGetAlphaCast" (formula "50") (term "0"))
            (rule "castedGetAny" (formula "50") (term "0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "true_left" (formula "50"))
            (rule "seqGetAlphaCast" (formula "77") (term "0"))
            (rule "castedGetAny" (formula "77") (term "0"))
             (builtin "One Step Simplification" (formula "77"))
            (rule "true_left" (formula "77"))
            (rule "lenNonNegative" (formula "39") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "39"))
            (rule "commute_or" (formula "51") (term "0,0"))
            (rule "lenNonNegative" (formula "46") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "46"))
            (rule "seqGetAlphaCast" (formula "41") (term "0"))
            (rule "castedGetAny" (formula "41") (term "0"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "true_left" (formula "41"))
            (rule "lenNonNegative" (formula "43") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "43"))
            (rule "commute_or_2" (formula "34") (term "0"))
            (rule "commute_or_2" (formula "57") (term "0"))
            (rule "seqGetAlphaCast" (formula "66") (term "0"))
            (rule "castedGetAny" (formula "66") (term "0"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "true_left" (formula "66"))
            (rule "lenNonNegative" (formula "61") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "61"))
            (rule "commute_or" (formula "64") (term "0,0"))
            (rule "commute_or" (formula "59") (term "0,0"))
            (rule "commute_or" (formula "44") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "commute_or" (formula "42") (term "0,0"))
            (rule "andRight" (formula "100"))
            (branch
               (rule "allRight" (formula "100") (inst "sk=i_0_0"))
               (rule "orRight" (formula "100"))
               (rule "orRight" (formula "100"))
               (rule "notRight" (formula "102"))
               (rule "orRight" (formula "101"))
               (rule "orRight" (formula "103"))
               (rule "inEqSimp_leqRight" (formula "101"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "102"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "104"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "104"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
               (rule "andLeft" (formula "5"))
               (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "lenNonNegative" (formula "133") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "lenNonNegative" (formula "134") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "commute_or_2" (formula "70") (term "0"))
               (rule "commute_or_2" (formula "65") (term "0"))
               (rule "commute_or_2" (formula "50") (term "0"))
               (rule "commute_or_2" (formula "43") (term "0"))
               (rule "commute_or_2" (formula "48") (term "0"))
               (rule "commute_or_2" (formula "40") (term "0,0"))
               (rule "commute_or_2" (formula "63") (term "0,0"))
               (rule "commute_and_2" (formula "57") (term "0,1,0"))
               (rule "commute_or" (formula "40") (term "0,0,0"))
               (rule "commute_or_2" (formula "40") (term "0,0"))
               (rule "commute_or_2" (formula "40") (term "0"))
               (rule "commute_or" (formula "63") (term "0,0,0"))
               (rule "commute_or_2" (formula "63") (term "0,0"))
               (rule "commute_or_2" (formula "63") (term "0"))
               (rule "ex_pull_out3" (formula "57") (term "0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
               (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
               (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "58"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "1") (ifseqformula "59"))
               (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "59"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "60"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "61"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "1") (ifseqformula "62"))
               (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "68"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "62"))
               (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "70"))
               (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "applyEqRigid" (formula "69") (term "1,0") (ifseqformula "70"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "62"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "63"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "64"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "65"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1,0,0") (ifseqformula "66"))
               (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "110"))
                (builtin "One Step Simplification" (formula "79"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "66"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "67"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "68"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "69"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "70"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "71"))
               (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "26"))
               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
               (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "147"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "72"))
               (rule "applyEq" (formula "27") (term "1,0,1") (ifseqformula "28"))
               (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
               (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "149"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,1") (ifseqformula "48"))
               (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "69"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "144")))
               (rule "true_left" (formula "24"))
               (rule "allLeft" (formula "55") (inst "t=i_0_0"))
               (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "55") (term "1,0") (ifseqformula "16"))
               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "18"))
               (rule "qeq_literals" (formula "55") (term "0,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "17"))
               (rule "andLeft" (formula "55"))
               (rule "inEqSimp_homoInEq1" (formula "55"))
               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
               (rule "add_literals" (formula "55") (term "1,1,0"))
               (rule "times_zero_1" (formula "55") (term "1,0"))
               (rule "add_zero_right" (formula "55") (term "0"))
               (rule "leq_literals" (formula "55"))
               (rule "closeFalse" (formula "55"))
            )
            (branch
               (rule "allRight" (formula "100") (inst "sk=i_3"))
               (rule "orRight" (formula "100"))
               (rule "orRight" (formula "100"))
               (rule "notRight" (formula "102"))
               (rule "orRight" (formula "101"))
               (rule "orRight" (formula "103"))
               (rule "inEqSimp_leqRight" (formula "101"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "102"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "104"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "104"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
               (rule "andLeft" (formula "5"))
               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "applyEq" (formula "5") (term "0,1,1,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "lenNonNegative" (formula "133") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "lenNonNegative" (formula "134") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "commute_or_2" (formula "70") (term "0"))
               (rule "commute_or_2" (formula "65") (term "0"))
               (rule "commute_or_2" (formula "50") (term "0"))
               (rule "commute_or_2" (formula "43") (term "0"))
               (rule "commute_or_2" (formula "48") (term "0"))
               (rule "commute_or_2" (formula "40") (term "0,0"))
               (rule "commute_or_2" (formula "63") (term "0,0"))
               (rule "commute_and_2" (formula "57") (term "0,1,0"))
               (rule "commute_or" (formula "40") (term "0,0,0"))
               (rule "commute_or_2" (formula "40") (term "0,0"))
               (rule "commute_or_2" (formula "40") (term "0"))
               (rule "commute_or" (formula "63") (term "0,0,0"))
               (rule "commute_or_2" (formula "63") (term "0,0"))
               (rule "commute_or_2" (formula "63") (term "0"))
               (rule "ex_pull_out3" (formula "57") (term "0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
               (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
               (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "58"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "59"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "60"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "61"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "62"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "63"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "64"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "65"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "66"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "67"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "68"))
               (rule "applyEq" (formula "74") (term "1,0,1") (ifseqformula "75"))
               (rule "replace_known_left" (formula "74") (term "1") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "74"))
               (rule "true_left" (formula "74"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "68"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "69"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "70"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "71"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "72"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "73"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "74"))
               (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
               (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "147"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "29"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "75"))
               (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "31"))
               (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
               (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "149"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1,1") (ifseqformula "51"))
               (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "144"))
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "72")))
               (rule "true_left" (formula "27"))
               (rule "allLeft" (formula "81") (inst "t=i_3"))
               (rule "replace_known_left" (formula "81") (term "0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "81"))
               (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "81") (term "1,0") (ifseqformula "19"))
               (rule "qeq_literals" (formula "81") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "81"))
               (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "20"))
               (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
               (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
               (rule "add_literals" (formula "81") (term "0,0,1"))
               (rule "leq_literals" (formula "81") (term "0,1"))
                (builtin "One Step Simplification" (formula "81"))
               (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "81"))
               (rule "qeq_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "closeFalse" (formula "21"))
            )
         )
         (branch "Case 2"
            (rule "andRight" (formula "101"))
            (branch
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "137"))
               (rule "eqSymm" (formula "6"))
               (rule "eqSymm" (formula "5"))
               (rule "eqSymm" (formula "4"))
               (rule "eqSymm" (formula "3"))
               (rule "eqSymm" (formula "2"))
               (rule "eqSymm" (formula "1"))
               (rule "castedGetAny" (formula "4") (term "0,2,1"))
               (rule "castedGetAny" (formula "4") (term "0,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "69"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "81"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "81") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "41"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "41") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "49"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "49") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "64"))
               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "78"))
               (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "78") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
               (rule "applyEq" (formula "78") (term "1,1,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "2"))
               (rule "eqSymm" (formula "58"))
               (rule "applyEq" (formula "38") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "76") (term "0") (ifseqformula "23"))
               (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "4") (term "1,1,0,0,2,1") (ifseqformula "23"))
               (rule "applyEq" (formula "3") (term "1,1,1") (ifseqformula "23"))
               (rule "applyEq" (formula "105") (term "0") (ifseqformula "6"))
               (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "86") (term "5") (ifseqformula "85"))
               (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "49") (term "1,1,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "52") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "136") (term "0,1,1") (ifseqformula "25"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
               (rule "applyEq" (formula "135") (term "0,1") (ifseqformula "25"))
               (rule "applyEq" (formula "103") (term "0") (ifseqformula "5"))
               (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "23"))
               (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "59") (term "0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "40") (term "1,1,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "81") (term "1,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "58") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "74") (term "5") (ifseqformula "72"))
               (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "42") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "84") (term "0") (ifseqformula "23"))
               (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "74") (term "4") (ifseqformula "23"))
               (rule "applyEq" (formula "79") (term "1,1,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "69") (term "0,1,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "77") (term "1,1") (ifseqformula "23"))
               (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "23"))
               (rule "applyEqRigid" (formula "106") (term "0") (ifseqformula "36"))
               (rule "applyEq" (formula "116") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "23"))
               (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "84") (term "4") (ifseqformula "23"))
               (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "4") (term "1,1,0,1,1") (ifseqformula "23"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "23"))
               (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "23"))
               (rule "applyEq" (formula "42") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "131") (term "0") (ifseqformula "23"))
               (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "69") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "64") (term "0,0,0,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "57"))
               (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "4") (term "0,0,2,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "applyEq" (formula "62") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "31"))
               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "59"))
               (rule "polySimp_mulLiterals" (formula "59") (term "0"))
               (rule "polySimp_elimOne" (formula "59") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "71"))
               (rule "polySimp_mulLiterals" (formula "71") (term "0"))
               (rule "polySimp_elimOne" (formula "71") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "46"))
               (rule "polySimp_mulLiterals" (formula "46") (term "0"))
               (rule "polySimp_elimOne" (formula "46") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "38"))
               (rule "polySimp_mulLiterals" (formula "38") (term "0"))
               (rule "polySimp_elimOne" (formula "38") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "74"))
               (rule "polySimp_mulLiterals" (formula "74") (term "0"))
               (rule "polySimp_elimOne" (formula "74") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "63"))
               (rule "polySimp_mulLiterals" (formula "63") (term "0"))
               (rule "polySimp_elimOne" (formula "63") (term "0"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "127") (inst "iv=iv"))
               (rule "inEqSimp_ltToLeq" (formula "127") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "127") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "127") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "127") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "127") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "127") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "127") (term "1,1,1,0,0,1"))
               (rule "pullOutSelect" (formula "127") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_0"))
               (rule "applyEq" (formula "128") (term "0,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "67"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "128") (term "1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
               (rule "applyEq" (formula "129") (term "1,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "129") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
               (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
               (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
               (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "3") (term "1,0,0,0,1,1,0,0") (ifseqformula "2"))
               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "80"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "2,0"))
               (rule "eqSymm" (formula "3") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "2") (term "0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")))
               (rule "applyEqReverse" (formula "130") (term "0,1,1,0,1") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "130") (term "0,1,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "pullOutSelect" (formula "128") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_1"))
               (rule "applyEq" (formula "129") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "129") (term "0,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "129") (term "1,0,1"))
               (rule "eqSymm" (formula "129") (term "0"))
               (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
               (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
               (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "nnf_imp2or" (formula "63") (term "0"))
               (rule "nnf_imp2or" (formula "59") (term "0"))
               (rule "nnf_imp2or" (formula "44") (term "0"))
               (rule "nnf_imp2or" (formula "37") (term "0"))
               (rule "nnf_imp2or" (formula "42") (term "0"))
               (rule "nnf_imp2or" (formula "51") (term "0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "99"))
               (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "98"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "applyEq" (formula "99") (term "0,0,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "99") (term "0,1") (ifseqformula "125"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "notRight" (formula "99"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
               (rule "close" (formula "124") (ifseqformula "1"))
            )
            (branch "Case 2"
               (rule "andRight" (formula "101"))
               (branch "Case 1"
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "101") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
                  (rule "andRight" (formula "101"))
                  (branch
                     (rule "andRight" (formula "101"))
                     (branch
                        (rule "andRight" (formula "101"))
                        (branch
                           (rule "andRight" (formula "101"))
                           (branch
                              (rule "andRight" (formula "101"))
                              (branch
                                 (rule "andRight" (formula "101"))
                                 (branch
                                    (rule "andRight" (formula "101"))
                                    (branch
                                       (rule "andRight" (formula "101"))
                                       (branch
                                          (rule "andRight" (formula "101"))
                                          (branch
                                             (rule "andRight" (formula "101"))
                                             (branch
                                                (rule "andRight" (formula "101"))
                                                (branch
                                                   (rule "andRight" (formula "101"))
                                                   (branch
                                                      (rule "andRight" (formula "101"))
                                                      (branch
                                                         (rule "andRight" (formula "101"))
                                                         (branch
                                                            (rule "andRight" (formula "101"))
                                                            (branch
                                                               (rule "andRight" (formula "101"))
                                                               (branch
                                                                  (rule "andRight" (formula "101"))
                                                                  (branch
                                                                     (rule "andRight" (formula "101"))
                                                                     (branch
                                                                        (rule "andRight" (formula "101"))
                                                                        (branch
                                                                           (rule "andRight" (formula "101"))
                                                                           (branch
                                                                              (rule "andRight" (formula "101"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "101"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "101"))
                                                                                    (branch
                                                                                       (rule "notRight" (formula "101"))
                                                                                       (rule "close" (formula "85") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "notRight" (formula "101"))
                                                                                       (rule "close" (formula "84") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "notRight" (formula "101"))
                                                                                    (rule "close" (formula "86") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "notRight" (formula "102"))
                                                                                 (rule "close" (formula "112") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "notRight" (formula "102"))
                                                                              (rule "close" (formula "113") (ifseqformula "1"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "notRight" (formula "102"))
                                                                           (rule "close" (formula "114") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "notRight" (formula "101"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "eqSymm" (formula "137"))
                                                                        (rule "eqSymm" (formula "7"))
                                                                        (rule "eqSymm" (formula "6"))
                                                                        (rule "eqSymm" (formula "5"))
                                                                        (rule "eqSymm" (formula "4"))
                                                                        (rule "eqSymm" (formula "3"))
                                                                        (rule "eqSymm" (formula "2"))
                                                                        (rule "castedGetAny" (formula "5") (term "0,2,1"))
                                                                        (rule "castedGetAny" (formula "5") (term "0,2,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "50"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "65"))
                                                                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "82"))
                                                                        (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "82") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "42"))
                                                                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "70"))
                                                                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "applyEq" (formula "67") (term "0,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "72") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "5") (term "0,0,2,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "77") (term "4") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "52") (term "1,1,0,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "3"))
                                                                        (rule "eqSymm" (formula "59"))
                                                                        (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                                        (rule "applyEq" (formula "4") (term "1,1,1") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "61") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                                        (rule "applyEq" (formula "42") (term "1,1,0,0,1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "110") (term "0") (ifseqformula "38"))
                                                                        (rule "applyEq" (formula "61") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "72") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                                        (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "77") (term "5") (ifseqformula "75"))
                                                                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "5") (term "1,1,0,1,1") (ifseqformula "24"))
                                                                        (rule "applyEq" (formula "105") (term "0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "24"))
                                                                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "62"))
                                                                        (rule "close" (formula "92") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "notRight" (formula "101"))
                                                                     (rule "close" (formula "88") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "101"))
                                                                  (rule "close" (formula "89") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "notRight" (formula "101"))
                                                               (rule "close" (formula "90") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "notRight" (formula "101"))
                                                            (rule "close" (formula "91") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "101"))
                                                         (rule "close" (formula "92") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "101"))
                                                      (rule "close" (formula "93") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "notRight" (formula "101"))
                                                   (rule "close" (formula "94") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "notRight" (formula "101"))
                                                (rule "close" (formula "95") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "notRight" (formula "101"))
                                             (rule "close" (formula "96") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "notRight" (formula "101"))
                                          (rule "close" (formula "97") (ifseqformula "1"))
                                       )
                                    )
                                    (branch
                                       (rule "notRight" (formula "101"))
                                       (rule "close" (formula "98") (ifseqformula "1"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "101"))
                                    (rule "close" (formula "101") (ifseqformula "56"))
                                 )
                              )
                              (branch
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "106") (inst "sk=i_3_0"))
                                 (rule "impRight" (formula "106"))
                                 (rule "notRight" (formula "107"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "eqSymm" (formula "139"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "eqSymm" (formula "8"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "7") (term "0,2,0"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "castedGetAny" (formula "7") (term "0,2,0"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "inEqSimp_ltToLeq" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "67") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "81"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "81") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "84"))
                                 (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "84") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "72") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "applyEq" (formula "74") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "7") (term "1,1,0,1,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "46") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                 (rule "applyEqRigid" (formula "139") (term "0,1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "112") (term "0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "89") (term "5") (ifseqformula "88"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "7") (term "0,0,2,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "85") (term "1,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "84") (term "1,1,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "55") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "81") (term "1,1,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "107") (term "0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "72") (term "0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "69") (term "0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "61") (term "0,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "44") (term "1,1,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "52") (term "1,1,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "63") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "63") (term "0,0,0,1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "62") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "74") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "6") (term "1,1,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "137") (term "0,1,1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "79") (term "4") (ifseqformula "26"))
                                 (rule "applyEq" (formula "79") (term "5") (ifseqformula "77"))
                                 (rule "applyEq" (formula "74") (term "0,1,1,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "85") (term "1,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "48") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "61") (term "0,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "87") (term "4") (ifseqformula "26"))
                                 (rule "applyEq" (formula "41") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "41") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "54") (term "1,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "55") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "105") (term "0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "48") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "7") (term "1,1,0,0,2,1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "87") (term "0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "46") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "132") (term "0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "70") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "65") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "70") (term "0,0,1,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "68") (term "1,1,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "65") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "7") (term "1,1,0,1,0") (ifseqformula "26"))
                                 (rule "applyEq" (formula "7") (term "1,1,0,0,2,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "129") (inst "iv=iv"))
                                 (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1"))
                                 (rule "pullOutSelect" (formula "129") (term "1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                 (rule "applyEq" (formula "130") (term "1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "130") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "pullOutSelect" (formula "130") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "applyEq" (formula "131") (term "0,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "71"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "131") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_1"))
                                 (rule "applyEq" (formula "132") (term "0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "132") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_util_Collection_seq_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "73"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0,0,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0,1,0,1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "85"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replaceKnownSelect_taclet0_1" (formula "3") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "3") (term "2,0"))
                                 (rule "eqSymm" (formula "4") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "134") (term "0,1,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "134") (term "0,1,1,0,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "134") (term "1,0,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "134") (term "1,0,1,1,0,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "132") (term "0"))
                                 (rule "eqSymm" (formula "132") (term "1,0,1"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "107")))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                 (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                 (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "nnf_imp2or" (formula "66") (term "0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0"))
                                 (rule "nnf_imp2or" (formula "45") (term "0"))
                                 (rule "nnf_imp2or" (formula "54") (term "0"))
                                 (rule "nnf_imp2or" (formula "47") (term "0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0"))
                                 (rule "nnf_imp2or" (formula "60") (term "0"))
                                 (rule "nnf_imp2or" (formula "131") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                 (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                 (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "131") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "131") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "131") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "131") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "131") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "131") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "131") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "131") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "131") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "131") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "131") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "131") (term "1,1,0,0,1"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "65") (term "0"))
                                 (rule "castedGetAny" (formula "65") (term "0"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "true_left" (formula "65"))
                                 (rule "commute_or_2" (formula "62") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "47") (term "0"))
                                 (rule "commute_or" (formula "54") (term "0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_and" (formula "54") (term "0,0,1,0"))
                                 (rule "lenNonNegative" (formula "49") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "49"))
                                 (rule "lenNonNegative" (formula "46") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "46"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "seqGetAlphaCast" (formula "80") (term "0"))
                                 (rule "castedGetAny" (formula "80") (term "0"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "true_left" (formula "80"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "77") (term "0"))
                                 (rule "castedGetAny" (formula "77") (term "0"))
                                  (builtin "One Step Simplification" (formula "77"))
                                 (rule "true_left" (formula "77"))
                                 (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                 (rule "castedGetAny" (formula "44") (term "0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "commute_or_2" (formula "60") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "53") (term "0"))
                                 (rule "castedGetAny" (formula "53") (term "0"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "lenNonNegative" (formula "42") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "42"))
                                 (rule "commute_or" (formula "66") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "69") (term "0"))
                                 (rule "castedGetAny" (formula "69") (term "0"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "true_left" (formula "69"))
                                 (rule "commute_or" (formula "62") (term "0,0"))
                                 (rule "lenNonNegative" (formula "64") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "64"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or" (formula "47") (term "0,0"))
                                 (rule "commute_or" (formula "40") (term "0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "62") (term "0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "47") (term "0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or_2" (formula "60") (term "0,0"))
                                 (rule "commute_and_2" (formula "54") (term "0,1,0"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or" (formula "60") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "60") (term "0,0"))
                                 (rule "commute_or_2" (formula "60") (term "0"))
                                 (rule "lenNonNegative" (formula "132") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "lenNonNegative" (formula "133") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "ex_pull_out3" (formula "56") (term "0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                 (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "64") (inst "t=i_3_0"))
                                 (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "64") (term "0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "64") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "64"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0"))
                                 (rule "add_literals" (formula "7") (term "0"))
                                 (rule "leq_literals" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                           )
                           (branch
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "137"))
                              (rule "eqSymm" (formula "6"))
                              (rule "eqSymm" (formula "5"))
                              (rule "eqSymm" (formula "4"))
                              (rule "eqSymm" (formula "3"))
                              (rule "eqSymm" (formula "1"))
                              (rule "eqSymm" (formula "2"))
                              (rule "castedGetAny" (formula "106") (term "0,1,0"))
                              (rule "castedGetAny" (formula "4") (term "0,2,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "castedGetAny" (formula "4") (term "0,2,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "81"))
                              (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "81") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "41"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "41") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "78"))
                              (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "78") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "69"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "69") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "106") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "49"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "49") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "64"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "64") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "106") (term "0,0,0"))
                              (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "58"))
                              (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "76") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "78") (term "1,1,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "81") (term "1,1,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEqRigid" (formula "137") (term "0,1,1") (ifseqformula "25"))
                              (rule "applyEq" (formula "76") (term "4") (ifseqformula "23"))
                              (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "4") (term "1,1,0,0,2,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                              (rule "applyEq" (formula "48") (term "1,1,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "70") (term "0,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "40") (term "1,1,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "42") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "42") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "104") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "134") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "81") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "4") (term "0,0,2,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "108") (term "0") (ifseqformula "36"))
                              (rule "applyEq" (formula "37") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "85") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "85") (term "4") (ifseqformula "23"))
                              (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "4") (term "1,1,0,1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "23"))
                              (rule "applyEqRigid" (formula "134") (term "0,1") (ifseqformula "25"))
                              (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "59") (term "0,0,0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "70") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "75") (term "5") (ifseqformula "73"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "68") (term "0,0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "64") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "84") (term "5") (ifseqformula "83"))
                              (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "77") (term "1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "102") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "3") (term "1,1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "115") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "34") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "56"))
                              (rule "applyEq" (formula "67") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "62") (term "0,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "67") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "62") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "4") (term "1,1,0,0,2,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "64") (term "1,1,0,0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "65") (term "1,1,0,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "4") (term "1,1,0,1,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "97") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "97") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "97") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "97") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "97") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                              (rule "polySimp_elimOne" (formula "71") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                              (rule "polySimp_elimOne" (formula "74") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                              (rule "polySimp_elimOne" (formula "46") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                              (rule "polySimp_elimOne" (formula "38") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                              (rule "polySimp_elimOne" (formula "63") (term "0"))
                              (rule "pullOutSelect" (formula "127") (term "0") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "eqSymm" (formula "128"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "128") (inst "iv=iv"))
                              (rule "inEqSimp_ltToLeq" (formula "128") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "128") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "128") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "128") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "128") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "128") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "128") (term "1,1,1,0,0,1"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                              (rule "pullOutSelect" (formula "129") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_1"))
                              (rule "applyEq" (formula "130") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "130") (term "0,0,1,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "69"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=java_util_Collection_seq_2"))
                              (rule "applyEqReverse" (formula "131") (term "0,1,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "131") (term "0,1,1,0,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "eqSymm" (formula "130") (term "0"))
                              (rule "eqSymm" (formula "130") (term "1,0,1"))
                              (rule "pullOutSelect" (formula "1") (term "1,0,0,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                              (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "2,0"))
                              (rule "eqSymm" (formula "2") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "106")) (ifInst ""  (formula "105")) (ifInst ""  (formula "10")))
                              (rule "applyEqReverse" (formula "131") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "131") (term "0,1,1,0,1") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "131") (term "0,1,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "129") (term "1,0,1"))
                              (rule "eqSymm" (formula "129") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
                              (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "57"))
                              (rule "nnf_ex2all" (formula "99"))
                              (rule "nnf_imp2or" (formula "60") (term "0"))
                              (rule "nnf_imp2or" (formula "64") (term "0"))
                              (rule "nnf_imp2or" (formula "43") (term "0"))
                              (rule "nnf_imp2or" (formula "38") (term "0"))
                              (rule "nnf_imp2or" (formula "45") (term "0"))
                              (rule "nnf_imp2or" (formula "52") (term "0"))
                              (rule "nnf_imp2or" (formula "35") (term "0"))
                              (rule "nnf_imp2or" (formula "58") (term "0"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "nnf_imp2or" (formula "129") (term "0,1"))
                              (rule "nnf_notAnd" (formula "60") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                              (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                              (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "64") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                              (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                              (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "43") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                              (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "45") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                              (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                              (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "52") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "35") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                              (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                              (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "58") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                              (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                              (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "129") (term "0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "129") (term "0,0,0,1"))
                              (rule "times_zero_1" (formula "129") (term "1,0,0,0,0,0,1"))
                              (rule "add_literals" (formula "129") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "129") (term "1,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "129") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "129") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "129") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "129") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "129") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "129") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "129") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "129") (term "1,1,0,0,1"))
                              (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "58") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "58") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "1,1,0,0,0"))
                              (rule "commute_or_2" (formula "60") (term "0"))
                              (rule "seqGetAlphaCast" (formula "63") (term "0"))
                              (rule "castedGetAny" (formula "63") (term "0"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "true_left" (formula "63"))
                              (rule "commute_or_2" (formula "64") (term "0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "4") (term "0,0,1,0,0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "5") (term "0,0,1,0,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "commute_or_2" (formula "43") (term "0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_and" (formula "52") (term "0,0,1,0"))
                              (rule "lenNonNegative" (formula "44") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "44"))
                              (rule "commute_or" (formula "52") (term "0,0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                              (rule "seqGetAlphaCast" (formula "78") (term "0"))
                              (rule "castedGetAny" (formula "78") (term "0"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "true_left" (formula "78"))
                              (rule "lenNonNegative" (formula "47") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "47"))
                              (rule "seqGetAlphaCast" (formula "75") (term "0"))
                              (rule "castedGetAny" (formula "75") (term "0"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "true_left" (formula "75"))
                              (rule "seqGetAlphaCast" (formula "51") (term "0"))
                              (rule "castedGetAny" (formula "51") (term "0"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or_2" (formula "35") (term "0"))
                              (rule "seqGetAlphaCast" (formula "42") (term "0"))
                              (rule "castedGetAny" (formula "42") (term "0"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "true_left" (formula "42"))
                              (rule "commute_or_2" (formula "58") (term "0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                              (rule "andLeft" (formula "6"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                              (rule "applyEq" (formula "7") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "lenNonNegative" (formula "40") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "40"))
                              (rule "seqGetAlphaCast" (formula "67") (term "0"))
                              (rule "castedGetAny" (formula "67") (term "0"))
                               (builtin "One Step Simplification" (formula "67"))
                              (rule "true_left" (formula "67"))
                              (rule "commute_or" (formula "60") (term "0,0"))
                              (rule "commute_or" (formula "64") (term "0,0"))
                              (rule "lenNonNegative" (formula "62") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "62"))
                              (rule "commute_or" (formula "43") (term "0,0"))
                              (rule "commute_or" (formula "38") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "35") (term "0,0"))
                              (rule "commute_or_2" (formula "60") (term "0"))
                              (rule "commute_or_2" (formula "58") (term "0,0"))
                              (rule "commute_or_2" (formula "65") (term "0"))
                              (rule "commute_or_2" (formula "43") (term "0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_and_2" (formula "52") (term "0,1,0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "3") (inst "iv=iv"))
                              (rule "andLeft" (formula "3"))
                              (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "commute_or" (formula "35") (term "0,0,0"))
                              (rule "commute_or_2" (formula "35") (term "0,0"))
                              (rule "commute_or_2" (formula "35") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0,0"))
                              (rule "commute_or_2" (formula "58") (term "0,0"))
                              (rule "commute_or_2" (formula "58") (term "0"))
                              (rule "lenNonNegative" (formula "130") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "lenNonNegative" (formula "131") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "ex_pull_out3" (formula "54") (term "0"))
                              (rule "cnf_rightDist" (formula "54") (term "0,0"))
                              (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                              (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                              (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "3") (inst "t=i_2_2"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "67"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "66"))
                              (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "leq_literals" (formula "3") (term "0,1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "64"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "106") (inst "sk=i_1_0"))
                           (rule "impRight" (formula "106"))
                           (rule "notRight" (formula "107"))
                           (rule "andLeft" (formula "2"))
                           (rule "eqSymm" (formula "139"))
                           (rule "eqSymm" (formula "9"))
                           (rule "eqSymm" (formula "8"))
                           (rule "eqSymm" (formula "7"))
                           (rule "eqSymm" (formula "6"))
                           (rule "eqSymm" (formula "4"))
                           (rule "eqSymm" (formula "5"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "castedGetAny" (formula "7") (term "0,2,0"))
                           (rule "eqSymm" (formula "7"))
                           (rule "castedGetAny" (formula "7") (term "0,2,0"))
                           (rule "eqSymm" (formula "7"))
                           (rule "inEqSimp_ltToLeq" (formula "81"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "81") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "67"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "84"))
                           (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "84") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "72") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "applyEq" (formula "72") (term "0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "7") (term "1,1,0,1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "7") (term "0,0,2,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "6") (term "1,1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "52") (term "1,1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "139") (term "0,1") (ifseqformula "28"))
                           (rule "applyEq" (formula "79") (term "5") (ifseqformula "77"))
                           (rule "applyEq" (formula "62") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "44") (term "1,1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "46") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "89") (term "5") (ifseqformula "88"))
                           (rule "applyEq" (formula "84") (term "1,1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "139") (term "0,1,1") (ifseqformula "28"))
                           (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "74") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                           (rule "applyEq" (formula "54") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "88") (term "4") (ifseqformula "26"))
                           (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "78") (term "4") (ifseqformula "26"))
                           (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "88") (term "0") (ifseqformula "26"))
                           (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "60"))
                           (rule "applyEq" (formula "45") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "54") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "40") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "62") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "47") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "80") (term "1,1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "78") (term "0") (ifseqformula "26"))
                           (rule "applyEq" (formula "106") (term "0") (ifseqformula "8"))
                           (rule "applyEq" (formula "53") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "47") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "81") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "62") (term "0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "106") (term "0") (ifseqformula "9"))
                           (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "40") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "135") (term "0") (ifseqformula "26"))
                           (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "7") (term "1,1,0,0,2,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "61") (term "0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "26"))
                           (rule "applyEqRigid" (formula "108") (term "0") (ifseqformula "39"))
                           (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "72") (term "0,1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                           (rule "applyEq" (formula "69") (term "1,1,0,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "66") (term "0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "7") (term "1,1,0,0,2,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "66") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "4"))
                           (rule "eqSymm" (formula "58"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                           (rule "polySimp_elimOne" (formula "62") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                           (rule "polySimp_elimOne" (formula "49") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                           (rule "polySimp_elimOne" (formula "41") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                           (rule "polySimp_elimOne" (formula "77") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                           (rule "polySimp_elimOne" (formula "74") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                           (rule "polySimp_elimOne" (formula "66") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "129") (inst "iv=iv"))
                           (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1"))
                           (rule "pullOutSelect" (formula "129") (term "0,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                           (rule "applyEq" (formula "130") (term "0,1,1,0,1") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "70"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "130") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                           (rule "applyEq" (formula "131") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "131") (term "1,0,0,1,0,1") (ifseqformula "1"))
                           (rule "pullOutSelect" (formula "2") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                           (rule "applyEq" (formula "3") (term "1,0,0,0,1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "83"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "replaceKnownSelect_taclet0_1" (formula "2") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "2") (term "2,0"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,1,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "107")) (ifInst ""  (formula "106")))
                           (rule "applyEqReverse" (formula "132") (term "0,1,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "132") (term "0,1,1,0,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "pullOutSelect" (formula "130") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_1"))
                           (rule "applyEq" (formula "131") (term "0,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "131") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                           (rule "eqSymm" (formula "131") (term "0"))
                           (rule "eqSymm" (formula "131") (term "1,0,1"))
                           (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                           (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                           (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "nnf_imp2or" (formula "66") (term "0"))
                           (rule "nnf_imp2or" (formula "62") (term "0"))
                           (rule "nnf_imp2or" (formula "45") (term "0"))
                           (rule "nnf_imp2or" (formula "54") (term "0"))
                           (rule "nnf_imp2or" (formula "40") (term "0"))
                           (rule "nnf_imp2or" (formula "47") (term "0"))
                           (rule "nnf_imp2or" (formula "37") (term "0"))
                           (rule "nnf_imp2or" (formula "60") (term "0"))
                           (rule "nnf_imp2or" (formula "131") (term "0,1"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "62") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                           (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                           (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "54") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "47") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "60") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "131") (term "0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "131") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "131") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "131") (term "0,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "131") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "131") (term "0,0,0,1,0,0,1"))
                           (rule "add_zero_left" (formula "131") (term "0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "131") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "131") (term "1,1,0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "131") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "131") (term "0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "131") (term "1,0,0,0,1"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "60") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "commute_or_2" (formula "62") (term "0"))
                           (rule "seqGetAlphaCast" (formula "65") (term "0"))
                           (rule "castedGetAny" (formula "65") (term "0"))
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "true_left" (formula "65"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                           (rule "andLeft" (formula "6"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                           (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                           (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "commute_or" (formula "54") (term "0,0"))
                           (rule "commute_or_2" (formula "47") (term "0"))
                           (rule "commute_and" (formula "54") (term "0,0,1,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                           (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "lenNonNegative" (formula "46") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "46"))
                           (rule "commute_or_2" (formula "37") (term "0"))
                           (rule "commute_or_2" (formula "60") (term "0"))
                           (rule "lenNonNegative" (formula "49") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "49"))
                           (rule "seqGetAlphaCast" (formula "53") (term "0"))
                           (rule "castedGetAny" (formula "53") (term "0"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "true_left" (formula "53"))
                           (rule "seqGetAlphaCast" (formula "77") (term "0"))
                           (rule "castedGetAny" (formula "77") (term "0"))
                            (builtin "One Step Simplification" (formula "77"))
                           (rule "true_left" (formula "77"))
                           (rule "lenNonNegative" (formula "42") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "42"))
                           (rule "seqGetAlphaCast" (formula "44") (term "0"))
                           (rule "castedGetAny" (formula "44") (term "0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "true_left" (formula "44"))
                           (rule "seqGetAlphaCast" (formula "80") (term "0"))
                           (rule "castedGetAny" (formula "80") (term "0"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "true_left" (formula "80"))
                           (rule "commute_or" (formula "66") (term "0,0"))
                           (rule "commute_or" (formula "62") (term "0,0"))
                           (rule "commute_or" (formula "45") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "69") (term "0"))
                           (rule "castedGetAny" (formula "69") (term "0"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "true_left" (formula "69"))
                           (rule "seqGetAlphaCast" (formula "3") (term "0"))
                           (rule "castedGetAny" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "commute_or" (formula "40") (term "0,0"))
                           (rule "commute_or" (formula "47") (term "0,0"))
                           (rule "lenNonNegative" (formula "64") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "64"))
                           (rule "commute_or_2" (formula "37") (term "0,0"))
                           (rule "commute_or_2" (formula "60") (term "0,0"))
                           (rule "commute_or_2" (formula "67") (term "0"))
                           (rule "commute_or_2" (formula "62") (term "0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "commute_or_2" (formula "47") (term "0"))
                           (rule "commute_and_2" (formula "54") (term "0,1,0"))
                           (rule "commute_or" (formula "37") (term "0,0,0"))
                           (rule "commute_or_2" (formula "37") (term "0,0"))
                           (rule "commute_or_2" (formula "37") (term "0"))
                           (rule "commute_or" (formula "60") (term "0,0,0"))
                           (rule "commute_or_2" (formula "60") (term "0,0"))
                           (rule "commute_or_2" (formula "60") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "lenNonNegative" (formula "132") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "lenNonNegative" (formula "133") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "ex_pull_out3" (formula "56") (term "0"))
                           (rule "cnf_rightDist" (formula "56") (term "0,0"))
                           (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                           (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                           (rule "allLeft" (formula "47") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "47") (term "0,0"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "47"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "leq_literals" (formula "7"))
                           (rule "closeFalse" (formula "7"))
                        )
                     )
                     (branch
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "106") (inst "sk=i_0_0"))
                        (rule "impRight" (formula "106"))
                        (rule "notRight" (formula "107"))
                        (rule "andLeft" (formula "2"))
                        (rule "eqSymm" (formula "139"))
                        (rule "eqSymm" (formula "9"))
                        (rule "eqSymm" (formula "8"))
                        (rule "eqSymm" (formula "7"))
                        (rule "eqSymm" (formula "6"))
                        (rule "eqSymm" (formula "4"))
                        (rule "eqSymm" (formula "5"))
                        (rule "castedGetAny" (formula "1") (term "0"))
                        (rule "castedGetAny" (formula "7") (term "0,2,0"))
                        (rule "eqSymm" (formula "7"))
                        (rule "castedGetAny" (formula "7") (term "0,2,0"))
                        (rule "eqSymm" (formula "7"))
                        (rule "inEqSimp_ltToLeq" (formula "81"))
                        (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "81") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "67"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "67") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "84"))
                        (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "84") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "72"))
                        (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "52"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "52") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "applyEq" (formula "55") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "61") (term "0,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "69") (term "0,0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "127") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "71") (term "0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "52") (term "1,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "106") (term "0") (ifseqformula "8"))
                        (rule "applyEq" (formula "61") (term "0,0,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "88") (term "5") (ifseqformula "87"))
                        (rule "applyEq" (formula "73") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "73") (term "0,1,1,0,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "46") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "88") (term "4") (ifseqformula "26"))
                        (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                        (rule "applyEq" (formula "7") (term "1,1,0,1,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "72") (term "0,0,1,0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "77") (term "5") (ifseqformula "75"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "7") (term "0,0,2,0") (ifseqformula "6"))
                        (rule "applyEqRigid" (formula "136") (term "0,1,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "77") (term "4") (ifseqformula "26"))
                        (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "109") (term "0") (ifseqformula "39"))
                        (rule "applyEq" (formula "47") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "83") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "40") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "134") (term "0") (ifseqformula "26"))
                        (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "61") (term "0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "47") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "40") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "61") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "54") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "87") (term "0") (ifseqformula "26"))
                        (rule "applyEq" (formula "77") (term "0") (ifseqformula "26"))
                        (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "53") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "6") (term "1,1,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "7") (term "1,1,0,0,2,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "135") (term "0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "104") (term "0") (ifseqformula "9"))
                        (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "78") (term "1,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "43") (term "1,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "81") (term "1,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "26"))
                        (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                        (rule "applyEq" (formula "65") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "65") (term "0,0,1,0,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "68") (term "1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "67") (term "1,1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "7") (term "1,1,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "7") (term "1,1,0,0,2,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                        (rule "polySimp_elimOne" (formula "62") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                        (rule "polySimp_elimOne" (formula "49") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                        (rule "polySimp_elimOne" (formula "74") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                        (rule "polySimp_elimOne" (formula "41") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                        (rule "polySimp_elimOne" (formula "77") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "polySimp_elimOne" (formula "66") (term "0"))
                        (rule "pullOutSelect" (formula "129") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                        (rule "pullOutSelect" (formula "130") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "2,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "131") (term "1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "130") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "130") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "130") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1"))
                        (rule "pullOutSelect" (formula "130") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_0"))
                        (rule "applyEq" (formula "131") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "131") (term "0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "131") (term "1,0,1"))
                        (rule "eqSymm" (formula "131") (term "0"))
                        (rule "pullOutSelect" (formula "131") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_1"))
                        (rule "applyEq" (formula "132") (term "0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "72"))
                        (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "132") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "132") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                        (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                        (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "nnf_imp2or" (formula "66") (term "0"))
                        (rule "nnf_imp2or" (formula "62") (term "0"))
                        (rule "nnf_imp2or" (formula "54") (term "0"))
                        (rule "nnf_imp2or" (formula "47") (term "0"))
                        (rule "nnf_imp2or" (formula "40") (term "0"))
                        (rule "nnf_imp2or" (formula "45") (term "0"))
                        (rule "nnf_imp2or" (formula "37") (term "0"))
                        (rule "nnf_imp2or" (formula "60") (term "0"))
                        (rule "nnf_imp2or" (formula "131") (term "0,1"))
                        (rule "nnf_notAnd" (formula "66") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "62") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "54") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "54") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "47") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                        (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "60") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                        (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                        (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "131") (term "0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "131") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "131") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "131") (term "1,0,0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "131") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "131") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "131") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "131") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "131") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "131") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "131") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "131") (term "1,1,0,0,1"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "60") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                        (rule "commute_or_2" (formula "66") (term "0"))
                        (rule "commute_or_2" (formula "62") (term "0"))
                        (rule "seqGetAlphaCast" (formula "65") (term "0"))
                        (rule "castedGetAny" (formula "65") (term "0"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "true_left" (formula "65"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                        (rule "andLeft" (formula "6"))
                        (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                        (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                        (rule "andLeft" (formula "7"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "seqGetAlphaCast" (formula "3") (term "0"))
                        (rule "castedGetAny" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "commute_or_2" (formula "47") (term "0"))
                        (rule "commute_or" (formula "54") (term "0,0"))
                        (rule "commute_or_2" (formula "40") (term "0"))
                        (rule "commute_or_2" (formula "45") (term "0"))
                        (rule "commute_and" (formula "54") (term "0,0,1,0"))
                        (rule "seqGetAlphaCast" (formula "44") (term "0"))
                        (rule "castedGetAny" (formula "44") (term "0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "lenNonNegative" (formula "49") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "49"))
                        (rule "commute_or_2" (formula "37") (term "0"))
                        (rule "commute_or_2" (formula "60") (term "0"))
                        (rule "seqGetAlphaCast" (formula "80") (term "0"))
                        (rule "castedGetAny" (formula "80") (term "0"))
                         (builtin "One Step Simplification" (formula "80"))
                        (rule "true_left" (formula "80"))
                        (rule "seqGetAlphaCast" (formula "77") (term "0"))
                        (rule "castedGetAny" (formula "77") (term "0"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "true_left" (formula "77"))
                        (rule "lenNonNegative" (formula "46") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "46"))
                        (rule "commute_or" (formula "66") (term "0,0"))
                        (rule "commute_or" (formula "62") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "53") (term "0"))
                        (rule "castedGetAny" (formula "53") (term "0"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "true_left" (formula "53"))
                        (rule "lenNonNegative" (formula "42") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "42"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                        (rule "andLeft" (formula "8"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "seqGetAlphaCast" (formula "69") (term "0"))
                        (rule "castedGetAny" (formula "69") (term "0"))
                         (builtin "One Step Simplification" (formula "69"))
                        (rule "true_left" (formula "69"))
                        (rule "commute_or" (formula "47") (term "0,0"))
                        (rule "commute_or" (formula "40") (term "0,0"))
                        (rule "commute_or_2" (formula "66") (term "0"))
                        (rule "commute_or" (formula "45") (term "0,0"))
                        (rule "commute_or_2" (formula "62") (term "0"))
                        (rule "commute_or_2" (formula "37") (term "0,0"))
                        (rule "commute_or_2" (formula "60") (term "0,0"))
                        (rule "lenNonNegative" (formula "64") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "64"))
                        (rule "commute_or_2" (formula "47") (term "0"))
                        (rule "commute_or_2" (formula "40") (term "0"))
                        (rule "commute_or_2" (formula "45") (term "0"))
                        (rule "lenNonNegative" (formula "5") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "5"))
                        (rule "commute_and_2" (formula "55") (term "0,1,0"))
                        (rule "commute_or" (formula "38") (term "0,0,0"))
                        (rule "commute_or_2" (formula "38") (term "0,0"))
                        (rule "commute_or_2" (formula "38") (term "0"))
                        (rule "commute_or" (formula "61") (term "0,0,0"))
                        (rule "commute_or_2" (formula "61") (term "0,0"))
                        (rule "commute_or_2" (formula "61") (term "0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "1") (term "0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "lenNonNegative" (formula "133") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "lenNonNegative" (formula "134") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "ex_pull_out3" (formula "57") (term "0"))
                        (rule "cnf_rightDist" (formula "57") (term "0,0"))
                        (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                        (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                        (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "70") (inst "t=i_0_0"))
                        (rule "replace_known_left" (formula "70") (term "0,0,0") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                        (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "70") (term "0,0,1"))
                        (rule "leq_literals" (formula "70") (term "0,1"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "70") (term "0"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "closeFalse" (formula "70"))
                     )
                  )
                  (branch
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "137"))
                     (rule "eqSymm" (formula "6"))
                     (rule "eqSymm" (formula "5"))
                     (rule "eqSymm" (formula "4"))
                     (rule "eqSymm" (formula "3"))
                     (rule "eqSymm" (formula "1"))
                     (rule "eqSymm" (formula "2"))
                     (rule "castedGetAny" (formula "106") (term "0,1,0"))
                     (rule "castedGetAny" (formula "4") (term "0,2,0"))
                     (rule "eqSymm" (formula "4"))
                     (rule "castedGetAny" (formula "4") (term "0,2,0"))
                     (rule "eqSymm" (formula "4"))
                     (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "81"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "81") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "41"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "41") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "78"))
                     (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "78") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "69"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "106") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "49"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "49") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "64"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "64") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "106") (term "0,0,0"))
                     (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "59") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "137") (term "0,1,1") (ifseqformula "25"))
                     (rule "applyEq" (formula "43") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "43") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                     (rule "applyEq" (formula "4") (term "1,1,0,1,1") (ifseqformula "23"))
                     (rule "applyEq" (formula "58") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "104") (term "0,0,1,0,0,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "104") (term "0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "84") (term "4") (ifseqformula "23"))
                     (rule "applyEq" (formula "48") (term "1,1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "77") (term "1,1") (ifseqformula "23"))
                     (rule "applyEqRigid" (formula "135") (term "0,1") (ifseqformula "25"))
                     (rule "applyEq" (formula "77") (term "1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "37") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "23"))
                     (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "4") (term "0,0,2,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "69") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "40") (term "1,1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "64") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "102") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "64") (term "0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "23"))
                     (rule "applyEq" (formula "74") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "133") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "4") (term "1,1,0,0,2,1") (ifseqformula "23"))
                     (rule "applyEq" (formula "74") (term "5") (ifseqformula "72"))
                     (rule "applyEq" (formula "102") (term "0") (ifseqformula "6"))
                     (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "84") (term "5") (ifseqformula "83"))
                     (rule "applyEq" (formula "3") (term "1,1,1") (ifseqformula "23"))
                     (rule "applyEq" (formula "74") (term "4") (ifseqformula "23"))
                     (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "69") (term "0,1,1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "83") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "105") (term "0") (ifseqformula "36"))
                     (rule "applyEq" (formula "79") (term "1,1") (ifseqformula "23"))
                     (rule "applyEq" (formula "75") (term "1,1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "78") (term "1,1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "114") (term "1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "34") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "32"))
                     (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "100") (term "1,1,0,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "4") (term "1,1,0,0,2,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "4") (term "1,1,0,1,0") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "applyEq" (formula "61") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "66") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,1,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "66") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "61") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "63") (term "1,1,0,0,1,0") (ifseqformula "22"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                     (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                     (rule "polySimp_elimOne" (formula "59") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                     (rule "polySimp_elimOne" (formula "71") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                     (rule "polySimp_elimOne" (formula "74") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "97") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "97") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "97") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "97") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "97") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                     (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                     (rule "polySimp_elimOne" (formula "63") (term "0"))
                     (rule "equalityToSeqGetAndSeqLenRight" (formula "127") (inst "iv=iv"))
                     (rule "inEqSimp_ltToLeq" (formula "127") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "127") (term "0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "127") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "127") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "127") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "127") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "127") (term "1,1,1,0,0,1"))
                     (rule "pullOutSelect" (formula "127") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_0"))
                     (rule "applyEq" (formula "128") (term "0,0,1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "128") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                     (rule "eqSymm" (formula "128") (term "0"))
                     (rule "eqSymm" (formula "128") (term "1,0,1"))
                     (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                     (rule "pullOutSelect" (formula "129") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_1"))
                     (rule "applyEq" (formula "130") (term "0,0,1,0,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "69"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=java_util_Collection_seq_2"))
                     (rule "applyEqReverse" (formula "131") (term "0,1,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "131") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "131") (term "0,1,1,0,1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "130") (term "0"))
                     (rule "eqSymm" (formula "130") (term "1,0,1"))
                     (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "2,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "106")) (ifInst ""  (formula "10")))
                     (rule "applyEqReverse" (formula "131") (term "0,1,0") (ifseqformula "2"))
                     (rule "applyEqReverse" (formula "131") (term "0,1,1,0,1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "129") (term "0"))
                     (rule "eqSymm" (formula "129") (term "1,0,1"))
                     (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                     (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
                     (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "nnf_imp2or" (formula "59") (term "0"))
                     (rule "nnf_ex2all" (formula "99"))
                     (rule "nnf_imp2or" (formula "64") (term "0"))
                     (rule "nnf_imp2or" (formula "43") (term "0"))
                     (rule "nnf_imp2or" (formula "38") (term "0"))
                     (rule "nnf_imp2or" (formula "45") (term "0"))
                     (rule "nnf_imp2or" (formula "52") (term "0"))
                     (rule "nnf_imp2or" (formula "35") (term "0"))
                     (rule "nnf_imp2or" (formula "58") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_imp2or" (formula "129") (term "0,1"))
                     (rule "nnf_notAnd" (formula "60") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                     (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                     (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "64") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                     (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                     (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "52") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                     (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                     (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "58") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                     (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                     (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "129") (term "0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "129") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "129") (term "1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "129") (term "0,1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "129") (term "0,0,1,0,0,1"))
                     (rule "add_literals" (formula "129") (term "0,0,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "129") (term "0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "129") (term "1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "129") (term "1,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "129") (term "0,0,0,1"))
                     (rule "times_zero_1" (formula "129") (term "1,0,0,0,0,0,1"))
                     (rule "add_literals" (formula "129") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "0,0,0,1"))
                     (rule "mul_literals" (formula "129") (term "1,0,0,0,1"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "58") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "58") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "58") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "58") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "60") (term "0"))
                     (rule "seqGetAlphaCast" (formula "63") (term "0"))
                     (rule "castedGetAny" (formula "63") (term "0"))
                      (builtin "One Step Simplification" (formula "63"))
                     (rule "true_left" (formula "63"))
                     (rule "commute_or_2" (formula "64") (term "0"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
                     (rule "andLeft" (formula "4"))
                     (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                     (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
                     (rule "andLeft" (formula "5"))
                     (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                     (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "commute_or_2" (formula "43") (term "0"))
                     (rule "commute_or_2" (formula "38") (term "0"))
                     (rule "commute_or_2" (formula "45") (term "0"))
                     (rule "commute_and" (formula "52") (term "0,0,1,0"))
                     (rule "seqGetAlphaCast" (formula "75") (term "0"))
                     (rule "castedGetAny" (formula "75") (term "0"))
                      (builtin "One Step Simplification" (formula "75"))
                     (rule "true_left" (formula "75"))
                     (rule "seqGetAlphaCast" (formula "51") (term "0"))
                     (rule "castedGetAny" (formula "51") (term "0"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "true_left" (formula "51"))
                     (rule "commute_or" (formula "52") (term "0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "seqGetAlphaCast" (formula "78") (term "0"))
                     (rule "castedGetAny" (formula "78") (term "0"))
                      (builtin "One Step Simplification" (formula "78"))
                     (rule "true_left" (formula "78"))
                     (rule "seqGetAlphaCast" (formula "42") (term "0"))
                     (rule "castedGetAny" (formula "42") (term "0"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "commute_or_2" (formula "35") (term "0"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                     (rule "applyEq" (formula "7") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "lenNonNegative" (formula "44") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "44"))
                     (rule "lenNonNegative" (formula "40") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "40"))
                     (rule "commute_or_2" (formula "58") (term "0"))
                     (rule "lenNonNegative" (formula "47") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "47"))
                     (rule "seqGetAlphaCast" (formula "67") (term "0"))
                     (rule "castedGetAny" (formula "67") (term "0"))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "true_left" (formula "67"))
                     (rule "commute_or" (formula "60") (term "0,0"))
                     (rule "commute_or" (formula "64") (term "0,0"))
                     (rule "lenNonNegative" (formula "62") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "62"))
                     (rule "commute_or" (formula "43") (term "0,0"))
                     (rule "commute_or" (formula "38") (term "0,0"))
                     (rule "commute_or" (formula "45") (term "0,0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "commute_or_2" (formula "35") (term "0,0"))
                     (rule "commute_or_2" (formula "60") (term "0"))
                     (rule "commute_or_2" (formula "65") (term "0"))
                     (rule "commute_or_2" (formula "43") (term "0"))
                     (rule "commute_or_2" (formula "38") (term "0"))
                     (rule "commute_or_2" (formula "45") (term "0"))
                     (rule "commute_or_2" (formula "58") (term "0,0"))
                     (rule "commute_and_2" (formula "52") (term "0,1,0"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "3") (inst "iv=iv"))
                     (rule "andLeft" (formula "3"))
                     (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "commute_or" (formula "35") (term "0,0,0"))
                     (rule "commute_or_2" (formula "35") (term "0,0"))
                     (rule "commute_or_2" (formula "35") (term "0"))
                     (rule "commute_or" (formula "58") (term "0,0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0"))
                     (rule "commute_or_2" (formula "58") (term "0"))
                     (rule "lenNonNegative" (formula "130") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "lenNonNegative" (formula "131") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "ex_pull_out3" (formula "54") (term "0"))
                     (rule "cnf_rightDist" (formula "54") (term "0,0"))
                     (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                     (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                     (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "3") (inst "t=i_2"))
                     (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "71"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "70"))
                     (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "leq_literals" (formula "3") (term "0,1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "allRight" (formula "106") (inst "sk=j_0"))
                  (rule "impRight" (formula "106"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "139"))
                  (rule "eqSymm" (formula "8"))
                  (rule "eqSymm" (formula "7"))
                  (rule "eqSymm" (formula "6"))
                  (rule "eqSymm" (formula "5"))
                  (rule "eqSymm" (formula "3"))
                  (rule "eqSymm" (formula "4"))
                  (rule "castedGetAny" (formula "108") (term "0,1,0"))
                  (rule "castedGetAny" (formula "108") (term "1,1,0"))
                  (rule "castedGetAny" (formula "6") (term "0,2,1"))
                  (rule "castedGetAny" (formula "6") (term "0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "51"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "51") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "43"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "83"))
                  (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "83") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "71"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "71") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "80"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "80") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "66") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "108") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "108") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "108") (term "0,0,1,0,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "61") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "83") (term "1,1,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "6") (term "0,0,2,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "47") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "5") (term "1,1,1") (ifseqformula "25"))
                  (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "25"))
                  (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "61") (term "0,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEqRigid" (formula "138") (term "0,1") (ifseqformula "27"))
                  (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "60") (term "0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "45") (term "1,1,0,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "40") (term "1,1,0,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "6") (term "1,1,0,1,1") (ifseqformula "25"))
                  (rule "applyEq" (formula "106") (term "0") (ifseqformula "8"))
                  (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "40") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "77") (term "0") (ifseqformula "25"))
                  (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "86") (term "0") (ifseqformula "25"))
                  (rule "applyEqRigid" (formula "109") (term "0") (ifseqformula "38"))
                  (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "105") (term "0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "135") (term "0,1,1") (ifseqformula "27"))
                  (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "71") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "25"))
                  (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "53") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "46") (term "1,1,0,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "25"))
                  (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "25"))
                  (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "103") (term "0") (ifseqformula "7"))
                  (rule "applyEq" (formula "75") (term "4") (ifseqformula "25"))
                  (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "53") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "77") (term "1,1,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "50") (term "1,1,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "59") (term "0,0,0,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "132") (term "0") (ifseqformula "25"))
                  (rule "applyEq" (formula "85") (term "5") (ifseqformula "84"))
                  (rule "applyEq" (formula "85") (term "4") (ifseqformula "25"))
                  (rule "applyEq" (formula "42") (term "1,1,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "52") (term "1,1,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "116") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "70") (term "0,1,1,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "75") (term "5") (ifseqformula "73"))
                  (rule "applyEq" (formula "6") (term "1,1,0,0,2,1") (ifseqformula "25"))
                  (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "2") (term "1,1,0,0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "68") (term "0,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "6") (term "1,1,0,0,2,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "69") (term "0,0,1,0,0,0,0,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "69") (term "0,0,1,0,0,1,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "63") (term "0,0,0,1,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "63") (term "0,0,1,0,0,0,0,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "99") (term "0,1,1,0") (ifseqformula "5"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                  (rule "polySimp_elimOne" (formula "61") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "99") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                  (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                  (rule "polySimp_elimOne" (formula "76") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                  (rule "polySimp_elimOne" (formula "73") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                  (rule "polySimp_elimOne" (formula "48") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                  (rule "polySimp_elimOne" (formula "65") (term "0"))
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "129") (inst "iv=iv"))
                  (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1"))
                  (rule "pullOutSelect" (formula "129") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                  (rule "applyEq" (formula "130") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "130") (term "1,0,0,1,0,1") (ifseqformula "1"))
                  (rule "pullOutSelect" (formula "130") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                  (rule "applyEq" (formula "131") (term "1,0,1,1,0,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "131") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "131") (term "1,0,1,1,0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "130") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_0"))
                  (rule "applyEq" (formula "131") (term "0,0,1,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "131") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                  (rule "eqSymm" (formula "131") (term "0"))
                  (rule "eqSymm" (formula "131") (term "1,0,1"))
                  (rule "pullOutSelect" (formula "131") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_1"))
                  (rule "applyEq" (formula "132") (term "0,0,1,0,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "71"))
                  (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "132") (term "0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "132") (term "0,0,1,0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                  (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "inEqSimp_and_subsumption3" (formula "59") (term "0,0,0"))
                  (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "59"))
                  (rule "nnf_ex2all" (formula "101"))
                  (rule "nnf_imp2or" (formula "66") (term "0"))
                  (rule "nnf_imp2or" (formula "62") (term "0"))
                  (rule "nnf_imp2or" (formula "47") (term "0"))
                  (rule "nnf_imp2or" (formula "40") (term "0"))
                  (rule "nnf_imp2or" (formula "54") (term "0"))
                  (rule "nnf_imp2or" (formula "45") (term "0"))
                  (rule "nnf_imp2or" (formula "37") (term "0"))
                  (rule "nnf_imp2or" (formula "60") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_imp2or" (formula "131") (term "0,1"))
                  (rule "nnf_notAnd" (formula "66") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "62") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                  (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                  (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "54") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                  (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "54") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                  (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "45") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "60") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                  (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                  (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "131") (term "0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "131") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "131") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "131") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "131") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "131") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "131") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "131") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "131") (term "1,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "131") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "131") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "131") (term "1,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "60") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                  (rule "commute_or_2" (formula "66") (term "0"))
                  (rule "commute_or_2" (formula "62") (term "0"))
                  (rule "seqGetAlphaCast" (formula "65") (term "0"))
                  (rule "castedGetAny" (formula "65") (term "0"))
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "true_left" (formula "65"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                  (rule "andLeft" (formula "6"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                  (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "commute_or_2" (formula "47") (term "0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                  (rule "andLeft" (formula "7"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                  (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                  (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "commute_or_2" (formula "45") (term "0"))
                  (rule "commute_or" (formula "54") (term "0,0"))
                  (rule "commute_and" (formula "54") (term "0,0,1,0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                  (rule "andLeft" (formula "8"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "seqGetAlphaCast" (formula "77") (term "0"))
                  (rule "castedGetAny" (formula "77") (term "0"))
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "true_left" (formula "77"))
                  (rule "commute_or_2" (formula "1") (term "0"))
                  (rule "lenNonNegative" (formula "42") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "42"))
                  (rule "lenNonNegative" (formula "46") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "46"))
                  (rule "seqGetAlphaCast" (formula "80") (term "0"))
                  (rule "castedGetAny" (formula "80") (term "0"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "true_left" (formula "80"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or_2" (formula "60") (term "0"))
                  (rule "seqGetAlphaCast" (formula "53") (term "0"))
                  (rule "castedGetAny" (formula "53") (term "0"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "true_left" (formula "53"))
                  (rule "lenNonNegative" (formula "49") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "49"))
                  (rule "seqGetAlphaCast" (formula "44") (term "0"))
                  (rule "castedGetAny" (formula "44") (term "0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "seqGetAlphaCast" (formula "69") (term "0"))
                  (rule "castedGetAny" (formula "69") (term "0"))
                   (builtin "One Step Simplification" (formula "69"))
                  (rule "true_left" (formula "69"))
                  (rule "commute_or" (formula "66") (term "0,0"))
                  (rule "commute_or" (formula "62") (term "0,0"))
                  (rule "commute_or" (formula "47") (term "0,0"))
                  (rule "commute_or" (formula "40") (term "0,0"))
                  (rule "commute_or" (formula "45") (term "0,0"))
                  (rule "lenNonNegative" (formula "64") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "64"))
                  (rule "commute_or" (formula "1") (term "0,0"))
                  (rule "commute_or_2" (formula "67") (term "0"))
                  (rule "commute_or_2" (formula "62") (term "0"))
                  (rule "commute_or_2" (formula "47") (term "0"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "commute_or_2" (formula "45") (term "0"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "commute_or_2" (formula "60") (term "0,0"))
                  (rule "commute_and_2" (formula "54") (term "0,1,0"))
                  (rule "commute_or" (formula "37") (term "0,0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or" (formula "60") (term "0,0,0"))
                  (rule "commute_or_2" (formula "60") (term "0,0"))
                  (rule "commute_or_2" (formula "60") (term "0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
                  (rule "andLeft" (formula "2"))
                  (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "lenNonNegative" (formula "132") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "lenNonNegative" (formula "133") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "ex_pull_out3" (formula "56") (term "0"))
                  (rule "cnf_rightDist" (formula "56") (term "0,0"))
                  (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                  (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                  (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "57"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "58"))
                  (rule "applyEq" (formula "64") (term "1,0,1") (ifseqformula "65"))
                  (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "65"))
                  (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "94"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "1") (ifseqformula "58"))
                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "95"))
                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "64")))
                  (rule "true_left" (formula "65"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "58"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "59"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "60"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "61"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "62"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "63"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "64"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "65"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "66"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "67"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "68"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "69"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "70"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "71"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "72"))
                  (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
                  (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "146"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "27"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "73"))
                  (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "29"))
                  (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
                  (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "148"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "commute_and" (formula "73") (term "0,0,0"))
                  (rule "allLeft" (formula "59") (inst "t=i_2_0"))
                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                  (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "64"))
                  (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "139"))
                   (builtin "One Step Simplification" (formula "59"))
                  (rule "true_left" (formula "59"))
                  (rule "allLeft" (formula "59") (inst "t=i_2_1"))
                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                  (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "99"))
                  (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "139"))
                   (builtin "One Step Simplification" (formula "59"))
                  (rule "true_left" (formula "59"))
                  (rule "allLeft" (formula "82") (inst "t=i_2_2"))
                  (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                  (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "87"))
                  (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "115"))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "true_left" (formula "82"))
                  (rule "allLeft" (formula "64") (inst "t=i_1"))
                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                  (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "102"))
                  (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "139"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "true_left" (formula "64"))
                  (rule "allLeft" (formula "64") (inst "t=i_2"))
                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                  (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "91"))
                  (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "115"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "true_left" (formula "64"))
                  (rule "allLeft" (formula "64") (inst "t=i_0"))
                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                  (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "73"))
                  (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "139"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "true_left" (formula "64"))
                  (rule "allLeft" (formula "64") (inst "t=j_0"))
                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "64") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                  (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "64") (term "0,0,1"))
                  (rule "leq_literals" (formula "64") (term "0,1"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "notLeft" (formula "64"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,1") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "144"))
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "70")))
                  (rule "true_left" (formula "25"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "1,0,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "98") (term "0") (ifseqformula "142"))
                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "34")))
                  (rule "true_left" (formula "98"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "1,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "145"))
                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "32")))
                  (rule "true_left" (formula "31"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "1") (ifseqformula "49"))
                  (rule "replace_known_left" (formula "98") (term "1") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "140")))
                  (rule "true_left" (formula "98"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "147"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "34")))
                  (rule "true_left" (formula "33"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "1,0,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "143"))
                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "36")))
                  (rule "true_left" (formula "65"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "145") (term "0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "146"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "139"))
                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "33")))
                  (rule "true_left" (formula "32"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "138"))
                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "36")))
                  (rule "true_left" (formula "35"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "137"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "41")))
                  (rule "true_left" (formula "40"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "1,0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "141"))
                   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "40")))
                  (rule "true_left" (formula "39"))
                  (rule "commute_and_2" (formula "73") (term "0,0"))
                  (rule "seqGetAlphaCast" (formula "18") (term "1,0,0,0,0"))
                  (rule "castedGetAny" (formula "18") (term "0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "lenNonNegative" (formula "87") (term "1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "87"))
                  (rule "allLeft" (formula "73") (inst "t=i_1"))
                  (rule "exLeft" (formula "73") (inst "sk=i_3"))
                  (rule "andLeft" (formula "73"))
                  (rule "andLeft" (formula "73"))
                  (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                  (rule "inEqSimp_homoInEq0" (formula "74") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0,0,0"))
                  (rule "applyEq" (formula "75") (term "0,0,0") (ifseqformula "105"))
                  (rule "eqSymm" (formula "75") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "74") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "103"))
                  (rule "qeq_literals" (formula "73") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_contradInEq1" (formula "74") (term "1") (ifseqformula "104"))
                  (rule "inEqSimp_homoInEq1" (formula "74") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,1"))
                  (rule "add_literals" (formula "74") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "74") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "74") (term "0,0,1"))
                  (rule "leq_literals" (formula "74") (term "0,1"))
                   (builtin "One Step Simplification" (formula "74"))
                  (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "104"))
                  (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1"))
                  (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "75") (term "0,0,1"))
                  (rule "leq_literals" (formula "75") (term "0,1"))
                   (builtin "One Step Simplification" (formula "75"))
                  (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "104"))
                  (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1"))
                  (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                  (rule "add_literals" (formula "73") (term "0,0,1"))
                  (rule "leq_literals" (formula "73") (term "0,1"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_contradInEq1" (formula "74") (term "1") (ifseqformula "103"))
                  (rule "qeq_literals" (formula "74") (term "0,1"))
                   (builtin "One Step Simplification" (formula "74"))
                  (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "103"))
                  (rule "qeq_literals" (formula "75") (term "0,1"))
                   (builtin "One Step Simplification" (formula "75"))
                  (rule "allLeft" (formula "76") (inst "t=i_0"))
                  (rule "exLeft" (formula "76") (inst "sk=i_4"))
                  (rule "andLeft" (formula "76"))
                  (rule "andLeft" (formula "76"))
                  (rule "inEqSimp_commuteGeq" (formula "78") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                  (rule "inEqSimp_homoInEq0" (formula "77") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0,0,0"))
                  (rule "applyEq" (formula "78") (term "0,0,0") (ifseqformula "72"))
                  (rule "eqSymm" (formula "78") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "78") (term "1,0") (ifseqformula "67"))
                  (rule "qeq_literals" (formula "78") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "67"))
                  (rule "qeq_literals" (formula "76") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "76"))
                  (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "67"))
                  (rule "qeq_literals" (formula "77") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "inEqSimp_contradInEq1" (formula "78") (term "1") (ifseqformula "70"))
                  (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                  (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                  (rule "add_literals" (formula "78") (term "0,0,1"))
                  (rule "leq_literals" (formula "78") (term "0,1"))
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "70"))
                  (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1"))
                  (rule "add_literals" (formula "77") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "77") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "77") (term "0,0,1"))
                  (rule "leq_literals" (formula "77") (term "0,1"))
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "inEqSimp_contradInEq1" (formula "76") (term "1") (ifseqformula "70"))
                  (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1"))
                  (rule "add_literals" (formula "76") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "76") (term "0,0,1"))
                  (rule "leq_literals" (formula "76") (term "0,1"))
                   (builtin "One Step Simplification" (formula "76"))
                  (rule "allLeft" (formula "79") (inst "t=j_0"))
                  (rule "exLeft" (formula "79") (inst "sk=i_5"))
                  (rule "andLeft" (formula "79"))
                  (rule "andLeft" (formula "79"))
                  (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "79") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                  (rule "inEqSimp_homoInEq0" (formula "80") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "80") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "80") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "80") (term "1,0") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "80") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "81") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                  (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "79") (term "0,0,1"))
                  (rule "leq_literals" (formula "79") (term "0,1"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "inEqSimp_contradInEq1" (formula "80") (term "1") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "80") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,1"))
                  (rule "add_literals" (formula "80") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "80") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "80") (term "0,0,1"))
                  (rule "leq_literals" (formula "80") (term "0,1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "79") (term "0,1"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                  (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "81") (term "0,0,1"))
                  (rule "leq_literals" (formula "81") (term "0,1"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "81"))
                  (rule "applyEq" (formula "117") (term "0") (ifseqformula "81"))
                  (rule "allLeft" (formula "82") (inst "t=i_2"))
                  (rule "exLeft" (formula "82") (inst "sk=i_6"))
                  (rule "andLeft" (formula "82"))
                  (rule "andLeft" (formula "82"))
                  (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                  (rule "inEqSimp_homoInEq0" (formula "83") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "83") (term "0,0,0"))
                  (rule "applyEq" (formula "84") (term "0,0,0") (ifseqformula "103"))
                  (rule "eqSymm" (formula "84") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "83") (term "1,0,0"))
                  (rule "mul_literals" (formula "83") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "83") (term "1,0") (ifseqformula "101"))
                  (rule "qeq_literals" (formula "83") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "83"))
                  (rule "inEqSimp_contradInEq1" (formula "84") (term "1,0") (ifseqformula "101"))
                  (rule "qeq_literals" (formula "84") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "84"))
                  (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "102"))
                  (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                  (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "82") (term "0,0,1"))
                  (rule "leq_literals" (formula "82") (term "0,1"))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "102"))
                  (rule "inEqSimp_homoInEq1" (formula "83") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,1"))
                  (rule "add_literals" (formula "83") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "83") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "83") (term "0,0,1"))
                  (rule "leq_literals" (formula "83") (term "0,1"))
                   (builtin "One Step Simplification" (formula "83"))
                  (rule "inEqSimp_contradInEq1" (formula "84") (term "1") (ifseqformula "102"))
                  (rule "inEqSimp_homoInEq1" (formula "84") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1"))
                  (rule "add_literals" (formula "84") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "84") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "84") (term "0,0,1"))
                  (rule "leq_literals" (formula "84") (term "0,1"))
                   (builtin "One Step Simplification" (formula "84"))
                  (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "101"))
                  (rule "qeq_literals" (formula "82") (term "0,1"))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "allLeft" (formula "18") (inst "t=i_5"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "81"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1"))
                  (rule "leq_literals" (formula "18") (term "0,1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq0" (formula "80") (ifseqformula "18"))
                  (rule "qeq_literals" (formula "80") (term "0"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "closeFalse" (formula "80"))
               )
            )
         )
      )
   )
   (branch "Exceptional Post (initPolyasVals_addDataForVoter)"
       (builtin "One Step Simplification" (formula "35"))
       (builtin "One Step Simplification" (formula "60"))
      (rule "replaceKnownSelect_taclet0_1" (formula "35") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "35") (term "0,1,0,0"))
      (rule "andLeft" (formula "35"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0") (ifseqformula "35"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0") (ifseqformula "22"))
      (rule "andLeft" (formula "36"))
      (rule "andLeft" (formula "36"))
      (rule "notLeft" (formula "36"))
      (rule "close" (formula "38") (ifseqformula "37"))
   )
   (branch "Pre (initPolyasVals_addDataForVoter)"
       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")) (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1") (ifseqformula "22"))
      (rule "wellFormedAnonEQ" (formula "58") (term "0,0,1") (ifseqformula "22"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,1") (ifseqformula "22"))
      (rule "replaceKnownSelect_taclet0_1" (formula "58") (term "1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "58") (term "1,1,0,0"))
      (rule "replaceKnownSelect_taclet0_1" (formula "58") (term "0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "58") (term "0,0,0,0,0"))
      (rule "replace_known_left" (formula "58") (term "1,0,0,1") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "36")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "58") (term "0"))
       (builtin "One Step Simplification" (formula "58"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "58"))
      (rule "replaceKnownSelect_taclet0_3" (formula "58") (term "0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "58") (term "0,0,1"))
      (rule "replaceKnownSelect_taclet0_7" (formula "58") (term "0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_5" (formula "58") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "58") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "58") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "58") (term "0,1") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
      (rule "closeTrue" (formula "58"))
   )
)
(branch "Exceptional Post (initPolyasVals_addInputCols)"
    (builtin "One Step Simplification" (formula "22"))
    (builtin "One Step Simplification" (formula "44"))
   (rule "andLeft" (formula "22"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "22"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "25"))
   (rule "notLeft" (formula "23"))
   (rule "close" (formula "27") (ifseqformula "26"))
)
(branch "Pre (initPolyasVals_addInputCols)"
    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "1")) (ifInst ""  (formula "43")) (ifInst ""  (formula "4")) (ifInst ""  (formula "44")) (ifInst ""  (formula "5")))
   (rule "eqSymm" (formula "42") (term "1,0,1,0,1,1,1"))
   (rule "castedGetAny" (formula "42") (term "0,1,0,1,0,1,1,1"))
   (rule "castedGetAny" (formula "42") (term "1,1,0,1,0,1,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,1,1,1"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "42") (term "0,1,1") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "22")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
   (rule "castedGetAny" (formula "42") (term "0,1,0,1,0,1,1"))
   (rule "castedGetAny" (formula "42") (term "0,0,1,0,1,0,0,1,1"))
   (rule "castedGetAny" (formula "42") (term "0,0,1,0,1,0,0,0,0,0,1,1"))
   (rule "castedGetAny" (formula "42") (term "0,0,1,0,1,0,0,0,1,1"))
   (rule "castedGetAny" (formula "42") (term "0,1,0,1,0,0,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,0,0,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,0,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,1,1"))
   (rule "applyEqRigid" (formula "42") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "9"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "27"))
    (builtin "One Step Simplification" (formula "42"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "42") (term "0,1"))
   (rule "replace_known_right" (formula "42") (term "0,1,0,1") (ifseqformula "41"))
    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "42") (term "0") (inst "i=i") (inst "i_0=i_0"))
   (rule "expand_inInt" (formula "42") (term "1,0,0,1,0"))
   (rule "expand_inInt" (formula "42") (term "1,0,0,1,0,0"))
   (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0,1,0,0"))
   (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0,1,0,0"))
   (rule "eqSymm" (formula "42") (term "0,0,0"))
   (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "42"))
   (rule "castedGetAny" (formula "42") (term "0,0,1,0,0,0"))
   (rule "castedGetAny" (formula "42") (term "0,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,0,0"))
   (rule "lenNonNegative" (formula "6") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "6"))
   (rule "lenNonNegative" (formula "7") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "lenNonNegative" (formula "19") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "lenNonNegative" (formula "14") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "seqGetAlphaCast" (formula "22") (term "0"))
   (rule "castedGetAny" (formula "22") (term "0"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "true_left" (formula "22"))
   (rule "seqGetAlphaCast" (formula "16") (term "0"))
   (rule "castedGetAny" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "lenNonNegative" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1") (ifseqformula "1"))
   (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "37"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "3"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,0,1") (ifseqformula "4"))
   (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "45"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "4"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "5"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "6"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "7"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "8"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "10"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "11"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1") (ifseqformula "14"))
   (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "48"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "25") (term "1,0,1") (ifseqformula "26"))
   (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "24"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "true_left" (formula "25"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "14"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "43"))
   (rule "impRight" (formula "70"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "47"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "46"))
   (rule "andLeft" (formula "48"))
   (rule "andLeft" (formula "51"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "47"))
   (rule "andLeft" (formula "54"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "48"))
   (rule "andLeft" (formula "57"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "50"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "58"))
   (rule "notLeft" (formula "58"))
   (rule "eqSymm" (formula "58") (term "1,0,0,1"))
   (rule "eqSymm" (formula "58") (term "0,0,0,1"))
   (rule "eqSymm" (formula "87"))
   (rule "eqSymm" (formula "6"))
   (rule "eqSymm" (formula "5"))
   (rule "eqSymm" (formula "4"))
   (rule "eqSymm" (formula "3"))
   (rule "eqSymm" (formula "57") (term "1,0,1,0"))
   (rule "eqSymm" (formula "2"))
   (rule "eqSymm" (formula "1"))
   (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "60"))
    (builtin "One Step Simplification" (formula "52"))
   (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "59"))
    (builtin "One Step Simplification" (formula "53"))
   (rule "castedGetAny" (formula "4") (term "0,2,0"))
   (rule "eqSymm" (formula "4"))
   (rule "castedGetAny" (formula "57") (term "1,1,0,1,0"))
   (rule "castedGetAny" (formula "57") (term "0,1,0,1,0"))
   (rule "castedGetAny" (formula "4") (term "0,2,0"))
   (rule "eqSymm" (formula "4"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,0"))
   (rule "assignment" (formula "58") (term "1"))
    (builtin "One Step Simplification" (formula "58"))
   (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "29"))
   (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "29"))
   (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
   (rule "applyEq" (formula "56") (term "0,1,1,0,0,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "56") (term "0,1,1,0,0") (ifseqformula "3"))
   (rule "applyEq" (formula "56") (term "0,0,1,0,1,0") (ifseqformula "3"))
   (rule "applyEq" (formula "56") (term "0,1,1,0,1,0") (ifseqformula "1"))
   (rule "replace_known_left" (formula "82") (term "1,1") (ifseqformula "56"))
    (builtin "One Step Simplification" (formula "82"))
   (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "3"))
   (rule "applyEq" (formula "4") (term "0,0,2,0") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "equalityToSeqGetAndSeqLenRight" (formula "85") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,1"))
   (rule "pullOutSelect" (formula "85") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_0"))
   (rule "applyEq" (formula "86") (term "0,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "86") (term "0,1,1,0,0,1") (ifseqformula "1"))
   (rule "eqSymm" (formula "86") (term "1,0,1"))
   (rule "eqSymm" (formula "86") (term "0"))
   (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
   (rule "pullOutSelect" (formula "87") (term "1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
   (rule "applyEq" (formula "88") (term "1,0,0,0") (ifseqformula "1"))
   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=java_util_Collection_seq_1"))
   (rule "applyEqReverse" (formula "89") (term "0,1,1,0,1") (ifseqformula "4"))
   (rule "applyEqReverse" (formula "89") (term "0,1,1,0,0,1") (ifseqformula "4"))
   (rule "applyEqReverse" (formula "89") (term "0,1,0") (ifseqformula "4"))
   (rule "hideAuxiliaryEq" (formula "4"))
   (rule "pullOutSelect" (formula "88") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_2"))
   (rule "applyEq" (formula "89") (term "0,0,0") (ifseqformula "1"))
   (rule "boxToDiamond" (formula "60") (term "1"))
    (builtin "One Step Simplification" (formula "60"))
   (rule "notLeft" (formula "60"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "56") (inst "i=i") (inst "i_0=i_0"))
   (rule "expand_inInt" (formula "56") (term "1,0,0,1"))
   (rule "expand_inInt" (formula "56") (term "1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0,1"))
   (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0,1"))
   (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0,1,0"))
   (rule "andLeft" (formula "56"))
   (rule "andLeft" (formula "56"))
   (rule "eqSymm" (formula "56"))
   (rule "castedGetAny" (formula "58") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "57") (term "0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
   (rule "applyEq" (formula "57") (term "0,1,1,0,0,0") (ifseqformula "5"))
   (rule "applyEq" (formula "58") (term "0,1,1,0,0,0") (ifseqformula "6"))
   (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "6"))
   (rule "eqSymm" (formula "56"))
   (rule "applyEq" (formula "57") (term "0,0,0,1,0") (ifseqformula "5"))
   (rule "replace_known_left" (formula "87") (term "0,0") (ifseqformula "57"))
    (builtin "One Step Simplification" (formula "87"))
   (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "6"))
   (rule "applyEq" (formula "58") (term "1,1,0,0,0") (ifseqformula "31"))
   (rule "replace_known_left" (formula "87") (term "0") (ifseqformula "58"))
    (builtin "One Step Simplification" (formula "87"))
   (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
   (rule "eqSymm" (formula "56"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "60"))
   (rule "notLeft" (formula "58"))
   (rule "notLeft" (formula "58"))
   (rule "applyEq" (formula "62") (term "0") (ifseqformula "9"))
   (rule "applyEq" (formula "60") (term "0") (ifseqformula "8"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "58") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "60"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "60"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "60"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "andLeft" (formula "58"))
   (rule "notLeft" (formula "59"))
   (rule "notLeft" (formula "58"))
   (rule "exLeft" (formula "63") (inst "sk=i_1"))
   (rule "andLeft" (formula "63"))
   (rule "andLeft" (formula "63"))
   (rule "exLeft" (formula "60") (inst "sk=i_2_1"))
   (rule "andLeft" (formula "60"))
   (rule "andLeft" (formula "60"))
   (rule "castedGetAny" (formula "64") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "63") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "59") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "67") (term "0"))
   (rule "castedGetAny" (formula "62") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "65"))
   (rule "inEqSimp_commuteLeq" (formula "60"))
   (rule "applyEqRigid" (formula "72") (term "0") (ifseqformula "58"))
   (rule "applyEq" (formula "63") (term "0,1,1,0,0") (ifseqformula "7"))
   (rule "applyEq" (formula "63") (term "0,0,0,1,0") (ifseqformula "7"))
   (rule "replace_known_left" (formula "110") (term "1,0,0") (ifseqformula "63"))
    (builtin "One Step Simplification" (formula "110"))
   (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "7"))
   (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "7"))
   (rule "commute_and" (formula "68") (term "0,0"))
   (rule "commute_and" (formula "68") (term "0,0,1,0"))
   (rule "commute_and" (formula "57") (term "1,0,0"))
   (rule "commute_and" (formula "56") (term "1,0,0"))
   (rule "commute_and" (formula "56") (term "0,0,0"))
   (rule "commute_and" (formula "57") (term "0,0,0"))
   (rule "methodBodyExpand" (formula "85") (term "1") (newnames "heapBefore_initPolyasVals_0,savedHeapBefore_initPolyasVals_0"))
    (builtin "One Step Simplification" (formula "85"))
   (rule "commute_and" (formula "64") (term "0,0"))
   (rule "commute_and" (formula "59") (term "0,0"))
   (rule "commute_and" (formula "63") (term "0,0"))
   (rule "commute_and_2" (formula "67") (term "0,1,0"))
   (rule "shift_paren_and" (formula "56") (term "0,0"))
   (rule "commute_and_2" (formula "56") (term "0,0,0"))
   (rule "shift_paren_and" (formula "56") (term "0,0"))
   (rule "commute_and_2" (formula "56") (term "0,0,0"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
   (rule "andLeft" (formula "7"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "applyEq" (formula "7") (term "0,1,1,0,0") (ifseqformula "8"))
   (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
   (rule "andLeft" (formula "6"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
   (rule "applyEq" (formula "7") (term "0,1,1,0,0") (ifseqformula "8"))
   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
   (rule "andLeft" (formula "5"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "applyEq" (formula "6") (term "0,1,1,0,0") (ifseqformula "7"))
   (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
    (builtin "Use Operation Contract" (formula "81") (newnames "heapBefore_initPolyasVals_addInputCols_0,exc_387,heapAfter_initPolyasVals_addInputCols_0,anon_heap_initPolyasVals_addInputCols_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addInputCols(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
   (branch "Post (initPolyasVals_addInputCols)"
       (builtin "One Step Simplification" (formula "85"))
       (builtin "One Step Simplification" (formula "66"))
       (builtin "One Step Simplification" (formula "67"))
       (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "87")) (ifInst ""  (formula "86")) (ifInst ""  (formula "51")) (ifInst ""  (formula "87")) (ifInst ""  (formula "54")) (ifInst ""  (formula "86")) (ifInst ""  (formula "55")))
      (rule "andLeft" (formula "66"))
      (rule "andLeft" (formula "69"))
      (rule "andLeft" (formula "67"))
      (rule "andLeft" (formula "71"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "72"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "70"))
      (rule "notLeft" (formula "68"))
      (rule "andLeft" (formula "70"))
      (rule "andLeft" (formula "70"))
      (rule "notLeft" (formula "70"))
      (rule "notLeft" (formula "70"))
      (rule "eqSymm" (formula "75") (term "1,0,1,0"))
      (rule "castedGetAny" (formula "75") (term "0,1,0,1,0"))
      (rule "castedGetAny" (formula "75") (term "1,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0"))
      (rule "applyEq" (formula "71") (term "5") (ifseqformula "67"))
      (rule "applyEq" (formula "75") (term "0,1,1,0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "75") (term "0,0,1,0,1,0") (ifseqformula "7"))
      (rule "applyEq" (formula "75") (term "0,1,1,0,0,1,0") (ifseqformula "5"))
      (rule "applyEq" (formula "75") (term "0,1,1,0,1,0") (ifseqformula "5"))
      (rule "pullOutSelect" (formula "68") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
      (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "68"))
      (rule "applyEq" (formula "78") (term "0") (ifseqformula "68"))
      (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "68"))
      (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "66"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "elementOfSingleton" (formula "68") (term "0,0"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "68"))
      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "68"))
      (rule "applyEqReverse" (formula "71") (term "0,0") (ifseqformula "68"))
      (rule "applyEqReverse" (formula "77") (term "1,0") (ifseqformula "68"))
      (rule "hideAuxiliaryEq" (formula "68"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "72") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "72") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "72") (term "1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "72") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "72") (term "1,0,1,0,0,1"))
      (rule "replace_int_MAX" (formula "72") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "72") (term "0,1,1,0,0,1,0"))
      (rule "andLeft" (formula "72"))
      (rule "andLeft" (formula "72"))
      (rule "eqSymm" (formula "72"))
      (rule "castedGetAny" (formula "74") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "73") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "74") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "73") (term "1,1,0,0"))
      (rule "applyEq" (formula "74") (term "1,1,0,0,0") (ifseqformula "72"))
      (rule "applyEq" (formula "72") (term "0,1") (ifseqformula "5"))
      (rule "applyEq" (formula "73") (term "0,1,1,0,0,0") (ifseqformula "5"))
      (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "6"))
      (rule "applyEq" (formula "73") (term "0,0,0,1,0") (ifseqformula "6"))
      (rule "applyEq" (formula "72") (term "0,0,0,1,0") (ifseqformula "5"))
      (rule "applyEq" (formula "73") (term "0,1,1,0,0,0") (ifseqformula "5"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "74"))
      (rule "andLeft" (formula "74"))
      (rule "notLeft" (formula "75"))
      (rule "andLeft" (formula "74"))
      (rule "notLeft" (formula "75"))
      (rule "notLeft" (formula "74"))
      (rule "applyEq" (formula "76") (term "0") (ifseqformula "8"))
      (rule "applyEq" (formula "76") (term "0") (ifseqformula "9"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "74") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
       (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")) (ifInst ""  (formula "80")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "82")) (ifInst ""  (formula "83")) (ifInst ""  (formula "84")) (ifInst ""  (formula "85")) (ifInst ""  (formula "86")) (ifInst ""  (formula "87")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
      (rule "andLeft" (formula "74"))
      (rule "andLeft" (formula "74"))
      (rule "andLeft" (formula "74"))
      (rule "andLeft" (formula "74"))
      (rule "andLeft" (formula "74"))
      (rule "notLeft" (formula "74"))
      (rule "exLeft" (formula "78") (inst "sk=i_2"))
      (rule "andLeft" (formula "78"))
      (rule "andLeft" (formula "78"))
      (rule "exLeft" (formula "75") (inst "sk=i_2_2"))
      (rule "andLeft" (formula "75"))
      (rule "andLeft" (formula "75"))
      (rule "castedGetAny" (formula "79") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "78") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "74") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "82") (term "0"))
      (rule "castedGetAny" (formula "77") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "80"))
      (rule "inEqSimp_commuteLeq" (formula "75"))
      (rule "applyEq" (formula "84") (term "0") (ifseqformula "56"))
      (rule "applyEq" (formula "81") (term "0,1") (ifseqformula "7"))
      (rule "applyEq" (formula "78") (term "0,0,0,1,0") (ifseqformula "7"))
      (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "78") (term "0,1,1,0,0") (ifseqformula "7"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "69"))
      (rule "andLeft" (formula "69"))
      (rule "andLeft" (formula "69"))
      (rule "notLeft" (formula "71"))
      (rule "notLeft" (formula "70"))
      (rule "notLeft" (formula "69"))
      (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")) (ifInst ""  (formula "56")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
      (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")) (ifInst ""  (formula "56")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
      (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")) (ifInst ""  (formula "56")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
      (rule "applyEqReverse" (formula "84") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "68"))
      (rule "true_left" (formula "68"))
      (rule "commute_and" (formula "81") (term "0,0"))
      (rule "commute_and" (formula "81") (term "0,0,1,0"))
      (rule "commute_and" (formula "71") (term "1,0,0"))
      (rule "commute_and" (formula "70") (term "1,0,0"))
      (rule "commute_and" (formula "70") (term "0,0,0"))
      (rule "commute_and" (formula "71") (term "0,0,0"))
      (rule "commute_and" (formula "77") (term "0,0"))
      (rule "commute_and" (formula "72") (term "0,0"))
      (rule "commute_and" (formula "75") (term "0,0"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
      (rule "andLeft" (formula "4"))
      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "applyEq" (formula "4") (term "0,1,1,0,0") (ifseqformula "5"))
      (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "lenNonNegative" (formula "128") (term "1,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
      (rule "andLeft" (formula "2"))
      (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "lenNonNegative" (formula "129") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
       (builtin "Use Operation Contract" (formula "101") (newnames "heapBefore_initPolyasVals_addDataForVoter,exc_388,heapAfter_initPolyasVals_addDataForVoter,anon_heap_initPolyasVals_addDataForVoter") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addDataForVoter(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
      (branch "Post (initPolyasVals_addDataForVoter)"
          (builtin "One Step Simplification" (formula "83"))
          (builtin "One Step Simplification" (formula "82"))
          (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "107")) (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "106")))
          (builtin "One Step Simplification" (formula "105"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,1") (ifseqformula "68"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,0,1") (ifseqformula "68"))
         (rule "replaceKnownSelect_taclet02_2" (formula "82") (term "0,1,0,0"))
         (rule "replaceKnownSelect_taclet02_2" (formula "84") (term "1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "82") (term "0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "84") (term "1,1,0,0"))
         (rule "replaceKnownSelect_taclet02_2" (formula "84") (term "0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "84") (term "0,0,0,0,0"))
         (rule "andLeft" (formula "82"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "87"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "88"))
         (rule "notLeft" (formula "85"))
         (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "56"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "true_left" (formula "88"))
         (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "57"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "true_left" (formula "88"))
         (rule "applyEq" (formula "88") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "88") (term "0") (ifseqformula "11"))
         (rule "applyEq" (formula "84") (term "5") (ifseqformula "83"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "86"))
         (rule "replaceKnownSelect_taclet02_4" (formula "86") (term "0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_5" (formula "86") (term "0,0,1"))
         (rule "replaceKnownSelect_taclet02_6" (formula "86") (term "0,0,1,0"))
         (rule "replaceKnownSelect_taclet02_8" (formula "86") (term "0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_7" (formula "86") (term "0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_9" (formula "86") (term "0,0,0,0"))
         (rule "andLeft" (formula "86"))
         (rule "andLeft" (formula "86"))
         (rule "notLeft" (formula "88"))
         (rule "notLeft" (formula "87"))
         (rule "notLeft" (formula "86"))
         (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "85"))
         (rule "true_left" (formula "85"))
         (rule "commute_and_2" (formula "80") (term "0,1,0"))
         (rule "shift_paren_and" (formula "72") (term "0,0"))
         (rule "shift_paren_and" (formula "73") (term "0,0"))
         (rule "lenNonNegative" (formula "61") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "61"))
         (rule "seqGetAlphaCast" (formula "63") (term "0"))
         (rule "castedGetAny" (formula "63") (term "0"))
          (builtin "One Step Simplification" (formula "63"))
         (rule "true_left" (formula "63"))
         (rule "seqGetAlphaCast" (formula "67") (term "0"))
         (rule "castedGetAny" (formula "67") (term "0"))
          (builtin "One Step Simplification" (formula "67"))
         (rule "true_left" (formula "67"))
         (rule "commute_and_2" (formula "73") (term "0,0,0"))
         (rule "commute_and_2" (formula "73") (term "0,0,0"))
         (rule "lenNonNegative" (formula "64") (term "1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "64"))
         (rule "methodCallEmpty" (formula "105") (term "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0") (ifseqformula "53"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "101"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "54"))
         (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "87"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "55"))
         (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "89"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "14"))
         (rule "tryEmpty" (formula "108") (term "1"))
         (rule "emptyModality" (formula "108") (term "1"))
         (rule "andRight" (formula "133"))
         (branch
            (rule "andRight" (formula "133"))
            (branch
               (rule "andRight" (formula "133"))
               (branch
                   (builtin "One Step Simplification" (formula "108"))
                  (rule "notRight" (formula "108"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "allRight" (formula "135") (inst "sk=i_3_0"))
                  (rule "impRight" (formula "135"))
                  (rule "notRight" (formula "136"))
                  (rule "andLeft" (formula "2"))
                  (rule "eqSymm" (formula "5"))
                  (rule "inEqSimp_ltToLeq" (formula "58"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "58") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "76"))
                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "76") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "84"))
                  (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "84") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "71"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "71") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "87"))
                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "87") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "141") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "141") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "107") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "92") (term "0") (ifseqformula "4"))
                  (rule "applyEq" (formula "102") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "112") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "68") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "6"))
                  (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "90"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "0,1,1,0,0") (ifseqformula "79"))
                  (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12") (term "0,0,0"))
                  (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "109") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "85") (term "1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "74") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "84") (term "1,1,0,0,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "72") (term "1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "111") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "110") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "73") (term "1,1,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "106") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
                  (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "90"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "replaceKnownSelect_taclet02_2" (formula "11") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "11") (term "2,0"))
                  (rule "elementOfSingleton" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,0,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "96")))
                  (rule "applyEqReverse" (formula "141") (term "0,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "141") (term "0,0,1,0,0,1,0,0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "141") (term "0,1,1,0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "eqSymm" (formula "139") (term "0"))
                  (rule "eqSymm" (formula "139") (term "1,0,1"))
                  (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "66") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "101") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "80") (term "0") (ifseqformula "4"))
                  (rule "applyEq" (formula "80") (term "4") (ifseqformula "4"))
                  (rule "applyEq" (formula "83") (term "1,1,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "90") (term "4") (ifseqformula "4"))
                  (rule "applyEq" (formula "106") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "103") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "102") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "68") (term "1,1,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "114") (term "0") (ifseqformula "4"))
                  (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "69") (term "1,1,0,0,1,0") (ifseqformula "4"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "56"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                  (rule "polySimp_elimOne" (formula "56") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                  (rule "polySimp_elimOne" (formula "48") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                  (rule "polySimp_elimOne" (formula "74") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                  (rule "applyEq" (formula "92") (term "0") (ifseqformula "16"))
                  (rule "applyEq" (formula "92") (term "0") (ifseqformula "18"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                  (rule "polySimp_elimOne" (formula "85") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                  (rule "polySimp_elimOne" (formula "82") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "137") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "137") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "137") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "137") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "137") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                  (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                  (rule "polySimp_elimOne" (formula "69") (term "0"))
                  (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                  (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                  (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "nnf_imp2or" (formula "50") (term "0"))
                  (rule "nnf_imp2or" (formula "59") (term "0"))
                  (rule "nnf_imp2or" (formula "45") (term "0"))
                  (rule "nnf_imp2or" (formula "52") (term "0"))
                  (rule "nnf_imp2or" (formula "72") (term "0"))
                  (rule "nnf_imp2or" (formula "66") (term "0"))
                  (rule "nnf_imp2or" (formula "137") (term "0,1"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_imp2or" (formula "42") (term "0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "59") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                  (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                  (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "45") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                  (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "72") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                  (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "72") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                  (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "66") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "137") (term "0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "137") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "137") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0,1"))
                  (rule "add_literals" (formula "137") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "137") (term "1,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                  (rule "commute_or_2" (formula "50") (term "0"))
                  (rule "commute_or_2" (formula "45") (term "0"))
                  (rule "commute_or" (formula "59") (term "0,0"))
                  (rule "commute_or_2" (formula "52") (term "0"))
                  (rule "commute_or_2" (formula "72") (term "0"))
                  (rule "commute_or_2" (formula "66") (term "0"))
                  (rule "commute_and" (formula "59") (term "0,0,1,0"))
                  (rule "seqGetAlphaCast" (formula "86") (term "0"))
                  (rule "castedGetAny" (formula "86") (term "0"))
                   (builtin "One Step Simplification" (formula "86"))
                  (rule "true_left" (formula "86"))
                  (rule "seqGetAlphaCast" (formula "1") (term "0"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or_2" (formula "42") (term "0"))
                  (rule "commute_or" (formula "50") (term "0,0"))
                  (rule "commute_or_2" (formula "50") (term "0"))
                  (rule "commute_or" (formula "45") (term "0,0"))
                  (rule "commute_or_2" (formula "45") (term "0"))
                  (rule "commute_or" (formula "52") (term "0,0"))
                  (rule "commute_or_2" (formula "52") (term "0"))
                  (rule "commute_or" (formula "72") (term "0,0"))
                  (rule "commute_or_2" (formula "72") (term "0"))
                  (rule "commute_or" (formula "66") (term "0,0"))
                  (rule "commute_or_2" (formula "66") (term "0"))
                  (rule "commute_or_2" (formula "41") (term "0,0"))
                  (rule "commute_or_2" (formula "42") (term "0,0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "14") (inst "iv=iv"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "lenNonNegative" (formula "71") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "71"))
                  (rule "lenNonNegative" (formula "8") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "8"))
                  (rule "commute_or" (formula "41") (term "0,0,0"))
                  (rule "commute_or_2" (formula "41") (term "0,0"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or" (formula "42") (term "0,0,0"))
                  (rule "commute_or_2" (formula "42") (term "0,0"))
                  (rule "commute_or_2" (formula "42") (term "0"))
                  (rule "seqGetAlphaCast" (formula "83") (term "0"))
                  (rule "castedGetAny" (formula "83") (term "0"))
                   (builtin "One Step Simplification" (formula "83"))
                  (rule "true_left" (formula "83"))
                  (rule "seqGetAlphaCast" (formula "70") (term "0"))
                  (rule "castedGetAny" (formula "70") (term "0"))
                   (builtin "One Step Simplification" (formula "70"))
                  (rule "true_left" (formula "70"))
                  (rule "lenNonNegative" (formula "68") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "68"))
                  (rule "commute_and_2" (formula "59") (term "0,1,0"))
                  (rule "allLeft" (formula "45") (inst "t=i_3_0"))
                  (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                  (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                  (rule "add_literals" (formula "45") (term "0,0,1"))
                  (rule "leq_literals" (formula "45") (term "0,1"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "45"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "108"))
                  (rule "notRight" (formula "108"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "2"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "139") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "139") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "84"))
                  (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "84") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "73"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "68"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "68") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "135") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "81"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "81") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                  (rule "applyEq" (formula "89") (term "4") (ifseqformula "1"))
                  (rule "applyEq" (formula "71") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "113") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "69") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,1,1,0,0") (ifseqformula "76"))
                  (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "eqSymm" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "92") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "108") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "81") (term "1,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "102") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "85") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "65") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "100") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "replaceKnownSelect_taclet02_2" (formula "8") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "8") (term "2,0"))
                  (rule "elementOfSingleton" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,0,1,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,2,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,0,0,1,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,0,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "93")) (ifInst ""  (formula "92")))
                  (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "9"))
                  (rule "applyEqReverse" (formula "138") (term "0,1,0") (ifseqformula "9"))
                  (rule "applyEqReverse" (formula "138") (term "0,0,1,0,0,1,0,0,1") (ifseqformula "9"))
                  (rule "applyEqReverse" (formula "138") (term "0,1,1,0,1") (ifseqformula "9"))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "eqSymm" (formula "136") (term "0"))
                  (rule "eqSymm" (formula "136") (term "1,0,1"))
                  (rule "applyEq" (formula "87") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "105") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "77") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "96") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "97") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "68") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "69") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "99") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "104") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "77") (term "4") (ifseqformula "1"))
                  (rule "applyEq" (formula "72") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "66") (term "1,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "102") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "101") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "63") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "103") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                  (rule "polySimp_elimOne" (formula "82") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                  (rule "polySimp_elimOne" (formula "71") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "132") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "132") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "132") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "132") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "132") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                  (rule "polySimp_elimOne" (formula "45") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                  (rule "applyEq" (formula "89") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                  (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                  (rule "polySimp_elimOne" (formula "79") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "135") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "135") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "135") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "135") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "135") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                  (rule "polySimp_elimOne" (formula "66") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                  (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                  (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                  (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "nnf_ex2all" (formula "131"))
                  (rule "nnf_imp2or" (formula "57") (term "0"))
                  (rule "nnf_imp2or" (formula "48") (term "0"))
                  (rule "nnf_imp2or" (formula "43") (term "0"))
                  (rule "nnf_imp2or" (formula "50") (term "0"))
                  (rule "nnf_imp2or" (formula "70") (term "0"))
                  (rule "nnf_imp2or" (formula "64") (term "0"))
                  (rule "nnf_imp2or" (formula "135") (term "0,1"))
                  (rule "nnf_imp2or" (formula "39") (term "0"))
                  (rule "nnf_imp2or" (formula "40") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "57") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                  (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                  (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "70") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                  (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "70") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                  (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "64") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                  (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "135") (term "0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "135") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "135") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "135") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "135") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "135") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "135") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "135") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "135") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "135") (term "1,0,0,0,0,0,1"))
                  (rule "add_literals" (formula "135") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "135") (term "1,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                  (rule "commute_or_2" (formula "48") (term "0"))
                  (rule "commute_or" (formula "57") (term "0,0"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "50") (term "0"))
                  (rule "commute_or_2" (formula "70") (term "0"))
                  (rule "commute_or_2" (formula "64") (term "0"))
                  (rule "commute_and" (formula "57") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "1") (term "0"))
                  (rule "seqGetAlphaCast" (formula "84") (term "0"))
                  (rule "castedGetAny" (formula "84") (term "0"))
                   (builtin "One Step Simplification" (formula "84"))
                  (rule "true_left" (formula "84"))
                  (rule "commute_or_2" (formula "39") (term "0"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "lenNonNegative" (formula "66") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "66"))
                  (rule "commute_or" (formula "48") (term "0,0"))
                  (rule "commute_or_2" (formula "48") (term "0"))
                  (rule "commute_or" (formula "43") (term "0,0"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or" (formula "50") (term "0,0"))
                  (rule "commute_or_2" (formula "50") (term "0"))
                  (rule "seqGetAlphaCast" (formula "81") (term "0"))
                  (rule "castedGetAny" (formula "81") (term "0"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "true_left" (formula "81"))
                  (rule "commute_or" (formula "70") (term "0,0"))
                  (rule "commute_or" (formula "64") (term "0,0"))
                  (rule "commute_or_2" (formula "70") (term "0"))
                  (rule "commute_or_2" (formula "64") (term "0"))
                  (rule "commute_or" (formula "1") (term "0,0"))
                  (rule "commute_or_2" (formula "39") (term "0,0"))
                  (rule "commute_or_2" (formula "40") (term "0,0"))
                  (rule "lenNonNegative" (formula "6") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "6"))
                  (rule "seqGetAlphaCast" (formula "68") (term "0"))
                  (rule "castedGetAny" (formula "68") (term "0"))
                   (builtin "One Step Simplification" (formula "68"))
                  (rule "true_left" (formula "68"))
                  (rule "lenNonNegative" (formula "69") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "69"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                  (rule "andLeft" (formula "12"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                  (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "commute_or" (formula "39") (term "0,0,0"))
                  (rule "commute_or" (formula "40") (term "0,0,0"))
                  (rule "commute_or_2" (formula "39") (term "0,0"))
                  (rule "commute_or_2" (formula "39") (term "0"))
                  (rule "commute_or_2" (formula "40") (term "0,0"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "commute_and_2" (formula "57") (term "0,1,0"))
                  (rule "ex_pull_out3" (formula "57") (term "0"))
                  (rule "cnf_rightDist" (formula "57") (term "0,0"))
                  (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                  (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                  (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                  (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "48"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "45"))
                  (rule "qeq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "47"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "108"))
               (rule "notRight" (formula "108"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "allRight" (formula "135") (inst "sk=i_0_0"))
               (rule "impRight" (formula "135"))
               (rule "notRight" (formula "136"))
               (rule "andLeft" (formula "2"))
               (rule "eqSymm" (formula "5"))
               (rule "inEqSimp_ltToLeq" (formula "58"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "58") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "50"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "50") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "76"))
               (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "76") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "84"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "84") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "71"))
               (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "71") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "87"))
               (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "87") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "141") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "141") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "applyEq" (formula "111") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "105") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "104") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "82") (term "0") (ifseqformula "4"))
               (rule "applyEq" (formula "92") (term "0") (ifseqformula "4"))
               (rule "applyEq" (formula "82") (term "4") (ifseqformula "4"))
               (rule "applyEq" (formula "68") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "73") (term "1,1,0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "103") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "102") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "94") (term "0") (ifseqformula "18"))
               (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "6"))
               (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "90"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "0,1,1,0,0") (ifseqformula "79"))
               (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "eqSymm" (formula "12") (term "0,0,0"))
               (rule "applyEq" (formula "68") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "77") (term "1,1") (ifseqformula "4"))
               (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
               (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "90"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "replaceKnownSelect_taclet02_2" (formula "11") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "11") (term "2,0"))
               (rule "elementOfSingleton" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "applyEqReverse" (formula "12") (term "1,0,0,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "applyEqReverse" (formula "140") (term "0,0,1,0,0,1,0,0,1") (ifseqformula "12"))
               (rule "applyEqReverse" (formula "140") (term "0,1,1,0,1") (ifseqformula "12"))
               (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "11"))
               (rule "applyEqReverse" (formula "140") (term "1,0,0,1,0,0,1,0,0,1") (ifseqformula "11"))
               (rule "applyEqReverse" (formula "140") (term "1,0,1,1,0,1") (ifseqformula "11"))
               (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "12"))
               (rule "applyEqReverse" (formula "140") (term "0,1,0") (ifseqformula "12"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "eqSymm" (formula "138") (term "1,0,1"))
               (rule "eqSymm" (formula "138") (term "0"))
               (rule "applyEq" (formula "69") (term "1,1,0,0,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "109") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "107") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "106") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "105") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "82") (term "1,1,0,0,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "103") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "4"))
               (rule "applyEq" (formula "83") (term "1,1,0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "104") (term "1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "72") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
               (rule "applyEq" (formula "68") (term "1,1,0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "113") (term "0") (ifseqformula "4"))
               (rule "applyEq" (formula "90") (term "4") (ifseqformula "4"))
               (rule "applyEq" (formula "83") (term "1,1") (ifseqformula "4"))
               (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "4"))
               (rule "inEqSimp_sepNegMonomial0" (formula "56"))
               (rule "polySimp_mulLiterals" (formula "56") (term "0"))
               (rule "polySimp_elimOne" (formula "56") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "48"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0"))
               (rule "polySimp_elimOne" (formula "48") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "74"))
               (rule "polySimp_mulLiterals" (formula "74") (term "0"))
               (rule "polySimp_elimOne" (formula "74") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
               (rule "applyEq" (formula "92") (term "0") (ifseqformula "18"))
               (rule "inEqSimp_sepNegMonomial0" (formula "85"))
               (rule "polySimp_mulLiterals" (formula "85") (term "0"))
               (rule "polySimp_elimOne" (formula "85") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
               (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "137") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "137") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "137") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "137") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "137") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "69"))
               (rule "polySimp_mulLiterals" (formula "69") (term "0"))
               (rule "polySimp_elimOne" (formula "69") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "82"))
               (rule "polySimp_mulLiterals" (formula "82") (term "0"))
               (rule "polySimp_elimOne" (formula "82") (term "0"))
               (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
               (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
               (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "nnf_imp2or" (formula "50") (term "0"))
               (rule "nnf_imp2or" (formula "59") (term "0"))
               (rule "nnf_imp2or" (formula "45") (term "0"))
               (rule "nnf_imp2or" (formula "52") (term "0"))
               (rule "nnf_imp2or" (formula "66") (term "0"))
               (rule "nnf_imp2or" (formula "72") (term "0"))
               (rule "nnf_imp2or" (formula "41") (term "0"))
               (rule "nnf_imp2or" (formula "137") (term "0,1"))
               (rule "nnf_imp2or" (formula "42") (term "0"))
               (rule "nnf_notAnd" (formula "50") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
               (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
               (rule "mul_literals" (formula "50") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "59") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
               (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
               (rule "mul_literals" (formula "59") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "45") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
               (rule "mul_literals" (formula "45") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "52") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
               (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
               (rule "mul_literals" (formula "52") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "66") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
               (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
               (rule "mul_literals" (formula "66") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "72") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
               (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
               (rule "mul_literals" (formula "72") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
               (rule "mul_literals" (formula "41") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
               (rule "mul_literals" (formula "42") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "137") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "137") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "137") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0,1"))
               (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0,1"))
               (rule "add_literals" (formula "137") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0,1"))
               (rule "mul_literals" (formula "137") (term "1,0,0,0,1"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
               (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
               (rule "commute_or_2" (formula "50") (term "0"))
               (rule "commute_or_2" (formula "45") (term "0"))
               (rule "commute_or" (formula "59") (term "0,0"))
               (rule "commute_or_2" (formula "52") (term "0"))
               (rule "commute_or_2" (formula "66") (term "0"))
               (rule "commute_or_2" (formula "72") (term "0"))
               (rule "commute_and" (formula "59") (term "0,0,1,0"))
               (rule "seqGetAlphaCast" (formula "86") (term "0"))
               (rule "castedGetAny" (formula "86") (term "0"))
                (builtin "One Step Simplification" (formula "86"))
               (rule "true_left" (formula "86"))
               (rule "seqGetAlphaCast" (formula "1") (term "0"))
               (rule "castedGetAny" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "commute_or_2" (formula "41") (term "0"))
               (rule "commute_or_2" (formula "42") (term "0"))
               (rule "commute_or" (formula "50") (term "0,0"))
               (rule "commute_or_2" (formula "50") (term "0"))
               (rule "commute_or" (formula "45") (term "0,0"))
               (rule "commute_or_2" (formula "45") (term "0"))
               (rule "commute_or" (formula "52") (term "0,0"))
               (rule "commute_or_2" (formula "52") (term "0"))
               (rule "commute_or" (formula "66") (term "0,0"))
               (rule "commute_or_2" (formula "66") (term "0"))
               (rule "commute_or" (formula "72") (term "0,0"))
               (rule "commute_or_2" (formula "72") (term "0"))
               (rule "lenNonNegative" (formula "71") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "71"))
               (rule "commute_or_2" (formula "41") (term "0,0"))
               (rule "commute_or_2" (formula "42") (term "0,0"))
               (rule "lenNonNegative" (formula "8") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "8"))
               (rule "seqGetAlphaCast" (formula "70") (term "0"))
               (rule "castedGetAny" (formula "70") (term "0"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "true_left" (formula "70"))
               (rule "commute_or" (formula "41") (term "0,0,0"))
               (rule "commute_or_2" (formula "41") (term "0,0"))
               (rule "commute_or_2" (formula "41") (term "0"))
               (rule "commute_or" (formula "42") (term "0,0,0"))
               (rule "commute_or_2" (formula "42") (term "0,0"))
               (rule "commute_or_2" (formula "42") (term "0"))
               (rule "seqGetAlphaCast" (formula "83") (term "0"))
               (rule "castedGetAny" (formula "83") (term "0"))
                (builtin "One Step Simplification" (formula "83"))
               (rule "true_left" (formula "83"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "14") (inst "iv=iv"))
               (rule "andLeft" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "applyEq" (formula "15") (term "0,0,1,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "lenNonNegative" (formula "68") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "68"))
               (rule "commute_and_2" (formula "59") (term "0,1,0"))
               (rule "ex_pull_out3" (formula "59") (term "0"))
               (rule "cnf_rightDist" (formula "59") (term "0,0"))
               (rule "shift_paren_or" (formula "59") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "59") (term "0,0,0"))
               (rule "commute_or_2" (formula "59") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "59") (term "1,0,0,0"))
               (rule "commute_or" (formula "59") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "52") (inst "t=i_0_0"))
               (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
               (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
               (rule "add_literals" (formula "52") (term "0,0,1"))
               (rule "leq_literals" (formula "52") (term "0,1"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_contradInEq1" (formula "52") (ifseqformula "2"))
               (rule "qeq_literals" (formula "52") (term "0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "closeFalse" (formula "52"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "108"))
            (rule "notRight" (formula "108"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "68"))
            (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "68") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "55"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "55") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "84"))
            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "84") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "139") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "139") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "81"))
            (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "81") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "135") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "73"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "73") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
            (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "69") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "3"))
            (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "87"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,1,1,0,0") (ifseqformula "76"))
            (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "eqSymm" (formula "9") (term "0,0,0"))
            (rule "applyEq" (formula "81") (term "1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "104") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
            (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "87"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "replaceKnownSelect_taclet02_2" (formula "8") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "8") (term "2,0"))
            (rule "elementOfSingleton" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
            (rule "applyEqReverse" (formula "9") (term "1,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "94")))
            (rule "applyEqReverse" (formula "139") (term "0,0,1,0,0,1,0,0,1") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "139") (term "0,1,1,0,1") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
            (rule "applyEqReverse" (formula "139") (term "1,0,0,1,0,0,1,0,0,1") (ifseqformula "8"))
            (rule "applyEqReverse" (formula "139") (term "0,1,0") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "5") (term "1,0,0") (ifseqformula "8"))
            (rule "applyEqReverse" (formula "139") (term "1,0,1,1,0,1") (ifseqformula "8"))
            (rule "hideAuxiliaryEq" (formula "8"))
            (rule "hideAuxiliaryEq" (formula "8"))
            (rule "eqSymm" (formula "137") (term "0"))
            (rule "eqSymm" (formula "137") (term "1,0,1"))
            (rule "applyEq" (formula "83") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "68") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "87") (term "4") (ifseqformula "1"))
            (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "97") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "98") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "106") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "105") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "72") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "77") (term "4") (ifseqformula "1"))
            (rule "applyEq" (formula "100") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "107") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "66") (term "1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "63") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "69") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "99") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "103") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "101") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "87") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "111") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "63") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "65") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "104") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "77") (term "0") (ifseqformula "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "45"))
            (rule "polySimp_mulLiterals" (formula "45") (term "0"))
            (rule "polySimp_elimOne" (formula "45") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "53"))
            (rule "polySimp_mulLiterals" (formula "53") (term "0"))
            (rule "polySimp_elimOne" (formula "53") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "82"))
            (rule "polySimp_mulLiterals" (formula "82") (term "0"))
            (rule "polySimp_elimOne" (formula "82") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "133") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "133") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "133") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "133") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "133") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "71"))
            (rule "polySimp_mulLiterals" (formula "71") (term "0"))
            (rule "polySimp_elimOne" (formula "71") (term "0"))
            (rule "applyEq" (formula "89") (term "0") (ifseqformula "13"))
            (rule "applyEq" (formula "89") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "79"))
            (rule "polySimp_mulLiterals" (formula "79") (term "0"))
            (rule "polySimp_elimOne" (formula "79") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "135") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "135") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "135") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "135") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "135") (term "1,1,1,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "66"))
            (rule "polySimp_mulLiterals" (formula "66") (term "0"))
            (rule "polySimp_elimOne" (formula "66") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
            (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
            (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
            (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "nnf_ex2all" (formula "131"))
            (rule "nnf_imp2or" (formula "48") (term "0"))
            (rule "nnf_imp2or" (formula "50") (term "0"))
            (rule "nnf_imp2or" (formula "57") (term "0"))
            (rule "nnf_imp2or" (formula "43") (term "0"))
            (rule "nnf_imp2or" (formula "70") (term "0"))
            (rule "nnf_imp2or" (formula "135") (term "0,1"))
            (rule "nnf_imp2or" (formula "64") (term "0"))
            (rule "nnf_imp2or" (formula "39") (term "0"))
            (rule "nnf_imp2or" (formula "40") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "48") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
            (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
            (rule "mul_literals" (formula "48") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "50") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
            (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
            (rule "mul_literals" (formula "50") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "57") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
            (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
            (rule "mul_literals" (formula "57") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "43") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
            (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
            (rule "mul_literals" (formula "43") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "70") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
            (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "70") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
            (rule "mul_literals" (formula "70") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "64") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
            (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
            (rule "mul_literals" (formula "64") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "39") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
            (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
            (rule "mul_literals" (formula "39") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "40") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
            (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
            (rule "mul_literals" (formula "40") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "135") (term "0,0,1"))
            (rule "inEqSimp_notLeq" (formula "135") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "135") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "135") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "135") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "135") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "135") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "135") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "135") (term "0,0,0,1"))
            (rule "times_zero_1" (formula "135") (term "1,0,0,0,0,0,1"))
            (rule "add_literals" (formula "135") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0,1"))
            (rule "mul_literals" (formula "135") (term "1,0,0,0,1"))
            (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
            (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
            (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
            (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
            (rule "commute_or_2" (formula "48") (term "0"))
            (rule "commute_or_2" (formula "50") (term "0"))
            (rule "commute_or_2" (formula "43") (term "0"))
            (rule "commute_or" (formula "57") (term "0,0"))
            (rule "commute_or_2" (formula "70") (term "0"))
            (rule "commute_or_2" (formula "64") (term "0"))
            (rule "commute_and" (formula "57") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "1") (term "0"))
            (rule "seqGetAlphaCast" (formula "84") (term "0"))
            (rule "castedGetAny" (formula "84") (term "0"))
             (builtin "One Step Simplification" (formula "84"))
            (rule "true_left" (formula "84"))
            (rule "commute_or_2" (formula "39") (term "0"))
            (rule "commute_or_2" (formula "40") (term "0"))
            (rule "seqGetAlphaCast" (formula "81") (term "0"))
            (rule "castedGetAny" (formula "81") (term "0"))
             (builtin "One Step Simplification" (formula "81"))
            (rule "true_left" (formula "81"))
            (rule "commute_or" (formula "48") (term "0,0"))
            (rule "commute_or_2" (formula "48") (term "0"))
            (rule "commute_or" (formula "50") (term "0,0"))
            (rule "commute_or_2" (formula "50") (term "0"))
            (rule "commute_or" (formula "43") (term "0,0"))
            (rule "commute_or_2" (formula "43") (term "0"))
            (rule "commute_or" (formula "70") (term "0,0"))
            (rule "commute_or_2" (formula "70") (term "0"))
            (rule "commute_or" (formula "64") (term "0,0"))
            (rule "commute_or_2" (formula "64") (term "0"))
            (rule "commute_or" (formula "1") (term "0,0"))
            (rule "lenNonNegative" (formula "6") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "commute_or_2" (formula "39") (term "0,0"))
            (rule "commute_or_2" (formula "40") (term "0,0"))
            (rule "lenNonNegative" (formula "69") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "69"))
            (rule "seqGetAlphaCast" (formula "68") (term "0"))
            (rule "castedGetAny" (formula "68") (term "0"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "true_left" (formula "68"))
            (rule "lenNonNegative" (formula "66") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "66"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
            (rule "andLeft" (formula "12"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "commute_or" (formula "39") (term "0,0,0"))
            (rule "commute_or" (formula "40") (term "0,0,0"))
            (rule "commute_or_2" (formula "39") (term "0,0"))
            (rule "commute_or_2" (formula "39") (term "0"))
            (rule "commute_or_2" (formula "40") (term "0,0"))
            (rule "commute_or_2" (formula "40") (term "0"))
            (rule "commute_and_2" (formula "57") (term "0,1,0"))
            (rule "ex_pull_out3" (formula "57") (term "0"))
            (rule "cnf_rightDist" (formula "57") (term "0,0"))
            (rule "shift_paren_or" (formula "57") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
            (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
            (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
            (rule "allLeft" (formula "1") (inst "t=i_0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "52"))
            (rule "qeq_literals" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "55"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_literals" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (initPolyasVals_addDataForVoter)"
          (builtin "One Step Simplification" (formula "103"))
          (builtin "One Step Simplification" (formula "82"))
         (rule "replaceKnownSelect_taclet02_2" (formula "82") (term "0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "82") (term "0,1,0,0"))
         (rule "andLeft" (formula "82"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "1,0") (ifseqformula "82"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,1,0") (ifseqformula "68"))
         (rule "andLeft" (formula "83"))
         (rule "andLeft" (formula "83"))
         (rule "notLeft" (formula "83"))
         (rule "close" (formula "85") (ifseqformula "84"))
      )
      (branch "Pre (initPolyasVals_addDataForVoter)"
         (rule "andRight" (formula "126"))
         (branch
            (rule "andRight" (formula "126"))
            (branch
               (rule "andRight" (formula "126"))
               (branch
                   (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "103")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "102")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,1") (ifseqformula "68"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,0,1") (ifseqformula "68"))
                  (rule "wellFormedAnonEQ" (formula "101") (term "0,0,1") (ifseqformula "68"))
                  (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "1,1,0,0"))
                  (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "0,0,0,0,0"))
                  (rule "allRight" (formula "126") (inst "sk=i_3_0"))
                  (rule "impRight" (formula "126"))
                  (rule "andLeft" (formula "1"))
                  (rule "notRight" (formula "128"))
                  (rule "replace_known_left" (formula "104") (term "0,1,1") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "87")) (ifInst ""  (formula "56")) (ifInst ""  (formula "70")) (ifInst ""  (formula "59")))
                  (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "78"))
                  (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "78") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "132") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "81"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "81") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "68") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "52") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                  (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                  (rule "polySimp_elimOne" (formula "78") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "132") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "132") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "132") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "132") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "132") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                  (rule "polySimp_elimOne" (formula "44") (term "0"))
                  (rule "applyEq" (formula "84") (term "0") (ifseqformula "13"))
                  (rule "applyEq" (formula "84") (term "0") (ifseqformula "14"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                  (rule "polySimp_elimOne" (formula "64") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                  (rule "polySimp_elimOne" (formula "81") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                  (rule "polySimp_elimOne" (formula "68") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "83") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                  (rule "polySimp_elimOne" (formula "52") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                  (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                  (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "nnf_imp2or" (formula "76") (term "0"))
                  (rule "nnf_imp2or" (formula "62") (term "0"))
                  (rule "nnf_imp2or" (formula "130") (term "0,1"))
                  (rule "nnf_imp2or" (formula "75") (term "0"))
                  (rule "nnf_imp2or" (formula "48") (term "0"))
                  (rule "nnf_imp2or" (formula "55") (term "0"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_imp2or" (formula "66") (term "0"))
                  (rule "nnf_imp2or" (formula "83") (term "0"))
                  (rule "nnf_imp2or" (formula "46") (term "0"))
                  (rule "nnf_imp2or" (formula "37") (term "0"))
                  (rule "nnf_imp2or" (formula "38") (term "0"))
                  (rule "nnf_notAnd" (formula "76") (term "0,0"))
                  (rule "nnf_notAnd" (formula "62") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                  (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                  (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "75") (term "0,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "55") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                  (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                  (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "66") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                  (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "83") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "83") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "83") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "83") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "83") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "83") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "83") (term "1,0,0"))
                  (rule "mul_literals" (formula "83") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "83") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0"))
                  (rule "mul_literals" (formula "83") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "46") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                  (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "130") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "130") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "130") (term "1,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "130") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "130") (term "1,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "130") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "130") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "130") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "130") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "130") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "130") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,1"))
                  (rule "nnf_notAnd" (formula "76") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "76") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "76") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "76") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "76") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "76") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "76") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "76") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "76") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "76") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "76") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "76") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "76") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "76") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "76") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "75") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "75") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "75") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "75") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "75") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "75") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "75") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "75") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "75") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,1,0,0,0"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "102") (term "1"))
                  (rule "replaceKnownSelect_taclet02_4" (formula "102") (term "0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_5" (formula "102") (term "0,0,1,1"))
                  (rule "replaceKnownSelect_taclet02_8" (formula "102") (term "0,0,0,0,1"))
                  (rule "replaceKnownSelect_taclet02_6" (formula "102") (term "0,0,1,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_9" (formula "102") (term "0,0,0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_7" (formula "102") (term "0,0,1,0,1"))
                  (rule "replace_known_right" (formula "102") (term "0,0,0,1") (ifseqformula "101"))
                   (builtin "One Step Simplification" (formula "102"))
                  (rule "applyEq" (formula "102") (term "0,0,0,1") (ifseqformula "13"))
                  (rule "replace_known_right" (formula "102") (term "0,0,1") (ifseqformula "125"))
                   (builtin "One Step Simplification" (formula "102"))
                  (rule "applyEq" (formula "102") (term "0,0,1") (ifseqformula "14"))
                  (rule "replace_known_right" (formula "102") (term "0,1") (ifseqformula "126"))
                   (builtin "One Step Simplification" (formula "102"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                  (rule "commute_or_2" (formula "62") (term "0"))
                  (rule "commute_or_2" (formula "48") (term "0"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or" (formula "55") (term "0,0"))
                  (rule "commute_or_2" (formula "66") (term "0"))
                  (rule "commute_and_2" (formula "83") (term "0,1,0"))
                  (rule "commute_and" (formula "55") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or" (formula "83") (term "0,0"))
                  (rule "seqGetAlphaCast" (formula "82") (term "0"))
                  (rule "castedGetAny" (formula "82") (term "0"))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "true_left" (formula "82"))
                  (rule "seqGetAlphaCast" (formula "79") (term "0"))
                  (rule "castedGetAny" (formula "79") (term "0"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "true_left" (formula "79"))
                  (rule "seqGetAlphaCast" (formula "65") (term "0"))
                  (rule "castedGetAny" (formula "65") (term "0"))
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "true_left" (formula "65"))
                  (rule "seqGetAlphaCast" (formula "69") (term "0"))
                  (rule "castedGetAny" (formula "69") (term "0"))
                   (builtin "One Step Simplification" (formula "69"))
                  (rule "true_left" (formula "69"))
                  (rule "seqGetAlphaCast" (formula "1") (term "0"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "102"))
                  (rule "closeTrue" (formula "102"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "103")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "102")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,1") (ifseqformula "68"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,0,1") (ifseqformula "68"))
                  (rule "wellFormedAnonEQ" (formula "101") (term "0,0,1") (ifseqformula "68"))
                  (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "1,1,0,0"))
                  (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "0,0,0,0,0"))
                  (rule "replace_known_left" (formula "101") (term "0,1,1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "84")) (ifInst ""  (formula "53")) (ifInst ""  (formula "67")) (ifInst ""  (formula "56")))
                  (rule "inEqSimp_ltToLeq" (formula "78"))
                  (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "78") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "75"))
                  (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "75") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "65"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "126") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "130") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                  (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                  (rule "polySimp_elimOne" (formula "78") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                  (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                  (rule "polySimp_elimOne" (formula "75") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                  (rule "polySimp_elimOne" (formula "49") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                  (rule "polySimp_elimOne" (formula "65") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "126") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "126") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "126") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "126") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "126") (term "1,1,1,0,0"))
                  (rule "applyEq" (formula "82") (term "0") (ifseqformula "11"))
                  (rule "applyEq" (formula "81") (term "0") (ifseqformula "10"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "128") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "128") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "128") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "128") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "128") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "80") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                  (rule "polySimp_elimOne" (formula "41") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                  (rule "polySimp_elimOne" (formula "61") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                  (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                  (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "nnf_ex2all" (formula "124"))
                  (rule "nnf_imp2or" (formula "39") (term "0"))
                  (rule "nnf_imp2or" (formula "60") (term "0"))
                  (rule "nnf_imp2or" (formula "46") (term "0"))
                  (rule "nnf_imp2or" (formula "53") (term "0"))
                  (rule "nnf_imp2or" (formula "128") (term "0,1"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "nnf_imp2or" (formula "81") (term "0"))
                  (rule "nnf_imp2or" (formula "73") (term "0"))
                  (rule "nnf_imp2or" (formula "64") (term "0"))
                  (rule "nnf_imp2or" (formula "74") (term "0"))
                  (rule "nnf_imp2or" (formula "36") (term "0"))
                  (rule "nnf_imp2or" (formula "35") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "60") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                  (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                  (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "46") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                  (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "81") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "81") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "81") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0"))
                  (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "81") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
                  (rule "mul_literals" (formula "81") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0"))
                  (rule "nnf_notAnd" (formula "64") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                  (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "74") (term "0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "128") (term "0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "128") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "128") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "128") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "128") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "128") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "128") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "128") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "128") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "128") (term "1,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "128") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "128") (term "1,0,0,0,1"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "100") (term "0"))
                   (builtin "One Step Simplification" (formula "100"))
                  (rule "nnf_notAnd" (formula "73") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "73") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "74") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "74") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "74") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "74") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "74") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "74") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "74") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "74") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "74") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "74") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "74") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "74") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "74") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "74") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                  (rule "commute_or_2" (formula "39") (term "0"))
                  (rule "commute_or_2" (formula "60") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_and_2" (formula "81") (term "0,1,0"))
                  (rule "commute_or_2" (formula "44") (term "0"))
                  (rule "commute_or" (formula "53") (term "0,0"))
                  (rule "commute_and" (formula "53") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "64") (term "0"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "99"))
                  (rule "replaceKnownSelect_taclet02_4" (formula "99") (term "0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_5" (formula "99") (term "0,0,1"))
                  (rule "replaceKnownSelect_taclet02_6" (formula "99") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet02_8" (formula "99") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_7" (formula "99") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet02_9" (formula "99") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "98"))
                   (builtin "One Step Simplification" (formula "99"))
                  (rule "applyEq" (formula "99") (term "0,0,1") (ifseqformula "12"))
                  (rule "replace_known_right" (formula "99") (term "0,1") (ifseqformula "123"))
                   (builtin "One Step Simplification" (formula "99"))
                  (rule "notRight" (formula "99"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                  (rule "close" (formula "122") (ifseqformula "1"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "103")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "102")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,1") (ifseqformula "68"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,0,1") (ifseqformula "68"))
               (rule "wellFormedAnonEQ" (formula "101") (term "0,0,1") (ifseqformula "68"))
               (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "1,1,0,0"))
               (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "0,0,0,0,0"))
               (rule "allRight" (formula "126") (inst "sk=i_0_0"))
               (rule "impRight" (formula "126"))
               (rule "andLeft" (formula "1"))
               (rule "notRight" (formula "128"))
               (rule "replace_known_left" (formula "104") (term "0,1,1") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "87")) (ifInst ""  (formula "56")) (ifInst ""  (formula "70")) (ifInst ""  (formula "59")))
               (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "78"))
               (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "78") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "132") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "44"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "44") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "64"))
               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "81"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "81") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "68"))
               (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "68") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "52"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "52") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "78"))
               (rule "polySimp_mulLiterals" (formula "78") (term "0"))
               (rule "polySimp_elimOne" (formula "78") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "132") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "132") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "132") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "132") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "132") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
               (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
               (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
               (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
               (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "44"))
               (rule "polySimp_mulLiterals" (formula "44") (term "0"))
               (rule "polySimp_elimOne" (formula "44") (term "0"))
               (rule "applyEq" (formula "85") (term "0") (ifseqformula "14"))
               (rule "applyEq" (formula "84") (term "0") (ifseqformula "13"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "64"))
               (rule "polySimp_mulLiterals" (formula "64") (term "0"))
               (rule "polySimp_elimOne" (formula "64") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "81"))
               (rule "polySimp_mulLiterals" (formula "81") (term "0"))
               (rule "polySimp_elimOne" (formula "81") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
               (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "68"))
               (rule "polySimp_mulLiterals" (formula "68") (term "0"))
               (rule "polySimp_elimOne" (formula "68") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "83") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "52"))
               (rule "polySimp_mulLiterals" (formula "52") (term "0"))
               (rule "polySimp_elimOne" (formula "52") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
               (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
               (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "nnf_imp2or" (formula "76") (term "0"))
               (rule "nnf_imp2or" (formula "62") (term "0"))
               (rule "nnf_imp2or" (formula "130") (term "0,1"))
               (rule "nnf_imp2or" (formula "75") (term "0"))
               (rule "nnf_imp2or" (formula "48") (term "0"))
               (rule "nnf_imp2or" (formula "55") (term "0"))
               (rule "nnf_imp2or" (formula "41") (term "0"))
               (rule "nnf_imp2or" (formula "66") (term "0"))
               (rule "nnf_imp2or" (formula "83") (term "0"))
               (rule "nnf_imp2or" (formula "46") (term "0"))
               (rule "nnf_imp2or" (formula "37") (term "0"))
               (rule "nnf_imp2or" (formula "38") (term "0"))
               (rule "nnf_notAnd" (formula "76") (term "0,0"))
               (rule "nnf_notAnd" (formula "62") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
               (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
               (rule "mul_literals" (formula "62") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "75") (term "0,0"))
               (rule "nnf_notAnd" (formula "48") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
               (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
               (rule "mul_literals" (formula "48") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "55") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
               (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
               (rule "mul_literals" (formula "55") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
               (rule "mul_literals" (formula "41") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "66") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
               (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
               (rule "mul_literals" (formula "66") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "83") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "83") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "83") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "83") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "83") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "83") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "83") (term "1,0,0"))
               (rule "mul_literals" (formula "83") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "83") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0"))
               (rule "mul_literals" (formula "83") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "46") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
               (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
               (rule "mul_literals" (formula "46") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "37") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
               (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
               (rule "mul_literals" (formula "37") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "38") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
               (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
               (rule "mul_literals" (formula "38") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "130") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "130") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "130") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "130") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0,1"))
               (rule "mul_literals" (formula "130") (term "1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "130") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "130") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "130") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "130") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "130") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "130") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,1"))
               (rule "nnf_notAnd" (formula "76") (term "1,0,0"))
               (rule "inEqSimp_notGeq" (formula "76") (term "0,1,0,0"))
               (rule "mul_literals" (formula "76") (term "1,0,0,0,1,0,0"))
               (rule "add_literals" (formula "76") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,1,0,0"))
               (rule "mul_literals" (formula "76") (term "1,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "76") (term "1,1,0,0"))
               (rule "mul_literals" (formula "76") (term "1,0,0,1,1,0,0"))
               (rule "add_literals" (formula "76") (term "0,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "1,1,0,0"))
               (rule "mul_literals" (formula "76") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "76") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0,0"))
               (rule "mul_literals" (formula "76") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "76") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0"))
               (rule "mul_literals" (formula "76") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "76") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "76") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "75") (term "1,0,0"))
               (rule "inEqSimp_notLeq" (formula "75") (term "1,1,0,0"))
               (rule "mul_literals" (formula "75") (term "1,0,0,1,1,0,0"))
               (rule "add_literals" (formula "75") (term "0,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "1,1,0,0"))
               (rule "mul_literals" (formula "75") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "75") (term "0,1,0,0"))
               (rule "mul_literals" (formula "75") (term "1,0,0,0,1,0,0"))
               (rule "add_literals" (formula "75") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,1,0,0"))
               (rule "mul_literals" (formula "75") (term "1,0,1,0,0"))
               (rule "nnf_notAnd" (formula "75") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "75") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "75") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0,0"))
               (rule "mul_literals" (formula "75") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "75") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0,0"))
               (rule "mul_literals" (formula "75") (term "1,1,0,0,0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "102") (term "1"))
               (rule "replaceKnownSelect_taclet02_4" (formula "102") (term "0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02_5" (formula "102") (term "0,0,1,1"))
               (rule "replaceKnownSelect_taclet02_6" (formula "102") (term "0,0,1,0,1"))
               (rule "replaceKnownSelect_taclet02_8" (formula "102") (term "0,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02_7" (formula "102") (term "0,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02_9" (formula "102") (term "0,0,0,0,1"))
               (rule "replace_known_right" (formula "102") (term "0,0,0,1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "102"))
               (rule "applyEq" (formula "102") (term "0,0,1,1") (ifseqformula "14"))
               (rule "replace_known_right" (formula "102") (term "0,1,1") (ifseqformula "126"))
                (builtin "One Step Simplification" (formula "102"))
               (rule "applyEq" (formula "102") (term "0,0,1") (ifseqformula "13"))
               (rule "replace_known_right" (formula "102") (term "0,1") (ifseqformula "125"))
                (builtin "One Step Simplification" (formula "102"))
               (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
               (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
               (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
               (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
               (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
               (rule "commute_or_2" (formula "62") (term "0"))
               (rule "commute_or_2" (formula "48") (term "0"))
               (rule "commute_or_2" (formula "41") (term "0"))
               (rule "commute_or" (formula "55") (term "0,0"))
               (rule "commute_and_2" (formula "83") (term "0,1,0"))
               (rule "commute_or_2" (formula "66") (term "0"))
               (rule "commute_and" (formula "55") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "46") (term "0"))
               (rule "commute_or" (formula "83") (term "0,0"))
               (rule "seqGetAlphaCast" (formula "65") (term "0"))
               (rule "castedGetAny" (formula "65") (term "0"))
                (builtin "One Step Simplification" (formula "65"))
               (rule "true_left" (formula "65"))
               (rule "seqGetAlphaCast" (formula "82") (term "0"))
               (rule "castedGetAny" (formula "82") (term "0"))
                (builtin "One Step Simplification" (formula "82"))
               (rule "true_left" (formula "82"))
               (rule "seqGetAlphaCast" (formula "69") (term "0"))
               (rule "castedGetAny" (formula "69") (term "0"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "true_left" (formula "69"))
               (rule "seqGetAlphaCast" (formula "79") (term "0"))
               (rule "castedGetAny" (formula "79") (term "0"))
                (builtin "One Step Simplification" (formula "79"))
               (rule "true_left" (formula "79"))
               (rule "seqGetAlphaCast" (formula "1") (term "0"))
               (rule "castedGetAny" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "102"))
               (rule "closeTrue" (formula "102"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "103")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "102")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,1") (ifseqformula "68"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,0,1") (ifseqformula "68"))
            (rule "wellFormedAnonEQ" (formula "101") (term "0,0,1") (ifseqformula "68"))
            (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "1,1,0,0"))
            (rule "replaceKnownSelect_taclet02_2" (formula "101") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet02_3" (formula "101") (term "0,0,0,0,0"))
            (rule "replace_known_left" (formula "101") (term "0,0,0,1") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "84")) (ifInst ""  (formula "67")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
            (rule "inEqSimp_ltToLeq" (formula "78"))
            (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "78") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "49"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "49") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "75"))
            (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "75") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "126") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "130") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "65"))
            (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "65") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "61"))
            (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "61") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "41"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "41") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,0"))
            (rule "applyEq" (formula "81") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_sepNegMonomial0" (formula "78"))
            (rule "polySimp_mulLiterals" (formula "78") (term "0"))
            (rule "polySimp_elimOne" (formula "78") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
            (rule "polySimp_elimOne" (formula "49") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "75"))
            (rule "polySimp_mulLiterals" (formula "75") (term "0"))
            (rule "polySimp_elimOne" (formula "75") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
            (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "80") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0,1,0"))
            (rule "applyEq" (formula "81") (term "0") (ifseqformula "11"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "124") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "124") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "124") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "124") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "124") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "128") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "128") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "128") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "128") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "128") (term "1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "65"))
            (rule "polySimp_mulLiterals" (formula "65") (term "0"))
            (rule "polySimp_elimOne" (formula "65") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "61"))
            (rule "polySimp_mulLiterals" (formula "61") (term "0"))
            (rule "polySimp_elimOne" (formula "61") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "41"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0"))
            (rule "polySimp_elimOne" (formula "41") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
            (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
            (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "nnf_imp2or" (formula "59") (term "0"))
            (rule "nnf_ex2all" (formula "124"))
            (rule "nnf_imp2or" (formula "46") (term "0"))
            (rule "nnf_imp2or" (formula "44") (term "0"))
            (rule "nnf_imp2or" (formula "73") (term "0"))
            (rule "nnf_imp2or" (formula "64") (term "0"))
            (rule "nnf_imp2or" (formula "81") (term "0"))
            (rule "nnf_imp2or" (formula "128") (term "0,1"))
            (rule "nnf_imp2or" (formula "39") (term "0"))
            (rule "nnf_imp2or" (formula "53") (term "0"))
            (rule "nnf_imp2or" (formula "74") (term "0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_imp2or" (formula "36") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "60") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
            (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "60") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
            (rule "mul_literals" (formula "60") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "46") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
            (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
            (rule "mul_literals" (formula "46") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "44") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
            (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
            (rule "mul_literals" (formula "44") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "73") (term "0,0"))
            (rule "nnf_notAnd" (formula "64") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
            (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
            (rule "mul_literals" (formula "64") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "81") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0"))
            (rule "times_zero_1" (formula "81") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "81") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
            (rule "mul_literals" (formula "81") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "81") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "81") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "39") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
            (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
            (rule "mul_literals" (formula "39") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "53") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
            (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
            (rule "mul_literals" (formula "53") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "74") (term "0,0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "36") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "128") (term "0,0,1"))
            (rule "inEqSimp_notLeq" (formula "128") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "128") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "128") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "128") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "128") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "128") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "128") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "128") (term "0,0,0,1"))
            (rule "mul_literals" (formula "128") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "128") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0,1"))
            (rule "mul_literals" (formula "128") (term "1,0,0,0,1"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "100") (term "0"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "nnf_notAnd" (formula "73") (term "1,0,0"))
            (rule "inEqSimp_notLeq" (formula "73") (term "1,1,0,0"))
            (rule "mul_literals" (formula "73") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "73") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,1,0,0"))
            (rule "mul_literals" (formula "73") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "73") (term "0,1,0,0"))
            (rule "mul_literals" (formula "73") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "73") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,1,0,0"))
            (rule "mul_literals" (formula "73") (term "1,0,1,0,0"))
            (rule "nnf_notAnd" (formula "73") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "73") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "73") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0,0"))
            (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "73") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
            (rule "mul_literals" (formula "73") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "74") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "74") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "74") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0,0"))
            (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "74") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0"))
            (rule "mul_literals" (formula "74") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "74") (term "1,0,0"))
            (rule "inEqSimp_notGeq" (formula "74") (term "0,1,0,0"))
            (rule "mul_literals" (formula "74") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "74") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,1,0,0"))
            (rule "mul_literals" (formula "74") (term "1,0,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "74") (term "1,1,0,0"))
            (rule "mul_literals" (formula "74") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "74") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,1,0,0"))
            (rule "mul_literals" (formula "74") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
            (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
            (rule "commute_or_2" (formula "60") (term "0"))
            (rule "commute_or_2" (formula "46") (term "0"))
            (rule "commute_or_2" (formula "44") (term "0"))
            (rule "commute_or_2" (formula "64") (term "0"))
            (rule "commute_and_2" (formula "81") (term "0,1,0"))
            (rule "commute_or_2" (formula "39") (term "0"))
            (rule "commute_and" (formula "53") (term "0,0,1,0"))
            (rule "commute_or" (formula "53") (term "0,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "99"))
            (rule "replaceKnownSelect_taclet02_4" (formula "99") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet02_5" (formula "99") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet02_6" (formula "99") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet02_8" (formula "99") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet02_7" (formula "99") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet02_9" (formula "99") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "98"))
             (builtin "One Step Simplification" (formula "99"))
            (rule "applyEq" (formula "99") (term "0,0,0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "99") (term "0,0") (ifseqformula "122"))
             (builtin "One Step Simplification" (formula "99"))
            (rule "notRight" (formula "99"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
            (rule "close" (formula "123") (ifseqformula "1"))
         )
      )
   )
   (branch "Exceptional Post (initPolyasVals_addInputCols)"
       (builtin "One Step Simplification" (formula "66"))
       (builtin "One Step Simplification" (formula "83"))
      (rule "andLeft" (formula "66"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0") (ifseqformula "66"))
      (rule "andLeft" (formula "67"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "67"))
      (rule "andLeft" (formula "69"))
      (rule "notLeft" (formula "67"))
      (rule "close" (formula "71") (ifseqformula "70"))
   )
   (branch "Pre (initPolyasVals_addInputCols)"
      (rule "andRight" (formula "106"))
      (branch "Case 1"
         (rule "andRight" (formula "106"))
         (branch
            (rule "andRight" (formula "106"))
            (branch
                (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "83")) (ifInst ""  (formula "82")) (ifInst ""  (formula "51")) (ifInst ""  (formula "83")) (ifInst ""  (formula "54")) (ifInst ""  (formula "82")) (ifInst ""  (formula "55")))
               (rule "allRight" (formula "106") (inst "sk=i_3_0"))
               (rule "impRight" (formula "106"))
               (rule "andLeft" (formula "1"))
               (rule "notRight" (formula "108"))
               (rule "eqSymm" (formula "84") (term "1,0,1,0,1,1,1"))
               (rule "castedGetAny" (formula "84") (term "1,1,0,1,0,1,1,1"))
               (rule "castedGetAny" (formula "84") (term "0,1,0,1,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "66"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "50"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "50") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "42"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "42") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "62"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,1,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,1,1"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,1,0,1,1,1") (ifseqformula "10"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,1,0,1,1,1") (ifseqformula "8"))
               (rule "applyEq" (formula "84") (term "0,1,1,0,1,0,1,1,1") (ifseqformula "8"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,1,1,1") (ifseqformula "10"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "66"))
               (rule "polySimp_mulLiterals" (formula "66") (term "0"))
               (rule "polySimp_elimOne" (formula "66") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
               (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
               (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "50"))
               (rule "polySimp_mulLiterals" (formula "50") (term "0"))
               (rule "polySimp_elimOne" (formula "50") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "112") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "42"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0"))
               (rule "polySimp_elimOne" (formula "42") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "62"))
               (rule "polySimp_mulLiterals" (formula "62") (term "0"))
               (rule "polySimp_elimOne" (formula "62") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,1,0,1,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,1,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,1,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,1,1,1"))
               (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
               (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
               (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "nnf_imp2or" (formula "64") (term "0"))
               (rule "nnf_imp2or" (formula "44") (term "0"))
               (rule "nnf_imp2or" (formula "60") (term "0"))
               (rule "nnf_imp2or" (formula "39") (term "0"))
               (rule "nnf_imp2or" (formula "46") (term "0"))
               (rule "nnf_imp2or" (formula "112") (term "0,1"))
               (rule "nnf_imp2or" (formula "53") (term "0"))
               (rule "nnf_imp2or" (formula "35") (term "0"))
               (rule "nnf_imp2or" (formula "36") (term "0"))
               (rule "nnf_notAnd" (formula "64") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
               (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
               (rule "mul_literals" (formula "64") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "44") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
               (rule "mul_literals" (formula "44") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "60") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
               (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
               (rule "mul_literals" (formula "60") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "39") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
               (rule "mul_literals" (formula "39") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "46") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
               (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
               (rule "mul_literals" (formula "46") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "53") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
               (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
               (rule "mul_literals" (formula "53") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "35") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
               (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
               (rule "mul_literals" (formula "35") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "36") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
               (rule "mul_literals" (formula "36") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "84") (term "0,1,1,1"))
               (rule "nnf_notAnd" (formula "112") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "112") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "112") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "112") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0,1"))
               (rule "mul_literals" (formula "112") (term "1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "112") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "112") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "112") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "112") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "112") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,1"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "84") (term "0,1,1") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "93")) (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "79")) (ifInst ""  (formula "80")) (ifInst ""  (formula "81")) (ifInst ""  (formula "82")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
               (rule "castedGetAny" (formula "84") (term "0,1,0,1,0,0,0,0,1,1"))
               (rule "castedGetAny" (formula "84") (term "0,1,0,1,0,1,1"))
               (rule "castedGetAny" (formula "84") (term "0,0,1,0,1,0,0,1,1"))
               (rule "castedGetAny" (formula "84") (term "0,0,1,0,1,0,0,0,0,0,1,1"))
               (rule "castedGetAny" (formula "84") (term "0,0,1,0,1,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,1,0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,1,0,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,0,0,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,1,0,0,0,0,1,1"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,1,0,0,0,1,1") (ifseqformula "10"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,1,0,1,1") (ifseqformula "10"))
               (rule "applyEqRigid" (formula "84") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "59"))
               (rule "replace_known_right" (formula "84") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "84"))
               (rule "applyEq" (formula "84") (term "0,0,0,1,0,1,0,0,0,1,1") (ifseqformula "10"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,1,0,1,1") (ifseqformula "10"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,1,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,1,0,0,1,1"))
               (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
               (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,1,1,1"))
               (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,1,1,1"))
               (rule "times_zero_1" (formula "84") (term "1,0,0,0,0,0,1,1,1"))
               (rule "add_zero_right" (formula "84") (term "0,0,0,0,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,1,1,1"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,1,1,1"))
               (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,1,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,1,1,1"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,1,1,1"))
               (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,1,1,1"))
               (rule "nnf_imp2or" (formula "84") (term "0,0,0,0,0,0,1,1"))
               (rule "nnf_imp2or" (formula "84") (term "0,1,0,0,1,1"))
               (rule "nnf_imp2or" (formula "84") (term "0,1,0,0,0,1,1"))
               (rule "commute_or_2" (formula "64") (term "0"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,1,0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0,1,0,0,1,1"))
               (rule "add_zero_right" (formula "84") (term "0,0,0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,1,0,0,1,1"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,1,0,0,1,1"))
               (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,1,0,0,1,1"))
               (rule "commute_or_2" (formula "44") (term "0"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,1,0,0,0,1,1"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "84") (term "1,0,0,0,0,0,1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "84") (term "0,0,0,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,1,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,1,0,0,0,1,1"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0,0,0,0,0,0,1,1"))
               (rule "add_zero_right" (formula "84") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "commute_or_2" (formula "60") (term "0"))
               (rule "commute_or_2" (formula "39") (term "0"))
               (rule "commute_or_2" (formula "46") (term "0"))
               (rule "commute_and" (formula "53") (term "0,0,1,0"))
               (rule "commute_or" (formula "53") (term "0,0"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "84") (term "0") (inst "i=i") (inst "i_0=i_0"))
               (rule "expand_inInt" (formula "84") (term "1,0,0,1,0"))
               (rule "expand_inInt" (formula "84") (term "1,0,0,1,0,0"))
               (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,1,0,0"))
               (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,1,0,0"))
               (rule "eqSymm" (formula "84") (term "0,0,0"))
               (rule "castedGetAny" (formula "84") (term "0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "84") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "84") (term "1,1,0,0,1,0,0"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "9"))
               (rule "applyEq" (formula "84") (term "0,0,0,0,0") (ifseqformula "9"))
               (rule "eqSymm" (formula "84") (term "0,0,0"))
               (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,0,1,0,0") (ifseqformula "8"))
               (rule "applyEq" (formula "84") (term "0,0,0,1,0,1,0,0") (ifseqformula "8"))
               (rule "applyEq" (formula "84") (term "0,0,0,1,0,1,0") (ifseqformula "9"))
               (rule "applyEq" (formula "84") (term "0,0,0,0,0") (ifseqformula "8"))
               (rule "eqSymm" (formula "84") (term "0,0,0"))
               (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "84"))
               (rule "applyEq" (formula "84") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "34"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,0,1,0"))
               (rule "nnf_imp2or" (formula "84") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "84") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,0,0"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,1,0"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "84") (term "1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "84") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,0,0,0"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "84") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "84") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "84") (term "1,0,0,1,1,0,0,0,0"))
               (rule "add_literals" (formula "84") (term "0,0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "84") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "84") (term "0,1,0,0,0,0"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,1,0,0,0,0"))
               (rule "mul_literals" (formula "84") (term "1,0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "84") (term "1,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "84") (term "0,1,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,1,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "1,0,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "84") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "1,0,0,1,1,0,0,1,0"))
               (rule "add_literals" (formula "84") (term "0,0,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "84") (term "0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "84") (term "0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,0,1,0"))
               (rule "mul_literals" (formula "84") (term "1,0,0,0,0,1,0"))
               (rule "lenNonNegative" (formula "112") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
               (rule "andLeft" (formula "8"))
               (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "seqGetAlphaCast" (formula "64") (term "0"))
               (rule "castedGetAny" (formula "64") (term "0"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "true_left" (formula "64"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
               (rule "andLeft" (formula "5"))
               (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "lenNonNegative" (formula "113") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "seqGetAlphaCast" (formula "69") (term "0"))
               (rule "castedGetAny" (formula "69") (term "0"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "true_left" (formula "69"))
               (rule "seqGetAlphaCast" (formula "3") (term "0"))
               (rule "castedGetAny" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "commute_or_2" (formula "37") (term "0"))
               (rule "commute_or_2" (formula "38") (term "0"))
               (rule "commute_or" (formula "66") (term "0,0"))
               (rule "commute_or" (formula "46") (term "0,0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "86") (term "0,1"))
               (rule "replace_known_right" (formula "86") (term "0,0,0,0,1") (ifseqformula "85"))
                (builtin "One Step Simplification" (formula "86"))
               (rule "applyEq" (formula "86") (term "0,0,0,0,1") (ifseqformula "13"))
               (rule "replace_known_right" (formula "86") (term "0,0,0,1") (ifseqformula "109"))
                (builtin "One Step Simplification" (formula "86"))
               (rule "applyEq" (formula "86") (term "0,0,0,1") (ifseqformula "14"))
               (rule "replace_known_right" (formula "86") (term "0,0,1") (ifseqformula "110"))
                (builtin "One Step Simplification" (formula "86"))
               (rule "commute_or" (formula "62") (term "0,0"))
               (rule "commute_or" (formula "41") (term "0,0"))
               (rule "commute_or" (formula "48") (term "0,0"))
               (rule "lenNonNegative" (formula "64") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "64"))
               (rule "commute_and_2" (formula "55") (term "0,1,0"))
               (rule "commute_or_2" (formula "67") (term "0"))
               (rule "commute_or_2" (formula "46") (term "0"))
               (rule "commute_or_2" (formula "62") (term "0"))
               (rule "commute_or_2" (formula "41") (term "0"))
               (rule "commute_or_2" (formula "48") (term "0"))
               (rule "commute_or_2" (formula "37") (term "0,0"))
               (rule "commute_or_2" (formula "38") (term "0,0"))
               (rule "commute_or" (formula "37") (term "0,0,0"))
               (rule "commute_or_2" (formula "37") (term "0,0"))
               (rule "commute_or_2" (formula "37") (term "0"))
               (rule "commute_or" (formula "38") (term "0,0,0"))
               (rule "commute_or_2" (formula "38") (term "0,0"))
               (rule "commute_or_2" (formula "38") (term "0"))
               (rule "andRight" (formula "87"))
               (branch
                  (rule "andRight" (formula "87"))
                  (branch
                     (rule "allRight" (formula "87") (inst "sk=i_0_0"))
                     (rule "orRight" (formula "87"))
                     (rule "notRight" (formula "88"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "90"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "89"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_geqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "ex_pull_out3" (formula "59") (term "0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0,0"))
                     (rule "commute_or_2" (formula "59") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0,0"))
                     (rule "commute_or" (formula "59") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "45") (inst "t=i_3_0"))
                     (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "45") (term "0,0"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "45"))
                     (rule "andLeft" (formula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,1,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0"))
                     (rule "add_zero_right" (formula "9") (term "0"))
                     (rule "leq_literals" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
                  (branch
                     (rule "allRight" (formula "87") (inst "sk=i_2"))
                     (rule "orRight" (formula "87"))
                     (rule "notRight" (formula "88"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "90"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "89"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_geqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "ex_pull_out3" (formula "59") (term "0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0,0"))
                     (rule "commute_or_2" (formula "59") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0,0"))
                     (rule "commute_or" (formula "59") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "45") (inst "t=i_3_0"))
                     (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "45") (term "0,0"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "45"))
                     (rule "andLeft" (formula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,1,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0"))
                     (rule "add_zero_right" (formula "9") (term "0"))
                     (rule "leq_literals" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
               )
               (branch
                  (rule "andRight" (formula "87"))
                  (branch
                     (rule "andRight" (formula "87"))
                     (branch
                        (rule "andRight" (formula "87"))
                        (branch
                           (rule "andRight" (formula "87"))
                           (branch
                              (rule "andRight" (formula "87"))
                              (branch
                                 (rule "allRight" (formula "87") (inst "sk=i_3_1"))
                                 (rule "orRight" (formula "87"))
                                 (rule "notRight" (formula "88"))
                                 (rule "orRight" (formula "88"))
                                 (rule "inEqSimp_leqRight" (formula "88"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "89"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "ex_pull_out3" (formula "58") (term "0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "65") (inst "t=i_3_1"))
                                 (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "65") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "65") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "inEqSimp_contradInEq1" (formula "65") (ifseqformula "1"))
                                 (rule "andLeft" (formula "65"))
                                 (rule "inEqSimp_homoInEq1" (formula "65"))
                                 (rule "polySimp_pullOutFactor1b" (formula "65") (term "0"))
                                 (rule "add_literals" (formula "65") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "65") (term "1,0"))
                                 (rule "add_zero_right" (formula "65") (term "0"))
                                 (rule "leq_literals" (formula "65"))
                                 (rule "closeFalse" (formula "65"))
                              )
                              (branch
                                 (rule "nnf_ex2all" (formula "87"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "ex_pull_out3" (formula "56") (term "0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                 (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "42") (inst "t=i_3_0"))
                                 (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "42") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "42"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "87") (inst "sk=i_1_0"))
                              (rule "orRight" (formula "87"))
                              (rule "notRight" (formula "88"))
                              (rule "orRight" (formula "88"))
                              (rule "inEqSimp_leqRight" (formula "88"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "89"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "ex_pull_out3" (formula "58") (term "0"))
                              (rule "cnf_rightDist" (formula "58") (term "0,0"))
                              (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                              (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                              (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "49") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "49") (term "0,0"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "1"))
                              (rule "andLeft" (formula "49"))
                              (rule "inEqSimp_homoInEq1" (formula "49"))
                              (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                              (rule "add_literals" (formula "49") (term "1,1,0"))
                              (rule "times_zero_1" (formula "49") (term "1,0"))
                              (rule "add_zero_right" (formula "49") (term "0"))
                              (rule "leq_literals" (formula "49"))
                              (rule "closeFalse" (formula "49"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "87") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "87"))
                           (rule "orRight" (formula "87"))
                           (rule "notRight" (formula "89"))
                           (rule "inEqSimp_leqRight" (formula "88"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "89"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "ex_pull_out3" (formula "58") (term "0"))
                           (rule "cnf_rightDist" (formula "58") (term "0,0"))
                           (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                           (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                           (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                           (rule "allLeft" (formula "70") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "70") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                           (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "70") (term "0,0,1"))
                           (rule "leq_literals" (formula "70") (term "0,1"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "70"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch
                        (rule "nnf_ex2all" (formula "87"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "ex_pull_out3" (formula "56") (term "0"))
                        (rule "cnf_rightDist" (formula "56") (term "0,0"))
                        (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                        (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                        (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "42") (inst "t=i_3_0"))
                        (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "42") (term "0,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "6"))
                        (rule "andLeft" (formula "42"))
                        (rule "inEqSimp_homoInEq1" (formula "42"))
                        (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                        (rule "add_literals" (formula "42") (term "1,1,0"))
                        (rule "times_zero_1" (formula "42") (term "1,0"))
                        (rule "add_zero_right" (formula "42") (term "0"))
                        (rule "leq_literals" (formula "42"))
                        (rule "closeFalse" (formula "42"))
                     )
                  )
                  (branch
                     (rule "allRight" (formula "87") (inst "sk=j_0"))
                     (rule "orRight" (formula "87"))
                     (rule "orRight" (formula "87"))
                     (rule "eqSymm" (formula "89") (term "1,0"))
                     (rule "inEqSimp_geqRight" (formula "88"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "88"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "nnf_ex2all" (formula "89"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "ex_pull_out3" (formula "58") (term "0"))
                     (rule "cnf_rightDist" (formula "58") (term "0,0"))
                     (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                     (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "44") (inst "t=i_3_0"))
                     (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "44") (term "0,0,1"))
                     (rule "leq_literals" (formula "44") (term "0,1"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "44"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "83")) (ifInst ""  (formula "82")) (ifInst ""  (formula "51")) (ifInst ""  (formula "83")) (ifInst ""  (formula "54")) (ifInst ""  (formula "82")) (ifInst ""  (formula "55")))
               (rule "eqSymm" (formula "81") (term "1,0,1,0,1,1,1"))
               (rule "castedGetAny" (formula "81") (term "1,1,0,1,0,1,1,1"))
               (rule "castedGetAny" (formula "81") (term "0,1,0,1,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "59"))
               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "59") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "47"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "47") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "106") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "63"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "39"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "39") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "110") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,1,1"))
               (rule "applyEq" (formula "81") (term "0,0,1,0,0,1,0,0,1,0,1,1,1") (ifseqformula "5"))
               (rule "applyEq" (formula "81") (term "0,0,1,0,0,1,0,0,1,1,1") (ifseqformula "7"))
               (rule "applyEq" (formula "81") (term "0,0,1,0,1,0,1,1,1") (ifseqformula "7"))
               (rule "applyEq" (formula "81") (term "0,1,1,0,1,0,1,1,1") (ifseqformula "5"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
               (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "59"))
               (rule "polySimp_mulLiterals" (formula "59") (term "0"))
               (rule "polySimp_elimOne" (formula "59") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "47"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0"))
               (rule "polySimp_elimOne" (formula "47") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "106") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "106") (term "1,1,0,0"))
               (rule "mul_literals" (formula "106") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "106") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "106") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "63"))
               (rule "polySimp_mulLiterals" (formula "63") (term "0"))
               (rule "polySimp_elimOne" (formula "63") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "39"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0"))
               (rule "polySimp_elimOne" (formula "39") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "110") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "110") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "110") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "110") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "110") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0,1,1,1"))
               (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,1,1"))
               (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,1,1"))
               (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
               (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
               (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "nnf_ex2all" (formula "106"))
               (rule "nnf_imp2or" (formula "62") (term "0"))
               (rule "nnf_imp2or" (formula "37") (term "0"))
               (rule "nnf_imp2or" (formula "44") (term "0"))
               (rule "nnf_imp2or" (formula "42") (term "0"))
               (rule "nnf_imp2or" (formula "51") (term "0"))
               (rule "nnf_imp2or" (formula "58") (term "0"))
               (rule "nnf_imp2or" (formula "110") (term "0,1"))
               (rule "nnf_imp2or" (formula "33") (term "0"))
               (rule "nnf_imp2or" (formula "34") (term "0"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "nnf_notAnd" (formula "62") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
               (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
               (rule "mul_literals" (formula "62") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "37") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
               (rule "mul_literals" (formula "37") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "44") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
               (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
               (rule "mul_literals" (formula "44") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
               (rule "mul_literals" (formula "42") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "51") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
               (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
               (rule "mul_literals" (formula "51") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "58") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
               (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
               (rule "mul_literals" (formula "58") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "34") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
               (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
               (rule "mul_literals" (formula "34") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "82") (term "0,1,1,1"))
               (rule "nnf_notAnd" (formula "110") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "110") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "110") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "110") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "110") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "110") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "110") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "110") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "110") (term "0,0,0,1"))
               (rule "mul_literals" (formula "110") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "110") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "0,0,0,1"))
               (rule "mul_literals" (formula "110") (term "1,0,0,0,1"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "82") (term "0") (inst "i=i") (inst "i_0=i_0"))
               (rule "expand_inInt" (formula "82") (term "1,0,0,1,0"))
               (rule "expand_inInt" (formula "82") (term "1,0,0,1,0,0"))
               (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1,0"))
               (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1,0,0"))
               (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1,0,0"))
               (rule "eqSymm" (formula "82") (term "0,0,0"))
               (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0"))
               (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "1,1,0,0,1,0,0"))
               (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "82") (term "0,0,0,0,0") (ifseqformula "7"))
               (rule "eqSymm" (formula "82") (term "0,0,0"))
               (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "82") (term "0,0,0,1,0,1,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "82") (term "0,0,0,1,0,1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "82") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "eqSymm" (formula "82") (term "0,0,0"))
               (rule "replace_known_left" (formula "82") (term "0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "82"))
               (rule "applyEq" (formula "82") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "32"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
               (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
               (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "82") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "82") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,1,1,1"))
               (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,1,1,1"))
               (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,1,1,1"))
               (rule "add_zero_right" (formula "82") (term "0,0,0,0,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,1,1,1"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,1,1,1"))
               (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,1,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,1,1,1"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,1,1"))
               (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,1,1,1"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,0,0"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,1,0"))
               (rule "nnf_notAnd" (formula "82") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "82") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "82") (term "1,0,0,1,1,0,0,0,0"))
               (rule "add_literals" (formula "82") (term "0,0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "82") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "82") (term "0,1,0,0,0,0"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,1,0,0,0,0"))
               (rule "mul_literals" (formula "82") (term "1,0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "82") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0,0"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "82") (term "1,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "82") (term "0,1,0,0,1,0"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,1,0,0,1,0"))
               (rule "mul_literals" (formula "82") (term "1,0,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "82") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "82") (term "1,0,0,1,1,0,0,1,0"))
               (rule "add_literals" (formula "82") (term "0,0,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "82") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,0,1,0"))
               (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "82") (term "0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,1,0"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,1,0"))
               (rule "commute_or_2" (formula "62") (term "0"))
               (rule "commute_or_2" (formula "37") (term "0"))
               (rule "commute_or_2" (formula "44") (term "0"))
               (rule "commute_or_2" (formula "42") (term "0"))
               (rule "commute_or_2" (formula "58") (term "0"))
               (rule "commute_or" (formula "51") (term "0,0"))
               (rule "commute_and" (formula "51") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "1") (term "0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "82") (term "0,1,1") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")) (ifInst ""  (formula "68")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "79")) (ifInst ""  (formula "80")) (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
               (rule "castedGetAny" (formula "82") (term "0,1,0,1,0,0,0,0,1,1"))
               (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0,0,0,0,1,1"))
               (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0,0,1,1"))
               (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0,1,1"))
               (rule "castedGetAny" (formula "82") (term "0,1,0,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,1,1"))
               (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,1,0,0,0,1,1") (ifseqformula "8"))
               (rule "applyEqRigid" (formula "82") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "57"))
               (rule "replace_known_right" (formula "82") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "69"))
                (builtin "One Step Simplification" (formula "82"))
               (rule "applyEq" (formula "82") (term "0,0,0,1,0,1,0,0,0,1,1") (ifseqformula "8"))
               (rule "applyEq" (formula "82") (term "0,0,1,0,1,0,1,1") (ifseqformula "8"))
               (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,1,0,1,1") (ifseqformula "8"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,1,1"))
               (rule "nnf_imp2or" (formula "82") (term "0,1,0,0,1,1"))
               (rule "nnf_imp2or" (formula "82") (term "0,0,0,0,0,0,1,1"))
               (rule "nnf_imp2or" (formula "82") (term "0,1,0,0,0,1,1"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,1,0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,0,0,1,0,0,1,1"))
               (rule "add_zero_right" (formula "82") (term "0,0,0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,1,0,0,1,1"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,0,0,1,1"))
               (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,1"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,0,0,0,1,1"))
               (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,1,0,0,0,1,1"))
               (rule "add_zero_right" (formula "82") (term "0,0,0,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,1,0,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,0,1,1"))
               (rule "nnf_notAnd" (formula "82") (term "0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,0,0,0,0,0,1,1"))
               (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,0,0,0,0,0,1,1"))
               (rule "add_zero_right" (formula "82") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "1,0,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0,0,0,1,1"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
               (rule "andLeft" (formula "2"))
               (rule "applyEq" (formula "3") (term "0,1,1,0,0") (ifseqformula "4"))
               (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
               (rule "andLeft" (formula "5"))
               (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "lenNonNegative" (formula "110") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "seqGetAlphaCast" (formula "62") (term "0"))
               (rule "castedGetAny" (formula "62") (term "0"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "true_left" (formula "62"))
               (rule "seqGetAlphaCast" (formula "66") (term "0"))
               (rule "castedGetAny" (formula "66") (term "0"))
                (builtin "One Step Simplification" (formula "66"))
               (rule "true_left" (formula "66"))
               (rule "lenNonNegative" (formula "111") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "commute_or_2" (formula "35") (term "0"))
               (rule "commute_or_2" (formula "36") (term "0"))
               (rule "lenNonNegative" (formula "62") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "62"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "85") (term "0,1"))
               (rule "replace_known_right" (formula "85") (term "0,0,0,0,1") (ifseqformula "84"))
                (builtin "One Step Simplification" (formula "85"))
               (rule "applyEq" (formula "85") (term "0,0,1,0,1") (ifseqformula "12"))
               (rule "replace_known_right" (formula "85") (term "0,1,0,1") (ifseqformula "109"))
                (builtin "One Step Simplification" (formula "85"))
               (rule "applyEq" (formula "85") (term "0,0,0,1") (ifseqformula "11"))
               (rule "replace_known_right" (formula "85") (term "0,0,1") (ifseqformula "108"))
                (builtin "One Step Simplification" (formula "85"))
               (rule "commute_or" (formula "65") (term "0,0"))
               (rule "commute_or" (formula "39") (term "0,0"))
               (rule "commute_or" (formula "46") (term "0,0"))
               (rule "commute_or" (formula "44") (term "0,0"))
               (rule "commute_or" (formula "60") (term "0,0"))
               (rule "commute_or" (formula "3") (term "0,0"))
               (rule "commute_and_2" (formula "53") (term "0,1,0"))
               (rule "commute_or_2" (formula "65") (term "0"))
               (rule "commute_or_2" (formula "39") (term "0"))
               (rule "commute_or_2" (formula "46") (term "0"))
               (rule "commute_or_2" (formula "44") (term "0"))
               (rule "commute_or_2" (formula "60") (term "0"))
               (rule "commute_or_2" (formula "35") (term "0,0"))
               (rule "commute_or_2" (formula "36") (term "0,0"))
               (rule "commute_or" (formula "35") (term "0,0,0"))
               (rule "commute_or_2" (formula "35") (term "0,0"))
               (rule "commute_or_2" (formula "35") (term "0"))
               (rule "commute_or" (formula "36") (term "0,0,0"))
               (rule "commute_or_2" (formula "36") (term "0,0"))
               (rule "commute_or_2" (formula "36") (term "0"))
               (rule "andRight" (formula "85"))
               (branch
                  (rule "andRight" (formula "85"))
                  (branch
                     (rule "allRight" (formula "85") (inst "sk=i_0_0"))
                     (rule "orRight" (formula "85"))
                     (rule "notRight" (formula "86"))
                     (rule "orRight" (formula "86"))
                     (rule "orRight" (formula "87"))
                     (rule "orRight" (formula "86"))
                     (rule "inEqSimp_geqRight" (formula "88"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "89"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "88"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                     (rule "leq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "ex_pull_out3" (formula "57") (term "0"))
                     (rule "cnf_rightDist" (formula "57") (term "0,0"))
                     (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                     (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                     (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "7") (inst "t=i_2_0"))
                     (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "45"))
                     (rule "qeq_literals" (formula "7") (term "0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "47"))
                     (rule "andLeft" (formula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,1,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0"))
                     (rule "add_zero_right" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
                  (branch
                     (rule "allRight" (formula "85") (inst "sk=i_2"))
                     (rule "orRight" (formula "85"))
                     (rule "notRight" (formula "86"))
                     (rule "orRight" (formula "86"))
                     (rule "orRight" (formula "87"))
                     (rule "orRight" (formula "86"))
                     (rule "inEqSimp_geqRight" (formula "88"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "89"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "88"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                     (rule "leq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "ex_pull_out3" (formula "57") (term "0"))
                     (rule "cnf_rightDist" (formula "57") (term "0,0"))
                     (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                     (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                     (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "7") (inst "t=i_2_0"))
                     (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "45"))
                     (rule "qeq_literals" (formula "7") (term "0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "47"))
                     (rule "andLeft" (formula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,1,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0"))
                     (rule "add_zero_right" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
               )
               (branch
                  (rule "andRight" (formula "85"))
                  (branch
                     (rule "andRight" (formula "85"))
                     (branch
                        (rule "andRight" (formula "85"))
                        (branch
                           (rule "andRight" (formula "85"))
                           (branch
                              (rule "andRight" (formula "85"))
                              (branch
                                 (rule "allRight" (formula "85") (inst "sk=i_3_0"))
                                 (rule "orRight" (formula "85"))
                                 (rule "notRight" (formula "86"))
                                 (rule "orRight" (formula "86"))
                                 (rule "inEqSimp_leqRight" (formula "86"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "87"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "ex_pull_out3" (formula "56") (term "0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                 (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "6") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "44"))
                                 (rule "qeq_literals" (formula "6") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "46"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch
                                 (rule "nnf_ex2all" (formula "85"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "ex_pull_out3" (formula "54") (term "0"))
                                 (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                 (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "4") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "42"))
                                 (rule "qeq_literals" (formula "4") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "4"))
                                 (rule "andLeft" (formula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "44"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0"))
                                 (rule "leq_literals" (formula "44"))
                                 (rule "closeFalse" (formula "44"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "85") (inst "sk=i_1_0"))
                              (rule "orRight" (formula "85"))
                              (rule "notRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "inEqSimp_geqRight" (formula "87"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "87"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "ex_pull_out3" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "56") (term "0,0"))
                              (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                              (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "6") (inst "t=i_2_0"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "44"))
                              (rule "qeq_literals" (formula "6") (term "0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "6"))
                              (rule "andLeft" (formula "46"))
                              (rule "inEqSimp_homoInEq1" (formula "46"))
                              (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                              (rule "add_literals" (formula "46") (term "1,1,0"))
                              (rule "times_zero_1" (formula "46") (term "1,0"))
                              (rule "add_zero_right" (formula "46") (term "0"))
                              (rule "leq_literals" (formula "46"))
                              (rule "closeFalse" (formula "46"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "85") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "85"))
                           (rule "orRight" (formula "85"))
                           (rule "notRight" (formula "87"))
                           (rule "inEqSimp_geqRight" (formula "87"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "87"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "ex_pull_out3" (formula "56") (term "0"))
                           (rule "cnf_rightDist" (formula "56") (term "0,0"))
                           (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                           (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                           (rule "allLeft" (formula "6") (inst "t=i_2_0"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "44"))
                           (rule "qeq_literals" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "46"))
                           (rule "andLeft" (formula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_zero_right" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                     (branch
                        (rule "nnf_ex2all" (formula "85"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "ex_pull_out3" (formula "54") (term "0"))
                        (rule "cnf_rightDist" (formula "54") (term "0,0"))
                        (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                        (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                        (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "4") (inst "t=i_2_0"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "42"))
                        (rule "qeq_literals" (formula "4") (term "0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "44"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
                  (branch
                     (rule "allRight" (formula "85") (inst "sk=j_0"))
                     (rule "orRight" (formula "85"))
                     (rule "orRight" (formula "85"))
                     (rule "eqSymm" (formula "87") (term "1,0"))
                     (rule "inEqSimp_leqRight" (formula "85"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "86"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "nnf_ex2all" (formula "87"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "ex_pull_out3" (formula "56") (term "0"))
                     (rule "cnf_rightDist" (formula "56") (term "0,0"))
                     (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                     (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                     (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "6") (inst "t=i_2_0"))
                     (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "46"))
                     (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "6") (term "0,0,1"))
                     (rule "leq_literals" (formula "6") (term "0,1"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "44"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
               )
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "83")) (ifInst ""  (formula "82")) (ifInst ""  (formula "51")) (ifInst ""  (formula "83")) (ifInst ""  (formula "54")) (ifInst ""  (formula "82")) (ifInst ""  (formula "55")))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "81") (term "0,1,1") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
            (rule "andRight" (formula "110"))
            (branch
               (rule "andRight" (formula "81"))
               (branch
                  (rule "allRight" (formula "106") (inst "sk=i_0_0"))
                  (rule "impRight" (formula "106"))
                  (rule "notRight" (formula "107"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "62") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "66") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "50"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                  (rule "polySimp_elimOne" (formula "62") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                  (rule "polySimp_elimOne" (formula "66") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                  (rule "polySimp_elimOne" (formula "50") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                  (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                  (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "nnf_imp2or" (formula "64") (term "0"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "nnf_imp2or" (formula "39") (term "0"))
                  (rule "nnf_imp2or" (formula "53") (term "0"))
                  (rule "nnf_imp2or" (formula "46") (term "0"))
                  (rule "nnf_imp2or" (formula "60") (term "0"))
                  (rule "nnf_imp2or" (formula "36") (term "0"))
                  (rule "nnf_imp2or" (formula "35") (term "0"))
                  (rule "nnf_notAnd" (formula "64") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                  (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                  (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "46") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                  (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "60") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                  (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "60") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                  (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "84") (inst "i=i") (inst "i_0=i_0"))
                  (rule "expand_inInt" (formula "84") (term "1,0,0,1"))
                  (rule "expand_inInt" (formula "84") (term "1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,1,0"))
                  (rule "eqSymm" (formula "84") (term "0,0"))
                  (rule "castedGetAny" (formula "84") (term "0,0,1,0,1"))
                  (rule "castedGetAny" (formula "84") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "84") (term "1,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "84") (term "1,1,0,0,1,0"))
                  (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "84") (term "0,0,0,0") (ifseqformula "9"))
                  (rule "eqSymm" (formula "84") (term "0,0"))
                  (rule "applyEq" (formula "84") (term "0,0,0,1,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "84") (term "0,0,0,1,0,1") (ifseqformula "9"))
                  (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0,0,1") (ifseqformula "9"))
                  (rule "applyEq" (formula "84") (term "0,0,0,0") (ifseqformula "8"))
                  (rule "eqSymm" (formula "84") (term "0,0"))
                  (rule "replace_known_left" (formula "84") (term "0,0") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "84"))
                  (rule "applyEq" (formula "84") (term "0,1,0,0,1,0,0,0,1") (ifseqformula "34"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "84") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,0,1"))
                  (rule "nnf_imp2or" (formula "84") (term "0,0"))
                  (rule "nnf_imp2or" (formula "84") (term "0,1"))
                  (rule "nnf_notAnd" (formula "84") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "84") (term "0,0,1"))
                  (rule "nnf_notAnd" (formula "84") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "84") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "1,0,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "1,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "84") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "1,0,0,1,1,0,0,0"))
                  (rule "add_literals" (formula "84") (term "0,0,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "84") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "84") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "84") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "84") (term "1,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "84") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "84") (term "1,0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "84") (term "1,0,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "84") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "84") (term "1,0,0,1,1,0,0,1"))
                  (rule "add_literals" (formula "84") (term "0,0,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "84") (term "1,1,1,0,0,1"))
                  (rule "nnf_notAnd" (formula "84") (term "0,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,0,1"))
                  (rule "times_zero_1" (formula "84") (term "1,0,0,0,0,0,0,1"))
                  (rule "add_literals" (formula "84") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "84") (term "1,0,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,0,1"))
                  (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0,1"))
                  (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,0,1"))
                  (rule "commute_or_2" (formula "64") (term "0"))
                  (rule "commute_or_2" (formula "44") (term "0"))
                  (rule "commute_or_2" (formula "39") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or" (formula "53") (term "0,0"))
                  (rule "commute_or_2" (formula "60") (term "0"))
                  (rule "commute_and" (formula "53") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "36") (term "0"))
                  (rule "commute_or_2" (formula "35") (term "0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                  (rule "andLeft" (formula "7"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "lenNonNegative" (formula "112") (term "1"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
                  (rule "andLeft" (formula "5"))
                  (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "lenNonNegative" (formula "113") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "seqGetAlphaCast" (formula "65") (term "0"))
                  (rule "castedGetAny" (formula "65") (term "0"))
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "true_left" (formula "65"))
                  (rule "seqGetAlphaCast" (formula "69") (term "0"))
                  (rule "castedGetAny" (formula "69") (term "0"))
                   (builtin "One Step Simplification" (formula "69"))
                  (rule "true_left" (formula "69"))
                  (rule "seqGetAlphaCast" (formula "3") (term "0"))
                  (rule "castedGetAny" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "commute_or" (formula "66") (term "0,0"))
                  (rule "commute_or" (formula "46") (term "0,0"))
                  (rule "commute_or" (formula "41") (term "0,0"))
                  (rule "commute_or" (formula "48") (term "0,0"))
                  (rule "commute_or" (formula "62") (term "0,0"))
                  (rule "commute_or_2" (formula "38") (term "0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "commute_or_2" (formula "66") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or_2" (formula "48") (term "0"))
                  (rule "lenNonNegative" (formula "64") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "64"))
                  (rule "commute_or_2" (formula "62") (term "0"))
                  (rule "andRight" (formula "87"))
                  (branch
                     (rule "allRight" (formula "87") (inst "sk=i_0_1"))
                     (rule "orRight" (formula "87"))
                     (rule "orRight" (formula "87"))
                     (rule "notRight" (formula "89"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "90"))
                     (rule "inEqSimp_leqRight" (formula "88"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "90"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "commute_and_2" (formula "59") (term "0,1,0"))
                     (rule "commute_or" (formula "42") (term "0,0,0"))
                     (rule "commute_or" (formula "41") (term "0,0,0"))
                     (rule "commute_or_2" (formula "42") (term "0,0"))
                     (rule "commute_or_2" (formula "42") (term "0"))
                     (rule "commute_or_2" (formula "41") (term "0,0"))
                     (rule "commute_or_2" (formula "41") (term "0"))
                     (rule "ex_pull_out3" (formula "59") (term "0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0,0"))
                     (rule "commute_or_2" (formula "59") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0,0"))
                     (rule "commute_or" (formula "59") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "52") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "52"))
                     (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                     (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "52") (term "0,0,1"))
                     (rule "leq_literals" (formula "52") (term "0,1"))
                      (builtin "One Step Simplification" (formula "52"))
                     (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "52"))
                     (rule "qeq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
                  (branch
                     (rule "allRight" (formula "87") (inst "sk=i_2"))
                     (rule "orRight" (formula "87"))
                     (rule "orRight" (formula "87"))
                     (rule "notRight" (formula "89"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "90"))
                     (rule "inEqSimp_leqRight" (formula "88"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "90"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "commute_or" (formula "42") (term "0,0,0"))
                     (rule "commute_and_2" (formula "59") (term "0,1,0"))
                     (rule "commute_or" (formula "41") (term "0,0,0"))
                     (rule "commute_or_2" (formula "42") (term "0,0"))
                     (rule "commute_or_2" (formula "42") (term "0"))
                     (rule "commute_or_2" (formula "41") (term "0,0"))
                     (rule "commute_or_2" (formula "41") (term "0"))
                     (rule "ex_pull_out3" (formula "59") (term "0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "59") (term "0,0,0"))
                     (rule "commute_or_2" (formula "59") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "59") (term "1,0,0,0"))
                     (rule "commute_or" (formula "59") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "52") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "52"))
                     (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "52") (term "0,0"))
                      (builtin "One Step Simplification" (formula "52"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "52"))
                     (rule "andLeft" (formula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,1,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0"))
                     (rule "add_zero_right" (formula "9") (term "0"))
                     (rule "leq_literals" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
               )
               (branch
                  (rule "andRight" (formula "81"))
                  (branch
                     (rule "allRight" (formula "106") (inst "sk=i_0_0"))
                     (rule "impRight" (formula "106"))
                     (rule "notRight" (formula "107"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "62"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "62") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "66"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "66") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "50"))
                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "50") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                     (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                     (rule "polySimp_elimOne" (formula "62") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                     (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                     (rule "polySimp_elimOne" (formula "66") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                     (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                     (rule "polySimp_elimOne" (formula "50") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                     (rule "polySimp_elimOne" (formula "42") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                     (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                     (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "nnf_imp2or" (formula "64") (term "0"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_imp2or" (formula "39") (term "0"))
                     (rule "nnf_imp2or" (formula "53") (term "0"))
                     (rule "nnf_imp2or" (formula "46") (term "0"))
                     (rule "nnf_imp2or" (formula "60") (term "0"))
                     (rule "nnf_imp2or" (formula "36") (term "0"))
                     (rule "nnf_imp2or" (formula "35") (term "0"))
                     (rule "nnf_notAnd" (formula "64") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                     (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                     (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "39") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                     (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "53") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                     (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                     (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "60") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                     (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "60") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                     (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "36") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "84"))
                     (rule "replace_known_right" (formula "84") (term "0,0,0") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "applyEq" (formula "84") (term "0,0,0") (ifseqformula "11"))
                     (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "107"))
                      (builtin "One Step Simplification" (formula "84"))
                     (rule "notRight" (formula "84"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                     (rule "close" (formula "108") (ifseqformula "1"))
                  )
                  (branch
                     (rule "andRight" (formula "81"))
                     (branch
                        (rule "andRight" (formula "81"))
                        (branch
                           (rule "andRight" (formula "81"))
                           (branch
                              (rule "andRight" (formula "81"))
                              (branch
                                 (rule "andRight" (formula "81"))
                                 (branch
                                    (rule "andRight" (formula "81"))
                                    (branch
                                       (rule "andRight" (formula "81"))
                                       (branch
                                          (rule "andRight" (formula "81"))
                                          (branch
                                             (rule "andRight" (formula "81"))
                                             (branch
                                                (rule "andRight" (formula "81"))
                                                (branch
                                                   (rule "andRight" (formula "81"))
                                                   (branch
                                                      (rule "andRight" (formula "81"))
                                                      (branch
                                                         (rule "andRight" (formula "81"))
                                                         (branch
                                                            (rule "andRight" (formula "81"))
                                                            (branch
                                                               (rule "andRight" (formula "81"))
                                                               (branch
                                                                  (rule "andRight" (formula "81"))
                                                                  (branch
                                                                     (rule "andRight" (formula "81"))
                                                                     (branch
                                                                        (rule "andRight" (formula "81"))
                                                                        (branch
                                                                           (rule "andRight" (formula "81"))
                                                                           (branch
                                                                              (rule "andRight" (formula "81"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "81"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "81"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "81"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "81"))
                                                                                          (branch
                                                                                             (rule "notRight" (formula "81"))
                                                                                             (rule "close" (formula "66") (ifseqformula "1"))
                                                                                          )
                                                                                          (branch
                                                                                             (rule "notRight" (formula "81"))
                                                                                             (rule "close" (formula "67") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "notRight" (formula "81"))
                                                                                          (rule "close" (formula "68") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "notRight" (formula "81"))
                                                                                       (rule "close" (formula "88") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "notRight" (formula "81"))
                                                                                    (rule "close" (formula "89") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "notRight" (formula "81"))
                                                                                 (rule "close" (formula "90") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "notRight" (formula "81"))
                                                                              (rule "allRight" (formula "106") (inst "sk=i_0_0"))
                                                                              (rule "impRight" (formula "106"))
                                                                              (rule "notRight" (formula "107"))
                                                                              (rule "andLeft" (formula "2"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "51"))
                                                                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "43"))
                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "63"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "63") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "67"))
                                                                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                              (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "4"))
                                                                              (rule "eqSymm" (formula "60"))
                                                                              (rule "close" (formula "72") (ifseqformula "60"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "notRight" (formula "81"))
                                                                           (rule "close" (formula "70") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "notRight" (formula "81"))
                                                                        (rule "close" (formula "71") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "notRight" (formula "81"))
                                                                     (rule "close" (formula "72") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "81"))
                                                                  (rule "close" (formula "73") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "notRight" (formula "81"))
                                                               (rule "close" (formula "74") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "notRight" (formula "81"))
                                                            (rule "close" (formula "75") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "81"))
                                                         (rule "close" (formula "76") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "81"))
                                                      (rule "close" (formula "77") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "notRight" (formula "81"))
                                                   (rule "close" (formula "78") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "notRight" (formula "81"))
                                                (rule "close" (formula "79") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "notRight" (formula "81"))
                                             (rule "close" (formula "80") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "81"))
                                          (rule "close" (formula "81") (ifseqformula "56"))
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "81") (inst "sk=i_3_0"))
                                       (rule "impRight" (formula "81"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "83"))
                                       (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "108"))
                                       (rule "notRight" (formula "109"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "castedGetAny" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "53") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "65"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "65") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "5"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                       (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "nnf_imp2or" (formula "42") (term "0"))
                                       (rule "nnf_imp2or" (formula "47") (term "0"))
                                       (rule "nnf_imp2or" (formula "63") (term "0"))
                                       (rule "nnf_imp2or" (formula "56") (term "0"))
                                       (rule "nnf_imp2or" (formula "49") (term "0"))
                                       (rule "nnf_imp2or" (formula "67") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                       (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                       (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                       (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                       (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                       (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                       (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "commute_or_2" (formula "47") (term "0"))
                                       (rule "commute_or_2" (formula "63") (term "0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or" (formula "56") (term "0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0"))
                                       (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "47") (term "0,0"))
                                       (rule "commute_or_2" (formula "47") (term "0"))
                                       (rule "commute_or" (formula "63") (term "0,0"))
                                       (rule "commute_or_2" (formula "63") (term "0"))
                                       (rule "commute_or" (formula "49") (term "0,0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0"))
                                       (rule "commute_or_2" (formula "38") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or" (formula "38") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "38") (term "0,0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "39") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "lenNonNegative" (formula "114") (term "1"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "seqGetAlphaCast" (formula "71") (term "0"))
                                       (rule "castedGetAny" (formula "71") (term "0"))
                                        (builtin "One Step Simplification" (formula "71"))
                                       (rule "true_left" (formula "71"))
                                       (rule "lenNonNegative" (formula "115") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "seqGetAlphaCast" (formula "68") (term "0"))
                                       (rule "castedGetAny" (formula "68") (term "0"))
                                        (builtin "One Step Simplification" (formula "68"))
                                       (rule "true_left" (formula "68"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                       (rule "castedGetAny" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                       (rule "castedGetAny" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                       (rule "lenNonNegative" (formula "67") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "67"))
                                       (rule "allLeft" (formula "65") (inst "t=i_3_0"))
                                       (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                                       (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "65") (term "0,0,1"))
                                       (rule "leq_literals" (formula "65") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "65"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "106") (inst "sk=i_0_0"))
                                    (rule "impRight" (formula "106"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "108"))
                                    (rule "castedGetAny" (formula "84") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "66") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "84") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "nnf_ex2all" (formula "84"))
                                    (rule "nnf_imp2or" (formula "54") (term "0"))
                                    (rule "nnf_imp2or" (formula "47") (term "0"))
                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                    (rule "nnf_imp2or" (formula "45") (term "0"))
                                    (rule "nnf_imp2or" (formula "65") (term "0"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                    (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "61") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_or" (formula "54") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "61") (term "0"))
                                    (rule "commute_and" (formula "54") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or" (formula "47") (term "0,0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_or" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or" (formula "45") (term "0,0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "commute_or" (formula "65") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or" (formula "61") (term "0,0"))
                                    (rule "commute_or_2" (formula "61") (term "0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "lenNonNegative" (formula "112") (term "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "65") (term "0"))
                                    (rule "castedGetAny" (formula "65") (term "0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "true_left" (formula "65"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "lenNonNegative" (formula "113") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                    (rule "castedGetAny" (formula "70") (term "0"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "true_left" (formula "70"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "applyEq" (formula "7") (term "0,1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                    (rule "castedGetAny" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or" (formula "38") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "65") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "65"))
                                    (rule "allLeft" (formula "49") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                    (rule "leq_literals" (formula "49") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "49") (term "0"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "closeFalse" (formula "49"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "81") (inst "sk=i_1_0"))
                                 (rule "impRight" (formula "81"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "83"))
                                 (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "108"))
                                 (rule "notRight" (formula "109"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "castedGetAny" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "65") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5"))
                                 (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "13"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                 (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                 (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "nnf_imp2or" (formula "42") (term "0"))
                                 (rule "nnf_imp2or" (formula "47") (term "0"))
                                 (rule "nnf_imp2or" (formula "63") (term "0"))
                                 (rule "nnf_imp2or" (formula "56") (term "0"))
                                 (rule "nnf_imp2or" (formula "49") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "38") (term "0"))
                                 (rule "nnf_imp2or" (formula "39") (term "0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or_2" (formula "47") (term "0"))
                                 (rule "commute_or_2" (formula "63") (term "0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or" (formula "56") (term "0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or" (formula "47") (term "0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0"))
                                 (rule "commute_or" (formula "63") (term "0,0"))
                                 (rule "commute_or_2" (formula "63") (term "0"))
                                 (rule "commute_or" (formula "49") (term "0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or" (formula "67") (term "0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0"))
                                 (rule "commute_or" (formula "38") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                 (rule "castedGetAny" (formula "66") (term "0"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "true_left" (formula "66"))
                                 (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                 (rule "castedGetAny" (formula "70") (term "0"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "true_left" (formula "70"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "lenNonNegative" (formula "114") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "lenNonNegative" (formula "115") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                 (rule "castedGetAny" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "lenNonNegative" (formula "67") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "67"))
                                 (rule "allLeft" (formula "49") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "49"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "81") (inst "sk=i_0_0"))
                              (rule "impRight" (formula "81"))
                              (rule "andLeft" (formula "1"))
                              (rule "notRight" (formula "83"))
                              (rule "allRight" (formula "108") (inst "sk=i_0_1"))
                              (rule "impRight" (formula "108"))
                              (rule "notRight" (formula "109"))
                              (rule "andLeft" (formula "2"))
                              (rule "castedGetAny" (formula "4") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "53") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "69"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "69") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "65"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "65") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "45"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                              (rule "polySimp_elimOne" (formula "53") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                              (rule "polySimp_elimOne" (formula "69") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                              (rule "polySimp_elimOne" (formula "65") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                              (rule "polySimp_elimOne" (formula "45") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                              (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                              (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "nnf_imp2or" (formula "42") (term "0"))
                              (rule "nnf_imp2or" (formula "47") (term "0"))
                              (rule "nnf_imp2or" (formula "63") (term "0"))
                              (rule "nnf_imp2or" (formula "56") (term "0"))
                              (rule "nnf_imp2or" (formula "49") (term "0"))
                              (rule "nnf_imp2or" (formula "67") (term "0"))
                              (rule "nnf_imp2or" (formula "38") (term "0"))
                              (rule "nnf_imp2or" (formula "39") (term "0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "47") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                              (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                              (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "63") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                              (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                              (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "56") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                              (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                              (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "49") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                              (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                              (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "67") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                              (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                              (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or_2" (formula "47") (term "0"))
                              (rule "commute_or_2" (formula "63") (term "0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "commute_or_2" (formula "67") (term "0"))
                              (rule "commute_and" (formula "56") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "commute_or_2" (formula "39") (term "0"))
                              (rule "commute_or" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or" (formula "47") (term "0,0"))
                              (rule "commute_or_2" (formula "47") (term "0"))
                              (rule "commute_or" (formula "63") (term "0,0"))
                              (rule "commute_or_2" (formula "63") (term "0"))
                              (rule "commute_or" (formula "49") (term "0,0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "67") (term "0,0"))
                              (rule "commute_or_2" (formula "67") (term "0"))
                              (rule "commute_or_2" (formula "38") (term "0,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0"))
                              (rule "commute_or" (formula "38") (term "0,0,0"))
                              (rule "commute_or_2" (formula "38") (term "0,0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "commute_or" (formula "39") (term "0,0,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0"))
                              (rule "commute_or_2" (formula "39") (term "0"))
                              (rule "lenNonNegative" (formula "114") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "lenNonNegative" (formula "115") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                              (rule "andLeft" (formula "12"))
                              (rule "applyEq" (formula "13") (term "0,1,1,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                              (rule "andLeft" (formula "9"))
                              (rule "applyEq" (formula "10") (term "0,1,1,0,0") (ifseqformula "11"))
                              (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "seqGetAlphaCast" (formula "68") (term "0"))
                              (rule "castedGetAny" (formula "68") (term "0"))
                               (builtin "One Step Simplification" (formula "68"))
                              (rule "true_left" (formula "68"))
                              (rule "seqGetAlphaCast" (formula "72") (term "0"))
                              (rule "castedGetAny" (formula "72") (term "0"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "true_left" (formula "72"))
                              (rule "seqGetAlphaCast" (formula "3") (term "0"))
                              (rule "castedGetAny" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "seqGetAlphaCast" (formula "6") (term "0"))
                              (rule "castedGetAny" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "commute_and_2" (formula "58") (term "0,1,0"))
                              (rule "lenNonNegative" (formula "67") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "67"))
                              (rule "lenNonNegative" (formula "8") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "8"))
                              (rule "allLeft" (formula "52") (inst "t=i_0_1"))
                              (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "52") (term "0,0,1"))
                              (rule "leq_literals" (formula "52") (term "0,1"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "52") (term "0"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "closeFalse" (formula "52"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "106") (inst "sk=i_0_0"))
                           (rule "impRight" (formula "106"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "108"))
                           (rule "castedGetAny" (formula "84") (term "0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "66") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "62") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "42"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "42") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
                           (rule "applyEq" (formula "84") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "84") (term "0,0,1,0") (ifseqformula "10"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                           (rule "polySimp_elimOne" (formula "66") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                           (rule "polySimp_elimOne" (formula "62") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                           (rule "polySimp_elimOne" (formula "42") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "84") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0"))
                           (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                           (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                           (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "nnf_ex2all" (formula "84"))
                           (rule "nnf_imp2or" (formula "54") (term "0"))
                           (rule "nnf_imp2or" (formula "47") (term "0"))
                           (rule "nnf_imp2or" (formula "40") (term "0"))
                           (rule "nnf_imp2or" (formula "45") (term "0"))
                           (rule "nnf_imp2or" (formula "65") (term "0"))
                           (rule "nnf_imp2or" (formula "61") (term "0"))
                           (rule "nnf_imp2or" (formula "37") (term "0"))
                           (rule "nnf_imp2or" (formula "36") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "54") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "47") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "65") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "61") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0"))
                           (rule "times_zero_1" (formula "61") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                           (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "61") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                           (rule "commute_or_2" (formula "47") (term "0"))
                           (rule "commute_or" (formula "54") (term "0,0"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or_2" (formula "65") (term "0"))
                           (rule "commute_or_2" (formula "61") (term "0"))
                           (rule "commute_and" (formula "54") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "37") (term "0"))
                           (rule "commute_or_2" (formula "36") (term "0"))
                           (rule "commute_or" (formula "47") (term "0,0"))
                           (rule "commute_or_2" (formula "47") (term "0"))
                           (rule "commute_or" (formula "40") (term "0,0"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "commute_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or" (formula "65") (term "0,0"))
                           (rule "commute_or_2" (formula "65") (term "0"))
                           (rule "commute_or" (formula "61") (term "0,0"))
                           (rule "commute_or_2" (formula "61") (term "0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "37") (term "0,0"))
                           (rule "commute_or_2" (formula "36") (term "0,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
                           (rule "andLeft" (formula "5"))
                           (rule "applyEq" (formula "6") (term "0,1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "lenNonNegative" (formula "112") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "seqGetAlphaCast" (formula "65") (term "0"))
                           (rule "castedGetAny" (formula "65") (term "0"))
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "true_left" (formula "65"))
                           (rule "lenNonNegative" (formula "113") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                           (rule "andLeft" (formula "10"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEq" (formula "10") (term "0,1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "seqGetAlphaCast" (formula "70") (term "0"))
                           (rule "castedGetAny" (formula "70") (term "0"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "true_left" (formula "70"))
                           (rule "seqGetAlphaCast" (formula "4") (term "0"))
                           (rule "castedGetAny" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "commute_or" (formula "39") (term "0,0,0"))
                           (rule "commute_or" (formula "38") (term "0,0,0"))
                           (rule "commute_or_2" (formula "39") (term "0,0"))
                           (rule "commute_or_2" (formula "39") (term "0"))
                           (rule "commute_or_2" (formula "38") (term "0,0"))
                           (rule "commute_or_2" (formula "38") (term "0"))
                           (rule "commute_and_2" (formula "56") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "65") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "65"))
                           (rule "allLeft" (formula "49") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                           (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "49") (term "0,0,1"))
                           (rule "leq_literals" (formula "49") (term "0,1"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "49"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "106") (inst "sk=i_0_0"))
                        (rule "impRight" (formula "106"))
                        (rule "notRight" (formula "107"))
                        (rule "andLeft" (formula "2"))
                        (rule "allRight" (formula "84") (inst "sk=j_0"))
                        (rule "impRight" (formula "84"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "86") (term "0,1,0"))
                        (rule "castedGetAny" (formula "86") (term "1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "64"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "64") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "52"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "52") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "68"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "68") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "86") (term "0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "86") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "86") (term "0,1,1,0") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                        (rule "polySimp_elimOne" (formula "64") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                        (rule "polySimp_elimOne" (formula "52") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                        (rule "polySimp_elimOne" (formula "68") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "86") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                        (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                        (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "nnf_imp2or" (formula "46") (term "0"))
                        (rule "nnf_ex2all" (formula "86"))
                        (rule "nnf_imp2or" (formula "49") (term "0"))
                        (rule "nnf_imp2or" (formula "63") (term "0"))
                        (rule "nnf_imp2or" (formula "67") (term "0"))
                        (rule "nnf_imp2or" (formula "42") (term "0"))
                        (rule "nnf_imp2or" (formula "56") (term "0"))
                        (rule "nnf_imp2or" (formula "38") (term "0"))
                        (rule "nnf_imp2or" (formula "39") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "47") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                        (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "63") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                        (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "67") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                        (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                        (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                        (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "39") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                        (rule "commute_or_2" (formula "47") (term "0"))
                        (rule "commute_or_2" (formula "49") (term "0"))
                        (rule "commute_or_2" (formula "63") (term "0"))
                        (rule "commute_or_2" (formula "67") (term "0"))
                        (rule "commute_or_2" (formula "42") (term "0"))
                        (rule "commute_and" (formula "56") (term "0,0,1,0"))
                        (rule "commute_or" (formula "56") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "38") (term "0"))
                        (rule "commute_or_2" (formula "39") (term "0"))
                        (rule "commute_or" (formula "47") (term "0,0"))
                        (rule "commute_or_2" (formula "47") (term "0"))
                        (rule "commute_or" (formula "49") (term "0,0"))
                        (rule "commute_or_2" (formula "49") (term "0"))
                        (rule "commute_or" (formula "63") (term "0,0"))
                        (rule "commute_or_2" (formula "63") (term "0"))
                        (rule "commute_or" (formula "67") (term "0,0"))
                        (rule "commute_or_2" (formula "67") (term "0"))
                        (rule "commute_or" (formula "42") (term "0,0"))
                        (rule "commute_or_2" (formula "42") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "38") (term "0,0"))
                        (rule "commute_or_2" (formula "39") (term "0,0"))
                        (rule "lenNonNegative" (formula "114") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "11") (inst "iv=iv"))
                        (rule "andLeft" (formula "11"))
                        (rule "applyEq" (formula "12") (term "0,1,1,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                        (rule "andLeft" (formula "8"))
                        (rule "applyEq" (formula "9") (term "0,1,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "lenNonNegative" (formula "115") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "seqGetAlphaCast" (formula "72") (term "0"))
                        (rule "castedGetAny" (formula "72") (term "0"))
                         (builtin "One Step Simplification" (formula "72"))
                        (rule "true_left" (formula "72"))
                        (rule "seqGetAlphaCast" (formula "68") (term "0"))
                        (rule "castedGetAny" (formula "68") (term "0"))
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "seqGetAlphaCast" (formula "6") (term "0"))
                        (rule "castedGetAny" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "commute_or" (formula "40") (term "0,0,0"))
                        (rule "commute_or" (formula "41") (term "0,0,0"))
                        (rule "commute_or_2" (formula "40") (term "0,0"))
                        (rule "commute_or_2" (formula "40") (term "0"))
                        (rule "commute_or_2" (formula "41") (term "0,0"))
                        (rule "commute_or_2" (formula "41") (term "0"))
                        (rule "commute_and_2" (formula "58") (term "0,1,0"))
                        (rule "lenNonNegative" (formula "67") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "67"))
                        (rule "allLeft" (formula "51") (inst "t=i_0_0"))
                        (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                        (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "51") (term "0,0,1"))
                        (rule "leq_literals" (formula "51") (term "0,1"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "51") (term "0"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "closeFalse" (formula "51"))
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "81"))
               (branch "Case 1"
                  (rule "allRight" (formula "110") (inst "sk=iv_0"))
                  (rule "impRight" (formula "110"))
                  (rule "andLeft" (formula "1"))
                  (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                  (rule "impRight" (formula "108"))
                  (rule "notRight" (formula "109"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "52"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "52") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "68") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                  (rule "polySimp_elimOne" (formula "64") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                  (rule "polySimp_elimOne" (formula "52") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                  (rule "polySimp_elimOne" (formula "44") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                  (rule "polySimp_elimOne" (formula "68") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                  (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                  (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_imp2or" (formula "48") (term "0"))
                  (rule "nnf_imp2or" (formula "62") (term "0"))
                  (rule "nnf_imp2or" (formula "46") (term "0"))
                  (rule "nnf_imp2or" (formula "66") (term "0"))
                  (rule "nnf_imp2or" (formula "55") (term "0"))
                  (rule "nnf_imp2or" (formula "37") (term "0"))
                  (rule "nnf_imp2or" (formula "38") (term "0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                  (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "62") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                  (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                  (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "46") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                  (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "66") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                  (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "55") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                  (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                  (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "86") (inst "i=i") (inst "i_0=i_0"))
                  (rule "expand_inInt" (formula "86") (term "1,0,0,1,0"))
                  (rule "expand_inInt" (formula "86") (term "1,0,0,1"))
                  (rule "replace_int_MAX" (formula "86") (term "1,0,1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "86") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "86") (term "0,1,1,0,0,1"))
                  (rule "replace_int_MAX" (formula "86") (term "1,0,1,0,0,1"))
                  (rule "eqSymm" (formula "86") (term "0,0"))
                  (rule "castedGetAny" (formula "86") (term "0,0,1,0,1,0"))
                  (rule "castedGetAny" (formula "86") (term "0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "86") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "86") (term "1,1,0,0,1"))
                  (rule "applyEq" (formula "86") (term "0,0,0,0") (ifseqformula "11"))
                  (rule "eqSymm" (formula "86") (term "0,0"))
                  (rule "applyEq" (formula "86") (term "0,0,0,1,0,1,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "86") (term "0,0,1,0,0,1,0,0,0,1") (ifseqformula "11"))
                  (rule "applyEq" (formula "86") (term "0,0,0,1,0,1") (ifseqformula "11"))
                  (rule "applyEq" (formula "86") (term "0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "86") (term "0,0,0,0") (ifseqformula "10"))
                  (rule "eqSymm" (formula "86") (term "0,0"))
                  (rule "replace_known_left" (formula "86") (term "0,0") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "86"))
                  (rule "applyEq" (formula "86") (term "0,1,0,0,1,0,0,0,1") (ifseqformula "36"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "86") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "86") (term "0,0"))
                  (rule "nnf_imp2or" (formula "86") (term "0,1"))
                  (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "86") (term "0,0,1"))
                  (rule "nnf_notAnd" (formula "86") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "86") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "86") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "86") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "86") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "86") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "86") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "86") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "86") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,1,1,0,0,0"))
                  (rule "add_literals" (formula "86") (term "0,0,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "86") (term "0,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "86") (term "0,0,0,0,1"))
                  (rule "times_zero_1" (formula "86") (term "1,0,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "86") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "86") (term "0,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0,0,0,1"))
                  (rule "add_literals" (formula "86") (term "0,0,0,1,0,0,0,1"))
                  (rule "add_zero_left" (formula "86") (term "0,0,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "86") (term "1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "86") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,1,1,0,0,1"))
                  (rule "add_literals" (formula "86") (term "0,0,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "86") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "86") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "86") (term "0,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "86") (term "1,0,1,0,0,1"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or_2" (formula "48") (term "0"))
                  (rule "commute_or_2" (formula "62") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or_2" (formula "66") (term "0"))
                  (rule "commute_and" (formula "55") (term "0,0,1,0"))
                  (rule "commute_or" (formula "55") (term "0,0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or_2" (formula "38") (term "0"))
                  (rule "seqGetAlphaCast" (formula "65") (term "0"))
                  (rule "castedGetAny" (formula "65") (term "0"))
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "true_left" (formula "65"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                  (rule "andLeft" (formula "6"))
                  (rule "applyEq" (formula "7") (term "0,1,1,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                  (rule "andLeft" (formula "9"))
                  (rule "applyEq" (formula "10") (term "0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "seqGetAlphaCast" (formula "69") (term "0"))
                  (rule "castedGetAny" (formula "69") (term "0"))
                   (builtin "One Step Simplification" (formula "69"))
                  (rule "true_left" (formula "69"))
                  (rule "seqGetAlphaCast" (formula "114") (term "1"))
                  (rule "castDel" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "seqGetAlphaCast" (formula "114") (term "0"))
                  (rule "castDel" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "seqGetAlphaCast" (formula "1") (term "0"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "commute_or" (formula "41") (term "0,0"))
                  (rule "commute_or" (formula "48") (term "0,0"))
                  (rule "commute_or" (formula "62") (term "0,0"))
                  (rule "commute_or" (formula "46") (term "0,0"))
                  (rule "commute_or" (formula "66") (term "0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "commute_or_2" (formula "38") (term "0,0"))
                  (rule "lenNonNegative" (formula "64") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "64"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or_2" (formula "48") (term "0"))
                  (rule "commute_or_2" (formula "62") (term "0"))
                  (rule "commute_or_2" (formula "46") (term "0"))
                  (rule "commute_or_2" (formula "67") (term "0"))
                  (rule "andRight" (formula "87"))
                  (branch
                     (rule "allRight" (formula "87") (inst "sk=i_0_1"))
                     (rule "orRight" (formula "87"))
                     (rule "orRight" (formula "87"))
                     (rule "notRight" (formula "89"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "90"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "89"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "90"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "lenNonNegative" (formula "9") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "commute_and_2" (formula "60") (term "0,1,0"))
                     (rule "commute_or" (formula "42") (term "0,0,0"))
                     (rule "commute_or" (formula "43") (term "0,0,0"))
                     (rule "commute_or_2" (formula "42") (term "0,0"))
                     (rule "commute_or_2" (formula "42") (term "0"))
                     (rule "commute_or_2" (formula "43") (term "0,0"))
                     (rule "commute_or_2" (formula "43") (term "0"))
                     (rule "ex_pull_out3" (formula "60") (term "0"))
                     (rule "cnf_rightDist" (formula "60") (term "0,0"))
                     (rule "shift_paren_or" (formula "60") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "60") (term "0,0,0"))
                     (rule "commute_or_2" (formula "60") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "60") (term "1,0,0,0"))
                     (rule "commute_or" (formula "60") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "53") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "53") (term "0,0"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "7"))
                     (rule "andLeft" (formula "53"))
                     (rule "inEqSimp_homoInEq1" (formula "53"))
                     (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                     (rule "add_literals" (formula "53") (term "1,1,0"))
                     (rule "times_zero_1" (formula "53") (term "1,0"))
                     (rule "add_zero_right" (formula "53") (term "0"))
                     (rule "leq_literals" (formula "53"))
                     (rule "closeFalse" (formula "53"))
                  )
                  (branch
                     (rule "allRight" (formula "87") (inst "sk=i_2"))
                     (rule "orRight" (formula "87"))
                     (rule "orRight" (formula "87"))
                     (rule "notRight" (formula "89"))
                     (rule "orRight" (formula "88"))
                     (rule "orRight" (formula "90"))
                     (rule "inEqSimp_geqRight" (formula "89"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "89"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "90"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "91"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "lenNonNegative" (formula "9") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "commute_and_2" (formula "60") (term "0,1,0"))
                     (rule "commute_or" (formula "42") (term "0,0,0"))
                     (rule "commute_or" (formula "43") (term "0,0,0"))
                     (rule "commute_or_2" (formula "42") (term "0,0"))
                     (rule "commute_or_2" (formula "42") (term "0"))
                     (rule "commute_or_2" (formula "43") (term "0,0"))
                     (rule "commute_or_2" (formula "43") (term "0"))
                     (rule "ex_pull_out3" (formula "60") (term "0"))
                     (rule "cnf_rightDist" (formula "60") (term "0,0"))
                     (rule "shift_paren_or" (formula "60") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "60") (term "0,0,0"))
                     (rule "commute_or_2" (formula "60") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "60") (term "1,0,0,0"))
                     (rule "commute_or" (formula "60") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "53") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "53") (term "0,0"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "7"))
                     (rule "andLeft" (formula "53"))
                     (rule "inEqSimp_homoInEq1" (formula "53"))
                     (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                     (rule "add_literals" (formula "53") (term "1,1,0"))
                     (rule "times_zero_1" (formula "53") (term "1,0"))
                     (rule "add_zero_right" (formula "53") (term "0"))
                     (rule "leq_literals" (formula "53"))
                     (rule "closeFalse" (formula "53"))
                  )
               )
               (branch
                  (rule "andRight" (formula "81"))
                  (branch
                     (rule "allRight" (formula "110") (inst "sk=iv_0"))
                     (rule "impRight" (formula "110"))
                     (rule "andLeft" (formula "1"))
                     (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                     (rule "impRight" (formula "108"))
                     (rule "notRight" (formula "109"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "64"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "64") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "52"))
                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "52") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                     (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                     (rule "polySimp_elimOne" (formula "64") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                     (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                     (rule "polySimp_elimOne" (formula "52") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                     (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                     (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "nnf_imp2or" (formula "41") (term "0"))
                     (rule "nnf_imp2or" (formula "48") (term "0"))
                     (rule "nnf_imp2or" (formula "62") (term "0"))
                     (rule "nnf_imp2or" (formula "46") (term "0"))
                     (rule "nnf_imp2or" (formula "66") (term "0"))
                     (rule "nnf_imp2or" (formula "55") (term "0"))
                     (rule "nnf_imp2or" (formula "37") (term "0"))
                     (rule "nnf_imp2or" (formula "38") (term "0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "48") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                     (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                     (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "62") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                     (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                     (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "66") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                     (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                     (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "55") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                     (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                     (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "37") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                     (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "86"))
                     (rule "replace_known_right" (formula "86") (term "0,0,0") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "applyEq" (formula "86") (term "0,0,1") (ifseqformula "14"))
                     (rule "replace_known_right" (formula "86") (term "0,1") (ifseqformula "110"))
                      (builtin "One Step Simplification" (formula "86"))
                     (rule "notRight" (formula "86"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                     (rule "close" (formula "109") (ifseqformula "1"))
                  )
                  (branch
                     (rule "andRight" (formula "81"))
                     (branch
                        (rule "andRight" (formula "81"))
                        (branch
                           (rule "andRight" (formula "81"))
                           (branch
                              (rule "andRight" (formula "81"))
                              (branch
                                 (rule "andRight" (formula "81"))
                                 (branch
                                    (rule "andRight" (formula "81"))
                                    (branch
                                       (rule "andRight" (formula "81"))
                                       (branch
                                          (rule "andRight" (formula "81"))
                                          (branch
                                             (rule "andRight" (formula "81"))
                                             (branch
                                                (rule "andRight" (formula "81"))
                                                (branch
                                                   (rule "andRight" (formula "81"))
                                                   (branch
                                                      (rule "andRight" (formula "81"))
                                                      (branch
                                                         (rule "andRight" (formula "81"))
                                                         (branch
                                                            (rule "andRight" (formula "81"))
                                                            (branch
                                                               (rule "andRight" (formula "81"))
                                                               (branch
                                                                  (rule "andRight" (formula "81"))
                                                                  (branch
                                                                     (rule "andRight" (formula "81"))
                                                                     (branch
                                                                        (rule "andRight" (formula "81"))
                                                                        (branch
                                                                           (rule "andRight" (formula "81"))
                                                                           (branch
                                                                              (rule "andRight" (formula "81"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "81"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "81"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "81"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "81"))
                                                                                          (branch
                                                                                             (rule "notRight" (formula "81"))
                                                                                             (rule "close" (formula "66") (ifseqformula "1"))
                                                                                          )
                                                                                          (branch
                                                                                             (rule "notRight" (formula "81"))
                                                                                             (rule "close" (formula "67") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "notRight" (formula "81"))
                                                                                          (rule "close" (formula "68") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "notRight" (formula "81"))
                                                                                       (rule "close" (formula "88") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "notRight" (formula "81"))
                                                                                    (rule "close" (formula "89") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "notRight" (formula "81"))
                                                                                 (rule "close" (formula "90") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "notRight" (formula "81"))
                                                                              (rule "allRight" (formula "110") (inst "sk=iv_0"))
                                                                              (rule "impRight" (formula "110"))
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                                                                              (rule "impRight" (formula "108"))
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "notRight" (formula "110"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "45"))
                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "69"))
                                                                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                              (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "6"))
                                                                              (rule "eqSymm" (formula "62"))
                                                                              (rule "close" (formula "74") (ifseqformula "62"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "notRight" (formula "81"))
                                                                           (rule "close" (formula "70") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "notRight" (formula "81"))
                                                                        (rule "close" (formula "71") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "notRight" (formula "81"))
                                                                     (rule "close" (formula "72") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "81"))
                                                                  (rule "close" (formula "73") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "notRight" (formula "81"))
                                                               (rule "close" (formula "74") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "notRight" (formula "81"))
                                                            (rule "close" (formula "75") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "81"))
                                                         (rule "close" (formula "76") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "81"))
                                                      (rule "close" (formula "77") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "notRight" (formula "81"))
                                                   (rule "close" (formula "78") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "notRight" (formula "81"))
                                                (rule "close" (formula "79") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "notRight" (formula "81"))
                                             (rule "close" (formula "80") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "81"))
                                          (rule "close" (formula "81") (ifseqformula "56"))
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "110") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "110"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "108"))
                                       (rule "notRight" (formula "109"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "allRight" (formula "86") (inst "sk=i_3_0"))
                                       (rule "impRight" (formula "86"))
                                       (rule "notRight" (formula "87"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "71"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "71") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "67") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "47"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "47") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "55") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                       (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                       (rule "polySimp_elimOne" (formula "71") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                                       (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                       (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "nnf_imp2or" (formula "51") (term "0"))
                                       (rule "nnf_imp2or" (formula "65") (term "0"))
                                       (rule "nnf_imp2or" (formula "69") (term "0"))
                                       (rule "nnf_imp2or" (formula "49") (term "0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "58") (term "0"))
                                       (rule "nnf_imp2or" (formula "40") (term "0"))
                                       (rule "nnf_imp2or" (formula "41") (term "0"))
                                       (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "65") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                       (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                       (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                       (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0"))
                                       (rule "commute_or_2" (formula "65") (term "0"))
                                       (rule "commute_or_2" (formula "69") (term "0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_and" (formula "58") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "58") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_or" (formula "51") (term "0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0"))
                                       (rule "commute_or" (formula "65") (term "0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0"))
                                       (rule "commute_or" (formula "69") (term "0,0"))
                                       (rule "commute_or_2" (formula "69") (term "0"))
                                       (rule "commute_or" (formula "49") (term "0,0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "seqGetAlphaCast" (formula "68") (term "0"))
                                       (rule "castedGetAny" (formula "68") (term "0"))
                                        (builtin "One Step Simplification" (formula "68"))
                                       (rule "true_left" (formula "68"))
                                       (rule "seqGetAlphaCast" (formula "72") (term "0"))
                                       (rule "castedGetAny" (formula "72") (term "0"))
                                        (builtin "One Step Simplification" (formula "72"))
                                       (rule "true_left" (formula "72"))
                                       (rule "seqGetAlphaCast" (formula "116") (term "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "seqGetAlphaCast" (formula "116") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0"))
                                       (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                       (rule "castedGetAny" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                       (rule "lenNonNegative" (formula "67") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "67"))
                                       (rule "lenNonNegative" (formula "8") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8"))
                                       (rule "allLeft" (formula "52") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                       (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "52") (term "0,0,1"))
                                       (rule "leq_literals" (formula "52") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "52"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "110") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "110"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                                    (rule "impRight" (formula "108"))
                                    (rule "notRight" (formula "109"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "castedGetAny" (formula "86") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "52") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "68"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "68") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "86") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "nnf_ex2all" (formula "86"))
                                    (rule "nnf_imp2or" (formula "63") (term "0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "49") (term "0"))
                                    (rule "nnf_imp2or" (formula "47") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "56") (term "0"))
                                    (rule "nnf_imp2or" (formula "38") (term "0"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "56") (term "0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or" (formula "63") (term "0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or" (formula "47") (term "0,0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "applyEq" (formula "10") (term "0,1,1,0,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                    (rule "castedGetAny" (formula "66") (term "0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "true_left" (formula "66"))
                                    (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                    (rule "castedGetAny" (formula "70") (term "0"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "true_left" (formula "70"))
                                    (rule "seqGetAlphaCast" (formula "114") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "114") (term "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                    (rule "castedGetAny" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "commute_or" (formula "38") (term "0,0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "65") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "65"))
                                    (rule "lenNonNegative" (formula "6") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "6"))
                                    (rule "allLeft" (formula "50") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "50") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "4"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "inEqSimp_homoInEq1" (formula "50"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                    (rule "add_literals" (formula "50") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0"))
                                    (rule "leq_literals" (formula "50"))
                                    (rule "closeFalse" (formula "50"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "110") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "110"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "108"))
                                 (rule "notRight" (formula "109"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "allRight" (formula "86") (inst "sk=i_1_0"))
                                 (rule "impRight" (formula "86"))
                                 (rule "notRight" (formula "87"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "67") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "15"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                                 (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                 (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "nnf_imp2or" (formula "51") (term "0"))
                                 (rule "nnf_imp2or" (formula "65") (term "0"))
                                 (rule "nnf_imp2or" (formula "69") (term "0"))
                                 (rule "nnf_imp2or" (formula "49") (term "0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "65") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                 (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_and" (formula "58") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or" (formula "51") (term "0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0"))
                                 (rule "commute_or" (formula "65") (term "0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or" (formula "69") (term "0,0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_or" (formula "49") (term "0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "68") (term "0"))
                                 (rule "castedGetAny" (formula "68") (term "0"))
                                  (builtin "One Step Simplification" (formula "68"))
                                 (rule "true_left" (formula "68"))
                                 (rule "seqGetAlphaCast" (formula "72") (term "0"))
                                 (rule "castedGetAny" (formula "72") (term "0"))
                                  (builtin "One Step Simplification" (formula "72"))
                                 (rule "true_left" (formula "72"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "seqGetAlphaCast" (formula "116") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "116") (term "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or" (formula "40") (term "0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                 (rule "castedGetAny" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "commute_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "lenNonNegative" (formula "67") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "67"))
                                 (rule "lenNonNegative" (formula "8") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "allLeft" (formula "52") (inst "t=i_0_0"))
                                 (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                 (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "52") (term "0,0,1"))
                                 (rule "leq_literals" (formula "52") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "52"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "110") (inst "sk=iv_0"))
                              (rule "impRight" (formula "110"))
                              (rule "andLeft" (formula "1"))
                              (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                              (rule "impRight" (formula "108"))
                              (rule "notRight" (formula "109"))
                              (rule "andLeft" (formula "2"))
                              (rule "allRight" (formula "86") (inst "sk=i_0_1"))
                              (rule "impRight" (formula "86"))
                              (rule "notRight" (formula "87"))
                              (rule "andLeft" (formula "2"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "71"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "71") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "67"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "67") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "47") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "55"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "55") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                              (rule "polySimp_elimOne" (formula "71") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                              (rule "polySimp_elimOne" (formula "67") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                              (rule "polySimp_elimOne" (formula "47") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                              (rule "polySimp_elimOne" (formula "55") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                              (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                              (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "nnf_imp2or" (formula "51") (term "0"))
                              (rule "nnf_imp2or" (formula "65") (term "0"))
                              (rule "nnf_imp2or" (formula "69") (term "0"))
                              (rule "nnf_imp2or" (formula "49") (term "0"))
                              (rule "nnf_imp2or" (formula "44") (term "0"))
                              (rule "nnf_imp2or" (formula "58") (term "0"))
                              (rule "nnf_imp2or" (formula "40") (term "0"))
                              (rule "nnf_imp2or" (formula "41") (term "0"))
                              (rule "nnf_notAnd" (formula "51") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "65") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                              (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "65") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                              (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "69") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                              (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                              (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "49") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                              (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                              (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "44") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                              (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "58") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                              (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                              (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "40") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "41") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                              (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                              (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                              (rule "commute_or_2" (formula "51") (term "0"))
                              (rule "commute_or_2" (formula "65") (term "0"))
                              (rule "commute_or_2" (formula "69") (term "0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_and" (formula "58") (term "0,0,1,0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "commute_or_2" (formula "51") (term "0"))
                              (rule "commute_or" (formula "65") (term "0,0"))
                              (rule "commute_or_2" (formula "65") (term "0"))
                              (rule "commute_or" (formula "69") (term "0,0"))
                              (rule "commute_or_2" (formula "69") (term "0"))
                              (rule "commute_or" (formula "49") (term "0,0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or_2" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "68") (term "0"))
                              (rule "castedGetAny" (formula "68") (term "0"))
                               (builtin "One Step Simplification" (formula "68"))
                              (rule "true_left" (formula "68"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                              (rule "andLeft" (formula "12"))
                              (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                              (rule "andLeft" (formula "9"))
                              (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "seqGetAlphaCast" (formula "72") (term "0"))
                              (rule "castedGetAny" (formula "72") (term "0"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "true_left" (formula "72"))
                              (rule "seqGetAlphaCast" (formula "116") (term "1"))
                              (rule "castDel" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "116") (term "0"))
                              (rule "castDel" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_or" (formula "40") (term "0,0,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0"))
                              (rule "seqGetAlphaCast" (formula "4") (term "0"))
                              (rule "castedGetAny" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_or_2" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "commute_and_2" (formula "58") (term "0,1,0"))
                              (rule "lenNonNegative" (formula "67") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "67"))
                              (rule "lenNonNegative" (formula "8") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "8"))
                              (rule "lenNonNegative" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "allLeft" (formula "53") (inst "t=i_0_0"))
                              (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                              (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "53") (term "0,0,1"))
                              (rule "leq_literals" (formula "53") (term "0,1"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "53") (term "0"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "closeFalse" (formula "53"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "110") (inst "sk=iv_0"))
                           (rule "impRight" (formula "110"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "108") (inst "sk=i_0_0"))
                           (rule "impRight" (formula "108"))
                           (rule "notRight" (formula "109"))
                           (rule "andLeft" (formula "2"))
                           (rule "castedGetAny" (formula "86") (term "0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "68"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "68") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "64") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0"))
                           (rule "applyEq" (formula "86") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                           (rule "applyEq" (formula "86") (term "0,0,1,0") (ifseqformula "12"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                           (rule "polySimp_elimOne" (formula "52") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                           (rule "polySimp_elimOne" (formula "68") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                           (rule "polySimp_elimOne" (formula "44") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                           (rule "polySimp_elimOne" (formula "64") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "86") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0"))
                           (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                           (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                           (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "nnf_imp2or" (formula "62") (term "0"))
                           (rule "nnf_imp2or" (formula "66") (term "0"))
                           (rule "nnf_ex2all" (formula "86"))
                           (rule "nnf_imp2or" (formula "49") (term "0"))
                           (rule "nnf_imp2or" (formula "47") (term "0"))
                           (rule "nnf_imp2or" (formula "42") (term "0"))
                           (rule "nnf_imp2or" (formula "56") (term "0"))
                           (rule "nnf_imp2or" (formula "38") (term "0"))
                           (rule "nnf_imp2or" (formula "39") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "63") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                           (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "67") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                           (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                           (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "49") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                           (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                           (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "47") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                           (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                           (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "38") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "commute_or_2" (formula "67") (term "0"))
                           (rule "commute_or_2" (formula "49") (term "0"))
                           (rule "commute_or_2" (formula "47") (term "0"))
                           (rule "commute_or_2" (formula "42") (term "0"))
                           (rule "commute_and" (formula "56") (term "0,0,1,0"))
                           (rule "commute_or" (formula "56") (term "0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "38") (term "0"))
                           (rule "commute_or_2" (formula "39") (term "0"))
                           (rule "commute_or" (formula "63") (term "0,0"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "commute_or" (formula "67") (term "0,0"))
                           (rule "commute_or_2" (formula "67") (term "0"))
                           (rule "commute_or" (formula "49") (term "0,0"))
                           (rule "commute_or_2" (formula "49") (term "0"))
                           (rule "commute_or" (formula "47") (term "0,0"))
                           (rule "commute_or_2" (formula "47") (term "0"))
                           (rule "commute_or" (formula "42") (term "0,0"))
                           (rule "commute_or_2" (formula "42") (term "0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "38") (term "0,0"))
                           (rule "commute_or_2" (formula "39") (term "0,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                           (rule "andLeft" (formula "7"))
                           (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "seqGetAlphaCast" (formula "66") (term "0"))
                           (rule "castedGetAny" (formula "66") (term "0"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "true_left" (formula "66"))
                           (rule "seqGetAlphaCast" (formula "70") (term "0"))
                           (rule "castedGetAny" (formula "70") (term "0"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "true_left" (formula "70"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                           (rule "andLeft" (formula "10"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "seqGetAlphaCast" (formula "114") (term "1"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "seqGetAlphaCast" (formula "114") (term "0"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "seqGetAlphaCast" (formula "2") (term "0"))
                           (rule "castedGetAny" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "commute_or" (formula "38") (term "0,0,0"))
                           (rule "commute_or" (formula "39") (term "0,0,0"))
                           (rule "commute_or_2" (formula "38") (term "0,0"))
                           (rule "commute_or_2" (formula "38") (term "0"))
                           (rule "commute_or_2" (formula "39") (term "0,0"))
                           (rule "commute_or_2" (formula "39") (term "0"))
                           (rule "commute_and_2" (formula "56") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "65") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "65"))
                           (rule "lenNonNegative" (formula "6") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "6"))
                           (rule "allLeft" (formula "50") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "50") (term "0,0"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "50"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "110") (inst "sk=iv_0"))
                        (rule "impRight" (formula "110"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "83") (inst "sk=j_0"))
                        (rule "impRight" (formula "83"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "110") (inst "sk=i_0_0"))
                        (rule "impRight" (formula "110"))
                        (rule "andLeft" (formula "1"))
                        (rule "notRight" (formula "112"))
                        (rule "castedGetAny" (formula "88") (term "1,1,0"))
                        (rule "castedGetAny" (formula "88") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "54"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "54") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "70"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "70") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "46"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "46") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4"))
                        (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "88") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "88") (term "0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "88") (term "0,1,1,0") (ifseqformula "14"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                        (rule "polySimp_elimOne" (formula "54") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                        (rule "polySimp_elimOne" (formula "70") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "polySimp_elimOne" (formula "66") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                        (rule "polySimp_elimOne" (formula "46") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "88") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "1,1,1,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                        (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                        (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "nnf_imp2or" (formula "50") (term "0"))
                        (rule "nnf_imp2or" (formula "43") (term "0"))
                        (rule "nnf_imp2or" (formula "68") (term "0"))
                        (rule "nnf_ex2all" (formula "88"))
                        (rule "nnf_imp2or" (formula "65") (term "0"))
                        (rule "nnf_imp2or" (formula "49") (term "0"))
                        (rule "nnf_imp2or" (formula "58") (term "0"))
                        (rule "nnf_imp2or" (formula "40") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "51") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "44") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                        (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "69") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                        (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                        (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "65") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                        (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                        (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                        (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "58") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                        (rule "commute_or_2" (formula "51") (term "0"))
                        (rule "commute_or_2" (formula "44") (term "0"))
                        (rule "commute_or_2" (formula "69") (term "0"))
                        (rule "commute_or_2" (formula "65") (term "0"))
                        (rule "commute_or_2" (formula "49") (term "0"))
                        (rule "commute_and" (formula "58") (term "0,0,1,0"))
                        (rule "commute_or" (formula "58") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "40") (term "0"))
                        (rule "commute_or_2" (formula "41") (term "0"))
                        (rule "commute_or" (formula "51") (term "0,0"))
                        (rule "commute_or_2" (formula "51") (term "0"))
                        (rule "commute_or" (formula "44") (term "0,0"))
                        (rule "commute_or_2" (formula "44") (term "0"))
                        (rule "commute_or" (formula "69") (term "0,0"))
                        (rule "commute_or_2" (formula "69") (term "0"))
                        (rule "commute_or" (formula "65") (term "0,0"))
                        (rule "commute_or_2" (formula "65") (term "0"))
                        (rule "commute_or" (formula "49") (term "0,0"))
                        (rule "commute_or_2" (formula "49") (term "0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                        (rule "andLeft" (formula "12"))
                        (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                        (rule "andLeft" (formula "9"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "seqGetAlphaCast" (formula "68") (term "0"))
                        (rule "castedGetAny" (formula "68") (term "0"))
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "seqGetAlphaCast" (formula "72") (term "0"))
                        (rule "castedGetAny" (formula "72") (term "0"))
                         (builtin "One Step Simplification" (formula "72"))
                        (rule "true_left" (formula "72"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "40") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "116") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "seqGetAlphaCast" (formula "116") (term "1"))
                        (rule "castDel" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "commute_or_2" (formula "41") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "2") (term "0"))
                        (rule "castedGetAny" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "commute_or" (formula "40") (term "0,0,0"))
                        (rule "commute_or_2" (formula "40") (term "0,0"))
                        (rule "commute_or_2" (formula "40") (term "0"))
                        (rule "commute_and_2" (formula "58") (term "0,1,0"))
                        (rule "commute_or" (formula "41") (term "0,0,0"))
                        (rule "commute_or_2" (formula "41") (term "0,0"))
                        (rule "commute_or_2" (formula "41") (term "0"))
                        (rule "lenNonNegative" (formula "67") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "67"))
                        (rule "lenNonNegative" (formula "8") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "8"))
                        (rule "allLeft" (formula "52") (inst "t=i_0_0"))
                        (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "52") (term "0,0"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "inEqSimp_contradInEq1" (formula "52") (ifseqformula "4"))
                        (rule "andLeft" (formula "52"))
                        (rule "inEqSimp_homoInEq1" (formula "52"))
                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                        (rule "add_literals" (formula "52") (term "1,1,0"))
                        (rule "times_zero_1" (formula "52") (term "1,0"))
                        (rule "add_zero_right" (formula "52") (term "0"))
                        (rule "leq_literals" (formula "52"))
                        (rule "closeFalse" (formula "52"))
                     )
                  )
               )
            )
         )
      )
      (branch
          (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "83")) (ifInst ""  (formula "82")) (ifInst ""  (formula "51")) (ifInst ""  (formula "83")) (ifInst ""  (formula "54")) (ifInst ""  (formula "82")) (ifInst ""  (formula "55")))
         (rule "eqSymm" (formula "81") (term "1,0,1,0,1,1,1"))
         (rule "castedGetAny" (formula "81") (term "0,1,0,1,0,1,1,1"))
         (rule "castedGetAny" (formula "81") (term "1,1,0,1,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "59"))
         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "59") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "47"))
         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "47") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "106") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "39"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "39") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "63"))
         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "63") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "110") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0,1,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,1,1"))
         (rule "applyEq" (formula "81") (term "0,0,1,0,0,1,0,0,1,1,1") (ifseqformula "7"))
         (rule "applyEq" (formula "81") (term "0,0,1,0,0,1,0,0,1,0,1,1,1") (ifseqformula "5"))
         (rule "applyEq" (formula "81") (term "0,0,1,0,1,0,1,1,1") (ifseqformula "7"))
         (rule "applyEq" (formula "81") (term "0,1,1,0,1,0,1,1,1") (ifseqformula "5"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
         (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "59"))
         (rule "polySimp_mulLiterals" (formula "59") (term "0"))
         (rule "polySimp_elimOne" (formula "59") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
         (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
         (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
         (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "47"))
         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
         (rule "polySimp_elimOne" (formula "47") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "106") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "106") (term "1,1,0,0"))
         (rule "mul_literals" (formula "106") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "106") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "106") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "39"))
         (rule "polySimp_mulLiterals" (formula "39") (term "0"))
         (rule "polySimp_elimOne" (formula "39") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "63"))
         (rule "polySimp_mulLiterals" (formula "63") (term "0"))
         (rule "polySimp_elimOne" (formula "63") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "110") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "110") (term "1,1,0,0,1"))
         (rule "mul_literals" (formula "110") (term "0,1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "110") (term "1,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "110") (term "1,1,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,1,1"))
         (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0,1,1,1"))
         (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0,1,1,1"))
         (rule "inEqSimp_and_subsumption3" (formula "32") (term "0,0,0"))
         (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
         (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "nnf_ex2all" (formula "106"))
         (rule "nnf_imp2or" (formula "62") (term "0"))
         (rule "nnf_imp2or" (formula "58") (term "0"))
         (rule "nnf_imp2or" (formula "44") (term "0"))
         (rule "nnf_imp2or" (formula "37") (term "0"))
         (rule "nnf_imp2or" (formula "42") (term "0"))
         (rule "nnf_imp2or" (formula "51") (term "0"))
         (rule "nnf_imp2or" (formula "110") (term "0,1"))
         (rule "nnf_imp2or" (formula "33") (term "0"))
         (rule "nnf_imp2or" (formula "34") (term "0"))
         (rule "nnf_notAnd" (formula "1") (term "0"))
         (rule "nnf_notAnd" (formula "62") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
         (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
         (rule "mul_literals" (formula "62") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "58") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
         (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
         (rule "mul_literals" (formula "58") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "44") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
         (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
         (rule "mul_literals" (formula "44") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "37") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
         (rule "mul_literals" (formula "37") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
         (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
         (rule "mul_literals" (formula "42") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "51") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
         (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
         (rule "mul_literals" (formula "51") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "33") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
         (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
         (rule "mul_literals" (formula "33") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "34") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
         (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
         (rule "mul_literals" (formula "34") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "1") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "82") (term "0,1,1,1"))
         (rule "nnf_notAnd" (formula "110") (term "0,0,1"))
         (rule "inEqSimp_notGeq" (formula "110") (term "0,0,0,1"))
         (rule "times_zero_1" (formula "110") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "110") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "0,0,0,1"))
         (rule "mul_literals" (formula "110") (term "1,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "110") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "110") (term "1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "110") (term "0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "110") (term "0,0,1,0,0,1"))
         (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "110") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "110") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "110") (term "1,1,0,0,1"))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "82") (term "0") (inst "i=i") (inst "i_0=i_0"))
         (rule "expand_inInt" (formula "82") (term "1,0,0,1,0"))
         (rule "expand_inInt" (formula "82") (term "1,0,0,1,0,0"))
         (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1,0"))
         (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1,0"))
         (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1,0,0"))
         (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1,0,0"))
         (rule "eqSymm" (formula "82") (term "0,0,0"))
         (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0"))
         (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "1,1,0,0,1,0,0"))
         (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "7"))
         (rule "applyEq" (formula "82") (term "0,0,0,0,0") (ifseqformula "7"))
         (rule "eqSymm" (formula "82") (term "0,0,0"))
         (rule "applyEq" (formula "82") (term "0,0,0,1,0,1,0,0") (ifseqformula "6"))
         (rule "applyEq" (formula "82") (term "0,0,0,1,0,1,0") (ifseqformula "7"))
         (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,0,0") (ifseqformula "6"))
         (rule "applyEq" (formula "82") (term "0,0,0,0,0") (ifseqformula "6"))
         (rule "eqSymm" (formula "82") (term "0,0,0"))
         (rule "replace_known_left" (formula "82") (term "0,0,0") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "82"))
         (rule "applyEq" (formula "82") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "32"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
         (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
         (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
         (rule "nnf_imp2or" (formula "82") (term "0,0,0"))
         (rule "nnf_imp2or" (formula "82") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "82") (term "0,0,1,1,1"))
         (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,1,1,1"))
         (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,1,1,1"))
         (rule "add_zero_right" (formula "82") (term "0,0,0,0,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,1,1,1"))
         (rule "mul_literals" (formula "82") (term "1,0,0,0,1,1,1"))
         (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,1,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,1,1,1"))
         (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,1,1,1"))
         (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,1,1"))
         (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,1,1,1"))
         (rule "nnf_notAnd" (formula "82") (term "0,0,0,0"))
         (rule "nnf_notAnd" (formula "82") (term "0,0,1,0"))
         (rule "nnf_notAnd" (formula "82") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "82") (term "1,1,0,0,0,0"))
         (rule "mul_literals" (formula "82") (term "1,0,0,1,1,0,0,0,0"))
         (rule "add_literals" (formula "82") (term "0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,1,0,0,0,0"))
         (rule "mul_literals" (formula "82") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "82") (term "0,1,0,0,0,0"))
         (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,1,0,0,0,0"))
         (rule "mul_literals" (formula "82") (term "1,0,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "82") (term "0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "82") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0,0"))
         (rule "mul_literals" (formula "82") (term "1,0,0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,0,0,0"))
         (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
         (rule "nnf_notAnd" (formula "82") (term "1,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "82") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "1,0,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "82") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "1,0,0,1,1,0,0,1,0"))
         (rule "add_literals" (formula "82") (term "0,0,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "1,1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "82") (term "0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,0,1,0"))
         (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "82") (term "0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,0,1,0"))
         (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,1,0"))
         (rule "commute_or_2" (formula "62") (term "0"))
         (rule "commute_or_2" (formula "58") (term "0"))
         (rule "commute_or_2" (formula "44") (term "0"))
         (rule "commute_or_2" (formula "37") (term "0"))
         (rule "commute_or_2" (formula "42") (term "0"))
         (rule "commute_and" (formula "51") (term "0,0,1,0"))
         (rule "commute_or" (formula "51") (term "0,0"))
         (rule "commute_or_2" (formula "1") (term "0"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "82") (term "0,1,1") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
          (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")) (ifInst ""  (formula "68")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "79")) (ifInst ""  (formula "80")) (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
         (rule "castedGetAny" (formula "82") (term "0,1,0,1,0,0,0,0,1,1"))
         (rule "castedGetAny" (formula "82") (term "0,1,0,1,0,1,1"))
         (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0,0,1,1"))
         (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0,0,0,0,1,1"))
         (rule "castedGetAny" (formula "82") (term "0,0,1,0,1,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0,0,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,0,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0,0,1,1"))
         (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,1,0,1,1") (ifseqformula "8"))
         (rule "applyEq" (formula "82") (term "0,0,0,1,0,1,0,0,0,1,1") (ifseqformula "8"))
         (rule "applyEq" (formula "82") (term "0,0,1,0,1,0,1,1") (ifseqformula "8"))
         (rule "applyEq" (formula "82") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "57"))
         (rule "replace_known_right" (formula "82") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "82"))
         (rule "applyEq" (formula "82") (term "0,0,1,0,0,1,0,0,1,0,0,0,1,1") (ifseqformula "8"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,0,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,0,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,0,0,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0,0,0,1,1"))
         (rule "nnf_imp2or" (formula "82") (term "0,1,0,0,1,1"))
         (rule "nnf_imp2or" (formula "82") (term "0,1,0,0,0,1,1"))
         (rule "nnf_notAnd" (formula "82") (term "0,0,1,0,0,1,1"))
         (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,1,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,1,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,1,0,0,1,1"))
         (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,0,0,1,1"))
         (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,1,0,0,1,1"))
         (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,1,0,0,1,1"))
         (rule "add_zero_right" (formula "82") (term "0,0,0,0,0,1,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,1,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,1,1"))
         (rule "nnf_imp2or" (formula "82") (term "0,0,0,0,0,0,1,1"))
         (rule "nnf_notAnd" (formula "82") (term "0,0,1,0,0,0,1,1"))
         (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,0,1,0,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,1"))
         (rule "add_literals" (formula "82") (term "0,0,0,1,0,0,1,0,0,0,1,1"))
         (rule "add_zero_left" (formula "82") (term "0,0,1,0,0,1,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,1,0,0,0,1,1"))
         (rule "inEqSimp_notGeq" (formula "82") (term "0,0,0,1,0,0,0,1,1"))
         (rule "times_zero_1" (formula "82") (term "1,0,0,0,0,0,1,0,0,0,1,1"))
         (rule "add_zero_right" (formula "82") (term "0,0,0,0,0,1,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,1,0,0,0,1,1"))
         (rule "mul_literals" (formula "82") (term "1,0,0,0,1,0,0,0,1,1"))
         (rule "lenNonNegative" (formula "110") (term "1,0"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "seqGetAlphaCast" (formula "62") (term "0"))
         (rule "castedGetAny" (formula "62") (term "0"))
          (builtin "One Step Simplification" (formula "62"))
         (rule "true_left" (formula "62"))
         (rule "seqGetAlphaCast" (formula "66") (term "0"))
         (rule "castedGetAny" (formula "66") (term "0"))
          (builtin "One Step Simplification" (formula "66"))
         (rule "true_left" (formula "66"))
         (rule "lenNonNegative" (formula "111") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
         (rule "andLeft" (formula "4"))
         (rule "applyEq" (formula "5") (term "0,1,1,0,0") (ifseqformula "6"))
         (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
         (rule "andLeft" (formula "7"))
         (rule "applyEq" (formula "8") (term "0,1,1,0,0") (ifseqformula "9"))
         (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "nnf_notAnd" (formula "84") (term "0,0,0,0,0,0,0,1,1"))
         (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0,0,0,0,0,0,1,1"))
         (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
         (rule "add_literals" (formula "84") (term "0,0,0,1,0,0,0,0,0,0,0,1,1"))
         (rule "add_zero_left" (formula "84") (term "0,0,1,0,0,0,0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0,0,0,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,0,0,0,0,0,1,1"))
         (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0,0,0,0,0,0,1,1"))
         (rule "times_zero_1" (formula "84") (term "1,0,0,0,0,0,0,0,0,0,0,1,1"))
         (rule "add_zero_right" (formula "84") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,0,0,0,0,0,1,1"))
         (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0,0,0,0,1,1"))
         (rule "commute_or_2" (formula "35") (term "0"))
         (rule "commute_or_2" (formula "36") (term "0"))
         (rule "lenNonNegative" (formula "62") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "62"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "85") (term "0,1"))
         (rule "replace_known_right" (formula "85") (term "0,0,0,0,1") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "applyEq" (formula "85") (term "0,0,0,0,1") (ifseqformula "11"))
         (rule "replace_known_right" (formula "85") (term "0,0,0,1") (ifseqformula "108"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "applyEq" (formula "85") (term "0,0,0,1") (ifseqformula "12"))
         (rule "replace_known_right" (formula "85") (term "0,0,1") (ifseqformula "109"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "commute_or" (formula "65") (term "0,0"))
         (rule "commute_or" (formula "60") (term "0,0"))
         (rule "commute_or" (formula "46") (term "0,0"))
         (rule "commute_or" (formula "39") (term "0,0"))
         (rule "commute_or" (formula "44") (term "0,0"))
         (rule "commute_or" (formula "3") (term "0,0"))
         (rule "commute_and_2" (formula "53") (term "0,1,0"))
         (rule "commute_or_2" (formula "65") (term "0"))
         (rule "commute_or_2" (formula "60") (term "0"))
         (rule "commute_or_2" (formula "46") (term "0"))
         (rule "commute_or_2" (formula "39") (term "0"))
         (rule "commute_or_2" (formula "44") (term "0"))
         (rule "commute_or_2" (formula "35") (term "0,0"))
         (rule "commute_or_2" (formula "36") (term "0,0"))
         (rule "commute_or" (formula "35") (term "0,0,0"))
         (rule "commute_or_2" (formula "35") (term "0,0"))
         (rule "commute_or_2" (formula "35") (term "0"))
         (rule "commute_or" (formula "36") (term "0,0,0"))
         (rule "commute_or_2" (formula "36") (term "0,0"))
         (rule "commute_or_2" (formula "36") (term "0"))
         (rule "andRight" (formula "85"))
         (branch
            (rule "andRight" (formula "85"))
            (branch
               (rule "allRight" (formula "85") (inst "sk=i_0_0"))
               (rule "orRight" (formula "85"))
               (rule "notRight" (formula "86"))
               (rule "orRight" (formula "86"))
               (rule "orRight" (formula "87"))
               (rule "orRight" (formula "86"))
               (rule "inEqSimp_leqRight" (formula "89"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "89"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "88"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "89"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
               (rule "leq_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "ex_pull_out3" (formula "57") (term "0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
               (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
               (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "7") (inst "t=i_0"))
               (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "57"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "55"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "7") (term "0,0,1"))
               (rule "leq_literals" (formula "7") (term "0,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "7"))
               (rule "qeq_literals" (formula "52") (term "0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "closeFalse" (formula "52"))
            )
            (branch
               (rule "allRight" (formula "85") (inst "sk=i_2"))
               (rule "orRight" (formula "85"))
               (rule "notRight" (formula "86"))
               (rule "orRight" (formula "86"))
               (rule "orRight" (formula "87"))
               (rule "orRight" (formula "86"))
               (rule "inEqSimp_leqRight" (formula "89"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "89"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "89"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "89"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
               (rule "leq_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "ex_pull_out3" (formula "57") (term "0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
               (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
               (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "7") (inst "t=i_0"))
               (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "57"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "55"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "7") (term "0,0,1"))
               (rule "leq_literals" (formula "7") (term "0,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "52"))
               (rule "qeq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
         )
         (branch
            (rule "andRight" (formula "85"))
            (branch
               (rule "andRight" (formula "85"))
               (branch
                  (rule "andRight" (formula "85"))
                  (branch
                     (rule "andRight" (formula "85"))
                     (branch
                        (rule "andRight" (formula "85"))
                        (branch
                           (rule "allRight" (formula "85") (inst "sk=i_3_0"))
                           (rule "orRight" (formula "85"))
                           (rule "notRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "inEqSimp_leqRight" (formula "86"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "87"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "ex_pull_out3" (formula "56") (term "0"))
                           (rule "cnf_rightDist" (formula "56") (term "0,0"))
                           (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                           (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                           (rule "allLeft" (formula "6") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "56"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "54"))
                           (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "6") (term "0,0,1"))
                           (rule "leq_literals" (formula "6") (term "0,1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "51"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                        (branch
                           (rule "nnf_ex2all" (formula "85"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "ex_pull_out3" (formula "54") (term "0"))
                           (rule "cnf_rightDist" (formula "54") (term "0,0"))
                           (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                           (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                           (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                           (rule "allLeft" (formula "4") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "54"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "49"))
                           (rule "qeq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "4"))
                           (rule "andLeft" (formula "52"))
                           (rule "inEqSimp_homoInEq1" (formula "52"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                           (rule "add_literals" (formula "52") (term "1,1,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0"))
                           (rule "add_zero_right" (formula "52") (term "0"))
                           (rule "leq_literals" (formula "52"))
                           (rule "closeFalse" (formula "52"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "85") (inst "sk=i_1_0"))
                        (rule "orRight" (formula "85"))
                        (rule "notRight" (formula "86"))
                        (rule "orRight" (formula "86"))
                        (rule "inEqSimp_geqRight" (formula "87"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "87"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "ex_pull_out3" (formula "56") (term "0"))
                        (rule "cnf_rightDist" (formula "56") (term "0,0"))
                        (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                        (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                        (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "6") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "56"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "51"))
                        (rule "qeq_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "inEqSimp_contradInEq0" (formula "54") (ifseqformula "6"))
                        (rule "andLeft" (formula "54"))
                        (rule "inEqSimp_homoInEq1" (formula "54"))
                        (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                        (rule "add_literals" (formula "54") (term "1,1,0"))
                        (rule "times_zero_1" (formula "54") (term "1,0"))
                        (rule "add_zero_right" (formula "54") (term "0"))
                        (rule "leq_literals" (formula "54"))
                        (rule "closeFalse" (formula "54"))
                     )
                  )
                  (branch
                     (rule "allRight" (formula "85") (inst "sk=i_0_0"))
                     (rule "orRight" (formula "85"))
                     (rule "orRight" (formula "85"))
                     (rule "notRight" (formula "87"))
                     (rule "inEqSimp_geqRight" (formula "87"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "87"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "ex_pull_out3" (formula "56") (term "0"))
                     (rule "cnf_rightDist" (formula "56") (term "0,0"))
                     (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                     (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                     (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "6") (inst "t=i_0"))
                     (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "56"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "54"))
                     (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "6") (term "0,0,1"))
                     (rule "leq_literals" (formula "6") (term "0,1"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "51"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
               )
               (branch
                  (rule "nnf_ex2all" (formula "85"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0"))
                  (rule "commute_or" (formula "1") (term "0,0"))
                  (rule "ex_pull_out3" (formula "54") (term "0"))
                  (rule "cnf_rightDist" (formula "54") (term "0,0"))
                  (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                  (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                  (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                  (rule "allLeft" (formula "4") (inst "t=i_0"))
                  (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "49"))
                  (rule "qeq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "52"))
                  (rule "andLeft" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "leq_literals" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
            (branch
               (rule "allRight" (formula "85") (inst "sk=j_0"))
               (rule "orRight" (formula "85"))
               (rule "orRight" (formula "85"))
               (rule "eqSymm" (formula "87") (term "1,0"))
               (rule "inEqSimp_leqRight" (formula "85"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "86"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "nnf_ex2all" (formula "87"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "1") (term "0"))
               (rule "commute_or" (formula "1") (term "0,0"))
               (rule "ex_pull_out3" (formula "56") (term "0"))
               (rule "cnf_rightDist" (formula "56") (term "0,0"))
               (rule "shift_paren_or" (formula "56") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
               (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
               (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "6") (inst "t=i_0"))
               (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "56"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "51"))
               (rule "qeq_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "54"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
      )
   )
)
)
}
