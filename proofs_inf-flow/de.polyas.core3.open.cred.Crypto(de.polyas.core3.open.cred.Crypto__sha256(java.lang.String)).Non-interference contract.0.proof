\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Nov 11 21:54:30 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Nov 11 21:54:31 CET 2019
contract=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:sha256(java.lang.String)].Non-interference contract.0
name=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:sha256(java.lang.String)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "3359")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "eqSymm" (formula "4") (term "0,0,0,1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "6"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "boxToDiamond" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_sha256,savedHeapBefore_sha256"))
 (builtin "One Step Simplification" (formula "7"))
(rule "returnUnfold" (formula "7") (term "1") (inst "#v0=s"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "s"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "7") (term "1"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "var"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "7") (term "1") (inst "#v0=m"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "m"))
(rule "activeUseStaticFieldReadAccess" (formula "7") (term "1"))
(rule "assignment_read_static_attribute" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "7") (term "1"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "var_1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "var_2"))
 (builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_getBytes,result_52,exc_62,heapAfter_getBytes,anon_heap_getBytes") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
(branch "Post (getBytes)"
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "11"))
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "9"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "assignment" (formula "15") (term "1"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "Class_invariant_axiom_for_java_lang_String" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "Class_invariant_axiom_for_java_lang_String" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "commute_or" (formula "7"))
    (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_digest,result_53,exc_63,heapAfter_digest,anon_heap_digest") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
   (branch "Post (digest)"
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
       (builtin "One Step Simplification" (formula "11"))
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1") (ifseqformula "5"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "14"))
      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "assignment" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "blockEmpty" (formula "23") (term "1"))
      (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "commute_or" (formula "16"))
      (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "commute_or_2" (formula "12"))
      (rule "commute_or" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "12"))
       (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_asHexString,result_54,exc_64,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
      (branch "Post (asHexString)"
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")))
          (builtin "One Step Simplification" (formula "17"))
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1") (ifseqformula "5"))
         (rule "andLeft" (formula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0") (ifseqformula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,1,0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,0,1,1,0") (ifseqformula "5"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "18"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "assignment" (formula "28") (term "1"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "blockEmpty" (formula "28") (term "1"))
         (rule "commute_or_2" (formula "21"))
         (rule "commute_or_2" (formula "17"))
         (rule "commute_or" (formula "21") (term "0"))
         (rule "commute_or_2" (formula "21"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "17"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "17"))
         (rule "methodCallReturn" (formula "27") (term "1"))
         (rule "assignment" (formula "27") (term "1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (rule "tryEmpty" (formula "27") (term "1"))
         (rule "emptyModality" (formula "27") (term "1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "notRight" (formula "27"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "2"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "Use_information_flow_contract_for_getBytes_485683870" (formula "13") (ifseqformula "13"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "Use_information_flow_contract_for_digest_1214924262" (formula "18") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
         (rule "true_left" (formula "18"))
         (rule "Use_information_flow_contract_for_asHexString_1063021898" (formula "24") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
         (rule "true_left" (formula "24"))
         (rule "Use_information_flow_contract_for_getBytes_485683870" (formula "13") (ifseqformula "13"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "Use_information_flow_contract_for_digest_1214924262" (formula "18") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
         (rule "true_left" (formula "18"))
         (rule "Use_information_flow_contract_for_asHexString_1063021898" (formula "24") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
         (rule "true_left" (formula "24"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "11"))
         (rule "eqSymm" (formula "11") (term "1,0,0,1"))
         (rule "eqSymm" (formula "11") (term "0,0,0,1"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "29"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "assignment" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "boxToDiamond" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "notLeft" (formula "11"))
         (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "12"))
         (rule "notLeft" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_sha256_0,savedHeapBefore_sha256_0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "returnUnfold" (formula "29") (term "1") (inst "#v0=s"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "s_1"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "29") (term "1"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_3"))
         (rule "methodCallWithAssignmentUnfoldTarget" (formula "29") (term "1") (inst "#v0=m"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "m_1"))
         (rule "activeUseStaticFieldReadAccess" (formula "29") (term "1"))
         (rule "assignment_read_static_attribute" (formula "29") (term "1"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "29") (term "1"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "29") (term "1"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_5"))
          (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_getBytes_0,result_55,exc_65,heapAfter_getBytes_0,anon_heap_getBytes_0") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
         (branch "Post (getBytes)"
             (builtin "One Step Simplification" (formula "33"))
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "28"))
             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "8")))
            (rule "andLeft" (formula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0") (ifseqformula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "notLeft" (formula "31"))
            (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "34"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "assignment" (formula "37") (term "1"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "applyEq" (formula "32") (term "4") (ifseqformula "31"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "33"))
            (rule "true_left" (formula "33"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "commute_or" (formula "29"))
             (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_digest_0,result_56,exc_66,heapAfter_digest_0,anon_heap_digest_0") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
            (branch "Post (digest)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                (builtin "One Step Simplification" (formula "34"))
                (builtin "One Step Simplification" (formula "33"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1") (ifseqformula "28"))
               (rule "andLeft" (formula "33"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1,0") (ifseqformula "33"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,1,0") (ifseqformula "28"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "36"))
               (rule "notLeft" (formula "37"))
               (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "41"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "assignment" (formula "45") (term "1"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "blockEmpty" (formula "45") (term "1"))
               (rule "applyEq" (formula "37") (term "5") (ifseqformula "34"))
               (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "commute_or" (formula "39"))
               (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "36"))
               (rule "true_left" (formula "36"))
               (rule "commute_or_2" (formula "35"))
               (rule "commute_or" (formula "35") (term "0"))
               (rule "commute_or_2" (formula "35"))
                (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_asHexString_0,result_57,exc_67,heapAfter_asHexString_0,anon_heap_asHexString_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
               (branch "Post (asHexString)"
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "42")) (ifInst ""  (formula "42")))
                   (builtin "One Step Simplification" (formula "39"))
                   (builtin "One Step Simplification" (formula "46"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1") (ifseqformula "33"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1") (ifseqformula "28"))
                  (rule "andLeft" (formula "39"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,1,0") (ifseqformula "39"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,1,0") (ifseqformula "33"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,1,0") (ifseqformula "28"))
                  (rule "andLeft" (formula "42"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "40"))
                  (rule "notLeft" (formula "41"))
                  (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "assignment" (formula "50") (term "1"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "blockEmpty" (formula "50") (term "1"))
                  (rule "applyEq" (formula "42") (term "3") (ifseqformula "41"))
                  (rule "commute_or_2" (formula "44"))
                  (rule "commute_or_2" (formula "40"))
                  (rule "commute_or" (formula "44") (term "0"))
                  (rule "commute_or_2" (formula "44"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "commute_or_2" (formula "40"))
                  (rule "commute_or" (formula "40") (term "0,0"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "commute_or_2" (formula "40"))
                  (rule "methodCallReturn" (formula "49") (term "1"))
                  (rule "assignment" (formula "49") (term "1"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "methodCallEmpty" (formula "49") (term "1"))
                  (rule "tryEmpty" (formula "49") (term "1"))
                  (rule "emptyModality" (formula "49") (term "1"))
                  (rule "Use_information_flow_contract_for_getBytes_485683870" (formula "31") (ifseqformula "14"))
                  (rule "impLeft" (formula "31"))
                  (branch "pre getBytes_485683870 (information flow)"
                     (rule "andRight" (formula "44"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "notRight" (formula "50"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "61") (term "0"))
                        (rule "eqSymm" (formula "61") (term "1"))
                        (rule "eqSymm" (formula "2"))
                        (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "45") (term "2") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "3") (ifseqformula "27"))
                        (rule "applyEq" (formula "28") (term "2") (ifseqformula "6"))
                        (rule "applyEq" (formula "54") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "26") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "22") (term "5") (ifseqformula "20"))
                        (rule "applyEq" (formula "17") (term "4") (ifseqformula "15"))
                        (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "43") (term "1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "43") (term "1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "1"))
                        (rule "Class_invariant_axiom_for_java_lang_String" (formula "47"))
                        (rule "closeTrue" (formula "47"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "notRight" (formula "50"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "61") (term "0"))
                        (rule "eqSymm" (formula "61") (term "1"))
                        (rule "eqSymm" (formula "2"))
                        (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "45") (term "2") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "3") (ifseqformula "27"))
                        (rule "applyEq" (formula "28") (term "2") (ifseqformula "6"))
                        (rule "applyEq" (formula "54") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "26") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "22") (term "5") (ifseqformula "20"))
                        (rule "applyEq" (formula "17") (term "4") (ifseqformula "15"))
                        (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "43") (term "1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "43") (term "1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "1"))
                        (rule "Class_invariant_axiom_for_java_lang_String" (formula "47"))
                        (rule "closeTrue" (formula "47"))
                     )
                  )
                  (branch "post getBytes_485683870 (information flow)"
                     (rule "Use_information_flow_contract_for_getBytes_485683870_0" (formula "32") (ifseqformula "14"))
                     (rule "impLeft" (formula "32"))
                     (branch "pre getBytes_485683870_0 (information flow)"
                        (rule "andRight" (formula "45"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "andLeft" (formula "31"))
                           (rule "notRight" (formula "52"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "63") (term "0"))
                           (rule "eqSymm" (formula "63") (term "1"))
                           (rule "eqSymm" (formula "2"))
                           (rule "allFieldsEq" (formula "35") (term "1"))
                           (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "26") (term "1,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "35") (term "3") (ifseqformula "34"))
                           (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "34"))
                           (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "34"))
                           (rule "applyEq" (formula "44") (term "1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "44") (term "1,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "51") (term "0") (ifseqformula "34"))
                           (rule "applyEq" (formula "40") (term "1") (ifseqformula "34"))
                           (rule "applyEq" (formula "28") (term "2") (ifseqformula "6"))
                           (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "54") (term "0") (ifseqformula "6"))
                           (rule "applyEq" (formula "22") (term "5") (ifseqformula "20"))
                           (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "46") (term "2") (ifseqformula "1"))
                           (rule "applyEq" (formula "28") (term "3") (ifseqformula "27"))
                           (rule "applyEq" (formula "17") (term "4") (ifseqformula "15"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "6"))
                           (rule "Class_invariant_axiom_for_java_lang_String" (formula "48"))
                           (rule "closeTrue" (formula "48"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "andLeft" (formula "31"))
                           (rule "notRight" (formula "52"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "63") (term "0"))
                           (rule "eqSymm" (formula "63") (term "1"))
                           (rule "eqSymm" (formula "2"))
                           (rule "allFieldsEq" (formula "35") (term "1"))
                           (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "22") (term "5") (ifseqformula "20"))
                           (rule "applyEq" (formula "55") (term "0") (ifseqformula "6"))
                           (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "34"))
                           (rule "applyEq" (formula "44") (term "1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "28") (term "2") (ifseqformula "6"))
                           (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "44") (term "1,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "51") (term "0") (ifseqformula "34"))
                           (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "40") (term "1") (ifseqformula "34"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "35") (term "3") (ifseqformula "34"))
                           (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "26") (term "1,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "28") (term "3") (ifseqformula "27"))
                           (rule "applyEq" (formula "46") (term "2") (ifseqformula "1"))
                           (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "34"))
                           (rule "applyEq" (formula "17") (term "4") (ifseqformula "15"))
                           (rule "Class_invariant_axiom_for_java_lang_String" (formula "48"))
                           (rule "closeTrue" (formula "48"))
                        )
                     )
                     (branch "post getBytes_485683870_0 (information flow)"
                        (rule "Use_information_flow_contract_for_digest_1214924262_0" (formula "37") (ifseqformula "19"))
                        (rule "Use_information_flow_contract_for_digest_1214924262" (formula "38") (ifseqformula "19"))
                        (rule "Use_information_flow_contract_for_asHexString_1063021898" (formula "44") (ifseqformula "25"))
                        (rule "Use_information_flow_contract_for_asHexString_1063021898_0" (formula "45") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "andLeft" (formula "31"))
                        (rule "notRight" (formula "53"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "64") (term "0"))
                        (rule "eqSymm" (formula "64") (term "1"))
                        (rule "eqSymm" (formula "2"))
                        (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "52"))
                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                        (rule "andLeft" (formula "48"))
                        (rule "replace_known_right" (formula "41") (term "0,1,1,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "54")))
                        (rule "allFieldsEq" (formula "35") (term "1"))
                        (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "allFieldsEq" (formula "48") (term "0"))
                        (rule "applyEq" (formula "45") (term "1,0,1,0") (ifseqformula "47"))
                        (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "34"))
                        (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "47"))
                        (rule "applyEq" (formula "26") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "45") (term "1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "41") (term "1") (ifseqformula "34"))
                        (rule "applyEq" (formula "28") (term "2") (ifseqformula "6"))
                        (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "57") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "28") (term "3") (ifseqformula "27"))
                        (rule "applyEq" (formula "53") (term "0") (ifseqformula "34"))
                        (rule "applyEq" (formula "17") (term "4") (ifseqformula "15"))
                        (rule "applyEq" (formula "51") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "45") (term "1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "34"))
                        (rule "applyEq" (formula "49") (term "2") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "47"))
                        (rule "applyEq" (formula "22") (term "5") (ifseqformula "20"))
                        (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "35") (term "3") (ifseqformula "34"))
                        (rule "applyEq" (formula "47") (term "1") (ifseqformula "6"))
                        (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "45") (term "1,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                        (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "63"))
                        (rule "applyEq" (formula "48") (term "0,0,1") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "50") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "45") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "48") (term "2") (ifseqformula "6"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "6"))
                        (rule "applyEq" (formula "45") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "closeTrue" (formula "61"))
                     )
                  )
               )
               (branch "Exceptional Post (asHexString)"
                   (builtin "One Step Simplification" (formula "39"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "andLeft" (formula "39"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "39"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0") (ifseqformula "33"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0") (ifseqformula "28"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "40"))
                  (rule "close" (formula "43") (ifseqformula "42"))
               )
               (branch "Pre (asHexString)"
                   (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1") (ifseqformula "33"))
                  (rule "wellFormedAnonEQ" (formula "42") (term "0") (ifseqformula "33"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1") (ifseqformula "28"))
                  (rule "eqSymm" (formula "51") (term "0"))
                  (rule "eqSymm" (formula "51") (term "1"))
                  (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "37")))
                  (rule "orRight" (formula "42"))
                  (rule "orRight" (formula "42"))
                  (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "44")) (ifInst ""  (formula "43")))
                  (rule "closeFalse" (formula "35"))
               )
            )
            (branch "Exceptional Post (digest)"
                (builtin "One Step Simplification" (formula "33"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "andLeft" (formula "33"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "33"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0") (ifseqformula "28"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "36"))
               (rule "notLeft" (formula "34"))
               (rule "close" (formula "37") (ifseqformula "36"))
            )
            (branch "Pre (digest)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1") (ifseqformula "28"))
               (rule "wellFormedAnonEQ" (formula "35") (term "0,1") (ifseqformula "28"))
               (rule "eqSymm" (formula "44") (term "0"))
               (rule "eqSymm" (formula "44") (term "1"))
               (rule "replace_known_left" (formula "35") (term "1,0,1") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "8")))
               (rule "applyEq" (formula "25") (term "2") (ifseqformula "3"))
               (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "25") (term "3") (ifseqformula "24"))
               (rule "applyEq" (formula "19") (term "5") (ifseqformula "17"))
               (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "3"))
               (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
               (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "14") (term "4") (ifseqformula "12"))
               (rule "applyEq" (formula "23") (term "1,0,1,0,0") (ifseqformula "3"))
               (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "35") (term "0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "orRight" (formula "35"))
               (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
               (rule "closeFalse" (formula "29"))
            )
            (branch "Null reference (var_4 = null)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")))
               (rule "closeTrue" (formula "35"))
            )
         )
         (branch "Exceptional Post (getBytes)"
             (builtin "One Step Simplification" (formula "31"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "31"))
            (rule "notLeft" (formula "29"))
            (rule "close" (formula "33") (ifseqformula "32"))
         )
         (branch "Pre (getBytes)"
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "8")))
            (rule "eqSymm" (formula "38") (term "0"))
            (rule "eqSymm" (formula "38") (term "1"))
            (rule "applyEq" (formula "25") (term "2") (ifseqformula "3"))
            (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "3"))
            (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
            (rule "applyEq" (formula "19") (term "5") (ifseqformula "17"))
            (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "14") (term "4") (ifseqformula "12"))
            (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "25") (term "3") (ifseqformula "24"))
            (rule "applyEq" (formula "23") (term "1,0,1,0,0") (ifseqformula "3"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "29"))
            (rule "closeTrue" (formula "29"))
         )
         (branch "Null reference (_input_2_B = null)"
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "30")))
            (rule "closeTrue" (formula "29"))
         )
      )
      (branch "Exceptional Post (asHexString)"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "andLeft" (formula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,0,1,0") (ifseqformula "5"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "17"))
         (rule "close" (formula "20") (ifseqformula "19"))
      )
      (branch "Pre (asHexString)"
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "10"))
         (rule "wellFormedAnonEQ" (formula "20") (term "0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "5"))
         (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "9")))
         (rule "orRight" (formula "20"))
         (rule "orRight" (formula "20"))
         (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")))
         (rule "closeFalse" (formula "12"))
      )
   )
   (branch "Exceptional Post (digest)"
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "11"))
      (rule "close" (formula "14") (ifseqformula "13"))
   )
   (branch "Pre (digest)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
      (rule "wellFormedAnonEQ" (formula "13") (term "0,1") (ifseqformula "5"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1") (ifseqformula "5"))
      (rule "replace_known_left" (formula "13") (term "1,0,1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
      (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "orRight" (formula "13"))
      (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")))
      (rule "closeFalse" (formula "7"))
   )
   (branch "Null reference (var_1 = null)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
      (rule "closeTrue" (formula "13"))
   )
)
(branch "Exceptional Post (getBytes)"
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "10") (ifseqformula "9"))
)
(branch "Pre (getBytes)"
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_java_lang_String" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
(branch "Null reference (_input_2_A = null)"
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "8")))
   (rule "closeTrue" (formula "7"))
)
)
}
