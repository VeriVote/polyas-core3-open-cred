\sorts {
  \generic alpha, beta;
}

\rules(sequences:on){
    seqGetReplaceType {
        \schemaVar \term Seq seq;
		\schemaVar \term int idx;
		
	    \assumes(beta::seqGet(seq, idx) != null ==>)
	    \find(==> alpha::seqGet(seq, idx) != null)
	    \varcond(\sub(beta, alpha))
	    \closegoal
    };

    seqCastInstance {
        \schemaVar \term Seq seq;
		\schemaVar \term int idx;
		
	    \find(beta::instance(alpha::seqGet(seq, idx)) = TRUE)
	    \varcond(\sub(beta, alpha))
	    \replacewith(beta::seqGet(seq, idx) != null | alpha::seqGet(seq, idx) = null)
    };

    castRemoveBeta {
		\schemaVar \term any t;
		
	    \find((beta)((alpha)t))
	    \varcond(\sub(beta, alpha))
	    \replacewith((beta)t)
    };
    
    // can be derived from castRemoveBeta and seqGetAlphaCast
    \lemma
    seqCastRemoveBeta {
        \schemaVar \term Seq seq;
		\schemaVar \term int idx;
		
	    \find((beta)alpha::seqGet(seq, idx))
	    \varcond(\sub(beta, alpha))
	    \replacewith(beta::seqGet(seq, idx))
    };
}
