macro autopilot;

# Invariant Initially Valid:

rule castAdd
    formula="java.lang.Object::<inv>(heapAfter_listIterator, result)"
    on="result";
auto;

# Body Preserves Invariant

rule castAdd
    formula="java.lang.Object::<inv>(heapAfter_addInputCol, result)"
    on="result";
auto;

rule "One Step Simplification";
macro autopilot;
rule applyEqReverse
    formula="\exists int i; (  leq(Z(0(#)), i) & lt(i, seqLen(Seq::select(heapAfter_next, org.apache.commons.csv.CSVRecord::select(heap, self, de.polyas.core3.open.cred.CredTool::$record), org.apache.commons.csv.CSVRecord::$key_seq))) &   (java.lang.String)(any::seqGet(Seq::select(heapAfter_next, org.apache.commons.csv.CSVRecord::select(heap, self, de.polyas.core3.open.cred.CredTool::$record), org.apache.commons.csv.CSVRecord::$key_seq), i)) = (java.lang.String)result_2)"
    on="result_2";
rule seqCastRemoveBeta
    formula="\exists int i; (  leq(Z(0(#)), i) & lt(i, seqLen(Seq::select(heapAfter_next, org.apache.commons.csv.CSVRecord::select(heap, self, de.polyas.core3.open.cred.CredTool::$record), org.apache.commons.csv.CSVRecord::$key_seq))) &   (java.lang.String)(any::seqGet(Seq::select(heapAfter_next, org.apache.commons.csv.CSVRecord::select(heap, self, de.polyas.core3.open.cred.CredTool::$record), org.apache.commons.csv.CSVRecord::$key_seq), i)) = (java.lang.String)(java.lang.Object::seqGet(Seq::select(heap, java.util.ArrayList::select(heap, self, de.polyas.core3.open.cred.CredTool::$cols), java.util.Collection::$seq), int::select(anon_heap_LOOP<<anonHeapFunction>>, result, java.util.ListIterator::$index))))"
    on="(java.lang.String)(java.lang.Object::seqGet(Seq::select(heap, java.util.ArrayList::select(heap, self, de.polyas.core3.open.cred.CredTool::$cols), java.util.Collection::$seq), int::select(anon_heap_LOOP<<anonHeapFunction>>, result, java.util.ListIterator::$index)))";
instantiate var="j" with="int::select(anon_heap_LOOP<<anonHeapFunction>>, result, java.util.ListIterator::$index)" hide;
rule impLeft;
tryclose;

rule applyEqReverse
    formula="!(java.lang.String)result_2 = null"
    on="result_2";
rule seqCastRemoveBeta
    formula="!  (java.lang.String)(java.lang.Object::seqGet(Seq::select(heap, java.util.ArrayList::select(heap, self, de.polyas.core3.open.cred.CredTool::$cols), java.util.Collection::$seq), int::select(anon_heap_LOOP<<anonHeapFunction>>, result, java.util.ListIterator::$index))) = null";
auto;
