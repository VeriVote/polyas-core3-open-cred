\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 19 18:11:56 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Dec 19 18:11:56 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:generateDataForVoter(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:generateDataForVoter(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "12528")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "record_125,password_141,self_1097,result_1052,exc_1394,heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "exLeft" (formula "12") (inst "sk=i_0"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "eqSymm" (formula "19") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "16"))
 (builtin "One Step Simplification" (formula "4"))
(rule "elementOfSingleton" (formula "19") (term "0,0,0,0,1,0,1"))
(rule "castedGetAny" (formula "15") (term "0,1,0,1,1,0"))
(rule "castedGetAny" (formula "15") (term "0,0,1,1,0,0,1,1,0"))
(rule "castedGetAny" (formula "15") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0"))
(rule "castedGetAny" (formula "15") (term "0,0,0,1,0,1,1,0"))
(rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "13"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "13") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
(rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "assignment" (formula "19") (term "1"))
 (builtin "One Step Simplification" (formula "19"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "13"))
(rule "polySimp_mulLiterals" (formula "13") (term "0"))
(rule "polySimp_elimOne" (formula "13") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0"))
(rule "nnf_imp2or" (formula "15") (term "0"))
(rule "nnf_notAnd" (formula "15") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
(rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
(rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "15") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
(rule "mul_literals" (formula "15") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "15") (term "1,0"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "castDel" (formula "10") (term "0,0,0,0,0"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "10") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "eqSymm" (formula "10"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
(rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_imp2or" (formula "12") (term "0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0"))
(rule "nnf_notAnd" (formula "11") (term "1,0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,1,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
(rule "nnf_notAnd" (formula "11") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
(rule "nnf_notAnd" (formula "12") (term "1,0,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,1,0,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0"))
(rule "add_literals" (formula "12") (term "0,0,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "exLeft" (formula "18") (inst "sk=i_1"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "exLeft" (formula "15") (inst "sk=i_2_0"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "castedGetAny" (formula "19") (term "0,0,1,0"))
(rule "castedGetAny" (formula "18") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
(rule "castedGetAny" (formula "22") (term "0"))
(rule "castedGetAny" (formula "17") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "21"))
(rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "21") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "16"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "16") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
(rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
(rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "21"))
(rule "polySimp_mulLiterals" (formula "21") (term "0"))
(rule "polySimp_elimOne" (formula "21") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "16"))
(rule "polySimp_mulLiterals" (formula "16") (term "0"))
(rule "polySimp_elimOne" (formula "16") (term "0"))
(rule "nnf_imp2or" (formula "19") (term "0"))
(rule "nnf_imp2or" (formula "18") (term "0"))
(rule "nnf_imp2or" (formula "14") (term "0"))
(rule "nnf_notAnd" (formula "19") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
(rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
(rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
(rule "mul_literals" (formula "19") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "18") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
(rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
(rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
(rule "mul_literals" (formula "18") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "14") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
(rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
(rule "mul_literals" (formula "14") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "9"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_generateDataForVoter,savedHeapBefore_generateDataForVoter"))
 (builtin "One Step Simplification" (formula "56"))
(rule "commute_or_2" (formula "11") (term "0,0"))
(rule "commute_or" (formula "13"))
(rule "commute_or_2" (formula "12") (term "0,0"))
(rule "charLiteral_to_int" (formula "26") (term "1,1,1,0,1,1,0"))
(rule "add_literals" (formula "26") (term "1,1,0,1,1,0"))
(rule "commute_or_2" (formula "19") (term "0"))
(rule "commute_or_2" (formula "18") (term "0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "8"))
(rule "true_left" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "8"))
(rule "true_left" (formula "8"))
(rule "commute_or_2" (formula "12") (term "0"))
(rule "seqGetAlphaCast" (formula "23") (term "0"))
(rule "castedGetAny" (formula "23") (term "0"))
 (builtin "One Step Simplification" (formula "23"))
(rule "true_left" (formula "23"))
(rule "commute_or" (formula "17") (term "0,0"))
(rule "commute_or" (formula "16") (term "0,0"))
(rule "lenNonNegative" (formula "22") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "22"))
(rule "commute_or" (formula "12") (term "0,0"))
(rule "shift_paren_or" (formula "9") (term "0,0,0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or_2" (formula "9") (term "0,0"))
(rule "commute_or" (formula "10") (term "1,0,0,0"))
(rule "commute_or_2" (formula "9") (term "0,0,0"))
(rule "commute_or_2" (formula "9") (term "0,0"))
(rule "shift_paren_or" (formula "10") (term "0,0,0"))
(rule "commute_or_2" (formula "10") (term "0"))
(rule "commute_or_2" (formula "10") (term "0,0"))
(rule "commute_or_2" (formula "10") (term "0,0,0"))
(rule "commute_or" (formula "9") (term "0,0,0,0"))
(rule "commute_or_2" (formula "9") (term "0,0,0"))
(rule "inEqSimp_or_subsumption1" (formula "9") (term "0,0,0"))
(rule "qeq_literals" (formula "9") (term "0,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "lenNonNegative" (formula "8") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
(rule "commute_or" (formula "10") (term "0,0,0,0"))
(rule "commute_or_2" (formula "10") (term "0,0,0"))
(rule "inEqSimp_or_subsumption1" (formula "10") (term "0,0,0"))
(rule "qeq_literals" (formula "10") (term "0,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "10"))
(rule "ex_pull_out3" (formula "25") (term "1,0"))
(rule "cnf_rightDist" (formula "25") (term "0,1,0"))
(rule "commute_or" (formula "25") (term "1,0,1,0"))
(rule "cnf_rightDist" (formula "25") (term "0,0,1,0"))
(rule "commute_or" (formula "25") (term "1,0,0,1,0"))
 (builtin "Use Operation Contract" (formula "56") (newnames "heapBefore_printStatus,exc_1395,heapAfter_printStatus,anon_heap_printStatus") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::printStatus()].JML normal_behavior operation contract.0"))
(branch "Post (printStatus)"
    (builtin "One Step Simplification" (formula "27"))
    (builtin "One Step Simplification" (formula "58"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "29"))
   (rule "notLeft" (formula "29"))
   (rule "variableDeclarationFinalAssign" (formula "60") (term "1"))
   (rule "variableDeclarationFinal" (formula "60") (term "1") (newnames "voterId_120"))
   (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "seqGetAlphaCast" (formula "20") (term "0"))
   (rule "castedGetAny" (formula "20") (term "0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "true_left" (formula "20"))
   (rule "seqGetAlphaCast" (formula "15") (term "0"))
   (rule "castedGetAny" (formula "15") (term "0"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "ex_pull_out3" (formula "25") (term "0"))
   (rule "cnf_rightDist" (formula "25") (term "0,0"))
   (rule "commute_or_2" (formula "25") (term "1,0,0"))
   (rule "shift_paren_or" (formula "25") (term "0,1,0,0"))
   (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
   (rule "commute_or_2" (formula "25") (term "1,0,0,0"))
   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "25") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "25") (term "0,1,0,0,0"))
   (rule "commute_or" (formula "25") (term "0,0,0,0,0,0"))
   (rule "lenNonNegative" (formula "19") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "lenNonNegative" (formula "14") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "62") (term "1"))
   (rule "variableDeclarationAssign" (formula "62") (term "1"))
   (rule "variableDeclaration" (formula "62") (term "1") (newnames "var"))
   (rule "assignment" (formula "62") (term "1"))
    (builtin "One Step Simplification" (formula "62"))
   (rule "variableDeclarationAssign" (formula "62") (term "1"))
   (rule "variableDeclaration" (formula "62") (term "1") (newnames "var_1"))
   (rule "assignment_read_attribute_this" (formula "62") (term "1"))
    (builtin "One Step Simplification" (formula "62"))
   (rule "pullOutSelect" (formula "62") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "3")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
   (rule "applyEqReverse" (formula "63") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "commute_and_2" (formula "27") (term "0,0"))
    (builtin "Use Operation Contract" (formula "62") (newnames "heapBefore_get,result_1053,exc_1396") (contract "org.apache.commons.csv.CSVRecord[org.apache.commons.csv.CSVRecord::get(java.lang.String)].JML normal_behavior operation contract.0"))
   (branch "Post (get)"
       (builtin "One Step Simplification" (formula "31"))
       (builtin "One Step Simplification" (formula "63"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,0") (ifseqformula "29"))
      (rule "andLeft" (formula "31"))
      (rule "andLeft" (formula "31"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "34"))
      (rule "notLeft" (formula "35"))
      (rule "exLeft" (formula "33") (inst "sk=i_2"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "35"))
      (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "castedGetAny" (formula "36") (term "0"))
      (rule "castedGetAny" (formula "35") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "34"))
      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "34") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "33"))
      (rule "assignment" (formula "70") (term "1"))
       (builtin "One Step Simplification" (formula "70"))
      (rule "blockEmpty" (formula "70") (term "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "34"))
      (rule "polySimp_mulLiterals" (formula "34") (term "0"))
      (rule "polySimp_elimOne" (formula "34") (term "0"))
      (rule "pullOutSelect" (formula "36") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "29"))
       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "68")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "36") (term "0,0"))
       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "68")))
      (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "36"))
      (rule "hideAuxiliaryEq" (formula "36"))
      (rule "pullOutSelect" (formula "35") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
      (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "29"))
       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "68")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "35") (term "0,0"))
       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "68")))
      (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "35"))
      (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "35"))
      (rule "hideAuxiliaryEq" (formula "35"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "37") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "37") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_4" (formula "37") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "37") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "37") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet00_4" (formula "37") (term "0,0,0,0,1,0,1"))
      (rule "replaceKnownSelect_taclet00_4" (formula "37") (term "0,1,1,0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "37") (term "0,0,0,0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "37") (term "0,1,1,0,0,0,1"))
      (rule "replaceKnownSelect_taclet00_6" (formula "37") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "37") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "37") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "37") (term "0,0,0,0,1,0,1,0"))
      (rule "expand_inInt" (formula "37") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "37") (term "1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "37") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "37") (term "1,0,1,0,0,1"))
      (rule "replace_int_MIN" (formula "37") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "37") (term "1,0,1,0,0,1,0"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "37"))
      (rule "eqSymm" (formula "37"))
      (rule "castedGetAny" (formula "38") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "37") (term "0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1,0,0"))
      (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,0") (ifseqformula "8"))
      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "37") (term "0"))
      (rule "nnf_imp2or" (formula "38") (term "0"))
      (rule "nnf_notAnd" (formula "37") (term "0,0"))
      (rule "nnf_notAnd" (formula "38") (term "0,0"))
      (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "37") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "37") (term "0,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "37") (term "1,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,1,0,0"))
      (rule "mul_literals" (formula "37") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "38") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "1,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0"))
      (rule "mul_literals" (formula "38") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
      (rule "commute_or_2" (formula "37") (term "0,0"))
      (rule "commute_or_2" (formula "38") (term "0,0"))
      (rule "shift_paren_or" (formula "37") (term "0,0,0"))
      (rule "commute_or_2" (formula "37") (term "0"))
      (rule "commute_or_2" (formula "37") (term "0,0"))
      (rule "commute_or_2" (formula "37") (term "0,0,0"))
      (rule "commute_or_2" (formula "37") (term "0,0"))
      (rule "shift_paren_or" (formula "38") (term "0,0,0"))
      (rule "commute_or_2" (formula "38") (term "0"))
      (rule "commute_or_2" (formula "38") (term "0,0"))
      (rule "commute_or_2" (formula "38") (term "0,0,0"))
      (rule "commute_or_2" (formula "38") (term "0,0"))
      (rule "commute_or" (formula "37") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "37") (term "0,0,0"))
      (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0,0"))
      (rule "qeq_literals" (formula "37") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "9")))
      (rule "true_left" (formula "37"))
      (rule "commute_or" (formula "37") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "37") (term "0,0,0"))
      (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0,0"))
      (rule "qeq_literals" (formula "37") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "37"))
      (rule "lenNonNegative" (formula "18") (term "1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
       (builtin "Use Operation Contract" (formula "70") (newnames "heapBefore_exitIfIdInvalid,exc_1397,heapAfter_exitIfIdInvalid,anon_heap_exitIfIdInvalid") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::exitIfIdInvalid(java.lang.String)].JML normal_behavior operation contract.0"))
      (branch "Post (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "39"))
          (builtin "One Step Simplification" (formula "72"))
         (rule "andLeft" (formula "39"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "57"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "allLeft" (formula "17") (inst "t=i_1"))
         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
         (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "24"))
         (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "58"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "allLeft" (formula "12") (inst "t=i_2_0"))
         (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
         (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "17"))
         (rule "replace_known_right" (formula "12") (term "0,0,0") (ifseqformula "58"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "71"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "12"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "13"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "14"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "15"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "16"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "17"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "18"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "returnUnfold" (formula "93") (term "1") (inst "#v0=g"))
         (rule "variableDeclarationAssign" (formula "93") (term "1"))
         (rule "variableDeclaration" (formula "93") (term "1") (newnames "g"))
         (rule "seqGetAlphaCast" (formula "57") (term "0"))
         (rule "castedGetAny" (formula "57") (term "0"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "true_left" (formula "57"))
         (rule "seqGetAlphaCast" (formula "56") (term "0"))
         (rule "castedGetAny" (formula "56") (term "0"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "true_left" (formula "56"))
          (builtin "Use Operation Contract" (formula "93") (newnames "heapBefore_generateDataForVoter_0,result_1054,exc_1398,heapAfter_generateDataForVoter,anon_heap_generateDataForVoter") (contract "de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator::generateDataForVoter(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "95"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,1,0,0,0,0,1,0,1,1") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,1,0,0,0,0,0,1,0,1,1") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,0,0,0,0,0,1,0,1,1") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,1,0,0,0,0,1,0,1,1") (ifseqformula "50"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,0,0,0,0,0,0,1,0,1,1") (ifseqformula "50"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,1,0,0,0,0,0,1,0,1,1") (ifseqformula "50"))
            (rule "andLeft" (formula "62"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "1,1,0") (ifseqformula "62"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "0,1,1,0") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "0,0,1,1,0") (ifseqformula "50"))
            (rule "andLeft" (formula "63"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "63"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "65"))
            (rule "andLeft" (formula "65"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "65"))
            (rule "notLeft" (formula "69"))
            (rule "andLeft" (formula "65"))
            (rule "andLeft" (formula "65"))
            (rule "andLeft" (formula "65"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "65"))
            (rule "andLeft" (formula "67"))
            (rule "notLeft" (formula "69"))
            (rule "notLeft" (formula "69"))
            (rule "notLeft" (formula "65"))
            (rule "notLeft" (formula "65"))
            (rule "notLeft" (formula "66"))
            (rule "notLeft" (formula "65"))
            (rule "orRight" (formula "74"))
            (rule "orRight" (formula "72"))
            (rule "orRight" (formula "70"))
            (rule "orRight" (formula "76"))
            (rule "orRight" (formula "73"))
            (rule "orRight" (formula "70"))
            (rule "replace_known_right" (formula "63") (term "1,0,1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "81")) (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
            (rule "assignment" (formula "114") (term "1"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "pullOutSelect" (formula "67") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
            (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "67"))
            (rule "applyEq" (formula "78") (term "0") (ifseqformula "67"))
            (rule "applyEq" (formula "81") (term "1,0") (ifseqformula "67"))
            (rule "applyEq" (formula "80") (term "1,0") (ifseqformula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "82")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0") (ifseqformula "50"))
            (rule "replace_known_right" (formula "67") (term "1,0,0,0") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
            (rule "applyEqReverse" (formula "81") (term "1,0") (ifseqformula "67"))
            (rule "applyEqReverse" (formula "79") (term "1,0") (ifseqformula "67"))
            (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "67"))
            (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "67"))
            (rule "applyEqReverse" (formula "80") (term "1,0") (ifseqformula "67"))
            (rule "hideAuxiliaryEq" (formula "67"))
            (rule "pullOutSelect" (formula "66") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
            (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "66"))
            (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "66"))
            (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "66"))
            (rule "applyEq" (formula "74") (term "0") (ifseqformula "66"))
            (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "82")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0") (ifseqformula "50"))
            (rule "replace_known_right" (formula "66") (term "0,0,0,0,0") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
            (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "66"))
            (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "66"))
            (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "66"))
            (rule "applyEqReverse" (formula "67") (term "0,0") (ifseqformula "66"))
            (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "66"))
            (rule "hideAuxiliaryEq" (formula "66"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "64"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "64") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "64") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "64") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "64") (term "0,0,1,0"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "64"))
            (rule "notLeft" (formula "66"))
            (rule "notLeft" (formula "64"))
            (rule "notLeft" (formula "64"))
            (rule "pullOutSelect" (formula "69") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "60"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "51"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
            (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "67"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "67"))
            (rule "notLeft" (formula "68"))
            (rule "notLeft" (formula "67"))
            (rule "pullOutSelect" (formula "68") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
            (rule "applyEq" (formula "72") (term "0") (ifseqformula "68"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "elementOfSingleton" (formula "68") (term "0,0"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "68"))
            (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "68"))
            (rule "hideAuxiliaryEq" (formula "68"))
            (rule "pullOutSelect" (formula "67") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
            (rule "applyEq" (formula "71") (term "0") (ifseqformula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "elementOfSingleton" (formula "67") (term "0,0"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "67"))
            (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "67"))
            (rule "hideAuxiliaryEq" (formula "67"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "68"))
            (rule "true_left" (formula "68"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "67"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "69"))
            (rule "notLeft" (formula "67"))
            (rule "notLeft" (formula "67"))
            (rule "pullOutSelect" (formula "68") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
            (rule "applyEq" (formula "71") (term "0") (ifseqformula "68"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "113")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0,0") (ifseqformula "50"))
            (rule "replace_known_left" (formula "68") (term "0,0,0,0,0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "113")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0") (ifseqformula "50"))
            (rule "replace_known_left" (formula "68") (term "0,0,0,0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "113")) (ifInst ""  (formula "17")))
            (rule "elementOfSingleton" (formula "68") (term "0,0"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "113")))
            (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "68"))
            (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "68"))
            (rule "hideAuxiliaryEq" (formula "68"))
            (rule "pullOutSelect" (formula "67") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
            (rule "applyEq" (formula "71") (term "0") (ifseqformula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "112")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0") (ifseqformula "50"))
            (rule "replace_known_left" (formula "67") (term "0,0,0,0,0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "112")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "50"))
            (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "112")) (ifInst ""  (formula "17")))
            (rule "elementOfSingleton" (formula "67") (term "0,0"))
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "112")))
            (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "67"))
            (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "67"))
            (rule "hideAuxiliaryEq" (formula "67"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "68"))
            (rule "andLeft" (formula "68"))
            (rule "notLeft" (formula "68"))
            (rule "pullOutSelect" (formula "68") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
            (rule "applyEq" (formula "71") (term "0") (ifseqformula "68"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "88")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0,0") (ifseqformula "50"))
            (rule "ifthenelse_negated" (formula "68") (term "0"))
            (rule "pullOutSelect" (formula "68") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "89")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0") (ifseqformula "50"))
            (rule "ifthenelse_negated" (formula "68") (term "0"))
            (rule "pullOutSelect" (formula "68") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "90")))
            (rule "elementOfSingleton" (formula "68") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "90")))
            (rule "ifthenelse_negated" (formula "68") (term "0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "67"))
            (rule "true_left" (formula "67"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "70"))
            (rule "true_left" (formula "70"))
            (rule "methodCallReturn" (formula "117") (term "1"))
            (rule "assignment" (formula "117") (term "1"))
             (builtin "One Step Simplification" (formula "117"))
            (rule "commute_or_2" (formula "69") (term "0,0"))
            (rule "allLeft" (formula "48") (inst "t=i_2"))
            (rule "exLeft" (formula "48") (inst "sk=j_0"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "48"))
            (rule "replace_known_left" (formula "50") (term "0,0,0,0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "replace_known_left" (formula "48") (term "0,0,0,0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "replace_known_left" (formula "49") (term "0,0,0,0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "50") (term "1"))
            (rule "polySimp_addComm1" (formula "50") (term "0,1"))
            (rule "applyEq" (formula "50") (term "0,0,1,0,1") (ifseqformula "60"))
            (rule "applyEq" (formula "49") (term "0,0,0,1") (ifseqformula "60"))
            (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1"))
            (rule "polySimp_mulComm0" (formula "50") (term "1,1"))
            (rule "polySimp_rightDist" (formula "50") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1"))
            (rule "mul_literals" (formula "50") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "50") (term "1,1,1"))
            (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "57"))
            (rule "qeq_literals" (formula "48") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "58"))
            (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0"))
            (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "49") (term "0,0,1,0"))
            (rule "leq_literals" (formula "49") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "57"))
            (rule "qeq_literals" (formula "50") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "57"))
            (rule "qeq_literals" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "58"))
            (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
            (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
            (rule "add_literals" (formula "48") (term "0,0,0"))
            (rule "leq_literals" (formula "48") (term "0,0"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "58"))
            (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
            (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "50") (term "0,0,0"))
            (rule "leq_literals" (formula "50") (term "0,0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "allLeft" (formula "51") (inst "t=i_0"))
            (rule "exLeft" (formula "51") (inst "sk=j_1"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "replace_known_left" (formula "51") (term "0,0,0,0") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
            (rule "polySimp_addComm1" (formula "53") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
            (rule "polySimp_rightDist" (formula "53") (term "1,1"))
            (rule "mul_literals" (formula "53") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "53") (term "1,1,1"))
            (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "43"))
            (rule "qeq_literals" (formula "52") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "43"))
            (rule "qeq_literals" (formula "51") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "43"))
            (rule "qeq_literals" (formula "53") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "45"))
            (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
            (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
            (rule "add_literals" (formula "52") (term "0,0,0"))
            (rule "leq_literals" (formula "52") (term "0,0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "45"))
            (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
            (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
            (rule "add_literals" (formula "51") (term "0,0,0"))
            (rule "leq_literals" (formula "51") (term "0,0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "45"))
            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
            (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
            (rule "add_literals" (formula "53") (term "0,0,0"))
            (rule "leq_literals" (formula "53") (term "0,0"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "75") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "applyEqReverse" (formula "76") (term "1,0") (ifseqformula "75"))
            (rule "hideAuxiliaryEq" (formula "75"))
            (rule "replace_known_left" (formula "74") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "applyEqReverse" (formula "75") (term "1,0") (ifseqformula "74"))
            (rule "hideAuxiliaryEq" (formula "74"))
            (rule "replace_known_left" (formula "74") (term "0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "74"))
            (rule "hideAuxiliaryEq" (formula "74"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "20"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1,0") (ifseqformula "21"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1,1") (ifseqformula "21"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "21"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "60"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "methodCallEmpty" (formula "125") (term "1"))
            (rule "tryEmpty" (formula "125") (term "1"))
            (rule "emptyModality" (formula "125") (term "1"))
             (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "85")) (ifInst ""  (formula "92")) (ifInst ""  (formula "76")) (ifInst ""  (formula "92")))
            (rule "replaceKnownSelect_taclet0000_8" (formula "125") (term "0,0,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "125") (term "0,0,1,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "125") (term "0,0,1,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "125") (term "0,0,1,0,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "125") (term "0,0,1,0,0,0,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "125") (term "0,0,1,1,0,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "125") (term "0,0,1,0,0,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "125") (term "0,0,1,1,0,0,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "125") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "125") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "125") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "125") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "eqSymm" (formula "125") (term "1,0,0,1"))
            (rule "replace_known_left" (formula "125") (term "1,0,1,1,0") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "81")) (ifInst ""  (formula "84")) (ifInst ""  (formula "89")) (ifInst ""  (formula "88")) (ifInst ""  (formula "78")))
            (rule "pullOutSelect" (formula "125") (term "0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "126") (term "0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "125") (term "0,1,0") (ifseqformula "94"))
             (builtin "One Step Simplification" (formula "125"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "125") (term "0"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "125") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "125") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_12" (formula "125") (term "0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "125") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "125") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "125") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "125") (term "0,1,0") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "80")) (ifInst ""  (formula "84")))
            (rule "allRight" (formula "125") (inst "sk=f_0"))
            (rule "allRight" (formula "125") (inst "sk=o_0"))
            (rule "orRight" (formula "125"))
            (rule "orRight" (formula "125"))
            (rule "pullOutSelect" (formula "127") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "72"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "63"))
            (rule "eqSymm" (formula "128"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "64"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "128"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "commute_and" (formula "127"))
            (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
            (rule "seqGetAlphaCast" (formula "57") (term "0"))
            (rule "castedGetAny" (formula "57") (term "0"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "true_left" (formula "57"))
            (rule "lenNonNegative" (formula "58") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "58"))
            (rule "seqGetAlphaCast" (formula "61") (term "0"))
            (rule "castedGetAny" (formula "61") (term "0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "true_left" (formula "61"))
            (rule "seqGetAlphaCast" (formula "61") (term "0,0,0"))
            (rule "castedGetAny" (formula "61") (term "0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "true_left" (formula "61"))
            (rule "cut_direct" (formula "38") (term "0"))
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                (builtin "One Step Simplification" (formula "39"))
               (rule "true_left" (formula "39"))
               (rule "applyEq" (formula "107") (term "0") (ifseqformula "38"))
               (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "107"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "38"))
               (rule "lenNonNegative" (formula "61") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "61"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "83"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "83"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")) (ifInst ""  (formula "82")))
                  (rule "replace_known_right" (formula "131") (term "0,1") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "84")))
                  (rule "closeTrue" (formula "131"))
               )
               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "cut_direct" (formula "35") (term "0"))
                  (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN = null TRUE"
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "true_left" (formula "36"))
                     (rule "cut_direct" (formula "67") (term "0"))
                     (branch "CUT: result_1053.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "1,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0,0") (ifseqformula "77"))
                        (rule "replace_known_right" (formula "82") (term "0") (ifseqformula "94"))
                         (builtin "One Step Simplification" (formula "82"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "85"))
                           (rule "orRight" (formula "85"))
                           (rule "applyEqReverse" (formula "137") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "136"))
                           (rule "replace_known_right" (formula "134") (term "1") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "134"))
                           (rule "false_right" (formula "134"))
                           (rule "replace_known_right" (formula "134") (term "0,1") (ifseqformula "84"))
                            (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "87")))
                           (rule "closeTrue" (formula "134"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "134") (ifseqformula "3"))
                        )
                     )
                     (branch "CUT: result_1053.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "1,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0,0") (ifseqformula "77"))
                        (rule "replace_known_right" (formula "82") (term "0") (ifseqformula "95"))
                         (builtin "One Step Simplification" (formula "82"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "85"))
                           (rule "orRight" (formula "85"))
                           (rule "applyEqReverse" (formula "138") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "137"))
                           (rule "replace_known_right" (formula "136") (term "0,1") (ifseqformula "84"))
                            (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "87")))
                           (rule "closeTrue" (formula "136"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "135") (ifseqformula "3"))
                        )
                     )
                  )
                  (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN = null FALSE"
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "cut_direct" (formula "67") (term "0"))
                     (branch "CUT: result_1053.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "85"))
                           (rule "orRight" (formula "85"))
                           (rule "applyEqReverse" (formula "138") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "137"))
                           (rule "replace_known_right" (formula "136") (term "0,0") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "84")))
                           (rule "closeTrue" (formula "136"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "135") (ifseqformula "3"))
                        )
                     )
                     (branch "CUT: result_1053.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "90"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "4"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "applyEqReverse" (formula "139") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "138"))
                           (rule "replace_known_right" (formula "137") (term "0,1") (ifseqformula "85"))
                            (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "84")))
                           (rule "closeTrue" (formula "137"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "136") (ifseqformula "3"))
                        )
                     )
                  )
               )
            )
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                (builtin "One Step Simplification" (formula "38"))
               (rule "applyEq" (formula "83") (term "0") (ifseqformula "38"))
               (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "38"))
               (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "true_left" (formula "37"))
               (rule "applyEq" (formula "107") (term "0") (ifseqformula "37"))
               (rule "lenNonNegative" (formula "61") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "61"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "83"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")) (ifInst ""  (formula "83")))
                  (rule "replace_known_right" (formula "131") (term "1") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "131"))
                  (rule "false_right" (formula "131"))
                  (rule "replace_known_right" (formula "131") (term "0,0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "82")))
                  (rule "closeTrue" (formula "131"))
               )
               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "cut_direct" (formula "35") (term "0"))
                  (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null TRUE"
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "true_left" (formula "36"))
                     (rule "applyEq" (formula "83") (term "1") (ifseqformula "35"))
                     (rule "cut_direct" (formula "67") (term "0"))
                     (branch "CUT: result_1053.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "1,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "85"))
                           (rule "orRight" (formula "85"))
                           (rule "applyEqReverse" (formula "137") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "136"))
                           (rule "replace_known_right" (formula "135") (term "0,1") (ifseqformula "84"))
                            (builtin "One Step Simplification" (formula "135") (ifInst ""  (formula "87")))
                           (rule "closeTrue" (formula "135"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "134") (ifseqformula "3"))
                        )
                     )
                     (branch "CUT: result_1053.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "1,0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "4"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "applyEqReverse" (formula "138") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "137"))
                           (rule "replace_known_right" (formula "136") (term "0,0") (ifseqformula "84"))
                            (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "85")))
                           (rule "closeTrue" (formula "136"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "135") (ifseqformula "3"))
                        )
                     )
                  )
                  (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null FALSE"
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "cut_direct" (formula "67") (term "0"))
                     (branch "CUT: result_1053.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0,0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "91"))
                         (builtin "One Step Simplification" (formula "80"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "1,0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "85"))
                           (rule "orRight" (formula "85"))
                           (rule "applyEqReverse" (formula "139") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "138"))
                           (rule "replace_known_right" (formula "137") (term "0,0") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "84")))
                           (rule "closeTrue" (formula "137"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "136") (ifseqformula "3"))
                        )
                     )
                     (branch "CUT: result_1053.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0,0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "92"))
                         (builtin "One Step Simplification" (formula "80"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "1,0") (ifseqformula "76"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "orRight" (formula "85"))
                           (rule "orRight" (formula "85"))
                           (rule "applyEqReverse" (formula "140") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "139"))
                           (rule "replace_known_right" (formula "137") (term "1") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "137"))
                           (rule "false_right" (formula "137"))
                           (rule "replace_known_right" (formula "137") (term "0,0") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "84")))
                           (rule "closeTrue" (formula "137"))
                        )
                        (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "137") (ifseqformula "3"))
                        )
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "62"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,1,0,0,0,0,1,0,1,1") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,0,0,0,0,0,1,0,1,1") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,1,0,0,0,0,0,1,0,1,1") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,1,0,0,0,0,1,0,1,1") (ifseqformula "50"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,1,0,0,0,0,0,1,0,1,1") (ifseqformula "50"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0,0,0,0,0,0,0,1,0,1,1") (ifseqformula "50"))
            (rule "andLeft" (formula "62"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "1,0") (ifseqformula "62"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "0,1,0") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "0,0,1,0") (ifseqformula "50"))
            (rule "andLeft" (formula "63"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "63"))
            (rule "andLeft" (formula "65"))
            (rule "notLeft" (formula "63"))
            (rule "close" (formula "67") (ifseqformula "66"))
         )
         (branch "Pre (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "61")) (ifInst ""  (formula "91")) (ifInst ""  (formula "61")) (ifInst ""  (formula "91")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,1") (ifseqformula "59"))
            (rule "wellFormedAnonEQ" (formula "93") (term "0,0,1") (ifseqformula "59"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,1") (ifseqformula "50"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,0,1") (ifseqformula "59"))
            (rule "wellFormedAnonEQ" (formula "93") (term "0,0,0,1") (ifseqformula "50"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,0,1") (ifseqformula "50"))
            (rule "replace_known_left" (formula "93") (term "0,0,0,0,1") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "49")) (ifInst ""  (formula "58")) (ifInst ""  (formula "53")) (ifInst ""  (formula "23")))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "93") (term "1,1"))
            (rule "pullOutSelect" (formula "93") (term "0,0,1,0,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
            (rule "applyEq" (formula "94") (term "1,1,1,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "94") (term "0,0,1,0,0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "94") (term "1,1,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "93") (term "0,1,0,0,1,1") (ifseqformula "87"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "pullOutSelect" (formula "93") (term "0,0,0,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
            (rule "applyEq" (formula "94") (term "1,1,0,1,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "94") (term "1,1,0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "94") (term "0,0,0,0,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "93") (term "0,0,0,1,1") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "93") (term "0,1,1"))
            (rule "pullOutSelect" (formula "93") (term "0,0,0,0,0,1,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
            (rule "applyEq" (formula "94") (term "1,0,1,0,1,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")) (ifInst ""  (formula "18")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
            (rule "applyEqReverse" (formula "94") (term "0,0,0,0,0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "94") (term "1,0,1,0,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "93") (term "0,0,0,0,1,1") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "pullOutSelect" (formula "93") (term "0,0,0,0,1,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
            (rule "applyEq" (formula "94") (term "1,1,1,0,1,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")) (ifInst ""  (formula "18")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
            (rule "applyEqReverse" (formula "94") (term "0,0,0,0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "94") (term "1,1,1,0,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "93") (term "0,0,0,1,1") (ifseqformula "64"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "93") (term "0,0,1,1"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "93") (term "0,1"))
            (rule "pullOutSelect" (formula "93") (term "1,0,1,0,1") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "94") (term "0,0,0,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "94") (term "0,0,0,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "94") (term "1,0,1,0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "93") (term "0,0,0,1") (ifseqformula "89"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "pullOutSelect" (formula "93") (term "0,0,1") (inst "selectSK=java_math_BigInteger_value_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "26")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
            (rule "applyEqReverse" (formula "94") (term "0,0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "93") (term "0,1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "93") (term "0,1"))
            (rule "pullOutSelect" (formula "93") (term "1,1,0,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
            (rule "applyEq" (formula "94") (term "0,0,0,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "95") (term "0"))
            (rule "insert_constant_string_value" (formula "95") (term "0,0,0,0,0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "castDel" (formula "95") (term "0,0,0,0,0,0"))
            (rule "replace_known_right" (formula "95") (term "0,0,0,0") (ifseqformula "86"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "pullOutSelect" (formula "95") (term "0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "96") (term "0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "95") (term "0,0,0") (ifseqformula "87"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "pullOutSelect" (formula "95") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "96") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "95") (term "0,0") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "95") (term "1"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95") (term "1"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "notRight" (formula "95"))
            (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
            (rule "ifEqualsNull" (formula "3"))
            (rule "commute_and" (formula "3") (term "0"))
            (rule "allLeft" (formula "51") (inst "t=i_2"))
            (rule "exLeft" (formula "51") (inst "sk=j_0"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "replace_known_left" (formula "51") (term "0,0,0,0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
            (rule "polySimp_addComm1" (formula "53") (term "0,1"))
            (rule "applyEq" (formula "52") (term "0,0,0,1") (ifseqformula "63"))
            (rule "applyEq" (formula "53") (term "0,0,1,0,1") (ifseqformula "63"))
            (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
            (rule "polySimp_rightDist" (formula "53") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
            (rule "mul_literals" (formula "53") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "53") (term "1,1,1"))
            (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "61"))
            (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0"))
            (rule "add_literals" (formula "52") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "52") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
            (rule "leq_literals" (formula "52") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "61"))
            (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0"))
            (rule "add_literals" (formula "51") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "51") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "51") (term "0,0,1,0"))
            (rule "leq_literals" (formula "51") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "61"))
            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
            (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "53") (term "0,0,1,0"))
            (rule "leq_literals" (formula "53") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "60"))
            (rule "qeq_literals" (formula "51") (term "0,0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "60"))
            (rule "qeq_literals" (formula "52") (term "0,0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "60"))
            (rule "qeq_literals" (formula "53") (term "0,0"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "allLeft" (formula "54") (inst "t=i_0"))
            (rule "exLeft" (formula "54") (inst "sk=j_1"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "56") (term "1"))
            (rule "polySimp_addComm1" (formula "56") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1"))
            (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
            (rule "polySimp_rightDist" (formula "56") (term "1,1"))
            (rule "mul_literals" (formula "56") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
            (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "46"))
            (rule "qeq_literals" (formula "56") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "48"))
            (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
            (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "54") (term "0,0,1,0"))
            (rule "leq_literals" (formula "54") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "48"))
            (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0"))
            (rule "add_literals" (formula "55") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "55") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
            (rule "leq_literals" (formula "55") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "46"))
            (rule "qeq_literals" (formula "54") (term "0,0"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "48"))
            (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
            (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
            (rule "add_literals" (formula "56") (term "0,0,0"))
            (rule "leq_literals" (formula "56") (term "0,0"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "46"))
            (rule "qeq_literals" (formula "55") (term "0,0"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "orLeft" (formula "3"))
            (branch " org_bouncycastle_jce_spec_ECParameterSpec_generator_1<<selectSK>> = null & ( de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created> = TRUE | (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap).<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE)"
               (rule "andLeft" (formula "3"))
               (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
               (rule "ifEqualsNull" (formula "2"))
               (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "73"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "notLeft" (formula "2"))
               (rule "referencedObjectIsCreatedRight" (formula "71") (ifseqformula "75"))
               (rule "close" (formula "71") (ifseqformula "23"))
            )
            (branch " !( de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created> = TRUE | (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap).<created>@anon_heap_printStatus<<anonHeapFunction>> = TRUE) & (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap).generator@anon_heap_exitIfIdInvalid<<anonHeapFunction>> = null"
               (rule "andLeft" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "orRight" (formula "70"))
               (rule "referencedObjectIsCreatedRight" (formula "70") (ifseqformula "75"))
               (rule "close" (formula "70") (ifseqformula "22"))
            )
         )
      )
      (branch "Exceptional Post (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "72"))
          (builtin "One Step Simplification" (formula "39"))
         (rule "andLeft" (formula "39"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "39"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0") (ifseqformula "30"))
         (rule "andLeft" (formula "40"))
         (rule "andLeft" (formula "40"))
         (rule "notLeft" (formula "40"))
         (rule "close" (formula "42") (ifseqformula "41"))
      )
      (branch "Pre (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1,1") (ifseqformula "30"))
         (rule "wellFormedAnonEQ" (formula "70") (term "0,1") (ifseqformula "30"))
         (rule "replace_known_left" (formula "70") (term "1,1") (ifseqformula "33"))
          (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "1")) (ifInst ""  (formula "29")))
         (rule "castedGetAny" (formula "70") (term "0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "70") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "70") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "70") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "70") (term "1,1,0"))
         (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0"))
         (rule "mul_literals" (formula "70") (term "0,1,1,0"))
         (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0"))
         (rule "nnf_ex2all" (formula "70"))
         (rule "nnf_notAnd" (formula "1") (term "0"))
         (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
         (rule "nnf_notAnd" (formula "1") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1") (ifseqformula "2"))
         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "55"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "allLeft" (formula "18") (inst "t=i_1"))
         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
         (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "25"))
         (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "56"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "allLeft" (formula "13") (inst "t=i_2_0"))
         (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
         (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "18"))
         (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "56"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "12"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "13"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "14"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "15"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "16"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "17"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "18"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "19"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "charLiteral_to_int" (formula "19") (term "1,1,0"))
         (rule "cut_direct" (formula "54") (term "0"))
         (branch "CUT: result_1053.<created> = TRUE TRUE"
             (builtin "One Step Simplification" (formula "55"))
            (rule "true_left" (formula "55"))
            (rule "seqGetAlphaCast" (formula "58") (term "0"))
            (rule "castedGetAny" (formula "58") (term "0"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "seqGetAlphaCast" (formula "57") (term "0"))
            (rule "castedGetAny" (formula "57") (term "0"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "true_left" (formula "57"))
            (rule "cut_direct" (formula "31") (term "0"))
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                (builtin "One Step Simplification" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "applyEq" (formula "70") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "31"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "22"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "52") (inst "t=i_2"))
               (rule "exLeft" (formula "52") (inst "sk=j_0"))
               (rule "andLeft" (formula "52"))
               (rule "andLeft" (formula "52"))
               (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
               (rule "polySimp_addComm1" (formula "54") (term "0,1"))
               (rule "applyEq" (formula "54") (term "0,0,1,0,1") (ifseqformula "64"))
               (rule "applyEq" (formula "53") (term "0,0,0,1") (ifseqformula "64"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
               (rule "polySimp_rightDist" (formula "54") (term "1,1"))
               (rule "mul_literals" (formula "54") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "61"))
               (rule "qeq_literals" (formula "54") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "61"))
               (rule "qeq_literals" (formula "53") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "61"))
               (rule "qeq_literals" (formula "52") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "62"))
               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
               (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0"))
               (rule "leq_literals" (formula "53") (term "0,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "62"))
               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0"))
               (rule "leq_literals" (formula "54") (term "0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "62"))
               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
               (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "52") (term "0,0,0"))
               (rule "leq_literals" (formula "52") (term "0,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "allLeft" (formula "22") (inst "t=j_0"))
               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "53"))
               (rule "qeq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "55"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "54"))
               (rule "qeq_literals" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "closeFalse" (formula "22"))
            )
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                (builtin "One Step Simplification" (formula "31"))
               (rule "applyEq" (formula "59") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "71") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "31"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "22"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "52") (inst "t=i_2"))
               (rule "exLeft" (formula "52") (inst "sk=j_0"))
               (rule "andLeft" (formula "52"))
               (rule "andLeft" (formula "52"))
               (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
               (rule "polySimp_addComm1" (formula "54") (term "0,1"))
               (rule "applyEq" (formula "54") (term "0,0,1,0,1") (ifseqformula "64"))
               (rule "applyEq" (formula "53") (term "0,0,0,1") (ifseqformula "64"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
               (rule "polySimp_rightDist" (formula "54") (term "1,1"))
               (rule "mul_literals" (formula "54") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "61"))
               (rule "qeq_literals" (formula "54") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "62"))
               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0"))
               (rule "add_literals" (formula "52") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "52") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
               (rule "leq_literals" (formula "52") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "62"))
               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
               (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "53") (term "0,0,1,0"))
               (rule "leq_literals" (formula "53") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "62"))
               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0"))
               (rule "leq_literals" (formula "54") (term "0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "61"))
               (rule "qeq_literals" (formula "53") (term "0,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "61"))
               (rule "qeq_literals" (formula "52") (term "0,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "allLeft" (formula "55") (inst "t=i_0"))
               (rule "exLeft" (formula "55") (inst "sk=j_1"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "55"))
               (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "57") (term "1"))
               (rule "polySimp_addComm1" (formula "57") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,1"))
               (rule "polySimp_rightDist" (formula "57") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1"))
               (rule "mul_literals" (formula "57") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "57") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "56") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0"))
               (rule "add_literals" (formula "57") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "57") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
               (rule "leq_literals" (formula "57") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0"))
               (rule "add_literals" (formula "55") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "55") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
               (rule "leq_literals" (formula "55") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
               (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "56") (term "0,0,0"))
               (rule "leq_literals" (formula "56") (term "0,0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "55") (term "0,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "57") (term "0,0"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "allLeft" (formula "22") (inst "t=j_0"))
               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "53"))
               (rule "qeq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "55"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "54"))
               (rule "qeq_literals" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "closeFalse" (formula "22"))
            )
         )
         (branch "CUT: result_1053.<created> = TRUE FALSE"
             (builtin "One Step Simplification" (formula "54"))
            (rule "seqGetAlphaCast" (formula "58") (term "0"))
            (rule "castedGetAny" (formula "58") (term "0"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "seqGetAlphaCast" (formula "57") (term "0"))
            (rule "castedGetAny" (formula "57") (term "0"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "true_left" (formula "57"))
            (rule "cut_direct" (formula "31") (term "1"))
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                (builtin "One Step Simplification" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "applyEq" (formula "71") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "31"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "22"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "52") (inst "t=i_0"))
               (rule "exLeft" (formula "52") (inst "sk=j_0"))
               (rule "andLeft" (formula "52"))
               (rule "andLeft" (formula "52"))
               (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
               (rule "polySimp_addComm1" (formula "54") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
               (rule "polySimp_rightDist" (formula "54") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
               (rule "mul_literals" (formula "54") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "54") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0"))
               (rule "add_literals" (formula "52") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "52") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
               (rule "leq_literals" (formula "52") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "53") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0"))
               (rule "leq_literals" (formula "54") (term "0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "52") (term "0,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
               (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "53") (term "0,0,0"))
               (rule "leq_literals" (formula "53") (term "0,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "allLeft" (formula "55") (inst "t=i_2"))
               (rule "exLeft" (formula "55") (inst "sk=j_1"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "55"))
               (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "57") (term "1"))
               (rule "polySimp_addComm1" (formula "57") (term "0,1"))
               (rule "applyEq" (formula "56") (term "0,0,0,1") (ifseqformula "67"))
               (rule "applyEq" (formula "57") (term "0,0,1,0,1") (ifseqformula "67"))
               (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,1"))
               (rule "polySimp_rightDist" (formula "57") (term "1,1"))
               (rule "mul_literals" (formula "57") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "57") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "64"))
               (rule "qeq_literals" (formula "55") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "65"))
               (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0"))
               (rule "add_literals" (formula "57") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "57") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
               (rule "leq_literals" (formula "57") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "65"))
               (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0"))
               (rule "add_literals" (formula "56") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "56") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
               (rule "leq_literals" (formula "56") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "64"))
               (rule "qeq_literals" (formula "57") (term "0,0"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "65"))
               (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
               (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
               (rule "add_literals" (formula "55") (term "0,0,0"))
               (rule "leq_literals" (formula "55") (term "0,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "64"))
               (rule "qeq_literals" (formula "56") (term "0,0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "allLeft" (formula "22") (inst "t=j_1"))
               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "57"))
               (rule "qeq_literals" (formula "22") (term "0,1"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "58"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
               (rule "add_literals" (formula "22") (term "0,0,1"))
               (rule "leq_literals" (formula "22") (term "0,1"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq0" (formula "56") (ifseqformula "22"))
               (rule "qeq_literals" (formula "56") (term "0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "closeFalse" (formula "56"))
            )
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                (builtin "One Step Simplification" (formula "31"))
               (rule "applyEq" (formula "72") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "31"))
               (rule "applyEq" (formula "59") (term "0") (ifseqformula "31"))
               (rule "eqSymm" (formula "59"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "22"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "52") (inst "t=i_0"))
               (rule "exLeft" (formula "52") (inst "sk=j_0"))
               (rule "andLeft" (formula "52"))
               (rule "andLeft" (formula "52"))
               (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
               (rule "polySimp_addComm1" (formula "54") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
               (rule "polySimp_rightDist" (formula "54") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
               (rule "mul_literals" (formula "54") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "52") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "54") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
               (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "53") (term "0,0,1,0"))
               (rule "leq_literals" (formula "53") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
               (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "52") (term "0,0,0"))
               (rule "leq_literals" (formula "52") (term "0,0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "47"))
               (rule "qeq_literals" (formula "53") (term "0,0"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "54") (term "0,0,0"))
               (rule "leq_literals" (formula "54") (term "0,0"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "allLeft" (formula "55") (inst "t=i_2"))
               (rule "exLeft" (formula "55") (inst "sk=j_1"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "55"))
               (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "57") (term "1"))
               (rule "polySimp_addComm1" (formula "57") (term "0,1"))
               (rule "applyEq" (formula "57") (term "0,0,1,0,1") (ifseqformula "67"))
               (rule "applyEq" (formula "56") (term "0,0,0,1") (ifseqformula "67"))
               (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,1"))
               (rule "polySimp_rightDist" (formula "57") (term "1,1"))
               (rule "mul_literals" (formula "57") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "57") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "64"))
               (rule "qeq_literals" (formula "55") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "64"))
               (rule "qeq_literals" (formula "57") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "65"))
               (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0"))
               (rule "add_literals" (formula "56") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "56") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
               (rule "leq_literals" (formula "56") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "65"))
               (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
               (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
               (rule "add_literals" (formula "57") (term "0,0,0"))
               (rule "leq_literals" (formula "57") (term "0,0"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "65"))
               (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
               (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "55") (term "0,0,0"))
               (rule "leq_literals" (formula "55") (term "0,0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "64"))
               (rule "qeq_literals" (formula "56") (term "0,0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "allLeft" (formula "22") (inst "t=j_1"))
               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "58"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
               (rule "leq_literals" (formula "22") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "57"))
               (rule "qeq_literals" (formula "22") (term "0,1"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq0" (formula "56") (ifseqformula "22"))
               (rule "qeq_literals" (formula "56") (term "0"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "closeFalse" (formula "56"))
            )
         )
      )
   )
   (branch "Exceptional Post (get)"
       (builtin "One Step Simplification" (formula "31"))
       (builtin "One Step Simplification" (formula "63"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "29"))
      (rule "andLeft" (formula "31"))
      (rule "andLeft" (formula "32"))
      (rule "andLeft" (formula "31"))
      (rule "andLeft" (formula "33"))
      (rule "notLeft" (formula "31"))
      (rule "close" (formula "35") (ifseqformula "34"))
   )
   (branch "Pre (get)"
       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "1,1") (ifseqformula "29"))
      (rule "wellFormedAnonEQ" (formula "62") (term "0,1") (ifseqformula "29"))
      (rule "replace_known_left" (formula "62") (term "1,0,1") (ifseqformula "28"))
       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "1")))
      (rule "castedGetAny" (formula "62") (term "0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,0"))
      (rule "pullOutSelect" (formula "62") (term "0,0,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
      (rule "applyEqReverse" (formula "63") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "63") (term "0,0,1,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "62") (term "1,0") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet20_4" (formula "62") (term "0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_5" (formula "62") (term "0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet20_4" (formula "62") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet20_4" (formula "62") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_5" (formula "62") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_5" (formula "62") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "expand_inInt" (formula "62") (term "1,0,0,1,0,1,0"))
      (rule "expand_inInt" (formula "62") (term "1,0,0,1,1,0"))
      (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0,1,0,1,0"))
      (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0,1,1,0"))
      (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0,1,1,0"))
      (rule "eqSymm" (formula "62") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "62") (term "0,0,1,0,1,1,0"))
      (rule "castedGetAny" (formula "62") (term "0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "62") (term "1,1,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "62") (term "1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,0,1,0"))
      (rule "pullOutSelect" (formula "62") (term "0,0,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,1,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "63") (term "0,0,0,1,0,1,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
      (rule "eqSymm" (formula "63") (term "0,0,1,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
      (rule "applyEqReverse" (formula "63") (term "0,1,1,1,0,0,0,1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "63") (term "0,1,0,0,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "63") (term "0,0,0,1,0,1,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "62") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "62") (term "0,0,1,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "62"))
      (rule "applyEq" (formula "62") (term "1,1,1,0,0,0,1,1,0") (ifseqformula "8"))
      (rule "nnf_imp2or" (formula "62") (term "0,0,1,0"))
      (rule "nnf_imp2or" (formula "62") (term "0,1,1,0"))
      (rule "nnf_notAnd" (formula "62") (term "0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "62") (term "0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "62") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "62") (term "0,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "62") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "62") (term "0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,1,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "62") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "62") (term "0,0,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "62") (term "1,1,1,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "62") (term "1,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "62") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "add_literals" (formula "62") (term "0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "62") (term "0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,1,0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "62") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,0,1,1,0"))
      (rule "add_zero_right" (formula "62") (term "0,0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "1,0,0,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,1,1,0"))
      (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,1,0"))
      (rule "cut_direct" (formula "11") (term "1"))
      (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "applyEq" (formula "41") (term "0") (ifseqformula "11"))
         (rule "lenNonNegative" (formula "18") (term "1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "47"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "replace_known_left" (formula "64") (term "0,1") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "64"))
         (rule "andRight" (formula "64"))
         (branch
            (rule "nnf_ex2all" (formula "64"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "commute_or_2" (formula "1") (term "0"))
            (rule "commute_or" (formula "1") (term "0,0"))
            (rule "allLeft" (formula "18") (inst "t=i_1"))
            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
            (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "25"))
            (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "49"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "allLeft" (formula "13") (inst "t=i_2_0"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "49"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "allLeft" (formula "19") (inst "t=i_0"))
            (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "44"))
            (rule "qeq_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "19"))
            (rule "andLeft" (formula "46"))
            (rule "inEqSimp_homoInEq1" (formula "46"))
            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
            (rule "add_literals" (formula "46") (term "1,1,0"))
            (rule "times_zero_1" (formula "46") (term "1,0"))
            (rule "add_literals" (formula "46") (term "0"))
            (rule "leq_literals" (formula "46"))
            (rule "closeFalse" (formula "46"))
         )
         (branch
            (rule "andRight" (formula "64"))
            (branch
               (rule "allRight" (formula "64") (inst "sk=i_0_0"))
               (rule "orRight" (formula "64"))
               (rule "orRight" (formula "64"))
               (rule "notRight" (formula "66"))
               (rule "orRight" (formula "65"))
               (rule "orRight" (formula "67"))
               (rule "inEqSimp_leqRight" (formula "65"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "66"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "67"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "68"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
               (rule "leq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "allLeft" (formula "21") (inst "t=i_1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
               (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "28"))
               (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "allLeft" (formula "16") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "7"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "8"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "17"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "18"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "19"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "22"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "31") (inst "t=i_0_0"))
               (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "21"))
               (rule "qeq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "20"))
               (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
               (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
               (rule "add_literals" (formula "31") (term "0,0,1"))
               (rule "leq_literals" (formula "31") (term "0,1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "31"))
               (rule "qeq_literals" (formula "19") (term "0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "closeFalse" (formula "19"))
            )
            (branch
               (rule "allRight" (formula "64") (inst "sk=i_2"))
               (rule "orRight" (formula "64"))
               (rule "orRight" (formula "64"))
               (rule "notRight" (formula "66"))
               (rule "orRight" (formula "65"))
               (rule "orRight" (formula "67"))
               (rule "inEqSimp_leqRight" (formula "65"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "66"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "67"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "68"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
               (rule "leq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "allLeft" (formula "21") (inst "t=i_1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
               (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "28"))
               (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "allLeft" (formula "16") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "7"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "8"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "17"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "18"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "19"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "22"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "32") (inst "t=i_2"))
               (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "19"))
               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "21"))
               (rule "qeq_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "20"))
               (rule "andLeft" (formula "32"))
               (rule "inEqSimp_homoInEq1" (formula "32"))
               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "times_zero_1" (formula "32") (term "1,0"))
               (rule "add_literals" (formula "32") (term "0"))
               (rule "leq_literals" (formula "32"))
               (rule "closeFalse" (formula "32"))
            )
         )
      )
      (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
          (builtin "One Step Simplification" (formula "11"))
         (rule "applyEq" (formula "31") (term "0") (ifseqformula "11"))
         (rule "eqSymm" (formula "31"))
         (rule "applyEq" (formula "42") (term "0") (ifseqformula "11"))
         (rule "lenNonNegative" (formula "18") (term "1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "48"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "replace_known_left" (formula "65") (term "0,1") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "andRight" (formula "65"))
         (branch
            (rule "nnf_ex2all" (formula "65"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0"))
            (rule "commute_or" (formula "1") (term "0,0"))
            (rule "allLeft" (formula "18") (inst "t=i_1"))
            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
            (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "25"))
            (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "allLeft" (formula "13") (inst "t=i_2_0"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "allLeft" (formula "18") (inst "t=i_0"))
            (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "44"))
            (rule "qeq_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "46"))
            (rule "andLeft" (formula "18"))
            (rule "inEqSimp_homoInEq1" (formula "18"))
            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "1,1,0"))
            (rule "times_zero_1" (formula "18") (term "1,0"))
            (rule "add_zero_right" (formula "18") (term "0"))
            (rule "leq_literals" (formula "18"))
            (rule "closeFalse" (formula "18"))
         )
         (branch
            (rule "andRight" (formula "65"))
            (branch
               (rule "allRight" (formula "65") (inst "sk=i_0_0"))
               (rule "orRight" (formula "65"))
               (rule "notRight" (formula "66"))
               (rule "orRight" (formula "66"))
               (rule "orRight" (formula "67"))
               (rule "orRight" (formula "66"))
               (rule "inEqSimp_geqRight" (formula "68"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "69"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "68"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "69"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "allLeft" (formula "21") (inst "t=i_1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
               (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "28"))
               (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "allLeft" (formula "16") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "7"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "8"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "17"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "18"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "19"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "31") (inst "t=i_0_0"))
               (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "18"))
               (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
               (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "31") (term "0,0,1"))
               (rule "leq_literals" (formula "31") (term "0,1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "20"))
               (rule "qeq_literals" (formula "31") (term "0,1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "31"))
               (rule "qeq_literals" (formula "19") (term "0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "closeFalse" (formula "19"))
            )
            (branch
               (rule "allRight" (formula "65") (inst "sk=i_2"))
               (rule "orRight" (formula "65"))
               (rule "notRight" (formula "66"))
               (rule "orRight" (formula "66"))
               (rule "orRight" (formula "67"))
               (rule "orRight" (formula "66"))
               (rule "inEqSimp_geqRight" (formula "68"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "69"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "69"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "69"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "allLeft" (formula "21") (inst "t=i_1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
               (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "28"))
               (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "allLeft" (formula "16") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "7"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "8"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "17"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "18"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "19"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "21"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "32") (inst "t=i_2"))
               (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "20"))
               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
               (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "32") (term "0,0,1"))
               (rule "leq_literals" (formula "32") (term "0,1"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "32"))
               (rule "qeq_literals" (formula "18") (term "0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "closeFalse" (formula "18"))
            )
         )
      )
   )
   (branch "Null reference (var = null)"
       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "59")))
      (rule "closeTrue" (formula "62"))
   )
)
(branch "Exceptional Post (printStatus)"
    (builtin "One Step Simplification" (formula "58"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "28"))
   (rule "close" (formula "31") (ifseqformula "30"))
)
(branch "Pre (printStatus)"
    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "31")) (ifInst ""  (formula "44")) (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "56"))
)
)
}
