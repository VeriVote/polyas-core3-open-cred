\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 15 03:14:11 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Nov 15 03:14:11 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initPolyasVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initPolyasVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "7346")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "record_35,dataForVoter_25,self_250,exc_320,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "13"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,1,0"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "5"))
(rule "elementOfSingleton" (formula "14") (term "0,0,0,0,1,0,1"))
(rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "10") (term "1,1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "7") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "7") (term "1,0,0,1,0"))
(rule "expand_inInt" (formula "7") (term "1,0,0,1"))
(rule "replace_int_MIN" (formula "7") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "7") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "7") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "7") (term "0,1,1,0,0,1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "eqSymm" (formula "7"))
(rule "castedGetAny" (formula "9") (term "0,0,1,0"))
(rule "castedGetAny" (formula "8") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0"))
(rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "7"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "castDel" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "exLeft" (formula "15") (inst "sk=i_0"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "exLeft" (formula "12") (inst "sk=i_2_0"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "castedGetAny" (formula "16") (term "0,0,1,0"))
(rule "castedGetAny" (formula "15") (term "0,0,1,0"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "castedGetAny" (formula "19") (term "0"))
(rule "castedGetAny" (formula "14") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "applyEq" (formula "27") (term "0") (ifseqformula "10"))
(rule "commute_and" (formula "20") (term "0,0"))
(rule "commute_and" (formula "9") (term "1,0,0"))
(rule "commute_and" (formula "8") (term "0,0,0"))
(rule "commute_and" (formula "8") (term "1,0,0"))
(rule "commute_and" (formula "9") (term "0,0,0"))
(rule "commute_and" (formula "20") (term "0,0,1,0"))
(rule "methodBodyExpand" (formula "45") (term "1") (newnames "heapBefore_initPolyasVals,savedHeapBefore_initPolyasVals"))
 (builtin "One Step Simplification" (formula "45"))
(rule "commute_and" (formula "16") (term "0,0"))
(rule "commute_and" (formula "15") (term "0,0"))
(rule "commute_and" (formula "11") (term "0,0"))
(rule "commute_and_2" (formula "20") (term "0,1,0"))
(rule "shift_paren_and" (formula "8") (term "0,0"))
(rule "commute_and_2" (formula "8") (term "0,0,0"))
(rule "shift_paren_and" (formula "9") (term "0,0"))
(rule "commute_and_2" (formula "9") (term "0,0,0"))
 (builtin "Use Operation Contract" (formula "45") (newnames "heapBefore_initPolyasVals_addInputCols,exc_321,heapAfter_initPolyasVals_addInputCols,anon_heap_initPolyasVals_addInputCols") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addInputCols(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
(branch "Post (initPolyasVals_addInputCols)"
    (builtin "One Step Simplification" (formula "47"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "24"))
   (rule "andLeft" (formula "26"))
   (rule "notLeft" (formula "26"))
   (rule "notLeft" (formula "26"))
   (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
   (rule "applyEq" (formula "29") (term "0") (ifseqformula "24"))
   (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "24"))
   (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "24"))
   (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "elementOfSingleton" (formula "24") (term "0,0"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "24"))
   (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "24"))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "24"))
   (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
   (rule "hideAuxiliaryEq" (formula "24"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "notLeft" (formula "26"))
   (rule "andLeft" (formula "25"))
   (rule "notLeft" (formula "26"))
   (rule "notLeft" (formula "25"))
   (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "24"))
   (rule "true_left" (formula "24"))
    (builtin "Use Operation Contract" (formula "51") (newnames "heapBefore_initPolyasVals_addDataForVoter,exc_322,heapAfter_initPolyasVals_addDataForVoter,anon_heap_initPolyasVals_addDataForVoter") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals_addDataForVoter(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
   (branch "Post (initPolyasVals_addDataForVoter)"
       (builtin "One Step Simplification" (formula "26"))
       (builtin "One Step Simplification" (formula "53"))
      (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "0,1,0,0"))
      (rule "andLeft" (formula "26"))
      (rule "methodCallEmpty" (formula "54") (term "1"))
      (rule "tryEmpty" (formula "54") (term "1"))
      (rule "emptyModality" (formula "54") (term "1"))
      (rule "andRight" (formula "54"))
      (branch
          (builtin "One Step Simplification" (formula "54"))
         (rule "closeTrue" (formula "54"))
      )
      (branch
          (builtin "One Step Simplification" (formula "54"))
         (rule "allRight" (formula "54") (inst "sk=f_0"))
         (rule "allRight" (formula "54") (inst "sk=o_0"))
         (rule "orRight" (formula "54"))
         (rule "orRight" (formula "54"))
         (rule "eqSymm" (formula "56"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
         (rule "polySimp_elimOne" (formula "18") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "23"))
         (rule "eqSymm" (formula "57"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "56"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
         (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
         (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "21") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "21") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "commute_and" (formula "55"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_and_2" (formula "1") (term "0,0,0"))
         (rule "commute_or" (formula "21") (term "0,0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_and" (formula "21") (term "0,0,1,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or" (formula "16") (term "0,0"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_or_2" (formula "10") (term "0,0"))
         (rule "commute_or_2" (formula "9") (term "0,0"))
         (rule "commute_or" (formula "10") (term "0,0,0"))
         (rule "commute_or_2" (formula "10") (term "0,0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_or" (formula "9") (term "0,0,0"))
         (rule "commute_or_2" (formula "9") (term "0,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "applyEq_and_gen3" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and_2" (formula "21") (term "0,1,0"))
         (rule "commute_and" (formula "1") (term "0,0,0"))
         (rule "cut_direct" (formula "56") (term "0,0"))
         (branch "CUT: o_0 = null TRUE"
             (builtin "One Step Simplification" (formula "57"))
            (rule "false_right" (formula "57"))
            (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "2") (term "1,0,0"))
            (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")))
            (rule "closeFalse" (formula "2"))
         )
         (branch "CUT: o_0 = null FALSE"
             (builtin "One Step Simplification" (formula "57"))
            (rule "notRight" (formula "57"))
            (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")))
            (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "false_right" (formula "56"))
            (rule "lenNonNegative" (formula "9") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "seqGetAlphaCast" (formula "22") (term "0"))
            (rule "castedGetAny" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "lenNonNegative" (formula "10") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
            (rule "seqGetAlphaCast" (formula "17") (term "0"))
            (rule "castedGetAny" (formula "17") (term "0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "lenNonNegative" (formula "21") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "21"))
            (rule "lenNonNegative" (formula "16") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "16"))
            (rule "ex_pull_out3" (formula "25") (term "0"))
            (rule "cnf_rightDist" (formula "25") (term "0,0"))
            (rule "shift_paren_or" (formula "25") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
            (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
            (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
            (rule "ifthenelse_split" (formula "2") (term "0"))
            (branch " f_0 = java.util.Collection::$seq ∧ o_0 = de.polyas.core3.open.cred.CredTool.polyasVals@anon_heap_initPolyasVals_addInputCols«anonHeapFunction» TRUE"
               (rule "andLeft" (formula "2"))
               (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "eqSymm" (formula "61"))
               (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "2"))
               (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "31"))
               (rule "eqSymm" (formula "61"))
               (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
               (rule "close" (formula "34") (ifseqformula "1"))
            )
            (branch " f_0 = java.util.Collection::$seq ∧ o_0 = de.polyas.core3.open.cred.CredTool.polyasVals@anon_heap_initPolyasVals_addInputCols«anonHeapFunction» FALSE"
               (rule "close" (formula "61") (ifseqformula "2"))
            )
         )
      )
   )
   (branch "Exceptional Post (initPolyasVals_addDataForVoter)"
       (builtin "One Step Simplification" (formula "26"))
       (builtin "One Step Simplification" (formula "53"))
      (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "0,1,0,0"))
      (rule "andLeft" (formula "26"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "26"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0") (ifseqformula "22"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "27"))
      (rule "notLeft" (formula "27"))
      (rule "close" (formula "29") (ifseqformula "28"))
   )
   (branch "Pre (initPolyasVals_addDataForVoter)"
       (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1,1") (ifseqformula "22"))
      (rule "wellFormedAnonEQ" (formula "51") (term "0,0,1") (ifseqformula "22"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1,0,1") (ifseqformula "22"))
      (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "51") (term "1,1,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "51") (term "0,0,0,0,0"))
      (rule "replace_known_left" (formula "51") (term "0,1,1") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "26")) (ifInst ""  (formula "1")) (ifInst ""  (formula "21")) (ifInst ""  (formula "4")))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "13"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
      (rule "polySimp_elimOne" (formula "18") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
      (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
      (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "20") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
      (rule "mul_literals" (formula "20") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "mul_literals" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "51") (term "1"))
      (rule "replaceKnownSelect_taclet0_2" (formula "51") (term "0,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "51") (term "0,0,1,1"))
      (rule "replaceKnownSelect_taclet0_6" (formula "51") (term "0,0,0,0,1"))
      (rule "replaceKnownSelect_taclet0_4" (formula "51") (term "0,0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_7" (formula "51") (term "0,0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "51") (term "0,0,1,0,1"))
      (rule "replace_known_right" (formula "51") (term "0,1,1") (ifseqformula "47"))
       (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "46")) (ifInst ""  (formula "45")))
      (rule "commute_or_2" (formula "16") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or" (formula "20") (term "0,0"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "51"))
      (rule "closeTrue" (formula "51"))
   )
)
(branch "Exceptional Post (initPolyasVals_addInputCols)"
    (builtin "One Step Simplification" (formula "22"))
    (builtin "One Step Simplification" (formula "47"))
   (rule "andLeft" (formula "22"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "22"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "25"))
   (rule "notLeft" (formula "23"))
   (rule "close" (formula "27") (ifseqformula "26"))
)
(branch "Pre (initPolyasVals_addInputCols)"
    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "1")) (ifInst ""  (formula "43")) (ifInst ""  (formula "4")) (ifInst ""  (formula "44")) (ifInst ""  (formula "5")))
   (rule "andRight" (formula "45"))
   (branch "Case 1"
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "13"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
      (rule "polySimp_elimOne" (formula "18") (term "0"))
      (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
      (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "20") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
      (rule "mul_literals" (formula "20") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "mul_literals" (formula "11") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "45") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "45") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "45") (term "1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "45") (term "1,0,1,0,0,1"))
      (rule "replace_int_MIN" (formula "45") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "45") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "45") (term "0,1,1,0,0,1,0"))
      (rule "eqSymm" (formula "45") (term "0,0"))
      (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "45"))
      (rule "castedGetAny" (formula "45") (term "0,0,1,0,1"))
      (rule "castedGetAny" (formula "45") (term "0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1"))
      (rule "applyEq" (formula "45") (term "0,1,0,0,1,0,0,0,1") (ifseqformula "7"))
      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1"))
      (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1"))
      (rule "nnf_imp2or" (formula "45") (term "0,0"))
      (rule "nnf_imp2or" (formula "45") (term "0,1"))
      (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
      (rule "nnf_notAnd" (formula "45") (term "0,0,1"))
      (rule "nnf_notAnd" (formula "45") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "45") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,0"))
      (rule "add_literals" (formula "45") (term "0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "45") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "45") (term "0,1,0,0,0"))
      (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0,0"))
      (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,1,0,0,0"))
      (rule "mul_literals" (formula "45") (term "1,0,1,0,0,0"))
      (rule "nnf_notAnd" (formula "45") (term "0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0"))
      (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "45") (term "1,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "45") (term "1,1,0,0,1"))
      (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0,1"))
      (rule "add_literals" (formula "45") (term "0,0,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,1,0,0,1"))
      (rule "mul_literals" (formula "45") (term "1,1,1,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "45") (term "0,1,0,0,1"))
      (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0,1"))
      (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,1,0,0,1"))
      (rule "mul_literals" (formula "45") (term "1,0,1,0,0,1"))
      (rule "nnf_notAnd" (formula "45") (term "0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1"))
      (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1"))
      (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1"))
      (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1"))
      (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1"))
      (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1"))
      (rule "commute_or_2" (formula "16") (term "0"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or" (formula "20") (term "0,0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_and" (formula "20") (term "0,0,1,0"))
      (rule "commute_or_2" (formula "8") (term "0"))
      (rule "commute_or" (formula "16") (term "0,0"))
      (rule "commute_or_2" (formula "16") (term "0"))
      (rule "commute_or" (formula "15") (term "0,0"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "9") (term "0,0"))
      (rule "commute_or_2" (formula "8") (term "0,0"))
      (rule "commute_or" (formula "9") (term "0,0,0"))
      (rule "commute_or_2" (formula "9") (term "0,0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or" (formula "8") (term "0,0,0"))
      (rule "commute_or_2" (formula "8") (term "0,0"))
      (rule "commute_or_2" (formula "8") (term "0"))
      (rule "seqGetAlphaCast" (formula "14") (term "0"))
      (rule "castedGetAny" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "lenNonNegative" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (rule "lenNonNegative" (formula "8") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "seqGetAlphaCast" (formula "20") (term "0"))
      (rule "castedGetAny" (formula "20") (term "0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "true_left" (formula "20"))
      (rule "andRight" (formula "46"))
      (branch
         (rule "allRight" (formula "46") (inst "sk=i_0_0"))
         (rule "orRight" (formula "46"))
         (rule "orRight" (formula "46"))
         (rule "notRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "47"))
         (rule "inEqSimp_leqRight" (formula "50"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_geqRight" (formula "50"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_leqRight" (formula "49"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "50"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "mul_literals" (formula "4") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
         (rule "leq_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "commute_and_2" (formula "25") (term "0,1,0"))
         (rule "lenNonNegative" (formula "18") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "lenNonNegative" (formula "24") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "allLeft" (formula "13") (inst "t=i_0_0"))
         (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "13") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
         (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,1"))
         (rule "leq_literals" (formula "13") (term "0,1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "13"))
         (rule "qeq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
      (branch
         (rule "allRight" (formula "46") (inst "sk=i_1"))
         (rule "orRight" (formula "46"))
         (rule "orRight" (formula "46"))
         (rule "notRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "47"))
         (rule "inEqSimp_leqRight" (formula "50"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_geqRight" (formula "50"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_leqRight" (formula "49"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "50"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "mul_literals" (formula "4") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
         (rule "leq_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "commute_and_2" (formula "25") (term "0,1,0"))
         (rule "lenNonNegative" (formula "18") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "lenNonNegative" (formula "24") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "allLeft" (formula "14") (inst "t=i_1"))
         (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
         (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "3"))
         (rule "qeq_literals" (formula "14") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "14") (term "0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "14"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_literals" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch
      (rule "andRight" (formula "45"))
      (branch
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
         (rule "polySimp_elimOne" (formula "18") (term "0"))
         (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
         (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
         (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_imp2or" (formula "20") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "mul_literals" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "20") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
         (rule "mul_literals" (formula "20") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "mul_literals" (formula "11") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "mul_literals" (formula "8") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "45"))
         (rule "replace_known_right" (formula "45") (term "0,1") (ifseqformula "41"))
          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "40")) (ifInst ""  (formula "39")))
         (rule "closeTrue" (formula "45"))
      )
      (branch
         (rule "andRight" (formula "45"))
         (branch
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "polySimp_elimOne" (formula "18") (term "0"))
            (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
            (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
            (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_imp2or" (formula "20") (term "0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
            (rule "mul_literals" (formula "20") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "mul_literals" (formula "11") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "mul_literals" (formula "8") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "45") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "21")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
            (rule "insert_constant_string_value" (formula "45") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "insert_constant_string_value" (formula "45") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "insert_constant_string_value" (formula "45") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "castDel" (formula "45") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "castDel" (formula "45") (term "0,0,0,1,0,0,0,0,0,0,0"))
            (rule "castDel" (formula "45") (term "0,0,0,1,0,0,0,0,0,0"))
            (rule "replace_known_right" (formula "45") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "24"))
             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
            (rule "castedGetAny" (formula "45") (term "0,1,0,1,0,0,0"))
            (rule "castedGetAny" (formula "45") (term "0,1,0,1"))
            (rule "castedGetAny" (formula "45") (term "0,0,1,0,1,0"))
            (rule "castedGetAny" (formula "45") (term "0,0,1,0,1,0,0,0,0"))
            (rule "castedGetAny" (formula "45") (term "0,0,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,0"))
            (rule "applyEq" (formula "45") (term "0,0,0,0,0,0,0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "45") (term "0,0,0,0,0,0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1"))
            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0,0,0"))
            (rule "nnf_imp2or" (formula "45") (term "0,1,0,0"))
            (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,0"))
            (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "45") (term "0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "45") (term "0,0,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,0,0"))
            (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,0,0"))
            (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,1,0,0"))
            (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0,0"))
            (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0"))
            (rule "nnf_notAnd" (formula "45") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "16") (term "0"))
            (rule "commute_or_2" (formula "15") (term "0"))
            (rule "commute_or_2" (formula "11") (term "0"))
            (rule "commute_or" (formula "20") (term "0,0"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "commute_and" (formula "20") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "commute_or" (formula "16") (term "0,0"))
            (rule "commute_or_2" (formula "16") (term "0"))
            (rule "commute_or" (formula "15") (term "0,0"))
            (rule "commute_or_2" (formula "15") (term "0"))
            (rule "commute_or" (formula "11") (term "0,0"))
            (rule "commute_or_2" (formula "11") (term "0"))
            (rule "commute_or_2" (formula "9") (term "0,0"))
            (rule "commute_or_2" (formula "8") (term "0,0"))
            (rule "lenNonNegative" (formula "7") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
            (rule "seqGetAlphaCast" (formula "15") (term "0"))
            (rule "castedGetAny" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "seqGetAlphaCast" (formula "20") (term "0"))
            (rule "castedGetAny" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "lenNonNegative" (formula "8") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "commute_or" (formula "10") (term "0,0,0"))
            (rule "commute_or_2" (formula "10") (term "0,0"))
            (rule "commute_or_2" (formula "10") (term "0"))
            (rule "commute_or" (formula "9") (term "0,0,0"))
            (rule "commute_or_2" (formula "9") (term "0,0"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "andRight" (formula "46"))
            (branch
               (rule "commute_and_2" (formula "21") (term "0,1,0"))
               (rule "lenNonNegative" (formula "14") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "14"))
               (rule "lenNonNegative" (formula "20") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "20"))
               (rule "andRight" (formula "48"))
               (branch
                  (rule "andRight" (formula "48"))
                  (branch
                     (rule "andRight" (formula "48"))
                     (branch
                        (rule "allRight" (formula "48") (inst "sk=i_3_0"))
                        (rule "orRight" (formula "48"))
                        (rule "notRight" (formula "49"))
                        (rule "orRight" (formula "49"))
                        (rule "inEqSimp_leqRight" (formula "49"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "50"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "ex_pull_out3" (formula "26") (term "0"))
                        (rule "cnf_rightDist" (formula "26") (term "0,0"))
                        (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                        (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                        (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "15") (inst "t=i_3_0"))
                        (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "15") (term "0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "15"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                        (rule "nnf_ex2all" (formula "48"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "ex_pull_out3" (formula "24") (term "0"))
                        (rule "cnf_rightDist" (formula "24") (term "0,0"))
                        (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                        (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                        (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "15"))
                        (rule "qeq_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch
                     (rule "allRight" (formula "48") (inst "sk=i_1_0"))
                     (rule "orRight" (formula "48"))
                     (rule "orRight" (formula "48"))
                     (rule "notRight" (formula "50"))
                     (rule "inEqSimp_leqRight" (formula "49"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "50"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "ex_pull_out3" (formula "26") (term "0"))
                     (rule "cnf_rightDist" (formula "26") (term "0,0"))
                     (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                     (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                     (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                     (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "20") (term "0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                     (rule "andLeft" (formula "20"))
                     (rule "inEqSimp_homoInEq1" (formula "20"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "1,1,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0"))
                     (rule "add_literals" (formula "20") (term "0"))
                     (rule "leq_literals" (formula "20"))
                     (rule "closeFalse" (formula "20"))
                  )
               )
               (branch
                  (rule "allRight" (formula "48") (inst "sk=i_0_0"))
                  (rule "orRight" (formula "48"))
                  (rule "notRight" (formula "49"))
                  (rule "orRight" (formula "49"))
                  (rule "inEqSimp_geqRight" (formula "50"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "50"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "ex_pull_out3" (formula "26") (term "0"))
                  (rule "cnf_rightDist" (formula "26") (term "0,0"))
                  (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                  (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                  (rule "allLeft" (formula "21") (inst "t=i_0_0"))
                  (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1"))
                  (rule "leq_literals" (formula "21") (term "0,1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "closeFalse" (formula "21"))
               )
            )
            (branch
               (rule "nnf_ex2all" (formula "46"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "1") (term "0"))
               (rule "commute_or" (formula "1") (term "0,0"))
               (rule "commute_and_2" (formula "22") (term "0,1,0"))
               (rule "lenNonNegative" (formula "15") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "15"))
               (rule "lenNonNegative" (formula "21") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "21"))
               (rule "ex_pull_out3" (formula "24") (term "0"))
               (rule "cnf_rightDist" (formula "24") (term "0,0"))
               (rule "shift_paren_or" (formula "24") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
               (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
               (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "1") (inst "t=i_0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "leq_literals" (formula "1") (term "0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
               (rule "qeq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch
            (rule "allRight" (formula "45") (inst "sk=j_0"))
            (rule "impRight" (formula "45"))
            (rule "andLeft" (formula "1"))
            (rule "castedGetAny" (formula "47") (term "0,1,0"))
            (rule "castedGetAny" (formula "47") (term "1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
            (rule "polySimp_elimOne" (formula "15") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
            (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_and_subsumption3" (formula "11") (term "0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "nnf_ex2all" (formula "47"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_imp2or" (formula "19") (term "0"))
            (rule "nnf_imp2or" (formula "14") (term "0"))
            (rule "nnf_imp2or" (formula "23") (term "0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "19") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
            (rule "mul_literals" (formula "19") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "14") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
            (rule "mul_literals" (formula "14") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "23") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "mul_literals" (formula "11") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
            (rule "commute_or_2" (formula "18") (term "0"))
            (rule "commute_or_2" (formula "19") (term "0"))
            (rule "commute_or_2" (formula "14") (term "0"))
            (rule "commute_or" (formula "23") (term "0,0"))
            (rule "commute_or_2" (formula "1") (term "0"))
            (rule "commute_and" (formula "23") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "11") (term "0"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_or" (formula "18") (term "0,0"))
            (rule "commute_or_2" (formula "18") (term "0"))
            (rule "commute_or" (formula "19") (term "0,0"))
            (rule "commute_or_2" (formula "19") (term "0"))
            (rule "commute_or" (formula "14") (term "0,0"))
            (rule "commute_or_2" (formula "14") (term "0"))
            (rule "commute_or" (formula "1") (term "0,0"))
            (rule "commute_or_2" (formula "11") (term "0,0"))
            (rule "commute_or_2" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "11") (term "0,0,0"))
            (rule "commute_or_2" (formula "11") (term "0,0"))
            (rule "commute_or_2" (formula "11") (term "0"))
            (rule "commute_or" (formula "12") (term "0,0,0"))
            (rule "commute_or_2" (formula "12") (term "0,0"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_and_2" (formula "23") (term "0,1,0"))
            (rule "seqGetAlphaCast" (formula "22") (term "0"))
            (rule "castedGetAny" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "lenNonNegative" (formula "10") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "lenNonNegative" (formula "11") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
            (rule "seqGetAlphaCast" (formula "18") (term "0"))
            (rule "castedGetAny" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "lenNonNegative" (formula "17") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "17"))
            (rule "lenNonNegative" (formula "23") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "ex_pull_out3" (formula "26") (term "0"))
            (rule "cnf_rightDist" (formula "26") (term "0,0"))
            (rule "shift_paren_or" (formula "26") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
            (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
            (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "26") (term "0,0,0"))
            (rule "commute_and_2" (formula "26") (term "0,0"))
            (rule "allLeft" (formula "20") (inst "t=j_0"))
            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
            (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "20") (term "0,0,1"))
            (rule "leq_literals" (formula "20") (term "0,1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "20") (term "0,1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "notLeft" (formula "20"))
            (rule "allLeft" (formula "15") (inst "t=i_2_0"))
            (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
            (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "20"))
            (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "allLeft" (formula "20") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
            (rule "applyEq" (formula "20") (term "0,0,0,0") (ifseqformula "26"))
            (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "allLeft" (formula "26") (inst "t=i_0"))
            (rule "exLeft" (formula "26") (inst "sk=i_1"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
            (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
            (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
            (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "25"))
            (rule "eqSymm" (formula "28") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
            (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "22"))
            (rule "qeq_literals" (formula "27") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "22"))
            (rule "qeq_literals" (formula "28") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "22"))
            (rule "qeq_literals" (formula "26") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "24"))
            (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
            (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
            (rule "add_literals" (formula "27") (term "0,0,1"))
            (rule "leq_literals" (formula "27") (term "0,1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "24"))
            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
            (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "26") (term "0,0,1"))
            (rule "leq_literals" (formula "26") (term "0,1"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "24"))
            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,1"))
            (rule "leq_literals" (formula "28") (term "0,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "allLeft" (formula "29") (inst "t=j_0"))
            (rule "exLeft" (formula "29") (inst "sk=i_2"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
            (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
            (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
            (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
            (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "30") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
            (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "29") (term "0,0,1"))
            (rule "leq_literals" (formula "29") (term "0,1"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "31") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
            (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "30") (term "0,0,1"))
            (rule "leq_literals" (formula "30") (term "0,1"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "29") (term "0,1"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
            (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "31") (term "0,0,1"))
            (rule "leq_literals" (formula "31") (term "0,1"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "applyEq" (formula "33") (term "0") (ifseqformula "31"))
            (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
            (rule "lenNonNegative" (formula "21") (term "1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "21"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1") (ifseqformula "7"))
            (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "18"))
            (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "58"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "29"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "allLeft" (formula "17") (inst "t=i_2"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "50"))
            (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
            (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "17") (term "0,0,1"))
            (rule "leq_literals" (formula "17") (term "0,1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "49"))
            (rule "qeq_literals" (formula "17") (term "0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "closeFalse" (formula "17"))
         )
      )
   )
)
)
}
