\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Nov 09 19:34:19 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Nov 09 19:34:19 CET 2019
contract=de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup\\:\\:pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup\\:\\:pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "1606")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "p_12,exponent_4,self_220,result_255,exc_290,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "8"))
(rule "true_left" (formula "8"))
(rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "8"))
(rule "true_left" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "8"))
(rule "true_left" (formula "8"))
(rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_pow,savedHeapBefore_pow"))
 (builtin "One Step Simplification" (formula "15"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "exponentPos"))
(rule "condition" (formula "15") (term "1"))
(rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x"))
(rule "remove_parentheses_right" (formula "15") (term "1"))
(rule "compound_less_than_comparison_1" (formula "15") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x_1"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "15") (term "1"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "var"))
(rule "assignment" (formula "15") (term "1"))
 (builtin "One Step Simplification" (formula "15"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "var_1"))
(rule "activeUseStaticFieldReadAccess" (formula "15") (term "1"))
(rule "assignment_read_static_attribute" (formula "15") (term "1"))
 (builtin "One Step Simplification" (formula "15"))
 (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_compareTo,result_256,exc_291") (contract "java.math.BigInteger[java.math.BigInteger::compareTo(java.math.BigInteger)].JML normal_behavior operation contract.0"))
(branch "Post (compareTo)"
    (builtin "One Step Simplification" (formula "16"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "expand_inInt" (formula "8") (term "1,0"))
   (rule "replace_int_MIN" (formula "8") (term "0,1,1,0"))
   (rule "replace_int_MAX" (formula "8") (term "1,0,1,0"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "polySimp_elimSub" (formula "11") (term "0,1"))
   (rule "polySimp_elimSub" (formula "12") (term "0,1"))
   (rule "inEqSimp_commuteLeq" (formula "10"))
   (rule "assignment" (formula "21") (term "1"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "blockEmpty" (formula "21") (term "1"))
   (rule "applyEq" (formula "12") (term "0,1,0,1") (ifseqformula "7"))
   (rule "times_zero_2" (formula "12") (term "1,0,1"))
   (rule "add_zero_right" (formula "12") (term "0,1"))
   (rule "applyEq" (formula "11") (term "0,1,0,1") (ifseqformula "7"))
   (rule "times_zero_2" (formula "11") (term "1,0,1"))
   (rule "add_zero_right" (formula "11") (term "0,1"))
   (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "13"))
   (rule "less_than_comparison_simple" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "ifElseSplit" (formula "20"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "21"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "21") (term "1"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "var_2"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "var_3"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "methodCallWithAssignmentWithinClass" (formula "25") (term "1") (inst "#v0=b"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "b_4"))
      (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "returnUnfold" (formula "25") (term "1") (inst "#v0=b_5"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "b_5"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "25") (term "1") (inst "#v0=s"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "s"))
      (rule "assignment_read_attribute_this" (formula "25") (term "1"))
       (builtin "One Step Simplification" (formula "25"))
       (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_getOrder,result_257,exc_292") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
      (branch "Post (getOrder)"
          (builtin "One Step Simplification" (formula "26"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "21"))
         (rule "eqSymm" (formula "19"))
         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "assignment" (formula "30") (term "1"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "methodCallReturn" (formula "29") (term "1"))
         (rule "assignment" (formula "29") (term "1"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "methodCallEmpty" (formula "29") (term "1"))
         (rule "blockEmpty" (formula "29") (term "1"))
         (rule "assignment" (formula "29") (term "1"))
          (builtin "One Step Simplification" (formula "29"))
          (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_mod,result_258,exc_293,heapAfter_mod,anon_heap_mod") (contract "java.math.BigInteger[java.math.BigInteger::mod(java.math.BigInteger)].JML normal_behavior operation contract.0"))
         (branch "Post (mod)"
             (builtin "One Step Simplification" (formula "31"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1,0") (ifseqformula "22"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "28"))
            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "assignment" (formula "37") (term "1"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "blockEmpty" (formula "37") (term "1"))
            (rule "pullOutSelect" (formula "25") (term "1,1") (inst "selectSK=java_math_BigInteger_value_0"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "18")))
            (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")))
            (rule "eqSymm" (formula "26"))
            (rule "ifthenelse_negated" (formula "25") (term "0"))
            (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=java_math_BigInteger_value_2"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "37")) (ifInst ""  (formula "10")))
            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "27"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "pullOutSelect" (formula "26") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "29") (term "0") (ifseqformula "26"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_math_BigInteger_value_3"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "26"))
            (rule "replaceKnownSelect_taclet0000_6" (formula "26") (term "1,0,1"))
            (rule "replaceKnownSelect_taclet0000_6" (formula "26") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "26") (term "1,0,1"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "26") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "26") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "26") (term "0,0,0"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "returnUnfold" (formula "35") (term "1") (inst "#v0=e"))
            (rule "variableDeclarationAssign" (formula "35") (term "1"))
            (rule "variableDeclaration" (formula "35") (term "1") (newnames "e_7"))
             (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_multiply,result_259,exc_294,heapAfter_multiply,anon_heap_multiply") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
            (branch "Post (multiply)"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "andLeft" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,1,0") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,1,0") (ifseqformula "22"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "30"))
               (rule "notLeft" (formula "31"))
               (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "assignment" (formula "42") (term "1"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "methodCallReturn" (formula "40") (term "1"))
               (rule "assignment" (formula "40") (term "1"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "methodCallEmpty" (formula "40") (term "1"))
               (rule "tryEmpty" (formula "40") (term "1"))
               (rule "emptyModality" (formula "40") (term "1"))
               (rule "andRight" (formula "40"))
               (branch
                  (rule "andRight" (formula "40"))
                  (branch
                     (rule "andRight" (formula "40"))
                     (branch
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "jmod_axiom" (formula "25") (term "1"))
                        (rule "polySimp_mulComm1" (formula "25") (term "1,1"))
                        (rule "polySimp_homoEq" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "17") (term "0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "notLeft" (formula "17"))
                        (rule "inEqSimp_geqRight" (formula "29"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption0" (formula "17") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "17") (term "0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "6"))
                        (rule "leq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "38"))
                        (rule "pullOutSelect" (formula "38") (term "1,1,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
                        (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "9")))
                        (rule "applyEqReverse" (formula "39") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "38") (term "0,1,0") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "pullOutSelect" (formula "38") (term "1,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                        (rule "applyEq" (formula "39") (term "0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "9")))
                        (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "38") (term "1"))
                        (rule "pullOutSelect" (formula "38") (term "1,1,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                        (rule "applyEq" (formula "39") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "39") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "38") (term "0,0,1") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "38") (term "1"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "38"))
                        (rule "closeTrue" (formula "38"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "30")))
                        (rule "closeTrue" (formula "40"))
                     )
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "closeTrue" (formula "40"))
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "allRight" (formula "40") (inst "sk=f_0"))
                  (rule "allRight" (formula "40") (inst "sk=o_0"))
                  (rule "orRight" (formula "40"))
                  (rule "eqSymm" (formula "41"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "jmod_axiom" (formula "25") (term "1"))
                  (rule "polySimp_mulComm1" (formula "25") (term "1,1"))
                  (rule "polySimp_homoEq" (formula "25"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "5"))
                  (rule "leq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_subsumption0" (formula "15") (term "0") (ifseqformula "5"))
                  (rule "leq_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "5"))
                  (rule "qeq_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "notLeft" (formula "16"))
                  (rule "inEqSimp_geqRight" (formula "28"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                  (rule "eqSymm" (formula "40"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "jdiv_axiom" (formula "24") (term "0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "24") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "eqSymm" (formula "24"))
                  (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm1" (formula "25") (term "0"))
                  (rule "polySimp_homoEq" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1"))
                  (rule "div_axiom" (formula "24") (term "0,1") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,1"))
                  (rule "commute_and" (formula "24") (term "0,1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_mod«anonHeapFunction» = TRUE) TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "32"))
                     (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "44"))
                     (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "31")))
                     (rule "closeTrue" (formula "43"))
                  )
                  (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_mod«anonHeapFunction» = TRUE) FALSE"
                     (rule "close" (formula "43") (ifseqformula "1"))
                  )
               )
            )
            (branch "Exceptional Post (multiply)"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "andLeft" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0") (ifseqformula "22"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "30"))
               (rule "notLeft" (formula "28"))
               (rule "close" (formula "32") (ifseqformula "31"))
            )
            (branch "Pre (multiply)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1") (ifseqformula "22"))
               (rule "wellFormedAnonEQ" (formula "35") (term "0,1") (ifseqformula "22"))
               (rule "replace_known_left" (formula "35") (term "1,1") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "6")) (ifInst ""  (formula "21")))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "jmod_axiom" (formula "25") (term "1"))
               (rule "polySimp_mulComm1" (formula "25") (term "1,1"))
               (rule "polySimp_homoEq" (formula "25"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "5"))
               (rule "leq_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "5"))
               (rule "qeq_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "notLeft" (formula "16"))
               (rule "inEqSimp_geqRight" (formula "24"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "16") (term "0") (ifseqformula "6"))
               (rule "leq_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
               (rule "leq_literals" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "33"))
               (rule "closeTrue" (formula "33"))
            )
            (branch "Null reference (_p_12 = null)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")))
               (rule "closeTrue" (formula "35"))
            )
         )
         (branch "Exceptional Post (mod)"
             (builtin "One Step Simplification" (formula "31"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "22"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "23"))
            (rule "close" (formula "26") (ifseqformula "25"))
         )
         (branch "Pre (mod)"
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "21")) (ifInst ""  (formula "6")) (ifInst ""  (formula "21")) (ifInst ""  (formula "18")))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1"))
            (rule "inEqSimp_subsumption0" (formula "16") (term "0") (ifseqformula "5"))
            (rule "leq_literals" (formula "16") (term "0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "5"))
            (rule "leq_literals" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "5"))
            (rule "qeq_literals" (formula "16") (term "0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "notLeft" (formula "16"))
            (rule "inEqSimp_geqRight" (formula "19"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
            (rule "leq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "27"))
            (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "23")))
            (rule "closeTrue" (formula "27"))
         )
         (branch "Null reference (var_2 = null)"
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "27")))
            (rule "closeTrue" (formula "29"))
         )
      )
      (branch "Exceptional Post (getOrder)"
          (builtin "One Step Simplification" (formula "26"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "18"))
         (rule "close" (formula "21") (ifseqformula "20"))
      )
      (branch "Pre (getOrder)"
          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "6")))
         (rule "inEqSimp_ltToLeq" (formula "5"))
         (rule "mul_literals" (formula "5") (term "1,0,0"))
         (rule "add_literals" (formula "5") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
         (rule "mul_literals" (formula "5") (term "1"))
         (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "5"))
         (rule "leq_literals" (formula "14") (term "0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "inEqSimp_subsumption0" (formula "15") (term "0") (ifseqformula "5"))
         (rule "leq_literals" (formula "15") (term "0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "5"))
         (rule "qeq_literals" (formula "16") (term "0,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "inEqSimp_geqRight" (formula "16"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
         (rule "leq_literals" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "23"))
         (rule "closeTrue" (formula "23"))
      )
      (branch "Null reference (s = null)"
          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "20")))
         (rule "closeTrue" (formula "25"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "21"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "blockEmpty" (formula "21") (term "1"))
      (rule "returnUnfold" (formula "21") (term "1") (inst "#v0=e"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "e_7"))
       (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_multiply,result_257,exc_292,heapAfter_multiply,anon_heap_multiply") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
      (branch "Post (multiply)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0") (ifseqformula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "19"))
         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "assignment" (formula "28") (term "1"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "methodCallReturn" (formula "26") (term "1"))
         (rule "assignment" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "tryEmpty" (formula "26") (term "1"))
         (rule "emptyModality" (formula "26") (term "1"))
         (rule "andRight" (formula "26"))
         (branch
            (rule "andRight" (formula "26"))
            (branch
               (rule "andRight" (formula "26"))
               (branch
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_ltRight" (formula "18"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                  (rule "leq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "25"))
                  (rule "pullOutSelect" (formula "25") (term "1,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                  (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "26") (term "1,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "pullOutSelect" (formula "25") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
                  (rule "applyEq" (formula "26") (term "1,1,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "26") (term "1,1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "25"))
                  (rule "pullOutSelect" (formula "25") (term "1,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                  (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "26") (term "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "notRight" (formula "26"))
                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                  (rule "ifEqualsNull" (formula "2"))
                  (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "22"))
                  (rule "close" (formula "19") (ifseqformula "4"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                  (rule "closeTrue" (formula "26"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "26"))
               (rule "closeTrue" (formula "26"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "26"))
            (rule "allRight" (formula "26") (inst "sk=f_0"))
            (rule "allRight" (formula "26") (inst "sk=o_0"))
            (rule "orRight" (formula "26"))
            (rule "eqSymm" (formula "27"))
            (rule "inEqSimp_ltRight" (formula "18"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
            (rule "leq_literals" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
            (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "closeTrue" (formula "27"))
         )
      )
      (branch "Exceptional Post (multiply)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "15"))
         (rule "close" (formula "19") (ifseqformula "18"))
      )
      (branch "Pre (multiply)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")) (ifInst ""  (formula "1")) (ifInst ""  (formula "19")) (ifInst ""  (formula "5")))
         (rule "inEqSimp_ltRight" (formula "13"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
         (rule "leq_literals" (formula "11") (term "0"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "20"))
         (rule "closeTrue" (formula "20"))
      )
      (branch "Null reference (_p_12 = null)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
         (rule "closeTrue" (formula "21"))
      )
   )
)
(branch "Exceptional Post (compareTo)"
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "12") (ifseqformula "11"))
)
(branch "Pre (compareTo)"
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "11")))
   (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "15") (term "0"))
   (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "7")))
   (rule "referencedObjectIsCreatedRight" (formula "15") (ifseqformula "11"))
   (rule "close" (formula "15") (ifseqformula "1"))
)
(branch "Null reference (var = null)"
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "13")))
   (rule "closeTrue" (formula "15"))
)
)
}
