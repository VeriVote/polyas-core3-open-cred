\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Feb 09 15:05:22 CET 2020
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../../../home/flo/git/polyas-core3-open-cred/boot";

\javaSource "../../../../../../home/flo/git/polyas-core3-open-cred/src";

\proofObligation "#Proof Obligation Settings
#Sun Feb 09 15:05:22 CET 2020
contract=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:publicCredentialFromPIN(de.polyas.core3.open.crypto.groups.ECGroup,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:publicCredentialFromPIN(de.polyas.core3.open.crypto.groups.ECGroup,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))

(autoModeTime "1991")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "group_38,password_113,voterId_92,result_905,exc_1193,heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "14") (term "0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "14") (term "0,0,0,0,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "2"))
(rule "elementOfSingleton" (formula "14") (term "0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "inEqSimp_sepPosMonomial0" (formula "10"))
(rule "polySimp_mulComm0" (formula "10") (term "1"))
(rule "polySimp_rightDist" (formula "10") (term "1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
(rule "mul_literals" (formula "10") (term "0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1"))
(rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
(rule "times_zero_1" (formula "9") (term "0,0"))
(rule "add_zero_left" (formula "9") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9"))
(rule "mul_literals" (formula "9") (term "1"))
(rule "expand_addJint" (formula "15") (term "0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,0,1"))
(rule "expand_moduloInteger" (formula "15") (term "0,0,0,0,0,1"))
(rule "replace_int_RANGE" (formula "15") (term "1,1,0,0,0,0,0,1"))
(rule "replace_int_HALFRANGE" (formula "15") (term "0,0,1,0,0,0,0,0,1"))
(rule "replace_int_MIN" (formula "15") (term "0,0,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "15") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,0,1"))
(rule "polySimp_sepNegMonomial" (formula "15") (term "0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,0,1"))
(rule "polyMod_pullOut" (formula "15") (term "0,0,0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,0,1"))
(rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0,1"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "9"))
(rule "nonNull" (formula "9") (inst "i=i"))
(rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "greater_literals" (formula "9") (term "0,1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "13"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "7"))
(rule "true_left" (formula "7"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "7"))
(rule "true_left" (formula "7"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_publicCredentialFromPIN,savedHeapBefore_publicCredentialFromPIN"))
 (builtin "One Step Simplification" (formula "19"))
(rule "variableDeclarationFinalAssign" (formula "19") (term "1"))
(rule "variableDeclarationFinal" (formula "19") (term "1") (newnames "sk"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
(rule "variableDeclarationAssign" (formula "19") (term "1"))
(rule "variableDeclaration" (formula "19") (term "1") (newnames "var"))
(rule "arrayLengthNotNegative" (formula "10") (term "1,1"))
(rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
(rule "leq_literals" (formula "10") (term "0"))
 (builtin "One Step Simplification" (formula "10"))
(rule "true_left" (formula "10"))
(rule "arrayLengthIsAnInt" (formula "10") (term "1,1"))
(rule "expand_inInt" (formula "10"))
(rule "replace_int_MIN" (formula "10") (term "0,1"))
(rule "replace_int_MAX" (formula "10") (term "1,0"))
(rule "andLeft" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "8"))
(rule "leq_literals" (formula "11") (term "0"))
 (builtin "One Step Simplification" (formula "11"))
(rule "true_left" (formula "11"))
(rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,1,1") (ifseqformula "1"))
(rule "replace_known_right" (formula "11") (term "0") (ifseqformula "14"))
 (builtin "One Step Simplification" (formula "11"))
(rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "1"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
 (builtin "One Step Simplification" (formula "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "2"))
(rule "replace_known_right" (formula "7") (term "0") (ifseqformula "19"))
 (builtin "One Step Simplification" (formula "7"))
(rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "2"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
 (builtin "One Step Simplification" (formula "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "3"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
 (builtin "One Step Simplification" (formula "1"))
(rule "methodCallWithAssignment" (formula "25") (term "1") (inst "#v0=b"))
(branch "Normal Execution (_group_38 != null)"
    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
   (rule "false_right" (formula "25"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "b_20"))
   (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "returnUnfold" (formula "25") (term "1") (inst "#v0=b_21"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "b_21"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "25") (term "1") (inst "#v0=s"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "s"))
   (rule "assignment_read_attribute_this" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
    (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_getOrder,result_906,exc_1194,heapAfter_getOrder,anon_heap_getOrder") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
   (branch "Post (getOrder)"
       (builtin "One Step Simplification" (formula "27"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,1,0") (ifseqformula "18"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "26"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "eqSymm" (formula "21"))
      (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")))
      (rule "assignment" (formula "35") (term "1"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "21") (term "1") (inst "selectSK=java_math_BigInteger_value_0"))
      (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "26")))
      (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "31")) (ifInst ""  (formula "1")))
      (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
      (rule "hideAuxiliaryEq" (formula "21"))
      (rule "eqSymm" (formula "21"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "methodCallReturn" (formula "34") (term "1"))
      (rule "assignment" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "methodCallEmpty" (formula "34") (term "1"))
      (rule "blockEmpty" (formula "34") (term "1"))
      (rule "assignment" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "variableDeclarationAssign" (formula "34") (term "1"))
      (rule "variableDeclaration" (formula "34") (term "1") (newnames "var_1"))
      (rule "assignment" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "variableDeclarationAssign" (formula "34") (term "1"))
      (rule "variableDeclaration" (formula "34") (term "1") (newnames "var_2"))
      (rule "assignment" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "variableDeclarationAssign" (formula "34") (term "1"))
      (rule "variableDeclaration" (formula "34") (term "1") (newnames "var_3"))
      (rule "assignment" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
       (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_uniformHash,result_907,exc_1195,heapAfter_uniformHash,anon_heap_uniformHash") (contract "de.polyas.core3.open.crypto.basic.Hashes[de.polyas.core3.open.crypto.basic.Hashes::uniformHash(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
      (branch "Post (uniformHash)"
          (builtin "One Step Simplification" (formula "25"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "andLeft" (formula "25"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,1,0") (ifseqformula "25"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,1,0") (ifseqformula "18"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "29"))
         (rule "translateJavaAddInt" (formula "27") (term "1"))
         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "assignment" (formula "41") (term "1"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "blockEmpty" (formula "41") (term "1"))
         (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
         (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "eqSymm" (formula "28"))
         (rule "elementOfSingleton" (formula "27") (term "0,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
         (rule "hideAuxiliaryEq" (formula "27"))
         (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_1"))
         (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "27"))
         (rule "hideAuxiliaryEq" (formula "27"))
         (rule "eqSymm" (formula "27"))
         (rule "expand_addJint" (formula "27") (term "1"))
         (rule "polySimp_addComm0" (formula "27") (term "0,1"))
         (rule "expand_moduloInteger" (formula "27") (term "1"))
         (rule "replace_int_MIN" (formula "27") (term "0,1"))
         (rule "replace_int_RANGE" (formula "27") (term "1,1,1"))
         (rule "replace_int_HALFRANGE" (formula "27") (term "0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,1,1"))
         (rule "add_literals" (formula "27") (term "0,0,1,1"))
         (rule "mod_axiom" (formula "27") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "1"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
         (rule "add_literals" (formula "27") (term "0,0,1"))
         (rule "polyDiv_pullOut" (formula "27") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,2,0,1,1"))
         (rule "equal_literals" (formula "27") (term "0,0,1,1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
         (rule "polySimp_addComm0" (formula "27") (term "1,1,1"))
         (rule "polySimp_addComm1" (formula "27") (term "0,1,1,1,1"))
         (rule "add_literals" (formula "27") (term "0,0,1,1,1,1"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1"))
         (rule "mul_literals" (formula "27") (term "0,1,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "1"))
         (rule "polySimp_addComm1" (formula "27") (term "0,1"))
         (rule "add_literals" (formula "27") (term "0,0,1"))
         (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "28"))
         (rule "nonNull" (formula "28") (inst "i=i"))
         (rule "greater_literals" (formula "28") (term "0,1"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "sub_literals" (formula "28") (term "2,1,0,1"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
         (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
         (rule "applyEq" (formula "31") (term "0") (ifseqformula "28"))
         (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "elementOfSingleton" (formula "28") (term "0,0"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "28"))
         (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
         (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
         (rule "hideAuxiliaryEq" (formula "28"))
         (rule "nnf_imp2or" (formula "28") (term "0"))
         (rule "nnf_notAnd" (formula "28") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
         (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
         (rule "mul_literals" (formula "28") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "28") (term "0"))
         (rule "commute_or" (formula "28") (term "0,0"))
         (rule "returnUnfold" (formula "41") (term "1") (inst "#v0=e"))
         (rule "variableDeclarationAssign" (formula "41") (term "1"))
         (rule "variableDeclaration" (formula "41") (term "1") (newnames "e_20"))
         (rule "div_axiom" (formula "27") (term "0,1,1") (inst "quotient=quotient_0"))
         (rule "mul_literals" (formula "27") (term "1,1,1,1,1"))
         (rule "equal_literals" (formula "27") (term "0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "qeq_literals" (formula "27") (term "0,1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
         (rule "add_literals" (formula "29") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "29") (term "1"))
         (rule "add_literals" (formula "29") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "28"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "29"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0"))
         (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "27"))
         (rule "polySimp_addComm1" (formula "30") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
         (rule "polySimp_mulComm0" (formula "28") (term "1"))
         (rule "polySimp_rightDist" (formula "28") (term "1"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
         (rule "mul_literals" (formula "28") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29"))
         (rule "polySimp_mulComm0" (formula "29") (term "1"))
         (rule "polySimp_rightDist" (formula "29") (term "1"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
         (rule "mul_literals" (formula "29") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "16"))
         (rule "polySimp_rightDist" (formula "28") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "28") (term "0"))
         (rule "polySimp_addComm1" (formula "28") (term "0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
         (rule "polySimp_mulComm0" (formula "28") (term "1"))
         (rule "polySimp_rightDist" (formula "28") (term "1"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
         (rule "mul_literals" (formula "28") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "30"))
         (rule "mul_literals" (formula "13") (term "0,0"))
         (rule "add_zero_left" (formula "13") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
         (rule "mul_literals" (formula "13") (term "1"))
         (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "leq_literals" (formula "13") (term "0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "leq_literals" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "15"))
         (rule "polySimp_rightDist" (formula "29") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0"))
         (rule "add_literals" (formula "29") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "29"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
         (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
         (rule "leq_literals" (formula "29") (term "0,0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "neg_literal" (formula "29") (term "0,0,0,0,0,0"))
         (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
         (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
         (rule "add_literals" (formula "29") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "29") (term "1,0,0"))
         (rule "add_literals" (formula "29") (term "0,0"))
         (rule "qeq_literals" (formula "29") (term "0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "29"))
         (rule "applyEqRigid" (formula "32") (term "0,1,1") (ifseqformula "13"))
         (rule "mul_literals" (formula "32") (term "1,1"))
         (rule "add_literals" (formula "32") (term "1"))
         (rule "applyEqRigid" (formula "31") (term "0,1,1") (ifseqformula "13"))
         (rule "mul_literals" (formula "31") (term "1,1"))
         (rule "add_literals" (formula "31") (term "1"))
         (rule "applyEqRigid" (formula "33") (term "0,1,1") (ifseqformula "13"))
         (rule "mul_literals" (formula "33") (term "1,1"))
         (rule "add_literals" (formula "33") (term "1"))
         (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "13"))
         (rule "leq_literals" (formula "30"))
         (rule "true_left" (formula "30"))
         (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
         (rule "qeq_literals" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "applyEq" (formula "28") (term "1") (ifseqformula "13"))
         (rule "applyEqRigid" (formula "32") (term "0,1,0,1") (ifseqformula "13"))
         (rule "mul_literals" (formula "32") (term "1,0,1"))
         (rule "add_literals" (formula "32") (term "0,1"))
         (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "14"))
         (rule "leq_literals" (formula "30") (term "0"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "true_left" (formula "30"))
         (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "12"))
         (rule "leq_literals" (formula "29") (term "0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "44") (term "1"))
         (rule "variableDeclarationAssign" (formula "44") (term "1"))
         (rule "variableDeclaration" (formula "44") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "44") (term "1"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "variableDeclarationAssign" (formula "44") (term "1"))
         (rule "variableDeclaration" (formula "44") (term "1") (newnames "var_5"))
         (rule "methodCallWithAssignment" (formula "44") (term "1") (inst "#v0=e_21"))
         (branch "Normal Execution (_group_38 != null)"
             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "43")))
            (rule "false_right" (formula "44"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "e_21"))
            (rule "methodBodyExpand" (formula "44") (term "1") (newnames "heapBefore_generator,savedHeapBefore_generator"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "returnUnfold" (formula "44") (term "1") (inst "#v0=e_22"))
            (rule "variableDeclarationAssign" (formula "44") (term "1"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "e_22"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "44") (term "1") (inst "#v0=e_23"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "e_23"))
            (rule "assignment_read_attribute_this" (formula "44") (term "1"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "pullOutSelect" (formula "44") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
            (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "45") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
             (builtin "Use Operation Contract" (formula "44") (newnames "heapBefore_getG,result_908,exc_1196") (contract "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec[org.bouncycastle.jce.spec.ECParameterSpec::getG()].JML normal_behavior operation contract.0"))
            (branch "Post (getG)"
                (builtin "One Step Simplification" (formula "33"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,1,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,1,0") (ifseqformula "19"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "36"))
               (rule "notLeft" (formula "37"))
               (rule "eqSymm" (formula "35"))
               (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "assignment" (formula "49") (term "1"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
               (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "44")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "19"))
               (rule "eqSymm" (formula "36"))
               (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
               (rule "hideAuxiliaryEq" (formula "36"))
               (rule "replace_known_left" (formula "35") (term "0,0,1,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "elementOfSingleton" (formula "35") (term "0,0"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")))
               (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
               (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "44")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
               (rule "hideAuxiliaryEq" (formula "35"))
               (rule "applyEq" (formula "41") (term "0") (ifseqformula "35"))
               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "35"))
               (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "35"))
               (rule "replaceKnownSelect_taclet00000_13" (formula "35") (term "1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_14" (formula "35") (term "1,1"))
               (rule "replaceKnownSelect_taclet00000_13" (formula "35") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_14" (formula "35") (term "0,0,0"))
               (rule "andLeft" (formula "35"))
               (rule "notLeft" (formula "35"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "35"))
               (rule "true_left" (formula "35"))
               (rule "methodCallReturn" (formula "46") (term "1"))
               (rule "assignment" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "methodCallEmpty" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "blockEmpty" (formula "46") (term "1"))
               (rule "assignment" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "var_6"))
               (rule "assignment" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
                (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_pow,result_909,exc_1197,heapAfter_pow,anon_heap_pow") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0"))
               (branch "Post (pow)"
                   (builtin "One Step Simplification" (formula "48"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,0,1,1") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "19"))
                  (rule "andLeft" (formula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1,0") (ifseqformula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,1,0") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,1,1,0") (ifseqformula "19"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "38"))
                  (rule "notLeft" (formula "41"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "38"))
                  (rule "notLeft" (formula "38"))
                  (rule "notLeft" (formula "38"))
                  (rule "orRight" (formula "42"))
                  (rule "orRight" (formula "42"))
                  (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")))
                  (rule "assignment" (formula "57") (term "1"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "blockEmpty" (formula "57") (term "1"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "40"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "42"))
                  (rule "notLeft" (formula "40"))
                  (rule "notLeft" (formula "40"))
                  (rule "pullOutSelect" (formula "40") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                  (rule "applyEq" (formula "45") (term "0") (ifseqformula "40"))
                  (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "60")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0") (ifseqformula "19"))
                  (rule "replace_known_left" (formula "40") (term "0,0,0,0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "60")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,0") (ifseqformula "19"))
                  (rule "replace_known_left" (formula "40") (term "0,0,1,0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "elementOfSingleton" (formula "40") (term "0,0"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "60")))
                  (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "40"))
                  (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "40"))
                  (rule "hideAuxiliaryEq" (formula "40"))
                  (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_1"))
                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "41"))
                  (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "59")))
                  (rule "replaceKnownSelect_taclet0000_10" (formula "41") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_12" (formula "41") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,0") (ifseqformula "19"))
                  (rule "replace_known_left" (formula "41") (term "0,0,0,0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "41"))
                  (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "41"))
                  (rule "hideAuxiliaryEq" (formula "41"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "40"))
                  (rule "andLeft" (formula "40"))
                  (rule "notLeft" (formula "40"))
                  (rule "pullOutSelect" (formula "40") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "40"))
                  (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "53")))
                  (rule "replaceKnownSelect_taclet00000_13" (formula "40") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_14" (formula "40") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0") (ifseqformula "19"))
                  (rule "replace_known_left" (formula "40") (term "0,0,0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "40"))
                  (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "40"))
                  (rule "hideAuxiliaryEq" (formula "40"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "methodCallReturn" (formula "56") (term "1"))
                  (rule "assignment" (formula "56") (term "1"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "methodCallEmpty" (formula "56") (term "1"))
                  (rule "tryEmpty" (formula "56") (term "1"))
                  (rule "emptyModality" (formula "56") (term "1"))
                   (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "41")) (ifInst ""  (formula "44")) (ifInst ""  (formula "39")) (ifInst ""  (formula "44")))
                  (rule "eqSymm" (formula "56") (term "1,0,0,1"))
                  (rule "polySimp_homoEq" (formula "56") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                  (rule "mod_axiom" (formula "56") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                  (rule "applyEq" (formula "56") (term "0,1,0,0,0,0") (ifseqformula "28"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "56") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet000_3" (formula "1") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000_4" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "30"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "cut_direct" (formula "27") (term "0,0"))
                  (branch "CUT: result_907.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "cut_direct" (formula "56") (term "0"))
                     (branch "CUT: result_909.* ⊆ freshLocs(heap) TRUE"
                         (builtin "One Step Simplification" (formula "57"))
                        (rule "allRight" (formula "57") (inst "sk=f_0"))
                        (rule "allRight" (formula "57") (inst "sk=o_0"))
                        (rule "orRight" (formula "57"))
                        (rule "orRight" (formula "57"))
                        (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                        (rule "eqSymm" (formula "60"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "22"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "commute_and" (formula "59"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "44"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")))
                           (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "43")))
                           (rule "closeTrue" (formula "62"))
                        )
                        (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_uniformHash«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "43"))
                              (rule "orRight" (formula "43"))
                              (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "64"))
                              (rule "replace_known_right" (formula "63") (term "0,1") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "45")))
                              (rule "closeTrue" (formula "63"))
                           )
                           (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_uniformHash«anonHeapFunction» = TRUE) FALSE"
                              (rule "close" (formula "62") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch "CUT: result_909.* ⊆ freshLocs(heap) FALSE"
                         (builtin "One Step Simplification" (formula "57"))
                        (rule "false_right" (formula "57"))
                        (rule "subsetToElementOfRight" (formula "56") (inst "ov=ov") (inst "fv=fv"))
                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "44")) (ifInst ""  (formula "41")))
                        (rule "closeTrue" (formula "56"))
                     )
                  )
                  (branch "CUT: result_907.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "cut_direct" (formula "57") (term "0"))
                     (branch "CUT: result_909.* ⊆ freshLocs(heap) TRUE"
                         (builtin "One Step Simplification" (formula "58"))
                        (rule "allRight" (formula "58") (inst "sk=f_0"))
                        (rule "allRight" (formula "58") (inst "sk=o_0"))
                        (rule "orRight" (formula "58"))
                        (rule "orRight" (formula "58"))
                        (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                        (rule "eqSymm" (formula "61"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "22"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "commute_and" (formula "60"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "44"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "44"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "43")))
                           (rule "replace_known_right" (formula "63") (term "0,1") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "45")))
                           (rule "closeTrue" (formula "63"))
                        )
                        (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_uniformHash«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "43"))
                              (rule "orRight" (formula "43"))
                              (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "65"))
                              (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "45"))
                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "42")))
                              (rule "closeTrue" (formula "64"))
                           )
                           (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getOrder«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_uniformHash«anonHeapFunction» = TRUE) FALSE"
                              (rule "close" (formula "63") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch "CUT: result_909.* ⊆ freshLocs(heap) FALSE"
                         (builtin "One Step Simplification" (formula "58"))
                        (rule "false_right" (formula "58"))
                        (rule "subsetToElementOfRight" (formula "57") (inst "ov=ov") (inst "fv=fv"))
                         (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "45")) (ifInst ""  (formula "42")))
                        (rule "closeTrue" (formula "57"))
                     )
                  )
               )
               (branch "Exceptional Post (pow)"
                   (builtin "One Step Simplification" (formula "48"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,0,1,1") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "19"))
                  (rule "andLeft" (formula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,1,0") (ifseqformula "19"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "39"))
                  (rule "notLeft" (formula "37"))
                  (rule "close" (formula "40") (ifseqformula "39"))
               )
               (branch "Pre (pow)"
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,1") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0,1") (ifseqformula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,1") (ifseqformula "19"))
                  (rule "wellFormedAnonEQ" (formula "46") (term "0,0,1") (ifseqformula "26"))
                  (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,1") (ifseqformula "19"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,1") (ifseqformula "19"))
                  (rule "replace_known_left" (formula "46") (term "0,0,0,0,1") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "18")) (ifInst ""  (formula "25")) (ifInst ""  (formula "3")) (ifInst ""  (formula "27")))
                  (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "46") (term "0"))
                  (rule "pullOutSelect" (formula "46") (term "1,0,1,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                  (rule "applyEq" (formula "47") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "47") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "46") (term "0,0,0") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "pullOutSelect" (formula "46") (term "0,0") (inst "selectSK=java_math_BigInteger_value_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
                  (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "46") (term "0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "46") (term "1"))
                  (rule "replaceKnownSelect_taclet0000_10" (formula "46") (term "1,1,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_12" (formula "46") (term "1,1,1,1"))
                  (rule "replaceKnownSelect_taclet0000_10" (formula "46") (term "0,0,1,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_12" (formula "46") (term "0,0,1,0,1"))
                  (rule "replace_known_right" (formula "46") (term "0,1,0,1") (ifseqformula "40"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "pullOutSelect" (formula "46") (term "0,0,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                  (rule "applyEq" (formula "47") (term "1,0,1,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "47") (term "0,0,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "46") (term "0,0,1") (ifseqformula "41"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "46") (term "0,1"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "46") (term "1"))
                  (rule "replaceKnownSelect_taclet00000_13" (formula "46") (term "1,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_14" (formula "46") (term "1,1,1"))
                  (rule "replaceKnownSelect_taclet00000_13" (formula "46") (term "0,0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_14" (formula "46") (term "0,0,0,1"))
                  (rule "replace_known_right" (formula "46") (term "0,0,1") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "46") (term "0"))
                  (rule "replaceKnownSelect_taclet200000_17" (formula "46") (term "0,0,0,0"))
                  (rule "replaceKnownSelect_taclet200000_17" (formula "46") (term "1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet200000_19" (formula "46") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet200000_19" (formula "46") (term "1,0,1,0"))
                  (rule "replaceKnownSelect_taclet200000_20" (formula "46") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet200000_22" (formula "46") (term "0,1,0"))
                  (rule "replace_known_right" (formula "46") (term "0,0,0") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "10")))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "46"))
                  (rule "closeTrue" (formula "46"))
               )
               (branch "Null reference (var_4 = null)"
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "45")))
                  (rule "closeTrue" (formula "46"))
               )
            )
            (branch "Exceptional Post (getG)"
                (builtin "One Step Simplification" (formula "45"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0") (ifseqformula "19"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "35"))
               (rule "notLeft" (formula "33"))
               (rule "close" (formula "36") (ifseqformula "35"))
            )
            (branch "Pre (getG)"
                (builtin "One Step Simplification" (formula "44"))
               (rule "wellFormedAnonEQ" (formula "44") (term "1") (ifseqformula "26"))
               (rule "wellFormedAnonEQ" (formula "44") (term "0,1") (ifseqformula "19"))
               (rule "replace_known_left" (formula "44") (term "1,1") (ifseqformula "25"))
                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "4")) (ifInst ""  (formula "18")))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "44"))
               (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
               (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "45") (term "0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "44"))
               (rule "closeTrue" (formula "44"))
            )
            (branch "Null reference (e_23 = null)"
                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "38")))
               (rule "closeTrue" (formula "44"))
            )
         )
         (branch "Null Reference (_group_38 = null)"
             (builtin "One Step Simplification" (formula "45"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (uniformHash)"
          (builtin "One Step Simplification" (formula "25"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "andLeft" (formula "25"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "18"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "26"))
         (rule "close" (formula "30") (ifseqformula "29"))
      )
      (branch "Pre (uniformHash)"
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1") (ifseqformula "18"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0,1") (ifseqformula "18"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0,0,1") (ifseqformula "18"))
         (rule "wellFormedAnonEQ" (formula "34") (term "0,0,0,1") (ifseqformula "18"))
         (rule "replace_known_left" (formula "34") (term "0,1,0,1") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "4")) (ifInst ""  (formula "17")) (ifInst ""  (formula "24")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1"))
         (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,1"))
         (rule "polySimp_elimOne" (formula "34") (term "0,1,0,1"))
         (rule "pullOutSelect" (formula "34") (term "0,0,0,1") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
         (rule "applyEq" (formula "35") (term "1,1,1,0,1") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "35") (term "0,0,0,1") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "35") (term "1,1,1,0,1") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_left" (formula "34") (term "0,0,1") (ifseqformula "13"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "pullOutSelect" (formula "34") (term "0,0,0,1") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "35") (term "0,0,0,1") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
         (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1"))
         (rule "mul_literals" (formula "34") (term "0,1,0,1"))
         (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1"))
         (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "34") (term "1"))
         (rule "replaceKnownSelect_taclet200_5" (formula "34") (term "1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet200_6" (formula "34") (term "1,1"))
         (rule "nonNull" (formula "34") (term "1") (inst "i=i"))
         (rule "greater_literals" (formula "34") (term "0,1,1"))
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "27")))
         (rule "sub_literals" (formula "34") (term "2,1,0,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
         (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
         (rule "nnf_imp2or" (formula "34") (term "0,1"))
         (rule "nnf_notAnd" (formula "34") (term "0,0,1"))
         (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1"))
         (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1"))
         (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1"))
         (rule "mul_literals" (formula "34") (term "1,0,0,0,1"))
         (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "34") (term "0"))
         (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
         (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "35") (term "1,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=java_math_BigInteger_value_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
         (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "allRight" (formula "34") (inst "sk=i_0"))
         (rule "orRight" (formula "34"))
         (rule "orRight" (formula "34"))
         (rule "notRight" (formula "36"))
         (rule "inEqSimp_geqRight" (formula "36"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "36"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")) (ifInst ""  (formula "19")))
         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "7") (ifseqformula "30"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "allLeft" (formula "15") (inst "t=i_0"))
         (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "15") (term "0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "3"))
         (rule "andLeft" (formula "15"))
         (rule "inEqSimp_homoInEq1" (formula "15"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
         (rule "add_literals" (formula "15") (term "1,1,0"))
         (rule "times_zero_1" (formula "15") (term "1,0"))
         (rule "add_literals" (formula "15") (term "0"))
         (rule "leq_literals" (formula "15"))
         (rule "closeFalse" (formula "15"))
      )
   )
   (branch "Exceptional Post (getOrder)"
       (builtin "One Step Simplification" (formula "27"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,0") (ifseqformula "18"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "19"))
      (rule "close" (formula "23") (ifseqformula "22"))
   )
   (branch "Pre (getOrder)"
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "4")))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "25"))
      (rule "closeTrue" (formula "25"))
   )
   (branch "Null reference (s = null)"
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "20")))
      (rule "closeTrue" (formula "25"))
   )
)
(branch "Null Reference (_group_38 = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
   (rule "closeFalse" (formula "1"))
)
)
}
