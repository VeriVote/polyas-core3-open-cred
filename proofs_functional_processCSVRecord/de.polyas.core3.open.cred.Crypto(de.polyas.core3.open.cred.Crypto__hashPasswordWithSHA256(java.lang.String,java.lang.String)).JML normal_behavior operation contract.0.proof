\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Feb 09 15:02:50 CET 2020
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../../../home/flo/git/polyas-core3-open-cred/boot";

\javaSource "../../../../../../home/flo/git/polyas-core3-open-cred/src";

\proofObligation "#Proof Obligation Settings
#Sun Feb 09 15:02:50 CET 2020
contract=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:hashPasswordWithSHA256(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:hashPasswordWithSHA256(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))

(autoModeTime "383")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "password_83,salt_13,result_703,exc_927,heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "5"))
(rule "insert_constant_string_value" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "castDel" (formula "5") (term "0,0,0,0,0"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_hashPasswordWithSHA256,savedHeapBefore_hashPasswordWithSHA256"))
 (builtin "One Step Simplification" (formula "10"))
(rule "returnUnfold" (formula "10") (term "1") (inst "#v0=s"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "s"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "10") (term "1"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "var"))
(rule "stringConcat" (formula "10") (term "1") (inst "sk=sk_0"))
 (builtin "One Step Simplification" (formula "12"))
 (builtin "One Step Simplification" (formula "11"))
 (builtin "One Step Simplification" (formula "1"))
(rule "eqSeqConcat" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "polySimp_addComm0" (formula "1") (term "1"))
(rule "lenOfSeqSubEQ" (formula "1") (term "0,1") (ifseqformula "3"))
(rule "polySimp_elimSub" (formula "1") (term "1,0,1"))
(rule "polySimp_homoEq" (formula "1"))
(rule "polySimp_addComm0" (formula "1") (term "1,0,0,0"))
(rule "polySimp_addComm0" (formula "1") (term "0,0"))
(rule "polySimp_addComm1" (formula "1") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
(rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
(rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
(rule "polySimp_sepPosMonomial" (formula "1"))
(rule "polySimp_mulComm0" (formula "1") (term "1"))
(rule "polySimp_rightDist" (formula "1") (term "1"))
(rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
(rule "polySimp_elimOne" (formula "1") (term "1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "polySimp_homoEq" (formula "1") (term "1"))
(rule "times_zero_2" (formula "1") (term "1,0,1"))
(rule "add_zero_right" (formula "1") (term "0,1"))
(rule "polySimp_sepPosMonomial" (formula "1") (term "1"))
(rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
(rule "polySimp_elimOne" (formula "1") (term "1,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
(rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
(rule "polySimp_elimOne" (formula "1") (term "0,0"))
(rule "commute_or" (formula "1"))
(rule "inEqSimp_or_weaken1" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
 (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_sha256,result_704,exc_928,heapAfter_sha256,anon_heap_sha256") (contract "de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto::sha256(java.lang.String)].JML normal_behavior operation contract.0"))
(branch "Post (sha256)"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0") (ifseqformula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "12"))
   (rule "notLeft" (formula "12"))
   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "14")))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "blockEmpty" (formula "22") (term "1"))
   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
   (rule "castDel" (formula "1") (term "1,0"))
   (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "orRight" (formula "14"))
   (rule "hideAuxiliaryEqConcrete2" (formula "16"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "13"))
   (rule "insert_constant_string_value" (formula "13") (term "0,0,0,0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "castDel" (formula "13") (term "0,0,0,0,0"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "15"))
   (rule "notLeft" (formula "14"))
   (rule "notLeft" (formula "13"))
   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
   (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
   (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "methodCallReturn" (formula "22") (term "1"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "methodCallEmpty" (formula "22") (term "1"))
   (rule "tryEmpty" (formula "22") (term "1"))
   (rule "emptyModality" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "12")) (ifInst ""  (formula "15")))
   (rule "eqSymm" (formula "22") (term "1,0,0,1"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "22") (term "0"))
   (rule "replaceKnownSelect_taclet0_2" (formula "22") (term "0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "22") (term "0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_5" (formula "22") (term "0,0,1,0,0"))
   (rule "insert_constant_string_value" (formula "22") (term "0,0,0,0,0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "18")))
   (rule "replaceKnownAuxiliaryConstant_taclet0_7" (formula "22") (term "0,0,1,0"))
   (rule "castDel" (formula "22") (term "0,0,0,0,0"))
   (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "16")))
   (rule "allRight" (formula "22") (inst "sk=f_0"))
   (rule "allRight" (formula "22") (inst "sk=o_0"))
   (rule "orRight" (formula "22"))
   (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "24"))
   (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
   (rule "castDel" (formula "1") (term "1,0"))
   (rule "eqSymm" (formula "1") (term "0,0"))
   (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_1"))
   (rule "simplifySelectOfCreate" (formula "2"))
   (rule "castDel" (formula "2") (term "1,0"))
   (rule "eqSymm" (formula "2") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "24"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "commute_and" (formula "3") (term "0,0"))
   (rule "commute_and" (formula "2") (term "0,0"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
   (rule "andLeft" (formula "6"))
   (rule "lenOfSeqSub" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_elimSub" (formula "7") (term "1,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "7") (term "1,1,1,0,0"))
   (rule "lenOfSeqSub" (formula "6") (term "0"))
   (rule "polySimp_elimSub" (formula "6") (term "1,0"))
   (rule "polySimp_addComm0" (formula "6") (term "1,0"))
   (rule "lenOfSeqSubEQ" (formula "6") (term "1") (ifseqformula "8"))
   (rule "eqSymm" (formula "6"))
   (rule "polySimp_elimSub" (formula "6") (term "1,0"))
   (rule "polySimp_addComm0" (formula "6") (term "1,0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,0,0"))
   (rule "polySimp_addComm1" (formula "6") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "lenNonNegative" (formula "6") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "6"))
   (rule "lenNonNegative" (formula "7") (term "2,0"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
   (rule "andLeft" (formula "5"))
   (rule "lenOfSeqSub" (formula "5") (term "0"))
   (rule "polySimp_elimSub" (formula "5") (term "1,0"))
   (rule "times_zero_2" (formula "5") (term "1,1,0"))
   (rule "add_zero_right" (formula "5") (term "1,0"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "eqSymm" (formula "5") (term "1"))
   (rule "lenOfSeqSub" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_elimSub" (formula "6") (term "1,1,1,0,0"))
   (rule "times_zero_2" (formula "6") (term "1,1,1,1,0,0"))
   (rule "add_zero_right" (formula "6") (term "1,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
   (rule "add_zero_right" (formula "5") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
   (rule "polySimp_elimOne" (formula "5") (term "0,0"))
   (rule "commute_or" (formula "5"))
   (rule "inEqSimp_or_weaken1" (formula "5"))
   (rule "add_zero_right" (formula "5") (term "1,0"))
    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "7")))
   (rule "true_left" (formula "5"))
   (rule "ifthenelse_split" (formula "1") (term "0"))
   (branch "o_0 = sk_0 TRUE"
      (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "4"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "hideAuxiliaryEq" (formula "3"))
      (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "applyEqRigid" (formula "26") (term "0,0,0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "notRight" (formula "26"))
      (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "2"))
      (rule "ifthenelse_split" (formula "3") (term "0"))
      (branch "f_0 = java.lang.Object::<created> TRUE"
         (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "4"))
         (rule "hideAuxiliaryEq" (formula "4"))
         (rule "applyEqRigid" (formula "27") (term "2,0") (ifseqformula "3"))
         (rule "castTrueImpliesOriginalTrue" (formula "27") (ifseqformula "1"))
         (rule "closeTrue" (formula "27"))
      )
      (branch "f_0 = java.lang.Object::<created> FALSE"
         (rule "close" (formula "28") (ifseqformula "3"))
      )
   )
   (branch "o_0 = sk_0 FALSE"
      (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "commute_and" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (sha256)"
    (builtin "One Step Simplification" (formula "16"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "14") (ifseqformula "13"))
)
(branch "Pre (sha256)"
    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
   (rule "wellFormedCreate" (formula "14") (term "0,1"))
   (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "pullOutSelect" (formula "14") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
   (rule "castDel" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "14"))
   (rule "insert_constant_string_value" (formula "14") (term "0,0,0,0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "castDel" (formula "14") (term "0,0,0,0,0"))
   (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "pullOutSelect" (formula "14") (term "0,0,1") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
   (rule "applyEqReverse" (formula "15") (term "0,0,1") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "notRight" (formula "14"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
   (rule "close" (formula "10") (ifseqformula "2"))
)
)
}
