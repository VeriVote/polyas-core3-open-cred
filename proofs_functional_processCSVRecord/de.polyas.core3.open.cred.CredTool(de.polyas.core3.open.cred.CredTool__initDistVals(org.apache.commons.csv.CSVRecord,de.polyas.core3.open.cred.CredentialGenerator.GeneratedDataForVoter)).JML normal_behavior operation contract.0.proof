\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 19 18:13:04 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Dec 19 18:13:04 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "20964")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "record_134,dataForVoter_66,self_1152,exc_1462,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "13"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,1,0"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "10") (term "1,1,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "7") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "7") (term "1,0,0,1"))
(rule "expand_inInt" (formula "7") (term "1,0,0,1,0"))
(rule "replace_int_MIN" (formula "7") (term "0,1,1,0,0,1"))
(rule "replace_int_MAX" (formula "7") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "7") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "7") (term "1,0,1,0,0,1,0"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "eqSymm" (formula "7"))
(rule "castedGetAny" (formula "9") (term "0,0,1,0"))
(rule "castedGetAny" (formula "8") (term "0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0"))
(rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0,0") (ifseqformula "7"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "8") (term "1,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "0,1,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,1,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,1,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,1,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "1,1,1,0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0"))
(rule "nnf_notAnd" (formula "9") (term "1,0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,1,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "1,1,1,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "0,1,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,1,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "castDel" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "exLeft" (formula "15") (inst "sk=i_0"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "exLeft" (formula "12") (inst "sk=i_2_0"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "castedGetAny" (formula "16") (term "0,0,1,0"))
(rule "castedGetAny" (formula "15") (term "0,0,1,0"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "castedGetAny" (formula "19") (term "0"))
(rule "castedGetAny" (formula "14") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "18"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "18") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "13"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "13") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "18"))
(rule "polySimp_mulLiterals" (formula "18") (term "0"))
(rule "polySimp_elimOne" (formula "18") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "13"))
(rule "polySimp_mulLiterals" (formula "13") (term "0"))
(rule "polySimp_elimOne" (formula "13") (term "0"))
(rule "nnf_imp2or" (formula "16") (term "0"))
(rule "nnf_imp2or" (formula "15") (term "0"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_notAnd" (formula "16") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
(rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
(rule "mul_literals" (formula "16") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
(rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "15") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
(rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "15") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
(rule "mul_literals" (formula "15") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
(rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
(rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
(rule "commute_and_2" (formula "20") (term "0,1,0"))
(rule "commute_or_2" (formula "8") (term "0,0"))
(rule "commute_or" (formula "10"))
(rule "commute_or_2" (formula "9") (term "0,0"))
(rule "methodBodyExpand" (formula "45") (term "1") (newnames "heapBefore_initDistVals,savedHeapBefore_initDistVals"))
 (builtin "One Step Simplification" (formula "45"))
(rule "activeUseStaticFieldWriteAccess" (formula "45") (term "1") (inst "#v0=a"))
(rule "variableDeclarationAssign" (formula "45") (term "1"))
(rule "variableDeclaration" (formula "45") (term "1") (newnames "a"))
(rule "commute_or_2" (formula "16") (term "0"))
(rule "commute_or_2" (formula "15") (term "0"))
(rule "commute_or_2" (formula "11") (term "0"))
(rule "commute_or" (formula "16") (term "0,0"))
(rule "commute_or" (formula "15") (term "0,0"))
(rule "commute_or" (formula "11") (term "0,0"))
(rule "commute_or" (formula "8") (term "1,0,0,0"))
(rule "commute_or" (formula "9") (term "1,0,0,0"))
(rule "shift_paren_or" (formula "8") (term "0,0,0"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "commute_or_2" (formula "8") (term "0,0"))
(rule "commute_or_2" (formula "8") (term "0,0,0"))
(rule "shift_paren_or" (formula "9") (term "0,0,0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or_2" (formula "9") (term "0,0"))
(rule "commute_or_2" (formula "9") (term "0,0,0"))
(rule "commute_or" (formula "8") (term "0,0,0,0"))
(rule "commute_or_2" (formula "8") (term "0,0,0"))
(rule "inEqSimp_or_subsumption1" (formula "8") (term "0,0,0"))
(rule "qeq_literals" (formula "8") (term "0,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "8"))
(rule "lenNonNegative" (formula "20") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "commute_or" (formula "9") (term "0,0,0,0"))
(rule "commute_or_2" (formula "9") (term "0,0,0"))
(rule "inEqSimp_or_subsumption1" (formula "9") (term "0,0,0"))
(rule "qeq_literals" (formula "9") (term "0,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "lenNonNegative" (formula "7") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
(rule "lenNonNegative" (formula "8") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "commute_and" (formula "22") (term "0,0,1,0"))
 (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore_ArrayList,self_1153,exc_1463,heapAfter_ArrayList,anon_heap_ArrayList") (contract "java.util.ArrayList[java.util.ArrayList::ArrayList()].JML normal_behavior operation contract.0"))
(branch "Post (ArrayList)"
    (builtin "One Step Simplification" (formula "24"))
    (builtin "One Step Simplification" (formula "49"))
   (rule "andLeft" (formula "24"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0,1,0") (ifseqformula "24"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "29"))
   (rule "notLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "29"))
   (rule "notLeft" (formula "25"))
   (rule "notLeft" (formula "28"))
   (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "assignment" (formula "57") (term "1"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "assignment_write_static_attribute" (formula "57") (term "1"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "eval_order_access4" (formula "57") (term "1") (inst "#v1=a") (inst "#v0=c"))
   (rule "variableDeclarationAssign" (formula "57") (term "1"))
   (rule "variableDeclaration" (formula "57") (term "1") (newnames "c_21"))
   (rule "assignment" (formula "57") (term "1"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "variableDeclarationAssign" (formula "57") (term "1"))
   (rule "variableDeclaration" (formula "57") (term "1") (newnames "a_1"))
   (rule "activeUseStaticFieldReadAccess" (formula "57") (term "1"))
   (rule "assignment_read_static_attribute" (formula "57") (term "1"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "pullOutSelect" (formula "57") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
   (rule "simplifySelectOfStore" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "castDel" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "58") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "assignment_write_attribute" (formula "57") (term "1"))
   (branch "Normal Execution (c_21 != null)"
       (builtin "One Step Simplification" (formula "58"))
       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")))
      (rule "false_right" (formula "57"))
      (rule "eval_order_access4" (formula "57") (term "1") (inst "#v1=a") (inst "#v0=c"))
      (rule "variableDeclarationAssign" (formula "57") (term "1"))
      (rule "variableDeclaration" (formula "57") (term "1") (newnames "c_22"))
      (rule "assignment" (formula "57") (term "1"))
       (builtin "One Step Simplification" (formula "57"))
      (rule "variableDeclarationAssign" (formula "57") (term "1"))
      (rule "variableDeclaration" (formula "57") (term "1") (newnames "a_2"))
      (rule "assignment_read_attribute_this" (formula "57") (term "1"))
       (builtin "One Step Simplification" (formula "57"))
      (rule "dismissNonSelectedField" (formula "57") (term "0,1,0"))
      (rule "dismissNonSelectedField" (formula "57") (term "0,1,0"))
      (rule "pullOutSelect" (formula "57") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "58") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "assignment_write_attribute" (formula "57") (term "1"))
      (branch "Normal Execution (c_22 != null)"
          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")))
          (builtin "One Step Simplification" (formula "58"))
         (rule "false_right" (formula "57"))
         (rule "assignment_write_attribute_this" (formula "57") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
         (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
         (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "27"))
         (rule "hideAuxiliaryEq" (formula "27"))
         (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "ex_pull_out3" (formula "22") (term "0"))
         (rule "cnf_rightDist" (formula "22") (term "0,0"))
         (rule "shift_paren_or" (formula "22") (term "1,0,0"))
         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
         (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "22") (term "1,0,0,0"))
         (rule "commute_or" (formula "22") (term "0,0,0,0,0"))
         (rule "seqGetAlphaCast" (formula "20") (term "0"))
         (rule "castedGetAny" (formula "20") (term "0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "seqGetAlphaCast" (formula "15") (term "0"))
         (rule "castedGetAny" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "lenNonNegative" (formula "19") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "19"))
         (rule "lenNonNegative" (formula "14") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
          (builtin "Use Operation Contract" (formula "58") (newnames "heapBefore_addInputCols,exc_1464,heapAfter_addInputCols,anon_heap_addInputCols") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::addInputCols()].JML normal_behavior operation contract.0"))
         (branch "Post (addInputCols)"
             (builtin "One Step Simplification" (formula "33"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "36"))
            (rule "dismissNonSelectedField" (formula "33") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "33") (term "0,1,0"))
            (rule "pullOutSelect" (formula "35") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_record_0"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "62")))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,1,0,0"))
            (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "ifthenelse_negated" (formula "35") (term "0"))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0") (ifseqformula "26"))
            (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "simplifySelectOfStore" (formula "35"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "castDel" (formula "35") (term "0"))
            (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "35"))
            (rule "hideAuxiliaryEq" (formula "35"))
            (rule "pullOutSelect" (formula "37") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_cols_0"))
            (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "62")))
            (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "dismissNonSelectedField" (formula "37") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "37") (term "0,0,0,0"))
            (rule "ifthenelse_negated" (formula "37") (term "0"))
            (rule "dismissNonSelectedField" (formula "37") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "37") (term "0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0") (ifseqformula "26"))
            (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "simplifySelectOfStore" (formula "37"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "castDel" (formula "37") (term "0"))
            (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "37"))
            (rule "hideAuxiliaryEq" (formula "37"))
            (rule "pullOutSelect" (formula "36") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_vals_0"))
            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "62")))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
            (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,0"))
            (rule "ifthenelse_negated" (formula "36") (term "0"))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0") (ifseqformula "26"))
            (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "36"))
            (rule "simplifySelectOfStore" (formula "36"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "castDel" (formula "36") (term "0"))
            (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "36"))
            (rule "applyEqReverse" (formula "33") (term "0,1,0") (ifseqformula "36"))
            (rule "hideAuxiliaryEq" (formula "36"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "35") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "35") (term "1,0,0,1,0"))
            (rule "expand_inInt" (formula "35") (term "1,0,0,1"))
            (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0,1"))
            (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0,1"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "eqSymm" (formula "35"))
            (rule "castedGetAny" (formula "37") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "36") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "37") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
            (rule "apply_eq_monomials" (formula "37") (term "1,0,0,1,0,0,0") (ifseqformula "35"))
            (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "37") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "37") (term "1,1,1,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "37") (term "1,1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "37") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
            (rule "pullOutSelect" (formula "35") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
            (rule "applyEq" (formula "38") (term "0,0,0,1,0") (ifseqformula "35"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "65")))
            (rule "eqSymm" (formula "36"))
            (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "ifthenelse_negated" (formula "35") (term "0"))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0") (ifseqformula "26"))
            (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "simplifySelectOfStore" (formula "35"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "65")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0") (ifseqformula "35"))
            (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "35"))
            (rule "hideAuxiliaryEq" (formula "35"))
            (rule "applyEq" (formula "35") (term "1") (ifseqformula "8"))
            (rule "pullOutSelect" (formula "36") (term "0,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
            (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
            (rule "applyEq" (formula "38") (term "0,1,1,1,0,0,0") (ifseqformula "36"))
            (rule "applyEq" (formula "37") (term "0,1,1,1,0,0,0") (ifseqformula "36"))
            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "65")))
            (rule "eqSymm" (formula "35"))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
            (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "26"))
            (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "65")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0,0") (ifseqformula "36"))
            (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0") (ifseqformula "35"))
            (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0,0") (ifseqformula "35"))
            (rule "hideAuxiliaryEq" (formula "35"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_imp2or" (formula "36") (term "0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "nnf_notAnd" (formula "36") (term "0,0"))
            (rule "nnf_notAnd" (formula "35") (term "1,0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
            (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,1,0,0"))
            (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "37"))
            (rule "true_left" (formula "37"))
            (rule "commute_or_2" (formula "35") (term "0,0"))
            (rule "commute_and" (formula "24") (term "0,0,0"))
            (rule "methodCallUnfoldTarget" (formula "63") (term "1") (inst "#v0=a"))
            (rule "variableDeclaration" (formula "63") (term "1") (newnames "a_3"))
            (rule "activeUseStaticFieldReadAccess" (formula "63") (term "1"))
            (rule "assignment_read_static_attribute" (formula "63") (term "1"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "pullOutSelect" (formula "63") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
            (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "64") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "allLeft" (formula "26") (inst "t=i_2_0"))
            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
            (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "31"))
            (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "64"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "allLeft" (formula "31") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
            (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "37"))
            (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "64"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "true_left" (formula "31"))
            (rule "commute_or_2" (formula "50") (term "0,0"))
            (rule "commute_or" (formula "49") (term "1,0,0,0"))
            (rule "lenNonNegative" (formula "43") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "43"))
            (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
            (rule "qeq_literals" (formula "43"))
            (rule "true_left" (formula "43"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or" (formula "54") (term "1,0,0,0"))
            (rule "shift_paren_or" (formula "53") (term "0,0,0"))
            (rule "commute_or_2" (formula "53") (term "0"))
            (rule "commute_or_2" (formula "53") (term "0,0"))
            (rule "commute_or_2" (formula "53") (term "0,0,0"))
            (rule "shift_paren_or" (formula "54") (term "0,0,0"))
            (rule "commute_or_2" (formula "54") (term "0"))
            (rule "commute_or_2" (formula "54") (term "0,0"))
            (rule "commute_or_2" (formula "54") (term "0,0,0"))
            (rule "commute_or" (formula "53") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "53") (term "0,0,0"))
            (rule "inEqSimp_or_subsumption1" (formula "53") (term "0,0,0"))
            (rule "qeq_literals" (formula "53") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "27")))
            (rule "true_left" (formula "53"))
            (rule "commute_or" (formula "53") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "53") (term "0,0,0"))
            (rule "inEqSimp_or_subsumption1" (formula "53") (term "0,0,0"))
            (rule "qeq_literals" (formula "53") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "28")))
            (rule "true_left" (formula "53"))
            (rule "commute_and_2" (formula "42") (term "0,0"))
            (rule "methodCallUnfoldArguments" (formula "79") (term "1"))
            (rule "variableDeclarationAssign" (formula "79") (term "1"))
            (rule "variableDeclaration" (formula "79") (term "1") (newnames "var"))
            (rule "assignment" (formula "79") (term "1"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "variableDeclarationAssign" (formula "79") (term "1"))
            (rule "variableDeclaration" (formula "79") (term "1") (newnames "var_1"))
            (rule "assignment" (formula "79") (term "1"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "variableDeclarationAssign" (formula "79") (term "1"))
            (rule "variableDeclaration" (formula "79") (term "1") (newnames "var_2"))
            (rule "assignment_read_attribute" (formula "79") (term "1"))
            (branch "Normal Execution (_dataForVoter_66 != null)"
                (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "78")))
                (builtin "One Step Simplification" (formula "80"))
               (rule "false_right" (formula "79"))
               (rule "pullOutSelect" (formula "79") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "24")))
               (rule "applyEqReverse" (formula "80") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,0") (ifseqformula "19"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "1,1") (ifseqformula "19"))
                (builtin "Use Operation Contract" (formula "81") (newnames "heapBefore_add,exc_1465,heapAfter_add,anon_heap_add") (contract "java.util.ArrayList[java.util.List::add(int,java.lang.Object)].JML normal_behavior operation contract.0"))
               (branch "Post (add)"
                   (builtin "One Step Simplification" (formula "56"))
                   (builtin "One Step Simplification" (formula "83"))
                  (rule "andLeft" (formula "56"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "58"))
                  (rule "eqSymm" (formula "58"))
                  (rule "pullOutSelect" (formula "58") (term "1,0") (inst "selectSK=java_util_Collection_seq_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "62")))
                  (rule "eqSymm" (formula "59"))
                  (rule "elementOfSingleton" (formula "58") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "58"))
                  (rule "applyEqReverse" (formula "59") (term "1,1") (ifseqformula "58"))
                  (rule "hideAuxiliaryEq" (formula "58"))
                  (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=java_util_Collection_seq_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "62")))
                  (rule "replaceKnownSelect_taclet000000_30" (formula "58") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_31" (formula "58") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,0,0") (ifseqformula "53"))
                  (rule "eqSymm" (formula "59"))
                  (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "59"))
                  (rule "hideAuxiliaryEq" (formula "59"))
                  (rule "elementOfSingleton" (formula "58") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "58"))
                  (rule "eqSymm" (formula "58"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "59"))
                  (rule "true_left" (formula "59"))
                  (rule "methodCallEmpty" (formula "85") (term "1"))
                  (rule "tryEmpty" (formula "85") (term "1"))
                  (rule "emptyModality" (formula "85") (term "1"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "eqSymm" (formula "85") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "85") (term "0,0") (inst "i=i") (inst "i_0=i_0"))
                  (rule "expand_inInt" (formula "85") (term "1,0,0,1,0,0"))
                  (rule "expand_inInt" (formula "85") (term "1,0,0,1,0,0,0"))
                  (rule "replace_int_MAX" (formula "85") (term "1,0,1,0,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "85") (term "0,1,1,0,0,1,0,0"))
                  (rule "replace_int_MAX" (formula "85") (term "1,0,1,0,0,1,0,0,0"))
                  (rule "replace_int_MIN" (formula "85") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "eqSymm" (formula "85") (term "0,0,0,0"))
                  (rule "castedGetAny" (formula "85") (term "0,0,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "85") (term "0,0,1,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "1,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,1,0,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,0,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                  (rule "applyEq" (formula "86") (term "0,0,0,1,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "86") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                  (rule "replaceKnownSelect_taclet0000_15" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_18" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "54"))
                  (rule "eqSymm" (formula "86") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,0,0,1,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEq" (formula "85") (term "1,1,1,0,0,0,1,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "85") (term "1,0,0,0,0") (ifseqformula "26"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,0,1,0,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                  (rule "applyEq" (formula "86") (term "0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "86") (term "0,1,1,1,0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                  (rule "replaceKnownSelect_taclet0000_19" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "54"))
                  (rule "eqSymm" (formula "86") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,1,0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "86"))
                  (rule "applyEqReverse" (formula "86") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "nnf_imp2or" (formula "85") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "85") (term "0,0,0,0"))
                  (rule "nnf_notAnd" (formula "85") (term "0,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "85") (term "0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "85") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "85") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,0,1,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "85") (term "0,0,1,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "85") (term "0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "85") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,1,0,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "85") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,0,0,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,0,0,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "85") (term "0,0,1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "85") (term "0,0,0,1,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "85") (term "0,0,1,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "85") (term "0,0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "85") (term "1,0,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "85") (term "0,0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,0,0,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "85") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "85") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "85") (term "0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "85") (term "0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "85") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "85") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "85") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "85") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "85") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "85") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "85") (term "1,0,0,0,0,0,0,0"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "85") (term "0,1,0"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "54"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")) (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "86") (term "0,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "85") (term "0,1,0,0,1,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                  (rule "replaceKnownSelect_taclet00000_26" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_29" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "54"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "85") (term "0,0,0,1,0") (ifseqformula "79"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "54"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")) (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "86") (term "0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "85") (term "0,0,1,0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "85") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                  (rule "insert_constant_string_value" (formula "85") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "insert_constant_string_value" (formula "85") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "insert_constant_string_value" (formula "85") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "castDel" (formula "85") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "castDel" (formula "85") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "castDel" (formula "85") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                  (rule "replace_known_right" (formula "85") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "64")) (ifInst ""  (formula "66")))
                  (rule "castedGetAny" (formula "85") (term "0,0,1,0,1,0,0,0,0,1,0"))
                  (rule "castedGetAny" (formula "85") (term "0,0,1,0,1,0,1,0"))
                  (rule "castedGetAny" (formula "85") (term "0,1,0,1,0,0,0,1,0"))
                  (rule "castedGetAny" (formula "85") (term "0,0,1,0,1,0,0,1,0"))
                  (rule "castedGetAny" (formula "85") (term "0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,0,0,0,0,1,0"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                  (rule "applyEq" (formula "86") (term "0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "86") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "86") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "86") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "86") (term "1,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "86") (term "1,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "85") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "pullOutSelect" (formula "85") (term "1,0,1,1,1,0,0,1,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_1"))
                  (rule "applyEq" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "86") (term "1,0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "54"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "47"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet00_2" (formula "1") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "86") (term "1,0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "86") (term "1,0,1,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "85") (term "0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet0000_22" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_25" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "86") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "85") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "pullOutSelect" (formula "85") (term "0,0,1,0,1,1,0") (inst "selectSK=java_util_Collection_seq_3"))
                  (rule "applyEq" (formula "86") (term "0,1,1,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "86") (term "0,0,0,1,0,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "86") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "54"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "47"))
                  (rule "pullOutSelect" (formula "86") (term "0,1,1,1,0,0,1,0,0,0,1,0") (inst "selectSK=java_util_Collection_seq_4"))
                  (rule "applyEq" (formula "87") (term "0,1,1,1,0,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "87") (term "0,0,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "87") (term "0,0,0,1,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "55"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "48"))
                  (rule "pullOutSelect" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "56"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "49"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "49"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")) (ifInst ""  (formula "23")))
                  (rule "applyEqReverse" (formula "88") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "87") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "87"))
                  (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_util_Collection_seq_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,1,0,0"))
                  (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "49"))
                  (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                  (rule "pullOutSelect" (formula "3") (term "0,0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                  (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "4") (term "1,0,1,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "4") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "4") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "57"))
                  (rule "eqSymm" (formula "4") (term "0,0,0"))
                  (rule "eqSymm" (formula "2") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "50"))
                  (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                  (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0") (ifseqformula "50"))
                  (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")) (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "eqSymm" (formula "2") (term "0,0,0"))
                  (rule "eqSymm" (formula "3") (term "0,0,0"))
                  (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                  (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")))
                  (rule "replace_known_right" (formula "88") (term "0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "88"))
                  (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                  (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "57"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "50"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "50"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")) (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "replace_known_right" (formula "88") (term "0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "88"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "49"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "88") (term "0,1,1,1,0,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "88") (term "0,1,1,1,0,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "88") (term "0,0,0,1,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "88") (term "0,0,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "19")))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "87") (term "0,0,0,1,0,1,0,1,0") (inst "selectSK=java_util_Collection_seq_7"))
                  (rule "applyEq" (formula "88") (term "0,1,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "56"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "49"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "88") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "88") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "88"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "50"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "58"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "25")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "17")))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "58"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "25")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "1,1,0,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
                  (rule "applyEq" (formula "90") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "90") (term "1,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "58"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "25")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "1,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "1,1,0,1,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,1,1,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "90") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "90") (term "1,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "58"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "25")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "73"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "58"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "25")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "90") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "90") (term "1,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "58"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "25")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,0,0,0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "58"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "51"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "25")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "cut_direct" (formula "33") (term "0"))
                  (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null TRUE"
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "33"))
                     (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "71"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "replace_known_left" (formula "89") (term "0,0,0,0,0,0,1,0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "89"))
                     (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "35"))
                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "applyEq" (formula "70") (term "0") (ifseqformula "34"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "61") (inst "iv=iv"))
                     (rule "andLeft" (formula "61"))
                     (rule "lenOfSeqConcat" (formula "62") (term "1,1,0,0"))
                      (builtin "One Step Simplification" (formula "62"))
                     (rule "lenOfSeqConcat" (formula "61") (term "0"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "polySimp_homoEq" (formula "61"))
                     (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                     (rule "mul_literals" (formula "61") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "61") (term "0"))
                     (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                     (rule "lenOfSeqConcatEQ" (formula "61") (term "1,0,0") (ifseqformula "63"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                     (rule "add_literals" (formula "61") (term "0,0,0"))
                     (rule "add_zero_left" (formula "61") (term "0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                     (rule "add_literals" (formula "61") (term "1,0"))
                     (rule "times_zero_1" (formula "61") (term "0"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                     (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "62"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "nnf_imp2or" (formula "88") (term "0,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "88") (term "0,1,0,0,1,0"))
                     (rule "nnf_imp2or" (formula "88") (term "0,0,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "88") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,1,0,1,0"))
                     (rule "times_zero_1" (formula "88") (term "1,0,0,0,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "88") (term "0,0,0,0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,1,0,1,0"))
                     (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,1,0,1,0"))
                     (rule "nnf_notAnd" (formula "88") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "88") (term "1,0,0,0,0,0,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "88") (term "0,0,0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "88") (term "0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "88") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "88") (term "0,0,0,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch "self_1152.inputColsForPolyas = self_1153 TRUE"
                        (rule "referencedObjectIsCreatedRightEQ" (formula "63") (ifseqformula "3") (ifseqformula "64"))
                        (rule "close" (formula "63") (ifseqformula "24"))
                     )
                     (branch "self_1152.inputColsForPolyas = self_1153 FALSE"
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "61"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "88") (term "0,0,0,1,0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "88") (term "0,1,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "88") (term "0,0,1,0,1,1,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "88") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "self_1152.inputColsForDist = self_1153 TRUE"
                           (rule "referencedObjectIsCreatedRightEQ" (formula "62") (ifseqformula "1") (ifseqformula "63"))
                           (rule "close" (formula "62") (ifseqformula "22"))
                        )
                        (branch "self_1152.inputColsForDist = self_1153 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "87") (term "0,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "87") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "andRight" (formula "86"))
                           (branch
                              (rule "andRight" (formula "86"))
                              (branch
                                 (rule "andRight" (formula "86"))
                                 (branch
                                    (rule "allRight" (formula "86") (inst "sk=i_0_0"))
                                    (rule "orRight" (formula "86"))
                                    (rule "notRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "89"))
                                    (rule "inEqSimp_leqRight" (formula "87"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "88"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "89"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "90"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "allLeft" (formula "31") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                    (rule "leq_literals" (formula "31") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "31"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch
                                    (rule "allRight" (formula "86") (inst "sk=i_1"))
                                    (rule "orRight" (formula "86"))
                                    (rule "notRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "89"))
                                    (rule "inEqSimp_leqRight" (formula "87"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "88"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "89"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "90"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "allLeft" (formula "32") (inst "t=i_1"))
                                    (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                    (rule "leq_literals" (formula "32") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "32") (term "0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "closeFalse" (formula "32"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "86"))
                                 (branch
                                    (rule "andRight" (formula "86"))
                                    (branch
                                       (rule "andRight" (formula "86"))
                                       (branch
                                          (rule "andRight" (formula "86"))
                                          (branch
                                             (rule "allRight" (formula "86") (inst "sk=i_3_0"))
                                             (rule "orRight" (formula "86"))
                                             (rule "notRight" (formula "87"))
                                             (rule "orRight" (formula "87"))
                                             (rule "inEqSimp_geqRight" (formula "88"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "88"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "allLeft" (formula "34") (inst "t=i_3_0"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_literals" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch
                                             (rule "nnf_ex2all" (formula "86"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "34"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "1"))
                                             (rule "andLeft" (formula "36"))
                                             (rule "inEqSimp_homoInEq1" (formula "36"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0"))
                                             (rule "leq_literals" (formula "36"))
                                             (rule "closeFalse" (formula "36"))
                                          )
                                       )
                                       (branch
                                          (rule "allRight" (formula "86") (inst "sk=i_1_0"))
                                          (rule "orRight" (formula "86"))
                                          (rule "orRight" (formula "86"))
                                          (rule "notRight" (formula "88"))
                                          (rule "inEqSimp_leqRight" (formula "87"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "88"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "allLeft" (formula "39") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                          (rule "leq_literals" (formula "39") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "39"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "86") (inst "sk=i_0_0"))
                                       (rule "orRight" (formula "86"))
                                       (rule "orRight" (formula "86"))
                                       (rule "notRight" (formula "88"))
                                       (rule "inEqSimp_leqRight" (formula "87"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "88"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "allLeft" (formula "40") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                 )
                                 (branch
                                    (rule "nnf_ex2all" (formula "86"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "40"))
                                    (rule "qeq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "42"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch
                              (rule "allRight" (formula "86") (inst "sk=f_0"))
                              (rule "allRight" (formula "86") (inst "sk=o_0"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "pullOutSelect" (formula "91") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "53"))
                              (rule "eqSymm" (formula "92"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "46"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "47"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "92"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "91"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "89"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "91"))
                              (rule "commute_and" (formula "90"))
                              (rule "commute_and" (formula "88"))
                              (rule "commute_and" (formula "89"))
                              (rule "commute_and_2" (formula "2") (term "0,0,0"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0"))
                              (rule "applyEq_and_gen3" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEq_and_gen3" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_and" (formula "2") (term "0,0,0"))
                              (rule "commute_and" (formula "1") (term "0,0,0"))
                              (rule "cut_direct" (formula "92") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "93"))
                                 (rule "false_right" (formula "93"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "89") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "89"))
                                 (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "91") (term "1"))
                                 (rule "replace_known_right" (formula "91") (term "1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "91"))
                                 (rule "false_right" (formula "91"))
                                 (rule "applyEqRigid" (formula "92") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "90") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "90") (term "1"))
                                 (rule "replace_known_right" (formula "90") (term "1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "90"))
                                 (rule "false_right" (formula "90"))
                                 (rule "applyEq" (formula "90") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "90") (term "1"))
                                 (rule "replace_known_right" (formula "90") (term "1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "90"))
                                 (rule "false_right" (formula "90"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "64"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "63"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "88"))
                                 (rule "applyEqRigid" (formula "88") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "88"))
                                 (rule "closeTrue" (formula "88"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "93"))
                                 (rule "notRight" (formula "93"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "93"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                 (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "93"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                 (rule "replace_known_right" (formula "89") (term "1") (ifseqformula "93"))
                                  (builtin "One Step Simplification" (formula "89"))
                                 (rule "false_right" (formula "89"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "94") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "eqSymm" (formula "93"))
                                    (rule "applyEq" (formula "89") (term "0,1") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "89") (term "1"))
                                    (rule "sortsDisjointModuloNull" (formula "89") (term "1"))
                                    (rule "replace_known_right" (formula "89") (term "0,1") (ifseqformula "86"))
                                     (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "64")))
                                    (rule "false_right" (formula "89"))
                                    (rule "applyEq" (formula "92") (term "2,1") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "92") (term "1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "92") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "92") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "92") (term "0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "89") (term "0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "false_right" (formula "89"))
                                    (rule "applyEqRigid" (formula "89") (term "0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "false_right" (formula "89"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "63") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "60"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "93")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null FALSE"
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "cut_direct" (formula "34") (term "0"))
                     (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN = null TRUE"
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "34"))
                        (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "72"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "replace_known_left" (formula "90") (term "1,0,0,0,0,0,1,0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "90"))
                        (rule "applyEq" (formula "72") (term "0") (ifseqformula "35"))
                        (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "35"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "61") (inst "iv=iv"))
                        (rule "andLeft" (formula "61"))
                        (rule "lenOfSeqConcat" (formula "62") (term "1,1,0,0"))
                         (builtin "One Step Simplification" (formula "62"))
                        (rule "lenOfSeqConcat" (formula "61") (term "0"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "polySimp_homoEq" (formula "61"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0"))
                        (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                        (rule "lenOfSeqConcatEQ" (formula "61") (term "1,0,0") (ifseqformula "63"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                        (rule "add_literals" (formula "61") (term "0,0,0"))
                        (rule "add_zero_left" (formula "61") (term "0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                        (rule "add_literals" (formula "61") (term "1,0"))
                        (rule "times_zero_1" (formula "61") (term "0"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "true_left" (formula "61"))
                        (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                        (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "true_left" (formula "61"))
                        (rule "nnf_imp2or" (formula "88") (term "0,1,0,1,0"))
                        (rule "nnf_imp2or" (formula "88") (term "0,1,0,0,1,0"))
                        (rule "nnf_imp2or" (formula "88") (term "0,0,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "88") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,1,0,1,0"))
                        (rule "times_zero_1" (formula "88") (term "1,0,0,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "88") (term "0,0,0,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,1,0,1,0"))
                        (rule "nnf_notAnd" (formula "88") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "88") (term "1,0,0,0,0,0,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "88") (term "0,0,0,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "88") (term "0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "88") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "88") (term "0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,0,0,1,0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "self_1152.inputColsForPolyas = self_1153 TRUE"
                           (rule "referencedObjectIsCreatedRightEQ" (formula "64") (ifseqformula "3") (ifseqformula "65"))
                           (rule "close" (formula "64") (ifseqformula "23"))
                        )
                        (branch "self_1152.inputColsForPolyas = self_1153 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "88") (term "0,0,1,0,1,1,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "88") (term "0,0,0,1,0,1,0,0,1,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "88") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "88") (term "0,1,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self_1152.inputColsForDist = self_1153 TRUE"
                              (rule "referencedObjectIsCreatedRightEQ" (formula "63") (ifseqformula "1") (ifseqformula "64"))
                              (rule "close" (formula "63") (ifseqformula "21"))
                           )
                           (branch "self_1152.inputColsForDist = self_1153 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "59"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "87") (term "0,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "87") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "andRight" (formula "86"))
                              (branch
                                 (rule "andRight" (formula "86"))
                                 (branch
                                    (rule "andRight" (formula "86"))
                                    (branch
                                       (rule "allRight" (formula "86") (inst "sk=i_0_0"))
                                       (rule "orRight" (formula "86"))
                                       (rule "notRight" (formula "87"))
                                       (rule "orRight" (formula "87"))
                                       (rule "orRight" (formula "87"))
                                       (rule "orRight" (formula "89"))
                                       (rule "inEqSimp_leqRight" (formula "87"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "88"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "89"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "90"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "allLeft" (formula "30") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "30"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "86") (inst "sk=i_1"))
                                       (rule "orRight" (formula "86"))
                                       (rule "notRight" (formula "87"))
                                       (rule "orRight" (formula "87"))
                                       (rule "orRight" (formula "87"))
                                       (rule "orRight" (formula "89"))
                                       (rule "inEqSimp_leqRight" (formula "87"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "88"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "89"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "90"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "allLeft" (formula "31") (inst "t=i_1"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                       (rule "leq_literals" (formula "31") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "closeFalse" (formula "31"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "86"))
                                    (branch
                                       (rule "andRight" (formula "86"))
                                       (branch
                                          (rule "andRight" (formula "86"))
                                          (branch
                                             (rule "andRight" (formula "86"))
                                             (branch
                                                (rule "allRight" (formula "86") (inst "sk=i_3_0"))
                                                (rule "orRight" (formula "86"))
                                                (rule "notRight" (formula "87"))
                                                (rule "orRight" (formula "87"))
                                                (rule "inEqSimp_geqRight" (formula "88"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "88"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "allLeft" (formula "34") (inst "t=i_3_0"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch
                                                (rule "nnf_ex2all" (formula "86"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (rule "commute_or" (formula "1") (term "0,0"))
                                                (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "36"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "allRight" (formula "86") (inst "sk=i_1_0"))
                                             (rule "orRight" (formula "86"))
                                             (rule "orRight" (formula "86"))
                                             (rule "notRight" (formula "88"))
                                             (rule "inEqSimp_leqRight" (formula "87"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "88"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "39") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                             (rule "leq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "39"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch
                                          (rule "allRight" (formula "86") (inst "sk=i_0_0"))
                                          (rule "orRight" (formula "86"))
                                          (rule "orRight" (formula "86"))
                                          (rule "notRight" (formula "88"))
                                          (rule "inEqSimp_leqRight" (formula "87"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "88"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "allLeft" (formula "40") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "40") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "1"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "inEqSimp_homoInEq1" (formula "40"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0"))
                                          (rule "add_literals" (formula "40") (term "0"))
                                          (rule "leq_literals" (formula "40"))
                                          (rule "closeFalse" (formula "40"))
                                       )
                                    )
                                    (branch
                                       (rule "nnf_ex2all" (formula "86"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (rule "commute_or" (formula "1") (term "0,0"))
                                       (rule "allLeft" (formula "1") (inst "t=i_0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "42"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "86") (inst "sk=f_0"))
                                 (rule "allRight" (formula "86") (inst "sk=o_0"))
                                 (rule "orRight" (formula "86"))
                                 (rule "orRight" (formula "86"))
                                 (rule "orRight" (formula "86"))
                                 (rule "orRight" (formula "86"))
                                 (rule "orRight" (formula "86"))
                                 (rule "pullOutSelect" (formula "91") (term "0") (inst "selectSK=f_0_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "53"))
                                 (rule "eqSymm" (formula "92"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "46"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "47"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "89"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "commute_and" (formula "91"))
                                 (rule "commute_and" (formula "90"))
                                 (rule "commute_and" (formula "88"))
                                 (rule "commute_and" (formula "89"))
                                 (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                 (rule "applyEq_and_gen3" (formula "2") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEq_and_gen3" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "commute_and" (formula "2") (term "0,0,0"))
                                 (rule "commute_and" (formula "1") (term "0,0,0"))
                                 (rule "cut_direct" (formula "92") (term "0,0"))
                                 (branch "CUT: o_0 = null TRUE"
                                     (builtin "One Step Simplification" (formula "93"))
                                    (rule "false_right" (formula "93"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "89") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "93") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "92") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "90") (term "0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "90") (term "1"))
                                    (rule "replace_known_right" (formula "90") (term "1") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "90"))
                                    (rule "false_right" (formula "90"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "90") (term "0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "90") (term "1"))
                                    (rule "replace_known_right" (formula "90") (term "1") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "90"))
                                    (rule "false_right" (formula "90"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "64"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "90")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_0 = null FALSE"
                                     (builtin "One Step Simplification" (formula "93"))
                                    (rule "notRight" (formula "93"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                    (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                    (rule "replace_known_right" (formula "89") (term "1") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "false_right" (formula "89"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                       (rule "applyEqReverse" (formula "94") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "93"))
                                       (rule "applyEq" (formula "89") (term "0,1") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "89") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "89") (term "1"))
                                       (rule "replace_known_right" (formula "89") (term "0,1") (ifseqformula "86"))
                                        (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "65")))
                                       (rule "false_right" (formula "89"))
                                       (rule "applyEq" (formula "92") (term "2,1") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "92") (term "1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "92") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "92") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "92") (term "0") (ifseqformula "57"))
                                       (rule "applyEq" (formula "89") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "false_right" (formula "89"))
                                       (rule "applyEqRigid" (formula "89") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "false_right" (formula "89"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "64") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "93")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN = null FALSE"
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "cut_direct" (formula "35") (term "1"))
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "replace_known_left" (formula "91") (term "0,0,0,0,0,0,1,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "91"))
                           (rule "applyEq" (formula "73") (term "0") (ifseqformula "35"))
                           (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "35"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "61") (inst "iv=iv"))
                           (rule "andLeft" (formula "61"))
                           (rule "lenOfSeqConcat" (formula "62") (term "1,1,0,0"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "lenOfSeqConcatEQ" (formula "61") (term "1") (ifseqformula "63"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "lenOfSeqConcat" (formula "61") (term "0"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "true_left" (formula "61"))
                           (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                           (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "true_left" (formula "61"))
                           (rule "nnf_imp2or" (formula "89") (term "0,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "89") (term "0,1,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "89") (term "0,0,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,0,1,0"))
                           (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,1,0"))
                           (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "89") (term "0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0,0,1,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "self_1152.inputColsForPolyas = self_1153 TRUE"
                              (rule "referencedObjectIsCreatedRightEQ" (formula "65") (ifseqformula "3") (ifseqformula "66"))
                              (rule "close" (formula "65") (ifseqformula "23"))
                           )
                           (branch "self_1152.inputColsForPolyas = self_1153 FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "61"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "89") (term "0,1,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0,1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "89") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "89") (term "0,0,1,0,1,1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "self_1152.inputColsForDist = self_1153 TRUE"
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "64") (ifseqformula "1") (ifseqformula "65"))
                                 (rule "close" (formula "64") (ifseqformula "21"))
                              )
                              (branch "self_1152.inputColsForDist = self_1153 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "59"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "88") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "88") (term "0,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "andRight" (formula "87"))
                                 (branch
                                    (rule "andRight" (formula "87"))
                                    (branch
                                       (rule "andRight" (formula "87"))
                                       (branch
                                          (rule "allRight" (formula "87") (inst "sk=i_0_0"))
                                          (rule "orRight" (formula "87"))
                                          (rule "orRight" (formula "87"))
                                          (rule "notRight" (formula "89"))
                                          (rule "orRight" (formula "89"))
                                          (rule "orRight" (formula "88"))
                                          (rule "inEqSimp_geqRight" (formula "90"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "91"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "91"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "91"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "30") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "30") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0"))
                                          (rule "add_literals" (formula "30") (term "0"))
                                          (rule "leq_literals" (formula "30"))
                                          (rule "closeFalse" (formula "30"))
                                       )
                                       (branch
                                          (rule "allRight" (formula "87") (inst "sk=i_1"))
                                          (rule "orRight" (formula "87"))
                                          (rule "orRight" (formula "87"))
                                          (rule "notRight" (formula "89"))
                                          (rule "orRight" (formula "89"))
                                          (rule "orRight" (formula "88"))
                                          (rule "inEqSimp_geqRight" (formula "90"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "91"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "91"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "91"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "31") (inst "t=i_1"))
                                          (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "31") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "31"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0"))
                                          (rule "add_literals" (formula "31") (term "0"))
                                          (rule "leq_literals" (formula "31"))
                                          (rule "closeFalse" (formula "31"))
                                       )
                                    )
                                    (branch
                                       (rule "andRight" (formula "87"))
                                       (branch
                                          (rule "andRight" (formula "87"))
                                          (branch
                                             (rule "andRight" (formula "87"))
                                             (branch
                                                (rule "andRight" (formula "87"))
                                                (branch
                                                   (rule "allRight" (formula "87") (inst "sk=i_3_0"))
                                                   (rule "orRight" (formula "87"))
                                                   (rule "notRight" (formula "88"))
                                                   (rule "orRight" (formula "88"))
                                                   (rule "inEqSimp_geqRight" (formula "89"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "89"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_3_0"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                                (branch
                                                   (rule "nnf_ex2all" (formula "87"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                             )
                                             (branch
                                                (rule "allRight" (formula "87") (inst "sk=i_1_0"))
                                                (rule "orRight" (formula "87"))
                                                (rule "notRight" (formula "88"))
                                                (rule "orRight" (formula "88"))
                                                (rule "inEqSimp_leqRight" (formula "88"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "89"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "allLeft" (formula "39") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "39") (term "0,0,1"))
                                                (rule "leq_literals" (formula "39") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch
                                             (rule "allRight" (formula "87") (inst "sk=i_0_0"))
                                             (rule "orRight" (formula "87"))
                                             (rule "notRight" (formula "88"))
                                             (rule "orRight" (formula "88"))
                                             (rule "inEqSimp_leqRight" (formula "88"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "89"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "40") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "40"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "nnf_ex2all" (formula "87"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "1") (term "0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "1"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "42"))
                                          (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0"))
                                          (rule "add_literals" (formula "42") (term "0"))
                                          (rule "leq_literals" (formula "42"))
                                          (rule "closeFalse" (formula "42"))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "87") (inst "sk=f_0"))
                                    (rule "allRight" (formula "87") (inst "sk=o_0"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "orRight" (formula "87"))
                                    (rule "pullOutSelect" (formula "92") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "53"))
                                    (rule "eqSymm" (formula "93"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "46"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "47"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "91"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "92"))
                                    (rule "commute_and" (formula "91"))
                                    (rule "commute_and" (formula "90"))
                                    (rule "commute_and" (formula "89"))
                                    (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                    (rule "applyEq_and_gen3" (formula "2") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEq_and_gen3" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_and" (formula "2") (term "0,0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0,0"))
                                    (rule "cut_direct" (formula "93") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "94"))
                                       (rule "false_right" (formula "94"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "90"))
                                       (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "93")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "94"))
                                       (rule "notRight" (formula "94"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "94")))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "94")))
                                       (rule "replace_known_right" (formula "90") (term "1") (ifseqformula "94"))
                                        (builtin "One Step Simplification" (formula "90"))
                                       (rule "false_right" (formula "90"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                          (rule "applyEqReverse" (formula "95") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "94"))
                                          (rule "applyEq" (formula "94") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "92") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "92"))
                                          (rule "false_right" (formula "92"))
                                          (rule "applyEq" (formula "93") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "93") (term "0") (ifseqformula "57"))
                                          (rule "eqSymm" (formula "93"))
                                          (rule "applyEqRigid" (formula "91") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "91"))
                                          (rule "false_right" (formula "91"))
                                          (rule "applyEq" (formula "91") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "90") (term "0,1") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "90") (term "1"))
                                          (rule "sortsDisjointModuloNull" (formula "90") (term "1"))
                                          (rule "replace_known_right" (formula "90") (term "1,1") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "87")))
                                          (rule "false_right" (formula "90"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "65") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "94")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "replace_known_right" (formula "92") (term "0,0,0,0,0,0,1,0") (ifseqformula "63"))
                            (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "35")))
                           (rule "applyEq" (formula "63") (term "0") (ifseqformula "35"))
                           (rule "eqSymm" (formula "63"))
                           (rule "applyEq" (formula "74") (term "0") (ifseqformula "35"))
                           (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "35"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "61") (inst "iv=iv"))
                           (rule "andLeft" (formula "61"))
                           (rule "lenOfSeqConcat" (formula "61") (term "0"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "polySimp_homoEq" (formula "61"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0"))
                           (rule "polySimp_addComm0" (formula "61") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "62") (term "1,1,0,0"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "lenOfSeqConcatEQ" (formula "61") (term "1,0,0") (ifseqformula "63"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,0"))
                           (rule "add_zero_left" (formula "61") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                           (rule "add_literals" (formula "61") (term "1,0"))
                           (rule "times_zero_1" (formula "61") (term "0"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "true_left" (formula "61"))
                           (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                           (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "true_left" (formula "61"))
                           (rule "nnf_imp2or" (formula "90") (term "0,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "90") (term "0,1,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "90") (term "0,0,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "90") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "90") (term "1,0,0,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "0,1,0,0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "90") (term "0,0,1,0,0,1,0,1,0"))
                           (rule "add_literals" (formula "90") (term "0,0,0,1,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "90") (term "0,0,1,0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,1,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "90") (term "0,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "1,0,0,0,0,0,1,0,1,0"))
                           (rule "add_zero_right" (formula "90") (term "0,0,0,0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "1,0,0,0,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "90") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "90") (term "0,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "1,0,0,0,0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "90") (term "0,0,0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "1,0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "90") (term "1,0,0,1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "0,1,0,0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "90") (term "0,0,1,0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "90") (term "0,0,0,1,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "90") (term "0,0,1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "90") (term "0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "90") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "0,1,0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "90") (term "0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "90") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "90") (term "0,0,1,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "90") (term "0,0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "90") (term "0,0,0,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "90") (term "1,0,0,0,0,0,0,0,1,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "self_1152.inputColsForPolyas = self_1153 TRUE"
                              (rule "referencedObjectIsCreatedRightEQ" (formula "66") (ifseqformula "3") (ifseqformula "67"))
                              (rule "close" (formula "66") (ifseqformula "23"))
                           )
                           (branch "self_1152.inputColsForPolyas = self_1153 FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "61"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "90") (term "0,0,1,0,1,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,1,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "90") (term "0,1,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "self_1152.inputColsForDist = self_1153 TRUE"
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "65") (ifseqformula "1") (ifseqformula "66"))
                                 (rule "close" (formula "65") (ifseqformula "21"))
                              )
                              (branch "self_1152.inputColsForDist = self_1153 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "59"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "89") (term "0,1,1,0,0,1,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "andRight" (formula "88"))
                                 (branch
                                    (rule "andRight" (formula "88"))
                                    (branch
                                       (rule "andRight" (formula "88"))
                                       (branch
                                          (rule "allRight" (formula "88") (inst "sk=i_0_0"))
                                          (rule "orRight" (formula "88"))
                                          (rule "orRight" (formula "88"))
                                          (rule "notRight" (formula "90"))
                                          (rule "orRight" (formula "90"))
                                          (rule "orRight" (formula "89"))
                                          (rule "inEqSimp_geqRight" (formula "91"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "92"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "92"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "92"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "30") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "30") (term "0,0,1"))
                                          (rule "leq_literals" (formula "30") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "30"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch
                                          (rule "allRight" (formula "88") (inst "sk=i_1"))
                                          (rule "orRight" (formula "88"))
                                          (rule "orRight" (formula "88"))
                                          (rule "notRight" (formula "90"))
                                          (rule "orRight" (formula "90"))
                                          (rule "orRight" (formula "89"))
                                          (rule "inEqSimp_geqRight" (formula "91"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "92"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "92"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "92"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "31") (inst "t=i_1"))
                                          (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "31") (term "0,0,1"))
                                          (rule "leq_literals" (formula "31") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "closeFalse" (formula "31"))
                                       )
                                    )
                                    (branch
                                       (rule "andRight" (formula "88"))
                                       (branch
                                          (rule "andRight" (formula "88"))
                                          (branch
                                             (rule "andRight" (formula "88"))
                                             (branch
                                                (rule "andRight" (formula "88"))
                                                (branch
                                                   (rule "allRight" (formula "88") (inst "sk=i_3_0"))
                                                   (rule "orRight" (formula "88"))
                                                   (rule "notRight" (formula "89"))
                                                   (rule "orRight" (formula "89"))
                                                   (rule "inEqSimp_leqRight" (formula "89"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "90"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_3_0"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch
                                                   (rule "nnf_ex2all" (formula "88"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                             )
                                             (branch
                                                (rule "allRight" (formula "88") (inst "sk=i_1_0"))
                                                (rule "orRight" (formula "88"))
                                                (rule "notRight" (formula "89"))
                                                (rule "orRight" (formula "89"))
                                                (rule "inEqSimp_geqRight" (formula "90"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "90"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "allLeft" (formula "39") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "39") (term "0,0,1"))
                                                (rule "leq_literals" (formula "39") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "allRight" (formula "88") (inst "sk=i_0_0"))
                                             (rule "orRight" (formula "88"))
                                             (rule "notRight" (formula "89"))
                                             (rule "orRight" (formula "89"))
                                             (rule "inEqSimp_leqRight" (formula "89"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "90"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "40") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "1"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "inEqSimp_homoInEq1" (formula "40"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0"))
                                             (rule "add_literals" (formula "40") (term "0"))
                                             (rule "leq_literals" (formula "40"))
                                             (rule "closeFalse" (formula "40"))
                                          )
                                       )
                                       (branch
                                          (rule "nnf_ex2all" (formula "88"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "1") (term "0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "closeFalse" (formula "40"))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "88") (inst "sk=f_0"))
                                    (rule "allRight" (formula "88") (inst "sk=o_0"))
                                    (rule "orRight" (formula "88"))
                                    (rule "orRight" (formula "88"))
                                    (rule "orRight" (formula "88"))
                                    (rule "orRight" (formula "88"))
                                    (rule "orRight" (formula "88"))
                                    (rule "pullOutSelect" (formula "93") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "53"))
                                    (rule "eqSymm" (formula "94"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "46"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "47"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "94"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "91"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "95")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "93"))
                                    (rule "commute_and" (formula "92"))
                                    (rule "commute_and" (formula "91"))
                                    (rule "commute_and" (formula "90"))
                                    (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                    (rule "applyEq_and_gen3" (formula "2") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEq_and_gen3" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_and" (formula "2") (term "0,0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0,0"))
                                    (rule "cut_direct" (formula "94") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "95"))
                                       (rule "false_right" (formula "95"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "91") (term "1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "67"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "91") (term "0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "91") (term "1"))
                                       (rule "replace_known_right" (formula "91") (term "1") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "false_right" (formula "91"))
                                       (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "91") (term "1"))
                                       (rule "replace_known_right" (formula "91") (term "1") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "false_right" (formula "91"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "92")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "95"))
                                       (rule "notRight" (formula "95"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "95"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "95")))
                                       (rule "replace_known_right" (formula "91") (term "1") (ifseqformula "95"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "false_right" (formula "91"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                          (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "95"))
                                          (rule "applyEq" (formula "95") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "95") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "95") (term "0") (ifseqformula "57"))
                                          (rule "eqSymm" (formula "95"))
                                          (rule "applyEq" (formula "93") (term "0,1") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "93") (term "1"))
                                          (rule "sortsDisjointModuloNull" (formula "93") (term "1"))
                                          (rule "replace_known_right" (formula "93") (term "1,1") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "88")))
                                          (rule "false_right" (formula "93"))
                                          (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "91") (term "1"))
                                          (rule "sortsDisjointModuloNull" (formula "91") (term "1"))
                                          (rule "replace_known_right" (formula "91") (term "0,1") (ifseqformula "88"))
                                           (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "67")))
                                          (rule "false_right" (formula "91"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "66") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = java.util.Collection::$seq & o_0 = self_1153 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "95")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Exceptional Post (add)"
                   (builtin "One Step Simplification" (formula "56"))
                   (builtin "One Step Simplification" (formula "83"))
                  (rule "andLeft" (formula "56"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0") (ifseqformula "56"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,0") (ifseqformula "53"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "59"))
                  (rule "notLeft" (formula "57"))
                  (rule "close" (formula "61") (ifseqformula "60"))
               )
               (branch "Pre (add)"
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "75")) (ifInst ""  (formula "75")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1") (ifseqformula "53"))
                  (rule "wellFormedAnonEQ" (formula "81") (term "0,0,1") (ifseqformula "53"))
                  (rule "expand_inInt" (formula "81") (term "1,0,1"))
                  (rule "replace_int_MIN" (formula "81") (term "0,1,1,0,1"))
                  (rule "replace_int_MAX" (formula "81") (term "1,0,1,0,1"))
                  (rule "leq_literals" (formula "81") (term "1,1,0,1"))
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "52")))
                  (rule "leq_literals" (formula "81") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,0,1,1"))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,0,1,1"))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,0,1,1"))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,0,1,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "0,1,1") (ifseqformula "46"))
                  (rule "replace_known_left" (formula "81") (term "0,0,1,1") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "wellFormedStoreObject" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "79")))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,1,1"))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,1,1"))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,1,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1") (ifseqformula "46"))
                  (rule "replace_known_left" (formula "81") (term "0,1,1") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "wellFormedStoreObject" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "70")))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,1,1"))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,1,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1") (ifseqformula "46"))
                  (rule "replace_known_left" (formula "81") (term "0,1,1") (ifseqformula "12"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "wellFormedStoreObject" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "56")))
                  (rule "dismissNonSelectedField" (formula "81") (term "0,1,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1") (ifseqformula "46"))
                  (rule "replace_known_right" (formula "81") (term "0,1,1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "47")))
                  (rule "wellFormedStoreObject" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "56")))
                  (rule "wellFormedAnonEQ" (formula "81") (term "0,1") (ifseqformula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1") (ifseqformula "46"))
                  (rule "replace_known_left" (formula "81") (term "1,0,1") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "19")) (ifInst ""  (formula "55")) (ifInst ""  (formula "47")))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "81"))
                  (rule "closeTrue" (formula "81"))
               )
               (branch "Null reference (var = null)"
                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "56")))
                  (rule "closeTrue" (formula "81"))
               )
            )
            (branch "Null Reference (_dataForVoter_66 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (addInputCols)"
             (builtin "One Step Simplification" (formula "60"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "33"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "36"))
            (rule "notLeft" (formula "34"))
            (rule "close" (formula "38") (ifseqformula "37"))
         )
         (branch "Pre (addInputCols)"
             (builtin "One Step Simplification" (formula "58"))
            (rule "eqSymm" (formula "58") (term "1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,1,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,1,0"))
            (rule "eqSymm" (formula "58") (term "0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,1,0"))
            (rule "castedGetAny" (formula "58") (term "0,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,1,0,0,0"))
            (rule "castedGetAny" (formula "58") (term "0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,0"))
            (rule "castedGetAny" (formula "58") (term "1,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "58") (term "0,1,1,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
            (rule "wellFormedStoreObject" (formula "58") (term "1"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "56")))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1") (ifseqformula "26"))
            (rule "replace_known_left" (formula "58") (term "0,1,1") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "wellFormedStoreObject" (formula "58") (term "1"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "47")))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1") (ifseqformula "26"))
            (rule "wellFormedStoreObject" (formula "58") (term "0,1"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "33")))
            (rule "dismissNonSelectedField" (formula "58") (term "0,1,0,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,1") (ifseqformula "26"))
            (rule "replace_known_right" (formula "58") (term "0,1,0,1") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "27")))
            (rule "wellFormedStoreObject" (formula "58") (term "0,1"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "33")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,1") (ifseqformula "26"))
            (rule "wellFormedAnonEQ" (formula "58") (term "0,0,1") (ifseqformula "26"))
            (rule "replace_known_left" (formula "58") (term "0,0,0,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "25")) (ifInst ""  (formula "32")) (ifInst ""  (formula "27")))
            (rule "pullOutSelect" (formula "58") (term "1,0,1,1,1,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_cols_0"))
            (rule "applyEq" (formula "59") (term "1,1,1,1,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "0,0,1,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "0,0,0,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "1,0,0,0,1,0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "59") (term "1,0,1,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,1,1,1,1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,1,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,0,0,1,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "58") (term "0,0,1,1,0"))
            (rule "replace_known_right" (formula "58") (term "0,1,0,1,1,1,0") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,0,1,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_record_0"))
            (rule "applyEq" (formula "59") (term "1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "1,0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "1,1,0,1,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "0,0,0,0,1,1,1,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,1,0,1,1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,0,1,1,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "58") (term "0,0,0,1,1,1,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "56")))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_vals_0"))
            (rule "applyEq" (formula "59") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "1,0,1,1,1,1,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,1,1,1,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "58") (term "0,0,1,1,0"))
            (rule "replace_known_right" (formula "58") (term "0,0,1,1,1,0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "pullOutSelect" (formula "58") (term "0,1,1,1,0,0,0,1,0") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "applyEq" (formula "59") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "0,0,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "0,0,0,1,0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "59") (term "0,1,1,0,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
            (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "60") (term "0,1,1,0,1,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "nnf_imp2or" (formula "59") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "59") (term "0,0,1,0"))
            (rule "nnf_notAnd" (formula "59") (term "0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "59") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "59") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0,0,1,0"))
            (rule "times_zero_1" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "59") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "59") (term "1,1,1,1,1,0"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "59") (term "0,1,1,1,0") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "59") (term "1,0,0,1,0,0,1,1,1,0"))
            (rule "expand_inInt" (formula "59") (term "1,0,0,1,0,1,1,1,0"))
            (rule "replace_int_MAX" (formula "59") (term "1,0,1,0,0,1,0,0,1,1,1,0"))
            (rule "replace_int_MIN" (formula "59") (term "0,1,1,0,0,1,0,0,1,1,1,0"))
            (rule "replace_int_MIN" (formula "59") (term "0,1,1,0,0,1,0,1,1,1,0"))
            (rule "replace_int_MAX" (formula "59") (term "1,0,1,0,0,1,0,1,1,1,0"))
            (rule "eqSymm" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "castedGetAny" (formula "59") (term "0,0,1,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,1,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "eqSymm" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,1,0,1,0,1,1,1,0"))
            (rule "castedGetAny" (formula "59") (term "0,0,1,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "eqSymm" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,1,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "eqSymm" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "replaceKnownSelect_taclet2000_13" (formula "59") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "59") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,1,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,1,0,0,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "eqSymm" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,1,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
            (rule "replaceKnownSelect_taclet2000_13" (formula "59") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "59") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "eqSymm" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,1,0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "replaceKnownSelect_taclet2000_13" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "eqSymm" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1,0,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "59") (term "1,1,0,0,1,0,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "59") (term "1,1,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,1,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,1,0,1,1,1,0"))
            (rule "pullOutSelect" (formula "59") (term "0,0,0,1,0,1,0,1,1,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
            (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,0,1,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "60") (term "0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,0,0,1,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "60") (term "0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "60") (term "0,0,0,1,0,1,0,1,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "59") (term "0,0,0,1,1,1,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "applyEq" (formula "59") (term "1,1,1,0,0,0,1,0,1,1,1,0") (ifseqformula "9"))
            (rule "nnf_imp2or" (formula "59") (term "0,0,0,1,1,1,0"))
            (rule "nnf_imp2or" (formula "59") (term "0,1,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "59") (term "0,0,0,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "59") (term "0,0,1,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "59") (term "1,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "1,1,0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,1,1,0,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,1,1,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,1,0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,1,1,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "0,1,0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,1,0,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,1,0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,1,0,0,0,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0,0,0,1,1,1,0"))
            (rule "add_zero_left" (formula "59") (term "0,0,1,0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "59") (term "1,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "1,1,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,1,1,0,0,1,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,1,1,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,1,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,1,1,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "0,1,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,1,0,0,1,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,1,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,1,0,0,1,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "59") (term "0,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,0,1,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,1,0,1,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0,1,0,1,1,1,0"))
            (rule "add_zero_left" (formula "59") (term "0,0,1,0,0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0,1,1,1,0"))
            (rule "cut_direct" (formula "12") (term "0"))
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "41") (term "0") (ifseqformula "12"))
               (rule "commute_and" (formula "25") (term "0,0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "4"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "63") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "63") (term "0,0,1,0,1,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "63") (term "0,1,1,0,0,0,1,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "63") (term "0,1,1,0,0,0,0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "replace_known_left" (formula "62") (term "0,1") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "7"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "26") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
               (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "31"))
               (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "allLeft" (formula "31") (inst "t=i_0"))
               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
               (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "37"))
               (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "lenNonNegative" (formula "43") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "43"))
               (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
               (rule "qeq_literals" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "17"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "75") (term "1,1,1,1"))
                (builtin "One Step Simplification" (formula "75"))
               (rule "commute_and_2" (formula "41") (term "0,0"))
               (rule "ex_pull_out3" (formula "75") (term "0,0"))
               (rule "cut_direct" (formula "75") (term "0,0,1,1"))
               (branch "CUT: self_1152.inputColsForDist = self_1153 TRUE"
                   (builtin "One Step Simplification" (formula "76"))
                  (rule "referencedObjectIsCreatedRightEQ" (formula "50") (ifseqformula "1") (ifseqformula "51"))
                  (rule "close" (formula "50") (ifseqformula "19"))
               )
               (branch "CUT: self_1152.inputColsForDist = self_1153 FALSE"
                   (builtin "One Step Simplification" (formula "76"))
                  (rule "andRight" (formula "76"))
                  (branch
                     (rule "allRight" (formula "76") (inst "sk=j_0"))
                     (rule "eqSymm" (formula "76") (term "1,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0,0"))
                     (rule "nnf_ex2all" (formula "76"))
                     (rule "nnf_notOr" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "1,0"))
                     (rule "nnf_notOr" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0"))
                     (rule "distr_forallAnd" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "commute_or_2" (formula "3") (term "0"))
                     (rule "commute_or" (formula "3") (term "0,0"))
                     (rule "allLeft" (formula "38") (inst "t=j_0"))
                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                     (rule "add_literals" (formula "38") (term "0,0,1"))
                     (rule "leq_literals" (formula "38") (term "0,1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "38") (term "0,1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "notLeft" (formula "38"))
                     (rule "allLeft" (formula "44") (inst "t=j_0"))
                     (rule "exLeft" (formula "44") (inst "sk=i_1"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "44"))
                     (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "45") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "44") (term "0,0,1"))
                     (rule "leq_literals" (formula "44") (term "0,1"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                     (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                     (rule "add_literals" (formula "46") (term "0,0,1"))
                     (rule "leq_literals" (formula "46") (term "0,1"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                     (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,1"))
                     (rule "leq_literals" (formula "45") (term "0,1"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "44") (term "0,1"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "46") (term "0,1"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "46"))
                     (rule "applyEq" (formula "3") (term "1,0,0,0,0") (ifseqformula "46"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "21"))
                     (rule "applyEq" (formula "31") (term "1,0,1") (ifseqformula "32"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                     (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "65"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1") (ifseqformula "21"))
                     (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                     (rule "true_left" (formula "32"))
                     (rule "allLeft" (formula "3") (inst "t=i_1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "47"))
                     (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "leq_literals" (formula "3") (term "0,1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "46") (term "0"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "closeFalse" (formula "46"))
                  )
                  (branch
                     (rule "andRight" (formula "76"))
                     (branch
                        (rule "allRight" (formula "76") (inst "sk=i_1"))
                        (rule "orRight" (formula "76"))
                        (rule "orRight" (formula "76"))
                        (rule "notRight" (formula "78"))
                        (rule "inEqSimp_geqRight" (formula "78"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "78"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "allLeft" (formula "38") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                        (rule "add_literals" (formula "38") (term "0,0,1"))
                        (rule "leq_literals" (formula "38") (term "0,1"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "38"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                        (rule "andRight" (formula "76"))
                        (branch
                           (rule "allRight" (formula "76") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "76"))
                           (rule "orRight" (formula "76"))
                           (rule "notRight" (formula "78"))
                           (rule "orRight" (formula "77"))
                           (rule "orRight" (formula "79"))
                           (rule "inEqSimp_leqRight" (formula "77"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "78"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "30") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "30") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "30") (term "0,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                           (rule "andLeft" (formula "30"))
                           (rule "inEqSimp_homoInEq1" (formula "30"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0"))
                           (rule "add_literals" (formula "30") (term "0"))
                           (rule "leq_literals" (formula "30"))
                           (rule "closeFalse" (formula "30"))
                        )
                        (branch
                           (rule "allRight" (formula "76") (inst "sk=i_1"))
                           (rule "orRight" (formula "76"))
                           (rule "orRight" (formula "76"))
                           (rule "notRight" (formula "78"))
                           (rule "orRight" (formula "77"))
                           (rule "orRight" (formula "79"))
                           (rule "inEqSimp_leqRight" (formula "77"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "78"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "31") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "31") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_homoInEq1" (formula "31"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,1,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0"))
                           (rule "add_literals" (formula "31") (term "0"))
                           (rule "leq_literals" (formula "31"))
                           (rule "closeFalse" (formula "31"))
                        )
                     )
                  )
               )
            )
            (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                (builtin "One Step Simplification" (formula "12"))
               (rule "applyEq" (formula "33") (term "0") (ifseqformula "12"))
               (rule "applyEq" (formula "42") (term "0") (ifseqformula "12"))
               (rule "commute_and" (formula "25") (term "0,0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "4"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "applyEqReverse" (formula "65") (term "0,1,1,0,0,0,1,0") (ifseqformula "6"))
               (rule "applyEqReverse" (formula "65") (term "0,0,1,0,1,0,0,0") (ifseqformula "6"))
               (rule "applyEqReverse" (formula "65") (term "0,1,1,0,0,0,0") (ifseqformula "6"))
               (rule "applyEqReverse" (formula "65") (term "0,0,0,1,0,0,1,0") (ifseqformula "6"))
               (rule "hideAuxiliaryEq" (formula "6"))
               (rule "replace_known_left" (formula "64") (term "0,1") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "7"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "8"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "allLeft" (formula "26") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
               (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "31"))
               (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "allLeft" (formula "31") (inst "t=i_0"))
               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
               (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "37"))
               (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "lenNonNegative" (formula "43") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "43"))
               (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
               (rule "qeq_literals" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "17"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "76") (term "1,1,1,1"))
                (builtin "One Step Simplification" (formula "76"))
               (rule "commute_and_2" (formula "41") (term "0,0"))
               (rule "ex_pull_out3" (formula "76") (term "0,0"))
               (rule "cut_direct" (formula "76") (term "0,0,1,1"))
               (branch "CUT: self_1152.inputColsForDist = self_1153 TRUE"
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "referencedObjectIsCreatedRightEQ" (formula "51") (ifseqformula "1") (ifseqformula "52"))
                  (rule "close" (formula "51") (ifseqformula "19"))
               )
               (branch "CUT: self_1152.inputColsForDist = self_1153 FALSE"
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "andRight" (formula "77"))
                  (branch
                     (rule "allRight" (formula "77") (inst "sk=j_0"))
                     (rule "eqSymm" (formula "77") (term "1,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "77") (term "1,0,0"))
                     (rule "nnf_ex2all" (formula "77"))
                     (rule "nnf_notOr" (formula "1") (term "0"))
                     (rule "nnf_notOr" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "1,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                     (rule "distr_forallAnd" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "commute_or_2" (formula "3") (term "0"))
                     (rule "commute_or" (formula "3") (term "0,0"))
                     (rule "allLeft" (formula "38") (inst "t=j_0"))
                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                     (rule "add_literals" (formula "38") (term "0,0,1"))
                     (rule "leq_literals" (formula "38") (term "0,1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "38") (term "0,1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "notLeft" (formula "38"))
                     (rule "allLeft" (formula "44") (inst "t=j_0"))
                     (rule "exLeft" (formula "44") (inst "sk=i_1"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "44"))
                     (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "44") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "46") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                     (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,1"))
                     (rule "leq_literals" (formula "45") (term "0,1"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                     (rule "add_literals" (formula "44") (term "0,0,1"))
                     (rule "leq_literals" (formula "44") (term "0,1"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "45") (term "0,1"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                     (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                     (rule "add_literals" (formula "46") (term "0,0,1"))
                     (rule "leq_literals" (formula "46") (term "0,1"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEq" (formula "3") (term "1,0,0,0,0") (ifseqformula "46"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "46"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "21"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "1") (ifseqformula "22"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                     (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "68"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "34"))
                     (rule "allLeft" (formula "5") (inst "t=i_1"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "48"))
                     (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                     (rule "add_literals" (formula "5") (term "0,0,1"))
                     (rule "leq_literals" (formula "5") (term "0,1"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "47"))
                     (rule "qeq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "closeFalse" (formula "5"))
                  )
                  (branch
                     (rule "andRight" (formula "77"))
                     (branch
                        (rule "allRight" (formula "77") (inst "sk=i_1"))
                        (rule "orRight" (formula "77"))
                        (rule "notRight" (formula "78"))
                        (rule "orRight" (formula "78"))
                        (rule "inEqSimp_leqRight" (formula "78"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "79"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "allLeft" (formula "38") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "38") (term "0,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "38"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                        (rule "andRight" (formula "77"))
                        (branch
                           (rule "allRight" (formula "77") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "77"))
                           (rule "notRight" (formula "78"))
                           (rule "orRight" (formula "78"))
                           (rule "orRight" (formula "79"))
                           (rule "orRight" (formula "78"))
                           (rule "inEqSimp_geqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "81"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "81"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "allLeft" (formula "30") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                           (rule "add_literals" (formula "30") (term "0,0,1"))
                           (rule "leq_literals" (formula "30") (term "0,1"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "30") (term "0,1"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch
                           (rule "allRight" (formula "77") (inst "sk=i_1"))
                           (rule "orRight" (formula "77"))
                           (rule "notRight" (formula "78"))
                           (rule "orRight" (formula "78"))
                           (rule "orRight" (formula "79"))
                           (rule "orRight" (formula "78"))
                           (rule "inEqSimp_geqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "81"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "80"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "81"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "allLeft" (formula "31") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "31") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Null Reference (c_22 = null)"
          (builtin "One Step Simplification" (formula "58"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (c_21 = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (ArrayList)"
    (builtin "One Step Simplification" (formula "24"))
    (builtin "One Step Simplification" (formula "49"))
   (rule "andLeft" (formula "24"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0,0") (ifseqformula "24"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0,1,0") (ifseqformula "24"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "25"))
   (rule "close" (formula "33") (ifseqformula "32"))
)
(branch "Pre (ArrayList)"
    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "47"))
)
)
}
