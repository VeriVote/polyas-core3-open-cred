\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 19 17:56:26 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Dec 19 17:56:26 CET 2019
contract=de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils\\:\\:bytesToHexString([B)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils\\:\\:bytesToHexString([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))
(keyLog "1" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "33468")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "bytes,result,exc,heapAtPre,o,f"))
(rule "expand_inByte" (formula "1") (term "1,0,1,1,0"))
(rule "replace_byte_MIN" (formula "1") (term "0,1,1,0,1,1,0"))
(rule "replace_byte_MAX" (formula "1") (term "1,0,1,0,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "4") (term "0"))
(rule "nnf_notAnd" (formula "4") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
(rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
(rule "mul_literals" (formula "4") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
(rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
(rule "commute_and" (formula "4") (term "1,0"))
(rule "cnf_rightDist" (formula "4") (term "0"))
(rule "distr_forallAnd" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "commute_or" (formula "5") (term "0"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_bytesToHexString,savedHeapBefore_bytesToHexString,_bytes_17Before_bytesToHexString,first4BitsBefore_bytesToHexString,second4BitsBefore_bytesToHexString,xBefore_bytesToHexString,bBefore_bytesToHexString"))
 (builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "r_12"))
(rule "instanceCreationAssignmentUnfoldArguments" (formula "7") (term "1"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "var"))
(rule "compound_multiplication_1" (formula "7") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x_1"))
(rule "assignment_read_length" (formula "7") (term "1"))
(branch "Normal Execution (_bytes_17 != null)"
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")))
   (rule "false_right" (formula "7"))
   (rule "assignmentMultiplicationInt" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "translateJavaMulInt" (formula "7") (term "0,1,0"))
   (rule "expand_mulJint" (formula "7") (term "0,1,0"))
   (rule "expand_moduloInteger" (formula "7") (term "0,1,0"))
   (rule "replace_int_RANGE" (formula "7") (term "1,1,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "7") (term "0,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "7") (term "0,0,1,0"))
    (builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_StringBuilder,self_686,exc_872,heapAfter_StringBuilder,anon_heap_StringBuilder") (contract "java.lang.StringBuilder[java.lang.StringBuilder::StringBuilder(int)].JML normal_behavior operation contract.0"))
   (branch "Post (StringBuilder)"
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0,1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "notLeft" (formula "12"))
      (rule "notLeft" (formula "11"))
      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "assignment" (formula "18") (term "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "blockEmpty" (formula "18") (term "1"))
      (rule "pullOutSelect" (formula "11") (term "0,0") (inst "selectSK=java_lang_StringBuilder_str_0"))
      (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "11"))
      (rule "applyEq" (formula "14") (term "0") (ifseqformula "11"))
      (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")))
      (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "11"))
      (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "11"))
      (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "11"))
      (rule "hideAuxiliaryEq" (formula "11"))
      (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "12"))
      (rule "replaceKnownSelect_taclet00_0" (formula "12") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "12") (term "0,0"))
      (rule "notLeft" (formula "12"))
      (rule "for_to_while" (formula "17") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
       (builtin "Loop Invariant" (formula "17") (newnames "variant,b_17,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
         (rule "wellFormedAnonEQ" (formula "17") (term "1") (ifseqformula "7"))
         (rule "replaceKnownSelect_taclet00_0" (formula "17") (term "0,0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "0,0,1,0,0"))
         (rule "replaceKnownSelect_taclet00_0" (formula "17") (term "0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_0" (formula "17") (term "0,0,1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "0,0,1,1,0,0,0"))
         (rule "replaceKnownSelect_taclet00_0" (formula "17") (term "1,0,0,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "1,0,0,0,1,0,0,0"))
         (rule "leq_literals" (formula "17") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")))
         (rule "inEqSimp_leqRight" (formula "17"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "arrayLengthNotNegative" (formula "5") (term "1,1,0,0"))
         (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
         (rule "qeq_literals" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "closeFalse" (formula "5"))
      )
      (branch "Body Preserves Invariant"
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
          (builtin "One Step Simplification" (formula "19"))
         (rule "expand_inInt" (formula "13") (term "1"))
         (rule "replace_int_MAX" (formula "13") (term "1,0,1"))
         (rule "replace_int_MIN" (formula "13") (term "0,1,1"))
         (rule "impRight" (formula "19"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "translateJavaSubInt" (formula "26") (term "0,1,1,1,0"))
         (rule "eqSymm" (formula "26") (term "1,0,0,1,0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "26") (term "0,1,1,1,0,1"))
         (rule "elementOfSingleton" (formula "26") (term "0,0,0,0,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_17_1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "exc_873"))
         (rule "assignment" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "thrownExc"))
         (rule "blockThrow" (formula "26") (term "1,0,0,1"))
         (rule "blockThrow" (formula "26") (term "1,0,0,1"))
         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
         (rule "leq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=java_lang_StringBuilder_str_1"))
         (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "14"))
         (rule "applyEq" (formula "20") (term "0") (ifseqformula "14"))
         (rule "simplifySelectOfAnon" (formula "14"))
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "24")))
         (rule "replaceKnownSelect_taclet00_0" (formula "14") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "14") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,0,0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "14") (term "0,0,1,0,0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "10")))
         (rule "elementOfSingleton" (formula "14") (term "0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "14"))
         (rule "hideAuxiliaryEq" (formula "14"))
         (rule "boxToDiamond" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "expand_subJint" (formula "25") (term "0,1,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "25") (term "0,0,1,1,1,0,0"))
         (rule "expand_subJint" (formula "25") (term "0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "25") (term "0,0,1,1,1,0,1"))
         (rule "expand_moduloInteger" (formula "25") (term "0,1,1,1,0,0"))
         (rule "replace_int_RANGE" (formula "25") (term "1,1,0,1,1,1,0,0"))
         (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,0,1,1,1,0,0"))
         (rule "replace_int_MIN" (formula "25") (term "0,0,1,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,1,1,1,0,0"))
         (rule "expand_moduloInteger" (formula "25") (term "0,1,1,1,0,1"))
         (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,0,1,1,1,0,1"))
         (rule "replace_int_MIN" (formula "25") (term "0,0,1,1,1,0,1"))
         (rule "replace_int_RANGE" (formula "25") (term "1,1,0,1,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,1,1,1,0,1"))
         (rule "compound_less_than_comparison_2" (formula "17") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
         (rule "assignment_read_length" (formula "17") (term "1"))
         (branch "Normal Execution (_bytes_17 != null)"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "25")))
            (rule "false_right" (formula "17"))
            (rule "less_than_comparison_simple" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "emptyModality" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "notRight" (formula "17"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "arrayLengthNotNegative" (formula "5") (term "1,1,0,0"))
            (rule "arrayLengthIsAnInt" (formula "6") (term "1,1,0,0"))
            (rule "expand_inInt" (formula "6"))
            (rule "replace_int_MIN" (formula "6") (term "0,1"))
            (rule "replace_int_MAX" (formula "6") (term "1,0"))
            (rule "andLeft" (formula "6"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "1"))
            (rule "leq_literals" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x_1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_3"))
            (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v0=x_4") (inst "#v1=x_5"))
            (rule "variableDeclarationAssign" (formula "26") (term "1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_4"))
            (rule "assignment" (formula "26") (term "1"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "variableDeclarationAssign" (formula "26") (term "1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_5"))
            (rule "assignment_read_length" (formula "26") (term "1"))
            (branch "Normal Execution (_bytes_17 != null)"
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
                (builtin "One Step Simplification" (formula "27"))
               (rule "false_right" (formula "26"))
               (rule "less_than_comparison_simple" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0"))
               (rule "replace_known_left" (formula "26") (term "0,0,1,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "ifSplit" (formula "26"))
               (branch "if x_3 true"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "b_18"))
                  (rule "assignment_array2" (formula "26") (term "1"))
                  (branch "Normal Execution (_bytes_17 != null)"
                      (builtin "One Step Simplification" (formula "27"))
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
                     (rule "orRight" (formula "26"))
                     (rule "inEqSimp_leqRight" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_ltRight" (formula "27"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "variableDeclarationAssign" (formula "27") (term "1"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_6"))
                     (rule "assignment" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                      (builtin "Block Contract (Internal)" (formula "27") (newnames "result#13,exc#14,heap_Before_BLOCK,savedHeap_Before_BLOCK,x_Before_BLOCK#15,o,f,anonOut_x_6"))
                     (branch "Validity"
                         (builtin "One Step Simplification" (formula "28"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "expand_inByte" (formula "20") (term "1,1"))
                        (rule "expand_inInt" (formula "20") (term "0,1"))
                        (rule "replace_byte_MIN" (formula "20") (term "0,1,1,1"))
                        (rule "replace_byte_MAX" (formula "20") (term "1,0,1,1"))
                        (rule "replace_int_MIN" (formula "20") (term "0,1,0,1"))
                        (rule "replace_int_MAX" (formula "20") (term "1,0,0,1"))
                        (rule "leq_literals" (formula "20") (term "1,0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "21"))
                        (rule "eqSymm" (formula "30") (term "1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,1,1,0,0,1"))
                        (rule "add_literals" (formula "30") (term "0,0,1,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "variableDeclarationAssign" (formula "30") (term "1"))
                        (rule "variableDeclaration" (formula "30") (term "1") (newnames "exc#14_1"))
                        (rule "assignment" (formula "30") (term "1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "29") (term "1,1,1,0,0,1"))
                        (rule "ifElseUnfold" (formula "29") (term "1") (inst "#boolv=x_7"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_7"))
                        (rule "less_than_comparison_simple" (formula "29") (term "1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "17"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifElseSplit" (formula "31"))
                        (branch "if x_7 true"
                            (builtin "One Step Simplification" (formula "32"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "1"))
                           (rule "leq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "assignmentAdditionInt" (formula "31") (term "1"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "translateJavaAddInt" (formula "31") (term "0,1,0"))
                           (rule "expand_addJint" (formula "31") (term "0,1,0"))
                           (rule "expand_moduloInteger" (formula "31") (term "0,1,0"))
                           (rule "replace_int_RANGE" (formula "31") (term "1,1,0,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,0,1,0"))
                           (rule "replace_int_MIN" (formula "31") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,1,0"))
                           (rule "add_literals" (formula "31") (term "0,0,1,0,1,0"))
                           (rule "polyMod_pullOut" (formula "31") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,1,0,1,0"))
                           (rule "mul_literals" (formula "31") (term "1,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,1,0,1,0"))
                           (rule "add_literals" (formula "31") (term "0,0,1,0,1,0"))
                           (rule "tryEmpty" (formula "31") (term "1"))
                           (rule "blockEmptyLabel" (formula "31") (term "1"))
                           (rule "blockEmpty" (formula "31") (term "1"))
                           (rule "methodCallEmpty" (formula "31") (term "1"))
                           (rule "emptyModality" (formula "31") (term "1"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                           (rule "add_literals" (formula "31") (term "0,0,1"))
                           (rule "mod_axiom" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0"))
                           (rule "mod_axiom" (formula "31") (term "0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,1,0,1"))
                           (rule "mul_literals" (formula "31") (term "0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                           (rule "mul_literals" (formula "31") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                           (rule "commute_and" (formula "31"))
                           (rule "div_axiom" (formula "31") (term "0,0,0") (inst "quotient=quotient_0"))
                           (rule "equal_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                           (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                           (rule "mul_literals" (formula "34") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "4"))
                           (rule "mul_literals" (formula "27") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "mul_literals" (formula "27") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "27") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                           (rule "leq_literals" (formula "27") (term "0,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "leq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "2"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "27"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "26"))
                           (rule "mul_literals" (formula "3") (term "1,1"))
                           (rule "add_literals" (formula "3") (term "1"))
                           (rule "applyEq" (formula "36") (term "0,1,1,0") (ifseqformula "26"))
                           (rule "mul_literals" (formula "36") (term "1,1,0"))
                           (rule "add_literals" (formula "36") (term "1,0"))
                           (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_geqRight" (formula "36"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "27"))
                           (rule "mul_literals" (formula "3") (term "1,1"))
                           (rule "add_literals" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "27"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                           (rule "leq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "27"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_7 false"
                            (builtin "One Step Simplification" (formula "32"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_leqRight" (formula "24"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "assignment" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "1"))
                           (rule "leq_literals" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "tryEmpty" (formula "31") (term "1"))
                           (rule "blockEmptyLabel" (formula "31") (term "1"))
                           (rule "blockEmpty" (formula "31") (term "1"))
                           (rule "methodCallEmpty" (formula "31") (term "1"))
                           (rule "emptyModality" (formula "31") (term "1"))
                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")))
                           (rule "inEqSimp_leqRight" (formula "31"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                           (rule "leq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Precondition"
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "wellFormedAnon" (formula "27") (term "0"))
                        (rule "wellFormedAnonEQ" (formula "27") (term "0,0") (ifseqformula "12"))
                        (rule "expand_inInt" (formula "27") (term "0,1"))
                        (rule "expand_inByte" (formula "27") (term "1,1"))
                        (rule "replace_int_MIN" (formula "27") (term "0,1,0,1"))
                        (rule "replace_int_MAX" (formula "27") (term "1,0,0,1"))
                        (rule "replace_byte_MIN" (formula "27") (term "0,1,1,1"))
                        (rule "replace_byte_MAX" (formula "27") (term "1,0,1,1"))
                        (rule "leq_literals" (formula "27") (term "1,0,1"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "4")) (ifInst ""  (formula "11")) (ifInst ""  (formula "17")))
                        (rule "leq_literals" (formula "27") (term "0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "commute_and" (formula "26"))
                        (rule "allLeft" (formula "8") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "19"))
                        (rule "qeq_literals" (formula "8") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0"))
                        (rule "leq_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_leqRight" (formula "27"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "allLeft" (formula "10") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "10") (term "0,1"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1"))
                        (rule "leq_literals" (formula "10") (term "0,1"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "10"))
                        (rule "leq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "closeFalse" (formula "19"))
                     )
                     (branch "Usage"
                         (builtin "One Step Simplification" (formula "28"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1,1,1") (ifseqformula "12"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1,1,0,1") (ifseqformula "12"))
                        (rule "expand_inInt" (formula "20") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "20") (term "1,0,0,0,1"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "23"))
                        (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "inEqSimp_ltToLeq" (formula "22"))
                        (rule "mul_literals" (formula "22") (term "1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "21"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1"))
                        (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "21"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "commute_or_2" (formula "22") (term "1"))
                        (rule "shift_paren_or" (formula "22"))
                        (rule "shift_paren_or" (formula "22") (term "0"))
                        (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=x_7"))
                        (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_7"))
                        (rule "inequality_comparison_simple" (formula "30") (term "1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "replace_known_left" (formula "30") (term "0,0,1,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0,0") (ifseqformula "17"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "ifSplit" (formula "32"))
                        (branch "if x_7 true"
                            (builtin "One Step Simplification" (formula "33"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_7 false"
                            (builtin "One Step Simplification" (formula "33"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "blockEmpty" (formula "32") (term "1"))
                           (rule "variableDeclarationAssign" (formula "32") (term "1"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "first4Bits"))
                           (rule "assignment" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "variableDeclarationAssign" (formula "32") (term "1"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "second4Bits"))
                           (rule "assignment" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                            (builtin "Block Contract (Internal)" (formula "32") (newnames "result#6,exc#7,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,second4Bits_Before_BLOCK#8,first4Bits_Before_BLOCK#9,o,f,anonOut_second4Bits,anonOut_first4Bits"))
                           (branch "Validity"
                               (builtin "One Step Simplification" (formula "33"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "expand_inInt" (formula "25") (term "0,0,1"))
                              (rule "expand_inInt" (formula "25") (term "1,1"))
                              (rule "expand_inInt" (formula "25") (term "1,0,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,0,0,1"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,0,0,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,1,1"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,1,1"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,1"))
                              (rule "leq_literals" (formula "25") (term "1,0,0,1"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "leq_literals" (formula "25") (term "1,1,1"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "leq_literals" (formula "25") (term "1,1"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "leq_literals" (formula "25") (term "0,1"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "26"))
                              (rule "eqSymm" (formula "35") (term "1,0,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,1,0,0,1"))
                              (rule "mul_literals" (formula "35") (term "1,0,0,1,0,1,0,0,1"))
                              (rule "add_literals" (formula "35") (term "0,0,1,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "35") (term "1,0,0,1,1,1,0,0,1"))
                              (rule "add_literals" (formula "35") (term "0,0,1,1,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "27"))
                              (rule "variableDeclarationAssign" (formula "35") (term "1"))
                              (rule "variableDeclaration" (formula "35") (term "1") (newnames "exc#7_1"))
                              (rule "assignment" (formula "35") (term "1"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,1,0,0,1"))
                              (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "35") (term "1,1,1,1,0,0,1"))
                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "22"))
                              (rule "leq_literals" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "23"))
                              (rule "leq_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "compound_modulo_1" (formula "33") (term "1") (inst "#v=x_7"))
                              (rule "variableDeclarationAssign" (formula "33") (term "1"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_8"))
                              (rule "remove_parentheses_right" (formula "33") (term "1"))
                              (rule "compound_division_1" (formula "33") (term "1") (inst "#v=x_9"))
                              (rule "variableDeclarationAssign" (formula "33") (term "1"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_9"))
                              (rule "remove_parentheses_right" (formula "33") (term "1"))
                              (rule "assignment" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "assignmentDivisionInt" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "equal_literals" (formula "33") (term "0,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "translateJavaDivInt" (formula "33") (term "0,1,0"))
                              (rule "expand_divJint" (formula "33") (term "0,1,0"))
                              (rule "expand_moduloInteger" (formula "33") (term "0,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,0,1,0"))
                              (rule "replace_int_RANGE" (formula "33") (term "1,1,0,1,0"))
                              (rule "replace_int_MIN" (formula "33") (term "0,0,1,0"))
                              (rule "assignmentModulo" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "equal_literals" (formula "33") (term "0,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "translateJavaMod" (formula "33") (term "0,1,0"))
                              (rule "remove_parentheses_right" (formula "33") (term "1"))
                              (rule "compound_modulo_1" (formula "33") (term "1") (inst "#v=x_7"))
                              (rule "variableDeclarationAssign" (formula "33") (term "1"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_10"))
                              (rule "remove_parentheses_right" (formula "33") (term "1"))
                              (rule "assignment" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "assignmentModulo" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "equal_literals" (formula "33") (term "0,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "translateJavaMod" (formula "33") (term "0,1,0"))
                              (rule "tryEmpty" (formula "33") (term "1"))
                              (rule "blockEmptyLabel" (formula "33") (term "1"))
                              (rule "blockEmpty" (formula "33") (term "1"))
                              (rule "methodCallEmpty" (formula "33") (term "1"))
                              (rule "emptyModality" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "jmod_axiom" (formula "33") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1,1"))
                              (rule "jmod_axiom" (formula "33") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1"))
                              (rule "commute_and_2" (formula "33"))
                              (rule "commute_and" (formula "33") (term "0"))
                              (rule "commute_and" (formula "33") (term "0,0"))
                              (rule "cut_direct" (formula "24") (term "0,0,0"))
                              (branch "CUT: result#13 = null TRUE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "jdiv_axiom" (formula "33") (term "1,0,1,0,0,1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEqRigid" (formula "34") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "34") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "37") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEq" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "37") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "37") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "37") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "26") (term "0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                 (rule "mul_literals" (formula "26") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "26") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0"))
                                 (rule "leq_literals" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "28"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(5(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "div_axiom" (formula "39") (term "0,1,0,0,0") (inst "quotient=quotient_1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEqRigid" (formula "42") (term "0,1,0,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "42") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "42") (term "0,0,1"))
                                 (rule "jmod_axiom" (formula "42") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                 (rule "jmod_axiom" (formula "42") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "42") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,1"))
                                 (rule "mul_literals" (formula "42") (term "0,0,1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "31") (term "0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                 (rule "mul_literals" (formula "31") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "31") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "leq_literals" (formula "31") (term "0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "2"))
                                 (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "31"))
                                 (rule "mul_literals" (formula "4") (term "1,1"))
                                 (rule "add_zero_right" (formula "4") (term "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "31"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "add_zero_right" (formula "3") (term "1"))
                                 (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "31"))
                                 (rule "qeq_literals" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "31"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEqRigid" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "30"))
                                 (rule "times_zero_2" (formula "43") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "43") (term "0,0,0,0,0,1") (ifseqformula "30"))
                                 (rule "mul_literals" (formula "43") (term "0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "30"))
                                 (rule "times_zero_2" (formula "43") (term "1,0,1,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,1,1"))
                                 (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "30"))
                                 (rule "applyEq" (formula "43") (term "0,0,1,0") (ifseqformula "30"))
                                 (rule "times_zero_2" (formula "43") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "43") (term "1,0"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "30"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "commute_and" (formula "41"))
                                 (rule "jdiv_axiom" (formula "41") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEqRigid" (formula "42") (term "0,0,1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                 (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_2"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "45") (term "0,0,1") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "45") (term "1"))
                                 (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_geqRight" (formula "45"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: result#13 = null FALSE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "jdiv_axiom" (formula "34") (term "1,0,1,0,0,1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEqRigid" (formula "35") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "35") (term "1,0,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "35") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "35") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEqRigid" (formula "38") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "38") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0"))
                                 (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "applyEqRigid" (formula "38") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "38") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "38") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "26") (term "0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                 (rule "mul_literals" (formula "26") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "26") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0"))
                                 (rule "leq_literals" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "28"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(5(1(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "div_axiom" (formula "40") (term "0,1,0,0,0") (inst "quotient=quotient_1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEqRigid" (formula "43") (term "0,1,0,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,0"))
                                 (rule "applyEq" (formula "43") (term "0,1,0,0,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,1"))
                                 (rule "jmod_axiom" (formula "43") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                 (rule "jmod_axiom" (formula "43") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "0,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "30") (term "0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                 (rule "mul_literals" (formula "30") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0"))
                                 (rule "leq_literals" (formula "30") (term "0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "31"))
                                 (rule "mul_literals" (formula "4") (term "1,1"))
                                 (rule "add_literals" (formula "4") (term "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "31"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "add_zero_right" (formula "3") (term "1"))
                                 (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "31"))
                                 (rule "qeq_literals" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "31"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "30"))
                                 (rule "applyEq" (formula "44") (term "0,0,0,0,0,1") (ifseqformula "30"))
                                 (rule "mul_literals" (formula "44") (term "0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,1"))
                                 (rule "applyEqRigid" (formula "44") (term "0,0,1,0") (ifseqformula "30"))
                                 (rule "times_zero_2" (formula "44") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "44") (term "1,0"))
                                 (rule "applyEq" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "30"))
                                 (rule "mul_literals" (formula "44") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0"))
                                 (rule "applyEqRigid" (formula "44") (term "0,1,0,1,1") (ifseqformula "30"))
                                 (rule "mul_literals" (formula "44") (term "1,0,1,1"))
                                 (rule "add_literals" (formula "44") (term "0,1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "30"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "commute_and" (formula "42"))
                                 (rule "cut_direct" (formula "32") (term "0,0"))
                                 (branch "CUT: result#13.<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "jdiv_axiom" (formula "42") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "43") (term "0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_2"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "46") (term "1"))
                                    (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_geqRight" (formula "46"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "CUT: result#13.<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "jdiv_axiom" (formula "43") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "44") (term "0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_2"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                    (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_leqRight" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                           (branch "Precondition"
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "wellFormedAnon" (formula "32") (term "0"))
                              (rule "wellFormedAnonEQ" (formula "32") (term "0,0") (ifseqformula "12"))
                              (rule "expand_inInt" (formula "32") (term "1,1"))
                              (rule "expand_inInt" (formula "32") (term "1,0,1"))
                              (rule "expand_inInt" (formula "32") (term "0,0,1"))
                              (rule "replace_int_MAX" (formula "32") (term "1,0,1,1"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1,1,1"))
                              (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,1"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,1"))
                              (rule "replace_int_MAX" (formula "32") (term "1,0,0,0,1"))
                              (rule "replace_int_MIN" (formula "32") (term "0,1,0,0,1"))
                              (rule "leq_literals" (formula "32") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "4")) (ifInst ""  (formula "11")) (ifInst ""  (formula "17")))
                              (rule "leq_literals" (formula "32") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "leq_literals" (formula "32") (term "1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "leq_literals" (formula "32") (term "0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "32") (term "1") (ifseqformula "22"))
                              (rule "leq_literals" (formula "32") (term "0,1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_leqRight" (formula "32"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Usage"
                               (builtin "One Step Simplification" (formula "33"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,1") (ifseqformula "12"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,0,1") (ifseqformula "12"))
                              (rule "expand_inInt" (formula "25") (term "1,0,0,1"))
                              (rule "expand_inInt" (formula "25") (term "0,0,0,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1"))
                              (rule "replace_int_MIN" (formula "25") (term "0,1,0,0,0,1"))
                              (rule "replace_int_MAX" (formula "25") (term "1,0,0,0,0,1"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "32"))
                              (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "inEqSimp_ltToLeq" (formula "27"))
                              (rule "mul_literals" (formula "27") (term "1,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29"))
                              (rule "mul_literals" (formula "29") (term "1,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "26"))
                              (rule "inEqSimp_commuteLeq" (formula "28"))
                              (rule "inEqSimp_commuteLeq" (formula "31"))
                              (rule "inEqSimp_commuteLeq" (formula "33"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                              (rule "mul_literals" (formula "27") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                              (rule "mul_literals" (formula "29") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "26"))
                              (rule "leq_literals" (formula "33") (term "0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "28"))
                              (rule "leq_literals" (formula "31") (term "0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "27"))
                              (rule "leq_literals" (formula "31") (term "0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "29"))
                              (rule "leq_literals" (formula "30") (term "0"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "1"))
                              (rule "shift_paren_or" (formula "30"))
                              (rule "shift_paren_or" (formula "30") (term "0"))
                              (rule "ifUnfold" (formula "38") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_8"))
                              (rule "inequality_comparison_simple" (formula "38") (term "1"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "replace_known_left" (formula "38") (term "0,0,1,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "ifSplit" (formula "38"))
                              (branch "if x_8 true"
                                  (builtin "One Step Simplification" (formula "39"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_8 false"
                                  (builtin "One Step Simplification" (formula "39"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "blockEmpty" (formula "38") (term "1"))
                                 (rule "methodCallUnfoldTarget" (formula "38") (term "1") (inst "#v0=s"))
                                 (rule "variableDeclaration" (formula "38") (term "1") (newnames "s"))
                                 (rule "methodCallWithAssignmentUnfoldArguments" (formula "38") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "38") (term "1"))
                                 (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_1"))
                                 (rule "assignment" (formula "38") (term "1"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "variableDeclarationAssign" (formula "38") (term "1"))
                                 (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_2"))
                                 (rule "eval_order_array_access4" (formula "38") (term "1") (inst "#v0=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "38") (term "1"))
                                 (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr"))
                                  (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_hexCharacters,result_664,exc_874,heapAfter_hexCharacters,anon_heap_hexCharacters") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::hexCharacters()].JML normal_behavior operation contract.0"))
                                 (branch "Post (hexCharacters)"
                                     (builtin "One Step Simplification" (formula "32"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                    (rule "expand_inChar" (formula "32") (term "1,0,0,1,0,1,1"))
                                    (rule "replace_char_MIN" (formula "32") (term "0,1,1,0,0,1,0,1,1"))
                                    (rule "replace_char_MAX" (formula "32") (term "1,0,1,0,0,1,0,1,1"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,1,1,0") (ifseqformula "12"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "orRight" (formula "38"))
                                    (rule "orRight" (formula "38"))
                                    (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0"))
                                    (rule "assignment" (formula "49") (term "1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "assignment_array2" (formula "49") (term "1"))
                                    (branch "Normal Execution (x_arr != null)"
                                        (builtin "One Step Simplification" (formula "50"))
                                        (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "41")))
                                       (rule "orRight" (formula "49"))
                                       (rule "inEqSimp_ltRight" (formula "50"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "49"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "50") (term "0,1,0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "42")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "36"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0") (ifseqformula "36"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "36") (term "0"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                       (rule "commute_and" (formula "36") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "36") (term "0"))
                                       (rule "distr_forallAnd" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "commute_or" (formula "37") (term "0"))
                                        (builtin "Use Operation Contract" (formula "50") (newnames "heapBefore_append,result_665,exc_875,heapAfter_append,anon_heap_append") (contract "java.lang.StringBuilder[java.lang.StringBuilder::append(char)].JML normal_behavior operation contract.0"))
                                       (branch "Post (append)"
                                           (builtin "One Step Simplification" (formula "52"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,0,1,1") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,1,1,0,1,1") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "12"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,1,0") (ifseqformula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,1,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,1,1,0") (ifseqformula "12"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "45"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "46"))
                                          (rule "notLeft" (formula "42"))
                                          (rule "notLeft" (formula "42"))
                                          (rule "notLeft" (formula "45"))
                                          (rule "orRight" (formula "48"))
                                          (rule "orRight" (formula "48"))
                                          (rule "orRight" (formula "48"))
                                          (rule "eqSymm" (formula "43"))
                                          (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "assignment" (formula "63") (term "1"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "blockEmpty" (formula "63") (term "1"))
                                          (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "43"))
                                          (rule "applyEq" (formula "61") (term "0") (ifseqformula "43"))
                                          (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "43"))
                                          (rule "replace_known_left" (formula "41") (term "1,0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "43") (term "1") (ifseqformula "42"))
                                          (rule "applyEq" (formula "41") (term "1,0,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "42"))
                                          (rule "applyEq" (formula "61") (term "0,1,0,0,0,0,0,0") (ifseqformula "42"))
                                          (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=java_lang_StringBuilder_str_2"))
                                          (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "41"))
                                          (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "40"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "46")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,0,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                          (rule "replace_known_left" (formula "41") (term "1,0,0,0,1,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "60")))
                                          (rule "elementOfSingleton" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "41"))
                                          (rule "hideAuxiliaryEq" (formula "41"))
                                          (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "43"))
                                          (rule "replaceKnownSelect_taclet00012120000100_9" (formula "43") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00012120000100_10" (formula "43") (term "0,0"))
                                          (rule "notLeft" (formula "43"))
                                          (rule "methodCallUnfoldArguments" (formula "60") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "60") (term "1"))
                                          (rule "variableDeclaration" (formula "60") (term "1") (newnames "var_3"))
                                          (rule "assignment" (formula "60") (term "1"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "variableDeclarationAssign" (formula "60") (term "1"))
                                          (rule "variableDeclaration" (formula "60") (term "1") (newnames "var_4"))
                                          (rule "eval_order_array_access4" (formula "60") (term "1") (inst "#v0=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "60") (term "1"))
                                          (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_arr_1"))
                                          (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                          (rule "expand_inInt" (formula "35"))
                                          (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                          (rule "andLeft" (formula "35"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                          (rule "qeq_literals" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                          (rule "leq_literals" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                           (builtin "Use Operation Contract" (formula "60") (newnames "heapBefore_hexCharacters_0,result_666,exc_876,heapAfter_hexCharacters_0,anon_heap_hexCharacters_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::hexCharacters()].JML normal_behavior operation contract.0"))
                                          (branch "Post (hexCharacters)"
                                              (builtin "One Step Simplification" (formula "45"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,1,1,0,1,1") (ifseqformula "40"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                             (rule "expand_inChar" (formula "45") (term "1,0,0,1,0,1,1"))
                                             (rule "replace_char_MAX" (formula "45") (term "1,0,1,0,0,1,0,1,1"))
                                             (rule "replace_char_MIN" (formula "45") (term "0,1,1,0,0,1,0,1,1"))
                                             (rule "andLeft" (formula "45"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,1,0") (ifseqformula "45"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,1,0") (ifseqformula "40"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,1,1,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,0,1,1,0") (ifseqformula "12"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "49"))
                                             (rule "andLeft" (formula "50"))
                                             (rule "notLeft" (formula "51"))
                                             (rule "andLeft" (formula "50"))
                                             (rule "andLeft" (formula "50"))
                                             (rule "notLeft" (formula "51"))
                                             (rule "notLeft" (formula "50"))
                                             (rule "orRight" (formula "51"))
                                             (rule "orRight" (formula "51"))
                                             (rule "orRight" (formula "51"))
                                             (rule "orRight" (formula "51"))
                                             (rule "replace_known_right" (formula "47") (term "1,0,1") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "56")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0"))
                                             (rule "assignment" (formula "73") (term "1"))
                                              (builtin "One Step Simplification" (formula "73"))
                                             (rule "assignment_array2" (formula "73") (term "1"))
                                             (branch "Normal Execution (x_arr_1 != null)"
                                                 (builtin "One Step Simplification" (formula "74"))
                                                 (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "56")))
                                                (rule "orRight" (formula "73"))
                                                (rule "inEqSimp_ltRight" (formula "74"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "pullOutSelect" (formula "74") (term "0,1,0") (inst "selectSK=arr_2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "55")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "applyEqReverse" (formula "75") (term "0,1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "49"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "applyEq" (formula "50") (term "0,1,0,0,1,0,0") (ifseqformula "49"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "49") (term "0"))
                                                (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "49") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "49") (term "0"))
                                                (rule "distr_forallAnd" (formula "49"))
                                                (rule "andLeft" (formula "49"))
                                                (rule "commute_or" (formula "50") (term "0"))
                                                 (builtin "Use Operation Contract" (formula "74") (newnames "heapBefore_append_0,result_667,exc_877,heapAfter_append_0,anon_heap_append_0") (contract "java.lang.StringBuilder[java.lang.StringBuilder::append(char)].JML normal_behavior operation contract.0"))
                                                (branch "Post (append)"
                                                    (builtin "One Step Simplification" (formula "53"))
                                                    (builtin "One Step Simplification" (formula "76"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,1,1") (ifseqformula "45"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,1,1") (ifseqformula "40"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,1,1,0,1,1") (ifseqformula "45"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,1,1,0,1,1") (ifseqformula "40"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,0,0,0,1,1") (ifseqformula "12"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,1,0") (ifseqformula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,1,0") (ifseqformula "45"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,1,0") (ifseqformula "40"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,1,0") (ifseqformula "12"))
                                                   (rule "andLeft" (formula "54"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "54"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "56"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "59"))
                                                   (rule "notLeft" (formula "56"))
                                                   (rule "notLeft" (formula "55"))
                                                   (rule "notLeft" (formula "58"))
                                                   (rule "orRight" (formula "60"))
                                                   (rule "orRight" (formula "60"))
                                                   (rule "orRight" (formula "60"))
                                                   (rule "orRight" (formula "60"))
                                                   (rule "orRight" (formula "60"))
                                                   (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "blockEmpty" (formula "89") (term "1"))
                                                   (rule "applyEq" (formula "54") (term "1,0,0,0,0,0,0,0") (ifseqformula "56"))
                                                   (rule "replace_known_right" (formula "54") (term "0,0,0,0,0,0") (ifseqformula "87"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "56"))
                                                   (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "56"))
                                                   (rule "applyEq" (formula "54") (term "1,0,1,0,0,0") (ifseqformula "56"))
                                                   (rule "applyEq" (formula "54") (term "1,0,1,0,0") (ifseqformula "56"))
                                                   (rule "applyEq" (formula "54") (term "1,0,1,0,0,0,0") (ifseqformula "56"))
                                                   (rule "applyEq" (formula "54") (term "1,0,0,0,0,0,0") (ifseqformula "56"))
                                                   (rule "replace_known_left" (formula "54") (term "0,0,0,0,0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "pullOutSelect" (formula "54") (term "0,0") (inst "selectSK=java_lang_StringBuilder_str_3"))
                                                   (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "54"))
                                                   (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "54"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "72")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "45"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,0") (ifseqformula "40"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,1,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,0,0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "54") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "86"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "14")))
                                                   (rule "elementOfSingleton" (formula "54") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "54"))
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "54"))
                                                   (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "54"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "54"))
                                                   (rule "hideAuxiliaryEq" (formula "54"))
                                                   (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "56"))
                                                   (rule "replaceKnownSelect_taclet00000012120000100_13" (formula "56") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000012120000100_14" (formula "56") (term "0,0"))
                                                   (rule "notLeft" (formula "56"))
                                                   (rule "preincrement" (formula "86") (term "1"))
                                                   (rule "compound_int_cast_expression" (formula "86") (term "1") (inst "#v=x"))
                                                   (rule "variableDeclarationAssign" (formula "86") (term "1"))
                                                   (rule "variableDeclaration" (formula "86") (term "1") (newnames "x_9"))
                                                   (rule "remove_parentheses_right" (formula "86") (term "1"))
                                                   (rule "assignmentAdditionInt" (formula "86") (term "1"))
                                                    (builtin "One Step Simplification" (formula "86"))
                                                   (rule "translateJavaAddInt" (formula "86") (term "0,1,0"))
                                                   (rule "expand_addJint" (formula "86") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "86") (term "0,0,1,0"))
                                                   (rule "expand_moduloInteger" (formula "86") (term "0,1,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "86") (term "0,0,1,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "86") (term "0,0,1,0"))
                                                   (rule "replace_int_RANGE" (formula "86") (term "1,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,1,0,1,0"))
                                                   (rule "add_literals" (formula "86") (term "0,0,1,0,1,0"))
                                                   (rule "polyMod_pullOut" (formula "86") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "86") (term "1,0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,1,0,1,0"))
                                                   (rule "add_literals" (formula "86") (term "0,0,1,0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "86") (term "1"))
                                                   (rule "assignment" (formula "86") (term "1"))
                                                    (builtin "One Step Simplification" (formula "86"))
                                                   (rule "tryEmpty" (formula "86") (term "1"))
                                                   (rule "methodCallEmpty" (formula "86") (term "1"))
                                                   (rule "emptyModality" (formula "86") (term "1"))
                                                    (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "85")) (ifInst ""  (formula "70")))
                                                   (rule "replaceKnownSelect_taclet00000012120000100_13" (formula "86") (term "0,0,1,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000012120000100_14" (formula "86") (term "0,0,1,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet00000012120000100_13" (formula "86") (term "0,0,0,0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000012120000100_14" (formula "86") (term "0,0,0,0,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet00000012120000100_13" (formula "86") (term "0,0,1,1,0,0,0,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000012120000100_14" (formula "86") (term "0,0,1,1,0,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet00000012120000100_13" (formula "86") (term "1,0,0,0,1,0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000012120000100_14" (formula "86") (term "1,0,0,0,1,0,0,0,0"))
                                                   (rule "eqSymm" (formula "86") (term "1,0,0,1,0"))
                                                   (rule "replace_known_right" (formula "86") (term "0,1,1,0,0,0,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "63")) (ifInst ""  (formula "57")) (ifInst ""  (formula "54")))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,0,1"))
                                                   (rule "precOfInt" (formula "86") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "86") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "86") (term "0,1"))
                                                   (rule "mul_literals" (formula "86") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "86") (term "0,0,1"))
                                                   (rule "mod_axiom" (formula "86") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,0,0"))
                                                   (rule "mod_axiom" (formula "86") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,1,1,0,0"))
                                                   (rule "add_literals" (formula "86") (term "0,0,1,1,0,0"))
                                                   (rule "mod_axiom" (formula "86") (term "0,1,0,0,1,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1,0,0,1,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,1,0,0,1,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,1,0,0,1,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,1,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,1,0,1,1"))
                                                   (rule "mod_axiom" (formula "86") (term "0,1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,0,1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,0,1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,1,0,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,0,0,1,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,0,1,1"))
                                                   (rule "mod_axiom" (formula "86") (term "0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "86") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,0,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,0,1,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,0,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,1"))
                                                   (rule "mul_literals" (formula "86") (term "1,0,1"))
                                                   (rule "polyMod_pullOut" (formula "86") (term "0,0,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,0,0,0,1"))
                                                   (rule "add_literals" (formula "86") (term "1,1,0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "86") (term "1,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "86") (term "0,0,0,0,1"))
                                                   (rule "mod_axiom" (formula "86") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "86") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,1,0,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,1,0,1"))
                                                   (rule "polyMod_pullOut" (formula "86") (term "0,1,1") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "1,1,0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "86") (term "1,0,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "mod_axiom" (formula "86") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "86") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,0,1,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,1,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,0,1,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,0,0,1,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "1,1,0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "86") (term "1,0,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "1,1,0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "86") (term "1,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,1,1"))
                                                   (rule "polyDiv_pullOut" (formula "86") (term "0,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "equal_literals" (formula "86") (term "0,0,0,0,1"))
                                                    (builtin "One Step Simplification" (formula "86"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0,0,1"))
                                                   (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "86") (term "1,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,1,1,0,0,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,0,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "86") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,0,0,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "86") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "0,0,1"))
                                                   (rule "elimGcdGeq" (formula "86") (term "1,1") (inst "elimGcdRightDiv=add(Z(1(#)),
    div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(i_0, Z(neglit(1(#))))),
            length(bytes)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(3(4(9(0(5(4(2(4(4(6(#))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        length(bytes)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,0,0,0,1,0,1,1"))
                                                   (rule "sub_literals" (formula "86") (term "0,0,0,0,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,1,0,1,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "1,1,0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "86") (term "1,0,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "1,1,0,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "86") (term "1,0,1,0,1,1"))
                                                   (rule "add_zero_right" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "0,0,1,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,0,0,1,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,1,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,0,1,1"))
                                                   (rule "add_zero_left" (formula "86") (term "0,0,1,0,1,1"))
                                                   (rule "polySimp_pullOutFactor0" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "1,0,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "leq_literals" (formula "86") (term "1,0,1,1"))
                                                    (builtin "One Step Simplification" (formula "86"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "1,1,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "86") (term "1,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "86") (term "0,0,1,1"))
                                                   (rule "qeq_literals" (formula "86") (term "0,1,1"))
                                                    (builtin "One Step Simplification" (formula "86"))
                                                   (rule "polyDiv_pullOut" (formula "86") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                   (rule "equal_literals" (formula "86") (term "0,0,1,1"))
                                                    (builtin "One Step Simplification" (formula "86"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "1,0,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "86") (term "0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,0,1,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,0,1,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "86") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,1,1"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "86") (term "0,0,0,1,1"))
                                                   (rule "add_zero_left" (formula "86") (term "0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,1,1"))
                                                   (rule "nnf_notOr" (formula "86") (term "1,1,0,0,0,1,0"))
                                                   (rule "div_axiom" (formula "86") (term "0,0,0,0,0") (inst "quotient=quotient_0"))
                                                   (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "equal_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                   (rule "add_literals" (formula "3") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEqRigid" (formula "89") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addComm1" (formula "89") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "89") (term "0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "89") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "89") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "23") (term "0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                   (rule "leq_literals" (formula "2") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "92") (term "0,1,1,0,0,0") (ifseqformula "24"))
                                                   (rule "mul_literals" (formula "92") (term "1,1,0,0,0"))
                                                   (rule "add_literals" (formula "92") (term "1,0,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "24"))
                                                   (rule "mul_literals" (formula "3") (term "1,1"))
                                                   (rule "add_literals" (formula "3") (term "1"))
                                                   (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "24"))
                                                   (rule "mul_literals" (formula "4") (term "1,1"))
                                                   (rule "add_literals" (formula "4") (term "1"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "89") (term "0,1,0,1,1,0,0") (ifseqformula "22"))
                                                   (rule "mul_literals" (formula "89") (term "1,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "89") (term "0,1,1,0,0"))
                                                   (rule "replace_known_left" (formula "89") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "89"))
                                                   (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "22"))
                                                   (rule "inEqSimp_subsumption1" (formula "89") (term "0,0") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "89") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "89"))
                                                   (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "cut_direct" (formula "26") (term "0,0,0"))
                                                   (branch "CUT: result#13 = null TRUE"
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "cut_direct" (formula "32") (term "0,0,0"))
                                                      (branch "CUT: result#6 = null TRUE"
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                                         (rule "expand_inInt" (formula "50"))
                                                         (rule "replace_int_MIN" (formula "50") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "50") (term "1,0"))
                                                         (rule "andLeft" (formula "50"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                                         (rule "qeq_literals" (formula "51"))
                                                         (rule "true_left" (formula "51"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "leq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                                         (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
                                                         (rule "expand_inInt" (formula "8"))
                                                         (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "inEqSimp_commuteLeq" (formula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "qeq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                                                         (rule "expand_inInt" (formula "37"))
                                                         (rule "replace_int_MIN" (formula "37") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "37") (term "1,0"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38"))
                                                         (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                                         (rule "qeq_literals" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "leq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "div_axiom" (formula "88") (term "0,1,1") (inst "quotient=quotient_1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "applyEq" (formula "91") (term "0,1,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "91") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "7") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "28") (term "0,0"))
                                                         (rule "add_zero_left" (formula "28") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                                         (rule "neg_literal" (formula "28") (term "0,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "28") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "7"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "8"))
                                                         (rule "greater_literals" (formula "13") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1,0"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "28"))
                                                         (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "28") (term "0") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "2") (term "1,1"))
                                                         (rule "add_literals" (formula "2") (term "1"))
                                                         (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "13") (term "1,1"))
                                                         (rule "add_literals" (formula "13") (term "1"))
                                                         (rule "applyEqRigid" (formula "94") (term "1,1,1") (ifseqformula "8"))
                                                         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "8"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                         (rule "add_literals" (formula "4") (term "0,1"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                                                         (rule "leq_literals" (formula "12") (term "0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "commute_and" (formula "91") (term "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1,0") (ifseqformula "44"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "22"))
                                                         (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "16"))
                                                         (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0,0") (ifseqformula "58"))
                                                         (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "70"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "div_axiom" (formula "93") (term "0,0,1") (inst "quotient=quotient_2"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "applyEq" (formula "96") (term "0,0,1,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "96") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "96") (term "1,0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "96") (term "0,1,1"))
                                                         (rule "polySimp_addComm1" (formula "96") (term "0,0,1,1"))
                                                         (rule "applyEq" (formula "96") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "96") (term "1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "96") (term "1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "96") (term "1,1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "96") (term "1,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "96") (term "0,1,1,1"))
                                                         (rule "mul_literals" (formula "96") (term "0,0,1,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "96") (term "1,0,1,1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "leq_literals" (formula "11") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "replace_known_left" (formula "97") (term "0,1") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "97"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                         (rule "times_zero_1" (formula "18") (term "0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                         (rule "mul_literals" (formula "18") (term "0,1"))
                                                         (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "12"))
                                                         (rule "times_zero_2" (formula "17") (term "1,1"))
                                                         (rule "add_literals" (formula "17") (term "1"))
                                                         (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "12"))
                                                         (rule "times_zero_2" (formula "2") (term "1,1"))
                                                         (rule "add_literals" (formula "2") (term "1"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "12"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                         (rule "add_literals" (formula "4") (term "0,1"))
                                                         (rule "applyEq" (formula "99") (term "0,1,0,1,1") (ifseqformula "12"))
                                                         (rule "mul_literals" (formula "99") (term "1,0,1,1"))
                                                         (rule "add_literals" (formula "99") (term "0,1,1"))
                                                         (rule "replace_known_left" (formula "99") (term "1") (ifseqformula "13"))
                                                          (builtin "One Step Simplification" (formula "99"))
                                                         (rule "allRight" (formula "99") (inst "sk=f_0"))
                                                         (rule "allRight" (formula "99") (inst "sk=o_0"))
                                                         (rule "orRight" (formula "99"))
                                                         (rule "orRight" (formula "99"))
                                                         (rule "applyEq" (formula "1") (term "1") (ifseqformula "12"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "12"))
                                                         (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "30"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "pullOutSelect" (formula "97") (term "1") (inst "selectSK=f_0_0"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "98") (term "0") (inst "selectSK=f_0_1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "55"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "42"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "21"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "97"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "51"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "22"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "23"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "99"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "24"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet0000000012120000100_15" (formula "1") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "101"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_and" (formula "101"))
                                                         (rule "shift_paren_and" (formula "102"))
                                                         (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                                         (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                         (rule "commute_or_2" (formula "5") (term "0,0,1,0,0"))
                                                         (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                                         (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                                         (rule "commute_or_2" (formula "5") (term "0,0,0,0,1,0,0"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "applyEqReverse" (formula "105") (term "1") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "eqSymm" (formula "104"))
                                                            (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "72")))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "72"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "72"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "71")))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "72"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                                            (rule "replace_known_right" (formula "103") (term "0,1,0") (ifseqformula "71"))
                                                             (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "72")))
                                                            (rule "notRight" (formula "103"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "100")))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "eqSymm" (formula "103"))
                                                            (rule "replace_known_right" (formula "102") (term "0") (ifseqformula "71"))
                                                             (builtin "One Step Simplification" (formula "102"))
                                                            (rule "false_right" (formula "102"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "orRight" (formula "71"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                               (rule "replace_known_right" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                               (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                               (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "70"))
                                                                (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "72")))
                                                               (rule "closeTrue" (formula "73"))
                                                            )
                                                            (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "cut_direct" (formula "71") (term "0,0"))
                                                               (branch "CUT: o_0 = null TRUE"
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "false_right" (formula "72"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "101") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "100") (term "1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "99")))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "CUT: o_0 = null FALSE"
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "notRight" (formula "72"))
                                                                  (rule "replace_known_left" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "72")))
                                                                  (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "100")))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: result#6 = null FALSE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "arrayLengthIsAnInt" (formula "11") (term "1,1,0,0"))
                                                         (rule "expand_inInt" (formula "11"))
                                                         (rule "replace_int_MIN" (formula "11") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "11") (term "1,0"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "inEqSimp_commuteLeq" (formula "11"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                                         (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                                         (rule "expand_inInt" (formula "50"))
                                                         (rule "replace_int_MAX" (formula "50") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "50") (term "0,1"))
                                                         (rule "andLeft" (formula "50"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                                         (rule "qeq_literals" (formula "51"))
                                                         (rule "true_left" (formula "51"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "leq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                                                         (rule "expand_inInt" (formula "37"))
                                                         (rule "replace_int_MAX" (formula "37") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "37") (term "0,1"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38"))
                                                         (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                                         (rule "qeq_literals" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "leq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "qeq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "div_axiom" (formula "89") (term "1,1,1") (inst "quotient=quotient_1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "applyEq" (formula "92") (term "1,1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "92") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "92") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "92") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "92") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "92") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "92") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "92") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "92") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "92") (term "0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "92") (term "1,0,1,0,1"))
                                                         (rule "mul_literals" (formula "92") (term "0,0,1,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "28") (term "0,0"))
                                                         (rule "add_zero_left" (formula "28") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "leq_literals" (formula "28") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "neg_literal" (formula "28") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "28"))
                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "14") (term "1,1"))
                                                         (rule "add_literals" (formula "14") (term "1"))
                                                         (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "2") (term "1,1"))
                                                         (rule "add_literals" (formula "2") (term "1"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "95") (term "1,1,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "1") (term "1") (ifseqformula "8"))
                                                         (rule "applyEqRigid" (formula "95") (term "0,1,0,1,0,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "95") (term "1,0,1,0,1"))
                                                         (rule "add_literals" (formula "95") (term "0,1,0,1"))
                                                         (rule "replace_known_left" (formula "95") (term "0,1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "95"))
                                                         (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "3") (term "0,1"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "4") (term "0,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "28"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1,0") (ifseqformula "44"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "22"))
                                                         (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "cut_direct" (formula "36") (term "0,0"))
                                                         (branch "CUT: result#6.<created> = TRUE TRUE"
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "true_left" (formula "37"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "1,0") (ifseqformula "58"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "91"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "7")))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "div_axiom" (formula "94") (term "0,1") (inst "quotient=quotient_2"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "equal_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "applyEq" (formula "97") (term "0,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                                                            (rule "times_zero_1" (formula "16") (term "0,0"))
                                                            (rule "add_zero_left" (formula "16") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                            (rule "mul_literals" (formula "16") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "polySimp_addLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "3") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                            (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "12"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                            (rule "add_literals" (formula "19") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                            (rule "mul_literals" (formula "19") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "14"))
                                                            (rule "times_zero_1" (formula "19") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "19") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "2"))
                                                            (rule "mul_literals" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "neg_literal" (formula "34") (term "0,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0"))
                                                            (rule "qeq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "replace_known_left" (formula "102") (term "1") (ifseqformula "34"))
                                                             (builtin "One Step Simplification" (formula "102"))
                                                            (rule "allRight" (formula "102") (inst "sk=f_0"))
                                                            (rule "allRight" (formula "102") (inst "sk=o_0"))
                                                            (rule "orRight" (formula "102"))
                                                            (rule "orRight" (formula "102"))
                                                            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "34"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "33"))
                                                            (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "19") (term "1,1"))
                                                            (rule "add_zero_right" (formula "19") (term "1"))
                                                            (rule "applyEq" (formula "34") (term "0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "2") (term "1,1"))
                                                            (rule "add_literals" (formula "2") (term "1"))
                                                            (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                            (rule "add_literals" (formula "4") (term "0,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "10"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "30"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "pullOutSelect" (formula "98") (term "0") (inst "selectSK=f_0_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "55"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "42"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "21"))
                                                            (rule "eqSymm" (formula "99"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "97"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=f_0_1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "52"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "23"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "33"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "24"))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "100"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "25"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                                            (rule "simplifySelectOfAnon" (formula "2"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replaceKnownSelect_taclet01000000012120000100_16" (formula "2") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "26"))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "102"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_and" (formula "102"))
                                                            (rule "shift_paren_and" (formula "103"))
                                                            (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "104") (term "0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "72")))
                                                               (rule "notRight" (formula "104"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "101")))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "103") (term "0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "103"))
                                                               (rule "false_right" (formula "103"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "orRight" (formula "72"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")))
                                                                  (rule "closeTrue" (formula "73"))
                                                               )
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "69"))
                                                                      (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "70")))
                                                                     (rule "closeTrue" (formula "74"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "cut_direct" (formula "71") (term "0,0"))
                                                                     (branch "CUT: o_0 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "false_right" (formula "72"))
                                                                        (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "101")))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                     (branch "CUT: o_0 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "notRight" (formula "72"))
                                                                        (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "72"))
                                                                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                                        (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")) (ifInst ""  (formula "102")))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: result#6.<created> = TRUE FALSE"
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "1,0") (ifseqformula "58"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "92"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "7")))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "div_axiom" (formula "95") (term "0,1") (inst "quotient=quotient_2"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                            (rule "equal_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "applyEq" (formula "98") (term "0,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                            (rule "mul_literals" (formula "18") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "12"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                            (rule "add_literals" (formula "19") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                            (rule "mul_literals" (formula "19") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "19") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "19") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "3"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "neg_literal" (formula "34") (term "0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0"))
                                                            (rule "qeq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "replace_known_left" (formula "103") (term "1") (ifseqformula "34"))
                                                             (builtin "One Step Simplification" (formula "103"))
                                                            (rule "allRight" (formula "103") (inst "sk=f_0"))
                                                            (rule "allRight" (formula "103") (inst "sk=o_0"))
                                                            (rule "orRight" (formula "103"))
                                                            (rule "orRight" (formula "103"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "34"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "18") (term "1,1"))
                                                            (rule "add_literals" (formula "18") (term "1"))
                                                            (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "2") (term "1,1"))
                                                            (rule "add_literals" (formula "2") (term "1"))
                                                            (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                            (rule "add_literals" (formula "4") (term "0,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "32"))
                                                            (rule "leq_literals" (formula "17") (term "0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "10"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=f_0_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "55"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "42"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "21"))
                                                            (rule "eqSymm" (formula "100"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "98"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=f_0_1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "52"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "23"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "33"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "24"))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "101"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "25"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                                            (rule "simplifySelectOfAnon" (formula "2"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replaceKnownSelect_taclet11000000012120000100_16" (formula "2") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "26"))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "103"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_and" (formula "103"))
                                                            (rule "shift_paren_and" (formula "104"))
                                                            (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "105") (term "0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "72")))
                                                               (rule "notRight" (formula "105"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "3") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "102")))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "104") (term "0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "104"))
                                                               (rule "false_right" (formula "104"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "orRight" (formula "71"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                                  (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "70")))
                                                                  (rule "closeTrue" (formula "73"))
                                                               )
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "71"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                     (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "69")))
                                                                     (rule "closeTrue" (formula "74"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "cut_direct" (formula "71") (term "0,0"))
                                                                     (branch "CUT: o_0 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "false_right" (formula "72"))
                                                                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "102")))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                     (branch "CUT: o_0 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "notRight" (formula "72"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "72"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                                        (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "103")))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result#13 = null FALSE"
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "cut_direct" (formula "32") (term "0,0,0"))
                                                      (branch "CUT: result#6 = null TRUE"
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                                         (rule "expand_inInt" (formula "50"))
                                                         (rule "replace_int_MAX" (formula "50") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "50") (term "0,1"))
                                                         (rule "andLeft" (formula "50"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "52"))
                                                         (rule "leq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                                         (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
                                                         (rule "expand_inInt" (formula "8"))
                                                         (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "inEqSimp_commuteLeq" (formula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "qeq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                                                         (rule "expand_inInt" (formula "37"))
                                                         (rule "replace_int_MAX" (formula "37") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "37") (term "0,1"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "39"))
                                                         (rule "leq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "qeq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "div_axiom" (formula "89") (term "1,1,1") (inst "quotient=quotient_1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "applyEq" (formula "92") (term "1,1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "92") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "92") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "92") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "92") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "92") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "92") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "92") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "92") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "92") (term "0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "92") (term "1,0,1,0,1"))
                                                         (rule "mul_literals" (formula "92") (term "0,0,1,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "28") (term "0,0"))
                                                         (rule "add_zero_left" (formula "28") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
                                                         (rule "neg_literal" (formula "28") (term "0,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "28") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "28"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "14") (term "1,1"))
                                                         (rule "add_literals" (formula "14") (term "1"))
                                                         (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "2") (term "1,1"))
                                                         (rule "add_literals" (formula "2") (term "1"))
                                                         (rule "applyEq" (formula "28") (term "0") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "applyEq" (formula "95") (term "1,1,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "4") (term "0,1"))
                                                         (rule "applyEq" (formula "95") (term "0,1,0,1,0,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "95") (term "1,0,1,0,1"))
                                                         (rule "add_literals" (formula "95") (term "0,1,0,1"))
                                                         (rule "replace_known_left" (formula "95") (term "0,1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "95"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "3") (term "0,1"))
                                                         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                                                         (rule "leq_literals" (formula "12") (term "0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cut_direct" (formula "29") (term "0,0"))
                                                         (branch "CUT: result#13.<created> = TRUE TRUE"
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "1,0") (ifseqformula "44"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,0") (ifseqformula "22"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "89"))
                                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "16"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "1,0") (ifseqformula "58"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "div_axiom" (formula "94") (term "0,1") (inst "quotient=quotient_2"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "equal_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "applyEq" (formula "97") (term "0,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "19") (term "0,0"))
                                                            (rule "add_zero_left" (formula "19") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                            (rule "mul_literals" (formula "19") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "3"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "neg_literal" (formula "34") (term "0,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0"))
                                                            (rule "qeq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "replace_known_left" (formula "102") (term "1") (ifseqformula "34"))
                                                             (builtin "One Step Simplification" (formula "102"))
                                                            (rule "allRight" (formula "102") (inst "sk=f_0"))
                                                            (rule "allRight" (formula "102") (inst "sk=o_0"))
                                                            (rule "orRight" (formula "102"))
                                                            (rule "orRight" (formula "102"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "34"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "11"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                            (rule "add_literals" (formula "18") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "13"))
                                                            (rule "greater_literals" (formula "18") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1,0"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "33"))
                                                            (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "times_zero_2" (formula "2") (term "1,1"))
                                                            (rule "add_literals" (formula "2") (term "1"))
                                                            (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "times_zero_2" (formula "18") (term "1,1"))
                                                            (rule "add_zero_right" (formula "18") (term "1"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                            (rule "add_literals" (formula "4") (term "0,1"))
                                                            (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "30"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "pullOutSelect" (formula "98") (term "0") (inst "selectSK=f_0_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "55"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "42"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "21"))
                                                            (rule "eqSymm" (formula "99"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "97"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=f_0_1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "52"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "23"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "33"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "24"))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "100"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "25"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                                            (rule "simplifySelectOfAnon" (formula "2"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replaceKnownSelect_taclet00100000012120000100_16" (formula "2") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "26"))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "102"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "commute_and" (formula "102"))
                                                            (rule "shift_paren_and" (formula "103"))
                                                            (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "104") (term "0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "72")))
                                                               (rule "notRight" (formula "104"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "101")))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "103") (term "0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "103"))
                                                               (rule "false_right" (formula "103"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "orRight" (formula "72"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")))
                                                                  (rule "closeTrue" (formula "73"))
                                                               )
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "69"))
                                                                      (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "70")))
                                                                     (rule "closeTrue" (formula "74"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "cut_direct" (formula "71") (term "0,0"))
                                                                     (branch "CUT: o_0 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "false_right" (formula "72"))
                                                                        (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "101")))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                     (branch "CUT: o_0 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "notRight" (formula "72"))
                                                                        (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "72"))
                                                                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                                        (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")) (ifInst ""  (formula "102")))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: result#13.<created> = TRUE FALSE"
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "1,0") (ifseqformula "44"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "1,0") (ifseqformula "58"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,0") (ifseqformula "23"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "91"))
                                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "div_axiom" (formula "95") (term "0,1") (inst "quotient=quotient_2"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "equal_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "applyEq" (formula "98") (term "0,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                                                            (rule "mul_literals" (formula "17") (term "0,0"))
                                                            (rule "add_zero_left" (formula "17") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                            (rule "mul_literals" (formula "17") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                            (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "3"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "neg_literal" (formula "34") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0"))
                                                            (rule "qeq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "replace_known_left" (formula "103") (term "1") (ifseqformula "34"))
                                                             (builtin "One Step Simplification" (formula "103"))
                                                            (rule "allRight" (formula "103") (inst "sk=f_0"))
                                                            (rule "allRight" (formula "103") (inst "sk=o_0"))
                                                            (rule "orRight" (formula "103"))
                                                            (rule "orRight" (formula "103"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "34"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "11"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                            (rule "add_literals" (formula "18") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "13"))
                                                            (rule "greater_literals" (formula "18") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1,0"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "34") (term "0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "19") (term "1,1"))
                                                            (rule "add_literals" (formula "19") (term "1"))
                                                            (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                                            (rule "times_zero_2" (formula "2") (term "1,1"))
                                                            (rule "add_literals" (formula "2") (term "1"))
                                                            (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                            (rule "add_literals" (formula "4") (term "0,1"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "13"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "33"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "9"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=f_0_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=f_0_1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "56"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "51"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "43"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "22"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "99"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "52"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "23"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                            (rule "times_zero_1" (formula "18") (term "0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "33"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "24"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "101"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "25"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet10100000012120000100_15" (formula "1") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "26"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "103"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_and" (formula "103"))
                                                            (rule "shift_paren_and" (formula "104"))
                                                            (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                            (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                                            (rule "commute_or_2" (formula "5") (term "0,0,0,0,1,0,0"))
                                                            (rule "ifthenelse_split" (formula "6") (term "0"))
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "notLeft" (formula "7"))
                                                               (rule "notLeft" (formula "6"))
                                                               (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                                                               (rule "applyEqReverse" (formula "107") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "eqSymm" (formula "106"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "71")))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                               (rule "replace_known_right" (formula "105") (term "0,0,0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "72")))
                                                               (rule "notRight" (formula "105"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "106") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "105") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "102")))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                                                               (rule "applyEqReverse" (formula "106") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "eqSymm" (formula "105"))
                                                               (rule "replace_known_right" (formula "104") (term "0") (ifseqformula "71"))
                                                                (builtin "One Step Simplification" (formula "104"))
                                                               (rule "false_right" (formula "104"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "orRight" (formula "71"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                                  (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "70"))
                                                                   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "72")))
                                                                  (rule "closeTrue" (formula "73"))
                                                               )
                                                               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "cut_direct" (formula "71") (term "0,0"))
                                                                  (branch "CUT: o_0 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "72"))
                                                                     (rule "false_right" (formula "72"))
                                                                     (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "101")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch "CUT: o_0 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "72"))
                                                                     (rule "notRight" (formula "72"))
                                                                     (rule "replace_known_left" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "105") (term "1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "71"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                                     (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "102")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: result#6 = null FALSE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
                                                         (rule "expand_inInt" (formula "8"))
                                                         (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "inEqSimp_commuteLeq" (formula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                                         (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                                                         (rule "expand_inInt" (formula "37"))
                                                         (rule "replace_int_MIN" (formula "37") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "37") (term "1,0"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "39"))
                                                         (rule "leq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "qeq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                                         (rule "expand_inInt" (formula "50"))
                                                         (rule "replace_int_MIN" (formula "50") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "50") (term "1,0"))
                                                         (rule "andLeft" (formula "50"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "52"))
                                                         (rule "leq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                                         (rule "qeq_literals" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "div_axiom" (formula "90") (term "0,1,1") (inst "quotient=quotient_1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "applyEq" (formula "93") (term "0,1,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "93") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                                                         (rule "times_zero_1" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                         (rule "mul_literals" (formula "13") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "28") (term "0,0"))
                                                         (rule "add_zero_left" (formula "28") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "leq_literals" (formula "28") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "neg_literal" (formula "28") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "28"))
                                                         (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "14") (term "1,1"))
                                                         (rule "add_literals" (formula "14") (term "1"))
                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "2") (term "1,1"))
                                                         (rule "add_literals" (formula "2") (term "1"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "96") (term "1,1,1") (ifseqformula "8"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                         (rule "add_literals" (formula "4") (term "0,1"))
                                                         (rule "applyEq" (formula "1") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                                                         (rule "leq_literals" (formula "12") (term "0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "commute_and" (formula "93") (term "1"))
                                                         (rule "cut_direct" (formula "29") (term "0,0"))
                                                         (branch "CUT: result#13.<created> = TRUE TRUE"
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "cut_direct" (formula "35") (term "0,0"))
                                                            (branch "CUT: result#6.<created> = TRUE TRUE"
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "15"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "1,0") (ifseqformula "44"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "1,0") (ifseqformula "58"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "1,0") (ifseqformula "23"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "div_axiom" (formula "95") (term "0,0,1,1") (inst "quotient=quotient_2"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "98") (term "0,0,1,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "98") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "98") (term "1,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "98") (term "0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "98") (term "0,0,1,1"))
                                                               (rule "applyEq" (formula "98") (term "0,0,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "98") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "98") (term "1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "98") (term "1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "98") (term "1,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "98") (term "1,1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "98") (term "0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "98") (term "1,0,1,1,1"))
                                                               (rule "mul_literals" (formula "98") (term "0,0,1,1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                                                               (rule "times_zero_1" (formula "16") (term "0,0"))
                                                               (rule "add_zero_left" (formula "16") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                               (rule "mul_literals" (formula "16") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "12") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "leq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "replace_known_left" (formula "100") (term "0,1") (ifseqformula "12"))
                                                                (builtin "One Step Simplification" (formula "100"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "18") (term "1,1"))
                                                               (rule "add_literals" (formula "18") (term "1"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "add_zero_right" (formula "2") (term "1"))
                                                               (rule "applyEq" (formula "101") (term "0,1,0,1,1") (ifseqformula "13"))
                                                               (rule "times_zero_2" (formula "101") (term "1,0,1,1"))
                                                               (rule "add_literals" (formula "101") (term "0,1,1"))
                                                               (rule "replace_known_left" (formula "101") (term "1") (ifseqformula "14"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "allRight" (formula "101") (inst "sk=f_0"))
                                                               (rule "allRight" (formula "101") (inst "sk=o_0"))
                                                               (rule "orRight" (formula "101"))
                                                               (rule "orRight" (formula "101"))
                                                               (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                               (rule "add_literals" (formula "4") (term "0,1"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "11"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "32"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=f_0_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "55"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "21"))
                                                               (rule "eqSymm" (formula "100"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "98"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=f_0_1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "52"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "44"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "23"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "45"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "24"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "101"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "46"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                                               (rule "simplifySelectOfAnon" (formula "2"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replaceKnownSelect_taclet001100000012120000100_16" (formula "2") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "26"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "103"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "commute_and" (formula "103"))
                                                               (rule "shift_paren_and" (formula "104"))
                                                               (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "105") (term "0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "72")))
                                                                  (rule "notRight" (formula "105"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "102")))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "104") (term "0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "104"))
                                                                  (rule "false_right" (formula "104"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "71"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                                     (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "70")))
                                                                     (rule "closeTrue" (formula "73"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "69"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "69")))
                                                                        (rule "closeTrue" (formula "74"))
                                                                     )
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "cut_direct" (formula "71") (term "0,0"))
                                                                        (branch "CUT: o_0 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "false_right" (formula "72"))
                                                                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "3"))
                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "102")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: o_0 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "notRight" (formula "72"))
                                                                           (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                                           (rule "applyEqReverse" (formula "105") (term "1") (ifseqformula "4"))
                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "70"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "103")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: result#6.<created> = TRUE FALSE"
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "15"))
                                                               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "1,0") (ifseqformula "44"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "1,0") (ifseqformula "58"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "1,0") (ifseqformula "23"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "div_axiom" (formula "96") (term "0,0,1") (inst "quotient=quotient_2"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "99") (term "0,0,1,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "99") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "99") (term "1,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "99") (term "0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "99") (term "0,0,1,1"))
                                                               (rule "applyEq" (formula "99") (term "0,0,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "99") (term "1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "99") (term "1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "99") (term "1,1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "99") (term "0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "99") (term "1,0,1,1,1"))
                                                               (rule "mul_literals" (formula "99") (term "0,0,1,1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                                                               (rule "times_zero_1" (formula "16") (term "0,0"))
                                                               (rule "add_zero_left" (formula "16") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                               (rule "mul_literals" (formula "16") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "12") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0,0"))
                                                               (rule "leq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "replace_known_left" (formula "101") (term "0,1") (ifseqformula "12"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "2"))
                                                               (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "times_zero_2" (formula "19") (term "1,1"))
                                                               (rule "add_literals" (formula "19") (term "1"))
                                                               (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "add_zero_right" (formula "2") (term "1"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "4") (term "0,1"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "13"))
                                                               (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,1"))
                                                               (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "102") (term "0,1,0,1,1") (ifseqformula "13"))
                                                               (rule "times_zero_2" (formula "102") (term "1,0,1,1"))
                                                               (rule "add_zero_right" (formula "102") (term "0,1,1"))
                                                               (rule "replace_known_left" (formula "102") (term "1") (ifseqformula "14"))
                                                                (builtin "One Step Simplification" (formula "102"))
                                                               (rule "allRight" (formula "102") (inst "sk=f_0"))
                                                               (rule "allRight" (formula "102") (inst "sk=o_0"))
                                                               (rule "orRight" (formula "102"))
                                                               (rule "orRight" (formula "102"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "31"))
                                                               (rule "leq_literals" (formula "16") (term "0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "9"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=f_0_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "55"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "21"))
                                                               (rule "eqSymm" (formula "101"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "99"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "101") (term "0") (inst "selectSK=f_0_1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "52"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "44"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "23"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "45"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "24"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "102"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "46"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                                               (rule "simplifySelectOfAnon" (formula "2"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replaceKnownSelect_taclet101100000012120000100_16" (formula "2") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "26"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "104"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "commute_and" (formula "104"))
                                                               (rule "shift_paren_and" (formula "105"))
                                                               (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "106") (term "0,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "71")))
                                                                  (rule "notRight" (formula "106"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "105") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "103")))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "105") (term "0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "105"))
                                                                  (rule "false_right" (formula "105"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "70")))
                                                                     (rule "closeTrue" (formula "73"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "72"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                        (rule "replace_known_right" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                        (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "69")))
                                                                        (rule "closeTrue" (formula "74"))
                                                                     )
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "cut_direct" (formula "71") (term "0,0"))
                                                                        (branch "CUT: o_0 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "false_right" (formula "72"))
                                                                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "103")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: o_0 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "notRight" (formula "72"))
                                                                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "72"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")) (ifInst ""  (formula "104")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: result#13.<created> = TRUE FALSE"
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "cut_direct" (formula "35") (term "0,0"))
                                                            (branch "CUT: result#6.<created> = TRUE TRUE"
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "1,0") (ifseqformula "44"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,0") (ifseqformula "16"))
                                                               (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "92")))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0,0") (ifseqformula "58"))
                                                               (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "73"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "22"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "div_axiom" (formula "96") (term "0,0,1") (inst "quotient=quotient_2"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "99") (term "0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "99") (term "0,0,1,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "99") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "99") (term "1,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "99") (term "0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "99") (term "0,0,1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "99") (term "1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "99") (term "1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "99") (term "1,1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "99") (term "0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "99") (term "1,0,1,1,1"))
                                                               (rule "mul_literals" (formula "99") (term "0,0,1,1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                                                               (rule "times_zero_1" (formula "15") (term "0,0"))
                                                               (rule "add_zero_left" (formula "15") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                               (rule "mul_literals" (formula "15") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "11") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "replace_known_left" (formula "101") (term "0,1") (ifseqformula "11"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "3") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "3"))
                                                               (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "12"))
                                                               (rule "times_zero_2" (formula "2") (term "1,1"))
                                                               (rule "add_zero_right" (formula "2") (term "1"))
                                                               (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "12"))
                                                               (rule "mul_literals" (formula "18") (term "1,1"))
                                                               (rule "add_literals" (formula "18") (term "1"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "12"))
                                                               (rule "applyEqRigid" (formula "102") (term "0,1,0,1,1") (ifseqformula "12"))
                                                               (rule "mul_literals" (formula "102") (term "1,0,1,1"))
                                                               (rule "add_zero_right" (formula "102") (term "0,1,1"))
                                                               (rule "replace_known_left" (formula "102") (term "1") (ifseqformula "13"))
                                                                (builtin "One Step Simplification" (formula "102"))
                                                               (rule "allRight" (formula "102") (inst "sk=f_0"))
                                                               (rule "allRight" (formula "102") (inst "sk=o_0"))
                                                               (rule "orRight" (formula "102"))
                                                               (rule "orRight" (formula "102"))
                                                               (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "12"))
                                                               (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                               (rule "add_literals" (formula "4") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "12"))
                                                               (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0"))
                                                               (rule "qeq_literals" (formula "4") (term "0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "30"))
                                                               (rule "leq_literals" (formula "15") (term "0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=f_0_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "54"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "49"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "41"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "20"))
                                                               (rule "eqSymm" (formula "101"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "99"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "101") (term "0") (inst "selectSK=f_0_1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "56"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "51"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "43"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "22"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "44"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "23"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "102"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "45"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "24"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                                               (rule "simplifySelectOfAnon" (formula "2"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replaceKnownSelect_taclet011100000012120000100_16" (formula "2") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "25"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "104"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "commute_and" (formula "104"))
                                                               (rule "shift_paren_and" (formula "105"))
                                                               (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "106") (term "0,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "71")))
                                                                  (rule "notRight" (formula "106"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "105") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "103")))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "105") (term "0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "105"))
                                                                  (rule "false_right" (formula "105"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "71"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "71"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "70")))
                                                                     (rule "closeTrue" (formula "73"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "72"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "69")))
                                                                        (rule "closeTrue" (formula "74"))
                                                                     )
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "cut_direct" (formula "71") (term "0,0"))
                                                                        (branch "CUT: o_0 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "false_right" (formula "72"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "3"))
                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "103")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: o_0 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "notRight" (formula "72"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "70"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "104")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: result#6.<created> = TRUE FALSE"
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "1,0") (ifseqformula "44"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,0") (ifseqformula "16"))
                                                               (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "93"))
                                                                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "5")))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0,0") (ifseqformula "58"))
                                                               (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "74"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "22"))
                                                               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "24"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "div_axiom" (formula "97") (term "0,0,1") (inst "quotient=quotient_2"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "100") (term "0,0,1,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "100") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "100") (term "1,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "100") (term "0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "100") (term "0,0,1,1"))
                                                               (rule "applyEq" (formula "100") (term "0,0,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "100") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "100") (term "1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "100") (term "1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "100") (term "1,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "100") (term "1,1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "100") (term "0,1,1,1"))
                                                               (rule "mul_literals" (formula "100") (term "0,0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "100") (term "1,0,1,1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "11") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "replace_known_left" (formula "101") (term "0,1") (ifseqformula "11"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                               (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "3") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                               (rule "mul_literals" (formula "18") (term "0,0"))
                                                               (rule "add_zero_left" (formula "18") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                               (rule "mul_literals" (formula "18") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                               (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "3"))
                                                               (rule "applyEqRigid" (formula "19") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "times_zero_2" (formula "19") (term "1,1"))
                                                               (rule "add_literals" (formula "19") (term "1"))
                                                               (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "12"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "add_literals" (formula "2") (term "1"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "12"))
                                                               (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "4") (term "0,1"))
                                                               (rule "applyEq" (formula "103") (term "0,1,0,1,1") (ifseqformula "12"))
                                                               (rule "mul_literals" (formula "103") (term "1,0,1,1"))
                                                               (rule "add_zero_right" (formula "103") (term "0,1,1"))
                                                               (rule "replace_known_left" (formula "103") (term "1") (ifseqformula "13"))
                                                                (builtin "One Step Simplification" (formula "103"))
                                                               (rule "allRight" (formula "103") (inst "sk=f_0"))
                                                               (rule "allRight" (formula "103") (inst "sk=o_0"))
                                                               (rule "orRight" (formula "103"))
                                                               (rule "orRight" (formula "103"))
                                                               (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "12"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "12"))
                                                               (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "32"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "pullOutSelect" (formula "101") (term "0") (inst "selectSK=f_0_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "54"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "49"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "41"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "20"))
                                                               (rule "eqSymm" (formula "102"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "100"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "102") (term "0") (inst "selectSK=f_0_1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "56"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "51"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "43"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "22"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "44"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "23"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "103"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "45"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "24"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                                               (rule "simplifySelectOfAnon" (formula "2"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replaceKnownSelect_taclet111100000012120000100_16" (formula "2") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,1,0,0") (ifseqformula "25"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "105"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "commute_and" (formula "105"))
                                                               (rule "shift_paren_and" (formula "106"))
                                                               (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "109") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                                  (rule "replace_known_right" (formula "107") (term "0,1,0") (ifseqformula "72"))
                                                                   (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "71")))
                                                                  (rule "notRight" (formula "107"))
                                                                  (rule "replace_known_left" (formula "5") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "104")))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "106") (term "0") (ifseqformula "71"))
                                                                   (builtin "One Step Simplification" (formula "106"))
                                                                  (rule "false_right" (formula "106"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "71"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "72"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "71")))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "71"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "70")))
                                                                     (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "70"))
                                                                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "72")))
                                                                     (rule "closeTrue" (formula "73"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "orRight" (formula "71"))
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "69"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                                                        (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "70"))
                                                                         (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "69")))
                                                                        (rule "closeTrue" (formula "74"))
                                                                     )
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "cut_direct" (formula "71") (term "0,0"))
                                                                        (branch "CUT: o_0 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "false_right" (formula "72"))
                                                                           (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "applyEqReverse" (formula "106") (term "1") (ifseqformula "4"))
                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "104")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: o_0 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "notRight" (formula "72"))
                                                                           (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")))
                                                                           (rule "applyEqReverse" (formula "107") (term "1") (ifseqformula "4"))
                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "70"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "105")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Exceptional Post (append)"
                                                    (builtin "One Step Simplification" (formula "53"))
                                                    (builtin "One Step Simplification" (formula "76"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,1,1") (ifseqformula "45"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,1,1") (ifseqformula "40"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,1,1,0,1,1") (ifseqformula "45"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,1,1,0,1,1") (ifseqformula "40"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,0,0,0,1,1") (ifseqformula "12"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,0") (ifseqformula "53"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0") (ifseqformula "45"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0") (ifseqformula "40"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,0") (ifseqformula "12"))
                                                   (rule "andLeft" (formula "54"))
                                                   (rule "andLeft" (formula "55"))
                                                   (rule "andLeft" (formula "54"))
                                                   (rule "andLeft" (formula "56"))
                                                   (rule "notLeft" (formula "54"))
                                                   (rule "close" (formula "58") (ifseqformula "57"))
                                                )
                                                (branch "Pre (append)"
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "wellFormedAnonEQ" (formula "74") (term "0,1") (ifseqformula "45"))
                                                   (rule "wellFormedAnonEQ" (formula "74") (term "0,0,1") (ifseqformula "40"))
                                                   (rule "wellFormedAnonEQ" (formula "74") (term "0,0,0,1") (ifseqformula "32"))
                                                   (rule "wellFormedAnon" (formula "74") (term "0,0,0,0,1"))
                                                   (rule "wellFormedAnonEQ" (formula "74") (term "0,0,0,0,0,1") (ifseqformula "12"))
                                                   (rule "expand_inChar" (formula "74") (term "1,1"))
                                                   (rule "replace_char_MAX" (formula "74") (term "1,0,1,1"))
                                                   (rule "replace_char_MIN" (formula "74") (term "0,1,1,1"))
                                                   (rule "replace_known_left" (formula "74") (term "0,0,0,0,0,0,1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "44")))
                                                   (rule "inEqSimp_commuteLeq" (formula "74") (term "1,1"))
                                                   (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "74") (term "0"))
                                                   (rule "pullOutSelect" (formula "74") (term "0,0,0") (inst "selectSK=java_lang_StringBuilder_str_3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                                   (rule "replaceKnownSelect_taclet00012120000100_9" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00012120000100_10" (formula "1") (term "2,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "73"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (rule "applyEqReverse" (formula "75") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "commute_and" (formula "74"))
                                                   (rule "cut_direct" (formula "30") (term "0,0,0"))
                                                   (branch "CUT: result#6 = null TRUE"
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "cut_direct" (formula "24") (term "0,0,0"))
                                                      (branch "CUT: result#13 = null TRUE"
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "qeq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                                         (rule "expand_inInt" (formula "48"))
                                                         (rule "replace_int_MAX" (formula "48") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "48") (term "0,1"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "inEqSimp_commuteLeq" (formula "49"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                                         (rule "qeq_literals" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "leq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "allLeft" (formula "36") (inst "t=anonOut_second4Bits"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "69")) (ifInst ""  (formula "68")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "36") (term "1,0,0,0") (ifseqformula "67"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "66")))
                                                         (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                                         (rule "hideAuxiliaryEq" (formula "36"))
                                                         (rule "allLeft" (formula "38") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0020000012120000100_15" (formula "38") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0020000012120000100_16" (formula "38") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "allLeft" (formula "52") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "52") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "52") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "52") (term "0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "77") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "77"))
                                                         (rule "inEqSimp_geqRight" (formula "77"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "53") (term "0"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "allLeft" (formula "52") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "52") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "52") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "52") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "52") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "52") (term "1") (ifseqformula "30"))
                                                         (rule "qeq_literals" (formula "52") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "52"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                      (branch "CUT: result#13 = null FALSE"
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "qeq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                                         (rule "expand_inInt" (formula "48"))
                                                         (rule "replace_int_MAX" (formula "48") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "48") (term "0,1"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "inEqSimp_commuteLeq" (formula "49"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                                         (rule "qeq_literals" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "leq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "allLeft" (formula "36") (inst "t=anonOut_second4Bits"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "70")) (ifInst ""  (formula "69")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "36") (term "1,0,0,0") (ifseqformula "68"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "67")))
                                                         (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                                         (rule "hideAuxiliaryEq" (formula "36"))
                                                         (rule "allLeft" (formula "38") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet1020000012120000100_15" (formula "38") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1020000012120000100_16" (formula "38") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "allLeft" (formula "51") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "51") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "51") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq0" (formula "51") (term "0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "78") (term "0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "78"))
                                                         (rule "inEqSimp_leqRight" (formula "78"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "52") (term "0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "true_left" (formula "52"))
                                                         (rule "allLeft" (formula "53") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "53") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "53") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "53") (term "1,0") (ifseqformula "30"))
                                                         (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "53") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "53"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "52") (term "0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "closeFalse" (formula "52"))
                                                      )
                                                   )
                                                   (branch "CUT: result#6 = null FALSE"
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "cut_direct" (formula "24") (term "0,0,0"))
                                                      (branch "CUT: result#13 = null TRUE"
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "qeq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                                         (rule "expand_inInt" (formula "48"))
                                                         (rule "replace_int_MAX" (formula "48") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "48") (term "0,1"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "inEqSimp_commuteLeq" (formula "49"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                                         (rule "qeq_literals" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "leq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "allLeft" (formula "36") (inst "t=anonOut_second4Bits"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "70")) (ifInst ""  (formula "69")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "36") (term "1,0,0,0") (ifseqformula "68"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "67")))
                                                         (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                                         (rule "hideAuxiliaryEq" (formula "36"))
                                                         (rule "allLeft" (formula "38") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0120000012120000100_15" (formula "38") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0120000012120000100_16" (formula "38") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "allLeft" (formula "52") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "52") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "52") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "52") (term "0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "78") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "78"))
                                                         (rule "inEqSimp_geqRight" (formula "78"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "53") (term "0"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "allLeft" (formula "52") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "52") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "52") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "52") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "52") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "30"))
                                                         (rule "qeq_literals" (formula "52") (term "0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "closeFalse" (formula "52"))
                                                      )
                                                      (branch "CUT: result#13 = null FALSE"
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "qeq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                                         (rule "expand_inInt" (formula "48"))
                                                         (rule "replace_int_MAX" (formula "48") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "48") (term "0,1"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "inEqSimp_commuteLeq" (formula "49"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "50"))
                                                         (rule "leq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                                         (rule "qeq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "allLeft" (formula "37") (inst "t=anonOut_second4Bits"))
                                                         (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "71")) (ifInst ""  (formula "70")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "37") (term "1,0,0,0") (ifseqformula "69"))
                                                          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "68")))
                                                         (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                                         (rule "hideAuxiliaryEq" (formula "37"))
                                                         (rule "allLeft" (formula "36") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet1120000012120000100_15" (formula "36") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1120000012120000100_16" (formula "36") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "51") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "51") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "51") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq0" (formula "51") (term "0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "79"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "52") (term "0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "true_left" (formula "52"))
                                                         (rule "allLeft" (formula "53") (inst "t=anonOut_second4Bits"))
                                                         (rule "replaceKnownSelect_taclet0000012120000100_11" (formula "53") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_12" (formula "53") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "29"))
                                                         (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "53") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "53"))
                                                         (rule "qeq_literals" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "closeFalse" (formula "30"))
                                                      )
                                                   )
                                                )
                                                (branch "Null reference (var_3 = null)"
                                                    (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "58")))
                                                   (rule "closeTrue" (formula "74"))
                                                )
                                             )
                                             (branch "Null Reference (x_arr_1 = null)"
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Index Out of Bounds (x_arr_1 != null, but second4Bits Out of Bounds!)"
                                                 (builtin "One Step Simplification" (formula "74"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "49"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "50") (term "0,1,0,0,1,0,0") (ifseqformula "49"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                                (rule "blockThrow" (formula "74") (term "1"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "30"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "29") (term "0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "closeFalse" (formula "29"))
                                             )
                                          )
                                          (branch "Exceptional Post (hexCharacters)"
                                              (builtin "One Step Simplification" (formula "45"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,1,1,0,1,1") (ifseqformula "40"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                             (rule "expand_inChar" (formula "45") (term "1,0,0,1,0,1,1"))
                                             (rule "replace_char_MIN" (formula "45") (term "0,1,1,0,0,1,0,1,1"))
                                             (rule "replace_char_MAX" (formula "45") (term "1,0,1,0,0,1,0,1,1"))
                                             (rule "andLeft" (formula "45"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0") (ifseqformula "45"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0") (ifseqformula "40"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,1,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,0,1,0") (ifseqformula "12"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "notLeft" (formula "46"))
                                             (rule "close" (formula "49") (ifseqformula "48"))
                                          )
                                          (branch "Pre (hexCharacters)"
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "wellFormedAnonEQ" (formula "60") (ifseqformula "40"))
                                             (rule "wellFormedAnonEQ" (formula "60") (term "0") (ifseqformula "32"))
                                             (rule "wellFormedAnon" (formula "60") (term "0,0"))
                                             (rule "wellFormedAnonEQ" (formula "60") (term "0,0,0") (ifseqformula "12"))
                                             (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "39"))
                                              (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "4")) (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "31")))
                                             (rule "closeTrue" (formula "60"))
                                          )
                                       )
                                       (branch "Exceptional Post (append)"
                                           (builtin "One Step Simplification" (formula "40"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,0,1,1") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,1,1,0,1,1") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "12"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,0") (ifseqformula "40"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,1,0") (ifseqformula "12"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "notLeft" (formula "41"))
                                          (rule "close" (formula "45") (ifseqformula "44"))
                                       )
                                       (branch "Pre (append)"
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "wellFormedAnonEQ" (formula "50") (term "0,1") (ifseqformula "32"))
                                          (rule "wellFormedAnon" (formula "50") (term "0,0,1"))
                                          (rule "wellFormedAnonEQ" (formula "50") (term "0,0,0,1") (ifseqformula "12"))
                                          (rule "expand_inChar" (formula "50") (term "1,1"))
                                          (rule "replace_char_MIN" (formula "50") (term "0,1,1,1"))
                                          (rule "replace_char_MAX" (formula "50") (term "1,0,1,1"))
                                          (rule "replace_known_left" (formula "50") (term "1,0,0,1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "4")) (ifInst ""  (formula "11")) (ifInst ""  (formula "31")))
                                          (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1"))
                                          (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "50") (term "0"))
                                          (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_StringBuilder_str_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                          (rule "replaceKnownSelect_taclet100_2" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100_3" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                          (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "commute_and" (formula "50"))
                                          (rule "cut_direct" (formula "30") (term "0,0,0"))
                                          (branch "CUT: result#6 = null TRUE"
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "cut_direct" (formula "24") (term "0,0,0"))
                                             (branch "CUT: result#13 = null TRUE"
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                (rule "expand_inInt" (formula "35"))
                                                (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                                                (rule "leq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "inEqSimp_geqRight" (formula "51"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "37") (term "0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeFalse" (formula "37"))
                                             )
                                             (branch "CUT: result#13 = null FALSE"
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                (rule "expand_inInt" (formula "35"))
                                                (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                (rule "qeq_literals" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "leq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "inEqSimp_geqRight" (formula "52"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "37"))
                                                (rule "qeq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "closeFalse" (formula "27"))
                                             )
                                          )
                                          (branch "CUT: result#6 = null FALSE"
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "cut_direct" (formula "24") (term "0,0,0"))
                                             (branch "CUT: result#13 = null TRUE"
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                (rule "expand_inInt" (formula "35"))
                                                (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                                                (rule "leq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "inEqSimp_geqRight" (formula "52"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "37"))
                                                (rule "leq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "closeFalse" (formula "27"))
                                             )
                                             (branch "CUT: result#13 = null FALSE"
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                (rule "expand_inInt" (formula "35"))
                                                (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                                                (rule "leq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "qeq_literals" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "inEqSimp_geqRight" (formula "53"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "allLeft" (formula "37") (inst "t=anonOut_first4Bits"))
                                                (rule "replaceKnownSelect_taclet0012120000100_7" (formula "37") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_8" (formula "37") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "37"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "36") (term "0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "closeFalse" (formula "36"))
                                             )
                                          )
                                       )
                                       (branch "Null reference (var_1 = null)"
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "48")))
                                          (rule "closeTrue" (formula "50"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr = null)"
                                        (builtin "One Step Simplification" (formula "50"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr != null, but first4Bits Out of Bounds!)"
                                        (builtin "One Step Simplification" (formula "50"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0") (ifseqformula "36"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                       (rule "blockThrow" (formula "50") (term "1"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "blockThrow" (formula "50") (term "1"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Exceptional Post (hexCharacters)"
                                     (builtin "One Step Simplification" (formula "40"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "12"))
                                    (rule "expand_inChar" (formula "32") (term "1,0,0,1,0,1,1"))
                                    (rule "replace_char_MAX" (formula "32") (term "1,0,1,0,0,1,0,1,1"))
                                    (rule "replace_char_MIN" (formula "32") (term "0,1,1,0,0,1,0,1,1"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,1,0") (ifseqformula "12"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "33"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "notLeft" (formula "33"))
                                    (rule "close" (formula "36") (ifseqformula "35"))
                                 )
                                 (branch "Pre (hexCharacters)"
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "wellFormedAnon" (formula "38"))
                                    (rule "wellFormedAnonEQ" (formula "38") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "4")) (ifInst ""  (formula "11")))
                                    (rule "closeTrue" (formula "38"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Null Reference (_bytes_17 = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_bytes_17 != null, but i Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "blockThrow" (formula "27") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "closeFalse" (formula "19"))
                  )
               )
               (branch "if x_3 false"
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_bytes_17 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_bytes_17 = null)"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
          (builtin "One Step Simplification" (formula "19"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
         (rule "expand_inInt" (formula "13") (term "1"))
         (rule "replace_int_MIN" (formula "13") (term "0,1,1"))
         (rule "replace_int_MAX" (formula "13") (term "1,0,1"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "b_17_1"))
         (rule "blockEmpty" (formula "25") (term "1,0,1"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "14"))
         (rule "leq_literals" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=java_lang_StringBuilder_str_1"))
         (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "13"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "13"))
         (rule "simplifySelectOfAnon" (formula "13"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "23")))
         (rule "replaceKnownSelect_taclet00_0" (formula "13") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "13") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
         (rule "replace_known_left" (formula "13") (term "1,0,1,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "22")))
         (rule "elementOfSingleton" (formula "13") (term "0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "13"))
         (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "13"))
         (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "13"))
         (rule "hideAuxiliaryEq" (formula "13"))
         (rule "compound_less_than_comparison_2" (formula "24") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x"))
         (rule "assignment" (formula "24") (term "1"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_2"))
         (rule "assignment_read_length" (formula "24") (term "1"))
         (branch "Normal Execution (_bytes_17 != null)"
             (builtin "One Step Simplification" (formula "25"))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
            (rule "false_right" (formula "24"))
            (rule "less_than_comparison_simple" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "24") (term "1"))
            (rule "emptyModality" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "impRight" (formula "24"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "17"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq1" (formula "16"))
            (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "1,0"))
            (rule "times_zero_1" (formula "16") (term "0"))
            (rule "leq_literals" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "15"))
            (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "15"))
            (rule "returnUnfold" (formula "24") (term "1") (inst "#v0=s"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "s"))
            (rule "arrayLengthNotNegative" (formula "15") (term "0"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
            (rule "arrayLengthIsAnInt" (formula "15") (term "0"))
            (rule "expand_inInt" (formula "15"))
            (rule "replace_int_MIN" (formula "15") (term "0,1"))
            (rule "replace_int_MAX" (formula "15") (term "1,0"))
            (rule "andLeft" (formula "15"))
            (rule "inEqSimp_commuteLeq" (formula "16"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
            (rule "leq_literals" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "methodCallWithAssignment" (formula "26") (term "1") (inst "#v0=s_1"))
            (branch "Normal Execution (r_12 != null)"
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")))
               (rule "false_right" (formula "26"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "s_1"))
               (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_toString,savedHeapBefore_toString"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "returnUnfold" (formula "26") (term "1") (inst "#v0=s_2"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "s_2"))
               (rule "assignment_read_attribute_this" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "replaceKnownSelect_taclet200_2" (formula "26") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet200_3" (formula "26") (term "0,1,0"))
               (rule "methodCallReturn" (formula "26") (term "1"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "blockEmpty" (formula "26") (term "1"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallReturn" (formula "26") (term "1"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (rule "tryEmpty" (formula "26") (term "1"))
               (rule "emptyModality" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "15")) (ifInst ""  (formula "20")))
               (rule "allRight" (formula "26") (inst "sk=f_0"))
               (rule "allRight" (formula "26") (inst "sk=o_0"))
               (rule "orRight" (formula "26"))
               (rule "eqSymm" (formula "27"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "10"))
               (rule "eqSymm" (formula "28"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and_2" (formula "1") (term "0,0,0"))
               (rule "applyEq_and_gen3" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "commute_and" (formula "1") (term "0,0,0"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " f_0 = java.lang.StringBuilder::$str & o_0 = self_686 | !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) TRUE"
                  (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "eqSymm" (formula "28"))
                  (rule "orLeft" (formula "1"))
                  (branch "f_0 = java.lang.StringBuilder::$str & o_0 = self_686"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqRigid" (formula "29") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "16"))
                     (rule "eqSymm" (formula "29"))
                     (rule "applyEq" (formula "28") (term "1,0,0,1") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "notRight" (formula "28"))
                     (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "6"))
                     (rule "eqSymm" (formula "29"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "close" (formula "27") (ifseqformula "3"))
                  )
                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE)"
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "20"))
                     (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "20")))
                     (rule "closeTrue" (formula "29"))
                  )
               )
               (branch " f_0 = java.lang.StringBuilder::$str & o_0 = self_686 | !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_StringBuilder<<anonHeapFunction>> = TRUE) FALSE"
                  (rule "close" (formula "29") (ifseqformula "1"))
               )
            )
            (branch "Null Reference (r_12 = null)"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_bytes_17 = null)"
             (builtin "One Step Simplification" (formula "25"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (StringBuilder)"
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0,0") (ifseqformula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0,1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "8"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (StringBuilder)"
       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
      (rule "expand_inInt" (formula "7"))
      (rule "replace_int_MIN" (formula "7") (term "0,1"))
      (rule "replace_int_MAX" (formula "7") (term "1,0"))
      (rule "inEqSimp_homoInEq0" (formula "7") (term "1"))
      (rule "mul_literals" (formula "7") (term "1,0,1"))
      (rule "polySimp_addComm1" (formula "7") (term "0,1"))
      (rule "add_literals" (formula "7") (term "0,0,1"))
      (rule "add_zero_left" (formula "7") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0"))
      (rule "mod_axiom" (formula "7") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
      (rule "mod_axiom" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
      (rule "elimGcdGeq" (formula "7") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    length(bytes))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(length(bytes), Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
      (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
      (rule "leq_literals" (formula "7") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0"))
      (rule "add_literals" (formula "7") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "7") (term "0,0,0"))
      (rule "qeq_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "elimGcdLeq" (formula "7") (term "1") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))), length(bytes))") (inst "elimGcdLeftDiv=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(length(bytes), Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,1"))
      (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1"))
      (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,1"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,1"))
      (rule "add_literals" (formula "7") (term "1,1,0,1,0,1"))
      (rule "times_zero_1" (formula "7") (term "1,0,1,0,1"))
      (rule "add_zero_right" (formula "7") (term "0,1,0,1"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1"))
      (rule "add_literals" (formula "7") (term "1,1,0,0,0,1"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,1"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,1"))
      (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,1"))
      (rule "mul_literals" (formula "7") (term "0,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,1"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,1"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,1"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,1"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,1"))
      (rule "polySimp_pullOutFactor0" (formula "7") (term "0,1,0,1"))
      (rule "add_literals" (formula "7") (term "1,0,1,0,1"))
      (rule "times_zero_1" (formula "7") (term "0,1,0,1"))
      (rule "qeq_literals" (formula "7") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,1"))
      (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "7") (term "0,0,1"))
      (rule "leq_literals" (formula "7") (term "0,1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "div_axiom" (formula "7") (term "0,0,1") (inst "quotient=quotient_0"))
      (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
      (rule "qeq_literals" (formula "1") (term "0,1,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "equal_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
      (rule "add_literals" (formula "3") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "3") (term "1"))
      (rule "add_literals" (formula "3") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0"))
      (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1"))
      (rule "polySimp_rightDist" (formula "3") (term "1"))
      (rule "mul_literals" (formula "3") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
      (rule "mul_literals" (formula "10") (term "0,1,1"))
      (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=length(bytes)") (inst "elimGcd=Z(2(#))"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "qeq_literals" (formula "3") (term "0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "3"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_geqRight" (formula "10"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
      (rule "add_literals" (formula "4") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0"))
      (rule "add_zero_right" (formula "4") (term "0,0"))
      (rule "qeq_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "1"))
      (rule "greater_literals" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "polySimp_rightDist" (formula "3") (term "0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "mul_literals" (formula "3") (term "0,0"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "1,1,0"))
      (rule "times_zero_1" (formula "3") (term "1,0"))
      (rule "add_zero_right" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
)
(branch "Null Reference (_bytes_17 = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
   (rule "closeFalse" (formula "1"))
)
)
}
