\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 21:50:55 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 21:50:55 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:processCSVRecord(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:processCSVRecord(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "402135")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "record_15,password_19,self_183,exc_239,heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "exLeft" (formula "14") (inst "sk=i_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "eqSymm" (formula "12") (term "1,0,1,0"))
(rule "eqSymm" (formula "13") (term "1,0,1,0"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "18"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "17") (term "0,0,0,0,1,0,1,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,1,1,0,0,1,1,0"))
(rule "castedGetAny" (formula "16") (term "0"))
(rule "castedGetAny" (formula "12") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "12") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,1,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "assignment" (formula "21") (term "1"))
 (builtin "One Step Simplification" (formula "21"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "castDel" (formula "10") (term "0,0,0,0,0"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "10") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "eqSymm" (formula "10"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
(rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "10"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "exLeft" (formula "18") (inst "sk=i_1"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "exLeft" (formula "15") (inst "sk=i_2_0"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "castedGetAny" (formula "19") (term "0,0,1,0"))
(rule "castedGetAny" (formula "18") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "castedGetAny" (formula "22") (term "0"))
(rule "castedGetAny" (formula "17") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "applyEq" (formula "35") (term "0") (ifseqformula "13"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "9"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "commute_and" (formula "23") (term "0,0"))
(rule "commute_and" (formula "24") (term "0,0"))
(rule "commute_and" (formula "28") (term "0,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "8"))
(rule "true_left" (formula "8"))
(rule "commute_and" (formula "22") (term "0,0,1,0"))
(rule "commute_and" (formula "23") (term "0,0,1,0"))
(rule "commute_and_2" (formula "27") (term "0,1,1,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "8"))
(rule "true_left" (formula "8"))
(rule "commute_and" (formula "10") (term "1,0,0"))
(rule "commute_and" (formula "9") (term "0,0,0"))
(rule "commute_and" (formula "9") (term "1,0,0"))
(rule "commute_and" (formula "10") (term "0,0,0"))
(rule "methodBodyExpand" (formula "57") (term "1") (newnames "heapBefore_processCSVRecord,savedHeapBefore_processCSVRecord"))
 (builtin "One Step Simplification" (formula "57"))
 (builtin "Block Contract (Internal)" (formula "57") (newnames "anonOut_heap,exc#1,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "58"))
    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")) (ifInst ""  (formula "57")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
   (rule "true_left" (formula "27"))
   (rule "eqSymm" (formula "57") (term "1,0,0,1,0,1"))
   (rule "elementOfSingleton" (formula "57") (term "0,0,0,0,1,0,1"))
   (rule "variableDeclarationAssign" (formula "57") (term "1"))
   (rule "variableDeclaration" (formula "57") (term "1") (newnames "exc#1_1"))
   (rule "assignment" (formula "57") (term "1"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "commute_and" (formula "17") (term "0,0"))
   (rule "commute_and" (formula "16") (term "0,0"))
   (rule "commute_and" (formula "12") (term "0,0"))
   (rule "commute_and_2" (formula "21") (term "0,1,0"))
   (rule "commute_and_2" (formula "22") (term "0,1,0"))
   (rule "shift_paren_and" (formula "9") (term "0,0"))
   (rule "commute_and_2" (formula "9") (term "0,0,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0"))
   (rule "commute_and_2" (formula "10") (term "0,0,0"))
   (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
   (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
   (rule "charLiteral_to_int" (formula "26") (term "1,0,0,0,1,1,0"))
   (rule "lenNonNegative" (formula "24") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "seqGetAlphaCast" (formula "26") (term "0"))
   (rule "castedGetAny" (formula "26") (term "0"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "lenNonNegative" (formula "8") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
   (rule "ifUnfold" (formula "58") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "58") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_1" (formula "58") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "58") (term "1"))
   (rule "variableDeclaration" (formula "58") (term "1") (newnames "x_1"))
   (rule "compound_modulo_1" (formula "58") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "58") (term "1"))
   (rule "variableDeclaration" (formula "58") (term "1") (newnames "x_2"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "58") (term "1") (inst "#v0=c"))
   (rule "variableDeclaration" (formula "58") (term "1") (newnames "c_3"))
   (rule "assignment_read_attribute_this" (formula "58") (term "1"))
    (builtin "One Step Simplification" (formula "58"))
    (builtin "Use Operation Contract" (formula "58") (newnames "heapBefore_getCurrentLineNumber,result_199,exc_240") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
   (branch "Post (getCurrentLineNumber)"
       (builtin "One Step Simplification" (formula "59"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "expand_inLong" (formula "28") (term "1,0"))
      (rule "replace_long_MIN" (formula "28") (term "0,1,1,0"))
      (rule "replace_long_MAX" (formula "28") (term "1,0,1,0"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "30"))
      (rule "andLeft" (formula "29"))
      (rule "inEqSimp_commuteLeq" (formula "30"))
      (rule "assignment" (formula "62") (term "1"))
       (builtin "One Step Simplification" (formula "62"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "assignmentModulo" (formula "61") (term "1"))
       (builtin "One Step Simplification" (formula "61"))
      (rule "equal_literals" (formula "61") (term "0,0"))
       (builtin "One Step Simplification" (formula "61"))
      (rule "translateJavaMod" (formula "61") (term "0,1,0"))
      (rule "equality_comparison_simple" (formula "61") (term "1"))
       (builtin "One Step Simplification" (formula "61"))
      (rule "lenNonNegative" (formula "19") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "lenNonNegative" (formula "14") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "seqGetAlphaCast" (formula "22") (term "0"))
      (rule "castedGetAny" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "seqGetAlphaCast" (formula "16") (term "0"))
      (rule "castedGetAny" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "lenNonNegative" (formula "23") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "23"))
      (rule "ifSplit" (formula "64"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "65"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "activeUseStaticFieldWriteAccess" (formula "65") (term "1") (inst "#v0=s"))
         (rule "variableDeclarationAssign" (formula "65") (term "1"))
         (rule "variableDeclaration" (formula "65") (term "1") (newnames "s"))
         (rule "compound_addition_2" (formula "65") (term "1") (inst "#v1=s_2") (inst "#v0=s_1"))
         (rule "variableDeclarationAssign" (formula "65") (term "1"))
         (rule "variableDeclaration" (formula "65") (term "1") (newnames "s_1"))
         (rule "compound_addition_2" (formula "65") (term "1") (inst "#v1=x") (inst "#v0=s_3"))
         (rule "variableDeclarationAssign" (formula "65") (term "1"))
         (rule "variableDeclaration" (formula "65") (term "1") (newnames "s_3"))
         (rule "stringAssignment" (formula "65") (term "1"))
          (builtin "One Step Simplification" (formula "67"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "67") (term "1"))
         (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_3"))
         (rule "methodCallWithAssignmentUnfoldTarget" (formula "67") (term "1") (inst "#v0=c"))
         (rule "variableDeclaration" (formula "67") (term "1") (newnames "c_4"))
         (rule "assignment_read_attribute_this" (formula "67") (term "1"))
          (builtin "One Step Simplification" (formula "67"))
          (builtin "Use Operation Contract" (formula "67") (newnames "heapBefore_getCurrentLineNumber_0,result_200,exc_241") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
         (branch "Post (getCurrentLineNumber)"
             (builtin "One Step Simplification" (formula "68"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "expand_inLong" (formula "36") (term "1,0"))
            (rule "replace_long_MAX" (formula "36") (term "1,0,1,0"))
            (rule "replace_long_MIN" (formula "36") (term "0,1,1,0"))
            (rule "andLeft" (formula "36"))
            (rule "andLeft" (formula "36"))
            (rule "andLeft" (formula "38"))
            (rule "andLeft" (formula "37"))
            (rule "inEqSimp_commuteLeq" (formula "38"))
            (rule "assignment" (formula "71") (term "1"))
             (builtin "One Step Simplification" (formula "71"))
            (rule "stringConcatIntExpRight" (formula "71") (term "1") (inst "sk=sk_0"))
             (builtin "One Step Simplification" (formula "73"))
             (builtin "One Step Simplification" (formula "72"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
            (rule "variableDeclarationAssign" (formula "73") (term "1"))
            (rule "variableDeclaration" (formula "73") (term "1") (newnames "s_2"))
            (rule "stringAssignment" (formula "73") (term "1"))
             (builtin "One Step Simplification" (formula "75"))
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "notLeft" (formula "1"))
            (rule "stringConcat" (formula "75") (term "1") (inst "sk=sk_1"))
             (builtin "One Step Simplification" (formula "77"))
             (builtin "One Step Simplification" (formula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
            (rule "assignment_write_static_attribute" (formula "77") (term "1"))
             (builtin "One Step Simplification" (formula "77"))
            (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "3"))
            (rule "eqSeqConcat" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "add_literals" (formula "5") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "add_literals" (formula "5") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "add_literals" (formula "5") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "add_literals" (formula "5") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "add_literals" (formula "5") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "add_literals" (formula "5") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "add_literals" (formula "5") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "add_literals" (formula "5") (term "1,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "add_literals" (formula "4") (term "1,2,0"))
            (rule "add_literals" (formula "4") (term "2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "add_literals" (formula "3") (term "1,0,1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
            (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
            (rule "mul_literals" (formula "3") (term "1,1,1,1"))
            (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
            (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "2"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "78")))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "eqSeqConcat" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "polySimp_addComm0" (formula "1") (term "1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "1"))
            (rule "lenOfSeqConcat" (formula "3") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "lenOfSeqConcat" (formula "2") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "lenOfSeqConcat" (formula "1") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
            (rule "add_literals" (formula "3") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "add_literals" (formula "3") (term "1,0,1,0"))
            (rule "add_literals" (formula "3") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "add_literals" (formula "2") (term "1,0,2,0"))
            (rule "add_literals" (formula "2") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqSubEQ" (formula "2") (term "1,2,0") (ifseqformula "8"))
            (rule "polySimp_elimSub" (formula "2") (term "1,1,2,0"))
            (rule "mul_literals" (formula "2") (term "1,1,1,2,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,2,0"))
            (rule "lenOfSeqSubEQ" (formula "3") (term "1,1,0") (ifseqformula "8"))
            (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0"))
            (rule "mul_literals" (formula "3") (term "1,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,0,1"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "add_literals" (formula "1") (term "1,0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "add_literals" (formula "1") (term "1,0,1"))
            (rule "add_literals" (formula "1") (term "0,1"))
            (rule "lenOfSeqSubEQ" (formula "1") (term "1,1") (ifseqformula "8"))
            (rule "polySimp_elimSub" (formula "1") (term "1,1,1"))
            (rule "mul_literals" (formula "1") (term "1,1,1,1"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
            (rule "eqSeqConcat" (formula "7"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "lenOfSeqSub" (formula "9") (term "2,0"))
            (rule "sub_literals" (formula "9") (term "1,2,0"))
            (rule "less_literals" (formula "9") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "eqSeqSingleton" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "lenOfSeqSub" (formula "7") (term "0"))
            (rule "sub_literals" (formula "7") (term "1,0"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "lenOfSeqSub" (formula "8") (term "0"))
            (rule "sub_literals" (formula "8") (term "1,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "less_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "add_literals" (formula "7") (term "1,1"))
            (rule "add_literals" (formula "7") (term "1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "add_zero_left" (formula "7") (term "1,1,0"))
            (rule "sub_literals" (formula "7") (term "1,1,0,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "sub_literals" (formula "7") (term "1,0,0"))
            (rule "add_zero_left" (formula "7") (term "1,1,0"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "eqSeqConcat" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "lenOfSeqConcat" (formula "2") (term "0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "lenOfSeqConcat" (formula "3") (term "2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "lenOfSeqSub" (formula "2") (term "0"))
            (rule "polySimp_elimSub" (formula "2") (term "1,0"))
            (rule "times_zero_2" (formula "2") (term "1,1,0"))
            (rule "add_zero_right" (formula "2") (term "1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "0,2,0"))
            (rule "lenOfSeqSub" (formula "4") (term "2,0"))
            (rule "polySimp_elimSub" (formula "4") (term "1,2,0"))
            (rule "mul_literals" (formula "4") (term "1,1,2,0"))
            (rule "add_zero_right" (formula "4") (term "1,2,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "0,0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "0,2,0"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "add_literals" (formula "4") (term "1,0"))
            (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "add_literals" (formula "2") (term "1,0,1"))
            (rule "add_literals" (formula "2") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "add_literals" (formula "3") (term "1,2,0"))
            (rule "add_literals" (formula "3") (term "2,0"))
            (rule "lenOfSeqSubEQ" (formula "2") (term "1,1") (ifseqformula "11"))
            (rule "polySimp_elimSub" (formula "2") (term "1,1,1"))
            (rule "mul_literals" (formula "2") (term "1,1,1,1"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "eqSeqConcat" (formula "5"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "lenOfSeqSub" (formula "7") (term "2,0"))
            (rule "polySimp_elimSub" (formula "7") (term "1,2,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,2,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,2,0"))
            (rule "mul_literals" (formula "7") (term "0,1,1,2,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "1,2,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,1,2,0"))
            (rule "eqSeqSingleton" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqSub" (formula "6") (term "0"))
            (rule "sub_literals" (formula "6") (term "1,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "less_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "lenOfSeqSub" (formula "5") (term "0"))
            (rule "polySimp_elimSub" (formula "5") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,1,0"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "add_literals" (formula "5") (term "1,1"))
            (rule "add_literals" (formula "5") (term "1"))
            (rule "ifEqualsInteger" (formula "5"))
            (rule "equal_literals" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "replace_known_left" (formula "8") (term "0,2,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "eqSeqConcat" (formula "13"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "lenOfSeqSub" (formula "15") (term "2,0"))
            (rule "less_literals" (formula "15") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "sub_literals" (formula "15") (term "2,0"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addAssoc" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "eqSeqSingleton" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "lenOfSeqSub" (formula "13") (term "0"))
            (rule "sub_literals" (formula "13") (term "1,0"))
            (rule "less_literals" (formula "13") (term "0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "lenOfSeqSub" (formula "14") (term "0"))
            (rule "sub_literals" (formula "14") (term "1,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "equal_literals" (formula "14") (term "1"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "less_literals" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addAssoc" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addAssoc" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addAssoc" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addAssoc" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addAssoc" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "add_literals" (formula "13") (term "1,1"))
            (rule "add_literals" (formula "13") (term "1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "sub_literals" (formula "7") (term "1,1,0,0"))
            (rule "add_zero_left" (formula "7") (term "1,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "getOfSeqSub" (formula "13") (term "0"))
            (rule "castDel" (formula "13") (term "2,0"))
            (rule "sub_literals" (formula "13") (term "1,1,0,0"))
            (rule "leq_literals" (formula "13") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "add_zero_left" (formula "13") (term "1,1,0"))
            (rule "less_literals" (formula "13") (term "0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "eqSeqConcat" (formula "3"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "lenOfSeqSub" (formula "5") (term "2,0"))
            (rule "less_literals" (formula "5") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "sub_literals" (formula "5") (term "2,0"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "eqSeqSingleton" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "lenOfSeqSub" (formula "3") (term "0"))
            (rule "less_literals" (formula "3") (term "0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "sub_literals" (formula "3") (term "0"))
            (rule "lenOfSeqSub" (formula "4") (term "0"))
            (rule "less_literals" (formula "4") (term "0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "sub_literals" (formula "4") (term "0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "add_literals" (formula "3") (term "1,1"))
            (rule "add_literals" (formula "3") (term "1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "getOfSeqSub" (formula "8") (term "0"))
            (rule "castDel" (formula "8") (term "2,0"))
            (rule "add_zero_left" (formula "8") (term "1,1,0"))
            (rule "leq_literals" (formula "8") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "polySimp_elimSub" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,1,0,0"))
            (rule "getOfSeqSub" (formula "14") (term "0"))
            (rule "castDel" (formula "14") (term "2,0"))
            (rule "leq_literals" (formula "14") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "sub_literals" (formula "14") (term "1,0,0"))
            (rule "add_zero_left" (formula "14") (term "1,1,0"))
            (rule "less_literals" (formula "14") (term "0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "getOfSeqSub" (formula "3") (term "0"))
            (rule "castDel" (formula "3") (term "2,0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "sub_literals" (formula "3") (term "1,1,0,0"))
            (rule "leq_literals" (formula "3") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "less_literals" (formula "3") (term "0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "eqSeqConcat" (formula "9"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "lenOfSeqSub" (formula "11") (term "2,0"))
            (rule "polySimp_elimSub" (formula "11") (term "1,2,0"))
            (rule "mul_literals" (formula "11") (term "1,1,2,0"))
            (rule "polySimp_addComm1" (formula "11") (term "1,2,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,1,2,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,2,0"))
            (rule "lenOfSeqSub" (formula "9") (term "0"))
            (rule "polySimp_elimSub" (formula "9") (term "1,0"))
            (rule "mul_literals" (formula "9") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
            (rule "add_literals" (formula "9") (term "0,0,1,0"))
            (rule "eqSeqSingleton" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "polySimp_addAssoc" (formula "9") (term "1"))
            (rule "add_literals" (formula "9") (term "0,1"))
            (rule "lenOfSeqSub" (formula "10") (term "0"))
            (rule "less_literals" (formula "10") (term "0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "sub_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "polySimp_addAssoc" (formula "9") (term "1"))
            (rule "add_literals" (formula "9") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "add_literals" (formula "9") (term "1,1"))
            (rule "add_literals" (formula "9") (term "1"))
            (rule "ifEqualsInteger" (formula "9"))
            (rule "equal_literals" (formula "9") (term "1,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "replace_known_left" (formula "12") (term "0,2,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "eqSeqConcat" (formula "18"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "lenOfSeqSub" (formula "20") (term "2,0"))
            (rule "less_literals" (formula "20") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "sub_literals" (formula "20") (term "2,0"))
            (rule "lenOfSeqSub" (formula "18") (term "0"))
            (rule "less_literals" (formula "18") (term "0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "sub_literals" (formula "18") (term "0"))
            (rule "eqSeqSingleton" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_addAssoc" (formula "18") (term "1"))
            (rule "add_literals" (formula "18") (term "0,1"))
            (rule "lenOfSeqSub" (formula "19") (term "0"))
            (rule "sub_literals" (formula "19") (term "1,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "less_literals" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_addAssoc" (formula "18") (term "1"))
            (rule "add_literals" (formula "18") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_addAssoc" (formula "18") (term "1"))
            (rule "add_literals" (formula "18") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_addAssoc" (formula "18") (term "1"))
            (rule "add_literals" (formula "18") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_addAssoc" (formula "18") (term "1"))
            (rule "add_literals" (formula "18") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "add_literals" (formula "18") (term "1,1"))
            (rule "add_literals" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "getOfSeqSub" (formula "17") (term "0"))
            (rule "castDel" (formula "17") (term "2,0"))
            (rule "sub_literals" (formula "17") (term "1,1,0,0"))
            (rule "leq_literals" (formula "17") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "less_literals" (formula "17") (term "0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "add_literals" (formula "17") (term "1,0"))
            (rule "getOfSeqSub" (formula "3") (term "0"))
            (rule "castDel" (formula "3") (term "2,0"))
            (rule "leq_literals" (formula "3") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "add_zero_left" (formula "3") (term "1,1,0"))
            (rule "sub_literals" (formula "3") (term "1,0,0"))
            (rule "less_literals" (formula "3") (term "0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "getOfSeqSub" (formula "11") (term "0"))
            (rule "castDel" (formula "11") (term "2,0"))
            (rule "sub_literals" (formula "11") (term "1,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "1,1,0"))
            (rule "leq_literals" (formula "11") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "less_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "eqSeqConcat" (formula "4"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "lenOfSeqSub" (formula "6") (term "2,0"))
            (rule "sub_literals" (formula "6") (term "1,2,0"))
            (rule "less_literals" (formula "6") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "lenOfSeqSub" (formula "4") (term "0"))
            (rule "less_literals" (formula "4") (term "0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "sub_literals" (formula "4") (term "0"))
            (rule "eqSeqSingleton" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "lenOfSeqSub" (formula "5") (term "0"))
            (rule "less_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "sub_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "add_literals" (formula "4") (term "1,1"))
            (rule "add_literals" (formula "4") (term "1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "getOfSeqSub" (formula "19") (term "0"))
            (rule "castDel" (formula "19") (term "2,0"))
            (rule "leq_literals" (formula "19") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "add_literals" (formula "19") (term "1,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0"))
            (rule "less_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "getOfSeqSub" (formula "3") (term "0"))
            (rule "castDel" (formula "3") (term "2,0"))
            (rule "leq_literals" (formula "3") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "add_zero_left" (formula "3") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
            (rule "times_zero_2" (formula "3") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "3") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "12") (term "0"))
            (rule "castDel" (formula "12") (term "2,0"))
            (rule "add_zero_left" (formula "12") (term "1,1,0"))
            (rule "leq_literals" (formula "12") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
            (rule "getOfSeqSub" (formula "4") (term "0"))
            (rule "castDel" (formula "4") (term "2,0"))
            (rule "leq_literals" (formula "4") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "sub_literals" (formula "4") (term "1,0,0"))
            (rule "less_literals" (formula "4") (term "0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "eqSeqConcat" (formula "13"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "lenOfSeqSub" (formula "15") (term "2,0"))
            (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
            (rule "mul_literals" (formula "15") (term "1,1,2,0"))
            (rule "polySimp_addComm1" (formula "15") (term "1,2,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,1,2,0"))
            (rule "add_literals" (formula "15") (term "0,0,1,2,0"))
            (rule "lenOfSeqSub" (formula "13") (term "0"))
            (rule "polySimp_elimSub" (formula "13") (term "1,0"))
            (rule "mul_literals" (formula "13") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
            (rule "add_literals" (formula "13") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "eqSeqSingleton" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "polySimp_addAssoc" (formula "13") (term "1"))
            (rule "add_literals" (formula "13") (term "0,1"))
            (rule "lenOfSeqSub" (formula "14") (term "0"))
            (rule "less_literals" (formula "14") (term "0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "sub_literals" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "add_literals" (formula "13") (term "1,1"))
            (rule "add_literals" (formula "13") (term "1"))
            (rule "ifEqualsInteger" (formula "13"))
            (rule "equal_literals" (formula "13") (term "1,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "replace_known_left" (formula "16") (term "0,2,0") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "eqSeqConcat" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "lenOfSeqSub" (formula "25") (term "2,0"))
            (rule "less_literals" (formula "25") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "sub_literals" (formula "25") (term "2,0"))
            (rule "lenOfSeqConcat" (formula "23") (term "1,1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "polySimp_addAssoc" (formula "23") (term "1"))
            (rule "add_literals" (formula "23") (term "0,1"))
            (rule "eqSeqSingleton" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "lenOfSeqSub" (formula "23") (term "0"))
            (rule "sub_literals" (formula "23") (term "1,0"))
            (rule "less_literals" (formula "23") (term "0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "lenOfSeqSub" (formula "24") (term "0"))
            (rule "sub_literals" (formula "24") (term "1,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "equal_literals" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "less_literals" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "lenOfSeqConcat" (formula "23") (term "1,1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "polySimp_addAssoc" (formula "23") (term "1"))
            (rule "add_literals" (formula "23") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "23") (term "1,1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "polySimp_addAssoc" (formula "23") (term "1"))
            (rule "add_literals" (formula "23") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "23") (term "1,1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "polySimp_addAssoc" (formula "23") (term "1"))
            (rule "add_literals" (formula "23") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "23") (term "1,1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "add_literals" (formula "23") (term "1,1"))
            (rule "add_literals" (formula "23") (term "1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "getOfSeqSub" (formula "22") (term "0"))
            (rule "castDel" (formula "22") (term "2,0"))
            (rule "add_literals" (formula "22") (term "1,1,0"))
            (rule "sub_literals" (formula "22") (term "1,1,0,0"))
            (rule "leq_literals" (formula "22") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "less_literals" (formula "22") (term "0,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "getOfSeqSub" (formula "12") (term "1,0"))
            (rule "castDel" (formula "12") (term "2,1,0"))
            (rule "leq_literals" (formula "12") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "polySimp_elimSub" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "1,1,1,0"))
            (rule "add_literals" (formula "12") (term "0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0,1,0"))
            (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "getOfSeqSub" (formula "4") (term "0"))
            (rule "castDel" (formula "4") (term "2,0"))
            (rule "leq_literals" (formula "4") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "sub_literals" (formula "4") (term "1,0,0"))
            (rule "add_zero_left" (formula "4") (term "1,1,0"))
            (rule "less_literals" (formula "4") (term "0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "getOfSeqSub" (formula "15") (term "0"))
            (rule "castDel" (formula "15") (term "2,0"))
            (rule "sub_literals" (formula "15") (term "1,1,0,0"))
            (rule "leq_literals" (formula "15") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "add_zero_left" (formula "15") (term "1,1,0"))
            (rule "less_literals" (formula "15") (term "0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "eqSeqConcat" (formula "5"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "lenOfSeqSub" (formula "7") (term "2,0"))
            (rule "sub_literals" (formula "7") (term "1,2,0"))
            (rule "less_literals" (formula "7") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "lenOfSeqSub" (formula "5") (term "0"))
            (rule "sub_literals" (formula "5") (term "1,0"))
            (rule "less_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "eqSeqSingleton" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqSub" (formula "6") (term "0"))
            (rule "less_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "sub_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_addAssoc" (formula "5") (term "1"))
            (rule "add_literals" (formula "5") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "add_literals" (formula "5") (term "1,1"))
            (rule "add_literals" (formula "5") (term "1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "getOfSeqSub" (formula "24") (term "0"))
            (rule "castDel" (formula "24") (term "2,0"))
            (rule "add_zero_left" (formula "24") (term "1,1,0"))
            (rule "sub_literals" (formula "24") (term "1,1,0,0"))
            (rule "leq_literals" (formula "24") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "less_literals" (formula "24") (term "0,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "getOfSeqSub" (formula "23") (term "0"))
            (rule "castDel" (formula "23") (term "2,0"))
            (rule "add_literals" (formula "23") (term "1,1,0"))
            (rule "leq_literals" (formula "23") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "sub_literals" (formula "23") (term "1,0,0"))
            (rule "less_literals" (formula "23") (term "0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "getOfSeqSub" (formula "4") (term "0"))
            (rule "castDel" (formula "4") (term "2,0"))
            (rule "sub_literals" (formula "4") (term "1,1,0,0"))
            (rule "leq_literals" (formula "4") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "add_zero_right" (formula "4") (term "1,1,0"))
            (rule "less_literals" (formula "4") (term "0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "getOfSeqSub" (formula "16") (term "0"))
            (rule "castDel" (formula "16") (term "2,0"))
            (rule "add_zero_left" (formula "16") (term "1,1,0"))
            (rule "leq_literals" (formula "16") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
            (rule "getOfSeqSub" (formula "5") (term "0"))
            (rule "castDel" (formula "5") (term "2,0"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "add_zero_left" (formula "5") (term "1,1,0"))
            (rule "sub_literals" (formula "5") (term "1,0,0"))
            (rule "less_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "eqSeqConcat" (formula "17"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "lenOfSeqSub" (formula "19") (term "2,0"))
            (rule "polySimp_elimSub" (formula "19") (term "1,2,0"))
            (rule "mul_literals" (formula "19") (term "1,1,2,0"))
            (rule "polySimp_addComm1" (formula "19") (term "1,2,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,1,2,0"))
            (rule "add_literals" (formula "19") (term "0,0,1,2,0"))
            (rule "eqSeqSingleton" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "lenOfSeqSub" (formula "17") (term "0"))
            (rule "polySimp_elimSub" (formula "17") (term "1,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "17") (term "1,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "17") (term "1,1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "add_literals" (formula "17") (term "1,1"))
            (rule "add_literals" (formula "17") (term "1"))
            (rule "lenOfSeqSub" (formula "18") (term "0"))
            (rule "sub_literals" (formula "18") (term "1,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "less_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "ifEqualsInteger" (formula "17"))
            (rule "equal_literals" (formula "17") (term "1,1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "replace_known_left" (formula "20") (term "0,2,0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "eqSeqConcat" (formula "28"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "lenOfSeqSub" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,2,0"))
            (rule "less_literals" (formula "30") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "lenOfSeqConcat" (formula "28") (term "1,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_addAssoc" (formula "28") (term "1"))
            (rule "add_literals" (formula "28") (term "0,1"))
            (rule "eqSeqSingleton" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "lenOfSeqSub" (formula "28") (term "0"))
            (rule "less_literals" (formula "28") (term "0,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "sub_literals" (formula "28") (term "0"))
            (rule "lenOfSeqSub" (formula "29") (term "0"))
            (rule "sub_literals" (formula "29") (term "1,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "less_literals" (formula "29") (term "0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "lenOfSeqConcat" (formula "28") (term "1,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_addAssoc" (formula "28") (term "1"))
            (rule "add_literals" (formula "28") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "28") (term "1,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_addAssoc" (formula "28") (term "1"))
            (rule "add_literals" (formula "28") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "28") (term "1,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "add_literals" (formula "28") (term "1,1"))
            (rule "add_literals" (formula "28") (term "1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "getOfSeqSub" (formula "27") (term "0"))
            (rule "castDel" (formula "27") (term "2,0"))
            (rule "sub_literals" (formula "27") (term "1,1,0,0"))
            (rule "add_zero_left" (formula "27") (term "1,1,0"))
            (rule "leq_literals" (formula "27") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "less_literals" (formula "27") (term "0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "getOfSeqSub" (formula "26") (term "0"))
            (rule "castDel" (formula "26") (term "2,0"))
            (rule "add_literals" (formula "26") (term "1,1,0"))
            (rule "sub_literals" (formula "26") (term "1,1,0,0"))
            (rule "leq_literals" (formula "26") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "less_literals" (formula "26") (term "0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "getOfSeqSub" (formula "4") (term "0"))
            (rule "castDel" (formula "4") (term "2,0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "leq_literals" (formula "4") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
            (rule "times_zero_2" (formula "4") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "4") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "16") (term "1,0"))
            (rule "castDel" (formula "16") (term "2,1,0"))
            (rule "add_literals" (formula "16") (term "1,1,1,0"))
            (rule "leq_literals" (formula "16") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "polySimp_elimSub" (formula "16") (term "1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,1,0,1,0"))
            (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "getOfSeqSub" (formula "5") (term "0"))
            (rule "castDel" (formula "5") (term "2,0"))
            (rule "sub_literals" (formula "5") (term "1,1,0,0"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "less_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "getOfSeqSub" (formula "19") (term "0"))
            (rule "castDel" (formula "19") (term "2,0"))
            (rule "leq_literals" (formula "19") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "add_literals" (formula "19") (term "1,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0"))
            (rule "less_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "eqSeqConcat" (formula "6"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "lenOfSeqSub" (formula "8") (term "2,0"))
            (rule "sub_literals" (formula "8") (term "1,2,0"))
            (rule "less_literals" (formula "8") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "lenOfSeqSub" (formula "6") (term "0"))
            (rule "less_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "sub_literals" (formula "6") (term "0"))
            (rule "eqSeqSingleton" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_addAssoc" (formula "6") (term "1"))
            (rule "add_literals" (formula "6") (term "0,1"))
            (rule "lenOfSeqSub" (formula "7") (term "0"))
            (rule "sub_literals" (formula "7") (term "1,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "less_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_addAssoc" (formula "6") (term "1"))
            (rule "add_literals" (formula "6") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_addAssoc" (formula "6") (term "1"))
            (rule "add_literals" (formula "6") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_addAssoc" (formula "6") (term "1"))
            (rule "add_literals" (formula "6") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "add_literals" (formula "6") (term "1,1"))
            (rule "add_literals" (formula "6") (term "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "getOfSeqSub" (formula "29") (term "0"))
            (rule "castDel" (formula "29") (term "2,0"))
            (rule "leq_literals" (formula "29") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "add_zero_left" (formula "29") (term "1,1,0"))
            (rule "sub_literals" (formula "29") (term "1,0,0"))
            (rule "less_literals" (formula "29") (term "0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "getOfSeqSub" (formula "28") (term "0"))
            (rule "castDel" (formula "28") (term "2,0"))
            (rule "add_literals" (formula "28") (term "1,1,0"))
            (rule "sub_literals" (formula "28") (term "1,1,0,0"))
            (rule "leq_literals" (formula "28") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "less_literals" (formula "28") (term "0,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "getOfSeqSub" (formula "17") (term "1,0"))
            (rule "castDel" (formula "17") (term "2,1,0"))
            (rule "leq_literals" (formula "17") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "1,1,1,0"))
            (rule "add_literals" (formula "17") (term "0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "17") (term "0,1,0,1,0"))
            (rule "getOfSeqSub" (formula "5") (term "0"))
            (rule "castDel" (formula "5") (term "2,0"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "sub_literals" (formula "5") (term "1,0,0"))
            (rule "less_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "getOfSeqSub" (formula "20") (term "0"))
            (rule "castDel" (formula "20") (term "2,0"))
            (rule "leq_literals" (formula "20") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "add_zero_left" (formula "20") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
            (rule "mul_literals" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
            (rule "eqSeqConcat" (formula "21"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "add_literals" (formula "21") (term "1,0,0"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "lenOfSeqSub" (formula "23") (term "2,0"))
            (rule "polySimp_elimSub" (formula "23") (term "1,2,0"))
            (rule "mul_literals" (formula "23") (term "1,1,2,0"))
            (rule "polySimp_addComm1" (formula "23") (term "1,2,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,1,2,0"))
            (rule "add_literals" (formula "23") (term "0,0,1,2,0"))
            (rule "lenOfSeqSub" (formula "21") (term "0"))
            (rule "polySimp_elimSub" (formula "21") (term "1,0"))
            (rule "mul_literals" (formula "21") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,1,0"))
            (rule "eqSeqSingleton" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "eqSeqSingleton" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "ifEqualsInteger" (formula "21"))
            (rule "equal_literals" (formula "21") (term "1,1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "replace_known_left" (formula "25") (term "0,2,0,0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "replace_known_left" (formula "26") (term "0,2,0,0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "lenOfSeqSub" (formula "23") (term "0"))
            (rule "sub_literals" (formula "23") (term "1,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "less_literals" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "lenOfSeqSub" (formula "24") (term "0"))
            (rule "polySimp_elimSub" (formula "24") (term "1,0"))
            (rule "mul_literals" (formula "24") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,1,0"))
            (rule "ifEqualsInteger" (formula "24"))
            (rule "equal_literals" (formula "24") (term "1,1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "getOfSeqSub" (formula "6") (term "0"))
            (rule "castDel" (formula "6") (term "2,0"))
            (rule "leq_literals" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "sub_literals" (formula "6") (term "1,0,0"))
            (rule "less_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "eqSeqConcat" (formula "35"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "lenOfSeqSub" (formula "37") (term "2,0"))
            (rule "sub_literals" (formula "37") (term "1,2,0"))
            (rule "less_literals" (formula "37") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "lenOfSeqConcat" (formula "35") (term "1,1"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "polySimp_addAssoc" (formula "35") (term "1"))
            (rule "add_literals" (formula "35") (term "0,1"))
            (rule "eqSeqSingleton" (formula "36"))
            (rule "andLeft" (formula "36"))
            (rule "lenOfSeqSub" (formula "35") (term "0"))
            (rule "sub_literals" (formula "35") (term "1,0"))
            (rule "less_literals" (formula "35") (term "0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "lenOfSeqSub" (formula "36") (term "0"))
            (rule "less_literals" (formula "36") (term "0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "sub_literals" (formula "36") (term "0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "true_left" (formula "36"))
            (rule "lenOfSeqConcat" (formula "35") (term "1,1"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "polySimp_addAssoc" (formula "35") (term "1"))
            (rule "add_literals" (formula "35") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "35") (term "1,1"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "add_literals" (formula "35") (term "1,1"))
            (rule "add_literals" (formula "35") (term "1"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "add_zero_left" (formula "34") (term "1,1,0"))
            (rule "sub_literals" (formula "34") (term "1,1,0,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "5") (term "0"))
            (rule "castDel" (formula "5") (term "2,0"))
            (rule "sub_literals" (formula "5") (term "1,1,0,0"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "less_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "add_zero_right" (formula "5") (term "1,0"))
            (rule "getOfSeqSub" (formula "20") (term "1,0"))
            (rule "castDel" (formula "20") (term "2,1,0"))
            (rule "add_literals" (formula "20") (term "1,1,1,0"))
            (rule "leq_literals" (formula "20") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "polySimp_elimSub" (formula "20") (term "1,0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,1,0,1,0"))
            (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "getOfSeqSub" (formula "23") (term "0"))
            (rule "castDel" (formula "23") (term "2,0"))
            (rule "leq_literals" (formula "23") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "add_zero_left" (formula "23") (term "1,1,0"))
            (rule "sub_literals" (formula "23") (term "1,0,0"))
            (rule "less_literals" (formula "23") (term "0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "eqSeqConcat" (formula "7"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "lenOfSeqSub" (formula "9") (term "2,0"))
            (rule "less_literals" (formula "9") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "sub_literals" (formula "9") (term "2,0"))
            (rule "eqSeqSingleton" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "lenOfSeqSub" (formula "7") (term "0"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "sub_literals" (formula "7") (term "0"))
            (rule "lenOfSeqSub" (formula "8") (term "0"))
            (rule "less_literals" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "sub_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addAssoc" (formula "7") (term "1"))
            (rule "add_literals" (formula "7") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "add_literals" (formula "7") (term "1,1"))
            (rule "add_literals" (formula "7") (term "1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "getOfSeqSub" (formula "27") (term "0"))
            (rule "castDel" (formula "27") (term "2,0"))
            (rule "add_zero_left" (formula "27") (term "1,1,0"))
            (rule "leq_literals" (formula "27") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "polySimp_elimSub" (formula "27") (term "1,0,0"))
            (rule "mul_literals" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
            (rule "getOfSeqSub" (formula "6") (term "0"))
            (rule "castDel" (formula "6") (term "2,0"))
            (rule "add_zero_left" (formula "6") (term "1,1,0"))
            (rule "sub_literals" (formula "6") (term "1,1,0,0"))
            (rule "leq_literals" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "less_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "getOfSeqSub" (formula "36") (term "0"))
            (rule "castDel" (formula "36") (term "2,0"))
            (rule "add_zero_left" (formula "36") (term "1,1,0"))
            (rule "sub_literals" (formula "36") (term "1,1,0,0"))
            (rule "leq_literals" (formula "36") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "less_literals" (formula "36") (term "0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "getOfSeqSub" (formula "35") (term "0"))
            (rule "castDel" (formula "35") (term "2,0"))
            (rule "add_literals" (formula "35") (term "1,1,0"))
            (rule "leq_literals" (formula "35") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "sub_literals" (formula "35") (term "1,0,0"))
            (rule "less_literals" (formula "35") (term "0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "sub_literals" (formula "34") (term "1,1,0,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "5") (term "0"))
            (rule "castDel" (formula "5") (term "2,0"))
            (rule "add_zero_right" (formula "5") (term "1,1,0"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
            (rule "mul_literals" (formula "5") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "5") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "21") (term "1,0"))
            (rule "castDel" (formula "21") (term "2,1,0"))
            (rule "leq_literals" (formula "21") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "add_literals" (formula "21") (term "1,1,1,0"))
            (rule "polySimp_elimSub" (formula "21") (term "1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,1,0,1,0"))
            (rule "getOfSeqSub" (formula "24") (term "0"))
            (rule "castDel" (formula "24") (term "2,0"))
            (rule "leq_literals" (formula "24") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "add_literals" (formula "24") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
            (rule "mul_literals" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "add_zero_left" (formula "7") (term "1,1,0"))
            (rule "sub_literals" (formula "7") (term "1,0,0"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "eqSeqConcat" (formula "37"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "andLeft" (formula "37"))
            (rule "andLeft" (formula "37"))
            (rule "lenOfSeqSub" (formula "39") (term "2,0"))
            (rule "less_literals" (formula "39") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "sub_literals" (formula "39") (term "2,0"))
            (rule "eqSeqSingleton" (formula "38"))
            (rule "andLeft" (formula "38"))
            (rule "lenOfSeqSub" (formula "37") (term "0"))
            (rule "less_literals" (formula "37") (term "0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "sub_literals" (formula "37") (term "0"))
            (rule "lenOfSeqSub" (formula "38") (term "0"))
            (rule "less_literals" (formula "38") (term "0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "sub_literals" (formula "38") (term "0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "lenOfSeqConcat" (formula "37") (term "1,1"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "polySimp_addAssoc" (formula "37") (term "1"))
            (rule "add_literals" (formula "37") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "37") (term "1,1"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "add_literals" (formula "37") (term "1,1"))
            (rule "add_literals" (formula "37") (term "1"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "true_left" (formula "37"))
            (rule "getOfSeqSub" (formula "27") (term "1,0"))
            (rule "castDel" (formula "27") (term "2,1,0"))
            (rule "add_literals" (formula "27") (term "1,1,1,0"))
            (rule "leq_literals" (formula "27") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "polySimp_elimSub" (formula "27") (term "1,0,1,0"))
            (rule "mul_literals" (formula "27") (term "1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "27") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,1,0,1,0"))
            (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "getOfSeqSub" (formula "6") (term "0"))
            (rule "castDel" (formula "6") (term "2,0"))
            (rule "sub_literals" (formula "6") (term "1,1,0,0"))
            (rule "leq_literals" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "less_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "add_literals" (formula "6") (term "1,0"))
            (rule "getOfSeqSub" (formula "36") (term "0"))
            (rule "castDel" (formula "36") (term "2,0"))
            (rule "add_zero_left" (formula "36") (term "1,1,0"))
            (rule "sub_literals" (formula "36") (term "1,1,0,0"))
            (rule "leq_literals" (formula "36") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "less_literals" (formula "36") (term "0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "getOfSeqSub" (formula "35") (term "0"))
            (rule "castDel" (formula "35") (term "2,0"))
            (rule "sub_literals" (formula "35") (term "1,1,0,0"))
            (rule "add_literals" (formula "35") (term "1,1,0"))
            (rule "leq_literals" (formula "35") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "less_literals" (formula "35") (term "0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "getOfSeqSub" (formula "21") (term "1,1,0"))
            (rule "castDel" (formula "21") (term "2,1,1,0"))
            (rule "leq_literals" (formula "21") (term "0,0,1,1,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "polySimp_elimSub" (formula "21") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "1,1,1,1,0"))
            (rule "add_literals" (formula "21") (term "0,1,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "21") (term "0,1,0,1,1,0"))
            (rule "getOfSeqSub" (formula "24") (term "1,0"))
            (rule "castDel" (formula "24") (term "2,1,0"))
            (rule "add_literals" (formula "24") (term "1,1,1,0"))
            (rule "leq_literals" (formula "24") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0"))
            (rule "mul_literals" (formula "24") (term "1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,1,0,1,0"))
            (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "eqSeqConcat" (formula "8"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "lenOfSeqSub" (formula "10") (term "2,0"))
            (rule "sub_literals" (formula "10") (term "1,2,0"))
            (rule "less_literals" (formula "10") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "eqSeqSingleton" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "lenOfSeqConcat" (formula "8") (term "1,1"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "polySimp_addAssoc" (formula "8") (term "1"))
            (rule "add_literals" (formula "8") (term "0,1"))
            (rule "lenOfSeqSub" (formula "9") (term "0"))
            (rule "less_literals" (formula "9") (term "0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "sub_literals" (formula "9") (term "0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "lenOfSeqSub" (formula "8") (term "0"))
            (rule "less_literals" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "sub_literals" (formula "8") (term "0"))
            (rule "lenOfSeqConcat" (formula "8") (term "1,1"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "polySimp_addAssoc" (formula "8") (term "1"))
            (rule "add_literals" (formula "8") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "8") (term "1,1"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "add_literals" (formula "8") (term "1,1"))
            (rule "add_literals" (formula "8") (term "1"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "add_zero_left" (formula "7") (term "1,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "sub_literals" (formula "7") (term "1,0,0"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "getOfSeqSub" (formula "38") (term "0"))
            (rule "castDel" (formula "38") (term "2,0"))
            (rule "add_zero_left" (formula "38") (term "1,1,0"))
            (rule "sub_literals" (formula "38") (term "1,1,0,0"))
            (rule "leq_literals" (formula "38") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "less_literals" (formula "38") (term "0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "getOfSeqSub" (formula "28") (term "1,0"))
            (rule "castDel" (formula "28") (term "2,1,0"))
            (rule "add_literals" (formula "28") (term "1,1,1,0"))
            (rule "leq_literals" (formula "28") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,1,0"))
            (rule "mul_literals" (formula "28") (term "1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,0,1,0"))
            (rule "getOfSeqSub" (formula "6") (term "0"))
            (rule "castDel" (formula "6") (term "2,0"))
            (rule "leq_literals" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "sub_literals" (formula "6") (term "1,0,0"))
            (rule "less_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "getOfSeqSub" (formula "37") (term "0"))
            (rule "castDel" (formula "37") (term "2,0"))
            (rule "add_literals" (formula "37") (term "1,1,0"))
            (rule "leq_literals" (formula "37") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "sub_literals" (formula "37") (term "1,0,0"))
            (rule "less_literals" (formula "37") (term "0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "getOfSeqSub" (formula "36") (term "0"))
            (rule "castDel" (formula "36") (term "2,0"))
            (rule "add_literals" (formula "36") (term "1,1,0"))
            (rule "sub_literals" (formula "36") (term "1,1,0,0"))
            (rule "leq_literals" (formula "36") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "less_literals" (formula "36") (term "0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "getOfSeqSub" (formula "25") (term "1,0"))
            (rule "castDel" (formula "25") (term "2,1,0"))
            (rule "leq_literals" (formula "25") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "add_literals" (formula "25") (term "1,1,1,0"))
            (rule "polySimp_elimSub" (formula "25") (term "1,0,1,0"))
            (rule "mul_literals" (formula "25") (term "1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "25") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "25") (term "0,0,1,0,1,0"))
            (rule "hideAuxiliaryEqConcrete" (formula "30"))
            (rule "getOfSeqSub" (formula "8") (term "0"))
            (rule "castDel" (formula "8") (term "2,0"))
            (rule "leq_literals" (formula "8") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "add_literals" (formula "8") (term "1,1,0"))
            (rule "sub_literals" (formula "8") (term "1,0,0"))
            (rule "less_literals" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "eqSeqConcat" (formula "38"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "andLeft" (formula "38"))
            (rule "andLeft" (formula "38"))
            (rule "lenOfSeqSub" (formula "40") (term "2,0"))
            (rule "less_literals" (formula "40") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "sub_literals" (formula "40") (term "2,0"))
            (rule "lenOfSeqSub" (formula "38") (term "0"))
            (rule "less_literals" (formula "38") (term "0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "sub_literals" (formula "38") (term "0"))
            (rule "eqSeqSingleton" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "lenOfSeqConcat" (formula "38") (term "1,1"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "add_literals" (formula "38") (term "1,1"))
            (rule "add_literals" (formula "38") (term "1"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "lenOfSeqSub" (formula "38") (term "0"))
            (rule "sub_literals" (formula "38") (term "1,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "less_literals" (formula "38") (term "0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "sub_literals" (formula "7") (term "1,0,0"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "getOfSeqSub" (formula "37") (term "0"))
            (rule "castDel" (formula "37") (term "2,0"))
            (rule "sub_literals" (formula "37") (term "1,1,0,0"))
            (rule "leq_literals" (formula "37") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "add_zero_left" (formula "37") (term "1,1,0"))
            (rule "less_literals" (formula "37") (term "0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "getOfSeqSub" (formula "28") (term "1,1,0"))
            (rule "castDel" (formula "28") (term "2,1,1,0"))
            (rule "add_literals" (formula "28") (term "1,1,1,1,0"))
            (rule "leq_literals" (formula "28") (term "0,0,1,1,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,0"))
            (rule "mul_literals" (formula "28") (term "1,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,0,1,1,0"))
            (rule "getOfSeqSub" (formula "6") (term "0"))
            (rule "castDel" (formula "6") (term "2,0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "leq_literals" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "sub_literals" (formula "6") (term "1,0,0"))
            (rule "less_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "getOfSeqSub" (formula "36") (term "0"))
            (rule "castDel" (formula "36") (term "2,0"))
            (rule "add_literals" (formula "36") (term "1,1,0"))
            (rule "leq_literals" (formula "36") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "sub_literals" (formula "36") (term "1,0,0"))
            (rule "less_literals" (formula "36") (term "0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "getOfSeqSub" (formula "35") (term "0"))
            (rule "castDel" (formula "35") (term "2,0"))
            (rule "add_zero_right" (formula "35") (term "1,1,0"))
            (rule "leq_literals" (formula "35") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "sub_literals" (formula "35") (term "1,0,0"))
            (rule "less_literals" (formula "35") (term "0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "getOfSeqSub" (formula "25") (term "1,1,0"))
            (rule "castDel" (formula "25") (term "2,1,1,0"))
            (rule "leq_literals" (formula "25") (term "0,0,1,1,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "add_literals" (formula "25") (term "1,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "25") (term "1,0,1,1,0"))
            (rule "mul_literals" (formula "25") (term "1,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "25") (term "1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,1,0"))
            (rule "add_literals" (formula "25") (term "0,0,1,0,1,1,0"))
            (rule "getOfSeqSub" (formula "8") (term "0"))
            (rule "castDel" (formula "8") (term "2,0"))
            (rule "leq_literals" (formula "8") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "sub_literals" (formula "8") (term "1,0,0"))
            (rule "add_zero_left" (formula "8") (term "1,1,0"))
            (rule "less_literals" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "eqSeqConcat" (formula "9"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "lenOfSeqSub" (formula "11") (term "2,0"))
            (rule "sub_literals" (formula "11") (term "1,2,0"))
            (rule "less_literals" (formula "11") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "polySimp_addAssoc" (formula "9") (term "1"))
            (rule "add_literals" (formula "9") (term "0,1"))
            (rule "eqSeqSingleton" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "lenOfSeqSub" (formula "9") (term "0"))
            (rule "less_literals" (formula "9") (term "0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "sub_literals" (formula "9") (term "0"))
            (rule "lenOfSeqSub" (formula "10") (term "0"))
            (rule "sub_literals" (formula "10") (term "1,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "less_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "add_literals" (formula "9") (term "1,1"))
            (rule "add_literals" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "getOfSeqSub" (formula "39") (term "0"))
            (rule "castDel" (formula "39") (term "2,0"))
            (rule "leq_literals" (formula "39") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "add_zero_left" (formula "39") (term "1,1,0"))
            (rule "sub_literals" (formula "39") (term "1,0,0"))
            (rule "less_literals" (formula "39") (term "0,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "80"))
            (rule "true_left" (formula "80"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "sub_literals" (formula "7") (term "1,1,0,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "getOfSeqSub" (formula "38") (term "0"))
            (rule "castDel" (formula "38") (term "2,0"))
            (rule "add_literals" (formula "38") (term "1,1,0"))
            (rule "leq_literals" (formula "38") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "sub_literals" (formula "38") (term "1,0,0"))
            (rule "less_literals" (formula "38") (term "0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "getOfSeqSub" (formula "29") (term "1,1,1,0"))
            (rule "castDel" (formula "29") (term "2,1,1,1,0"))
            (rule "leq_literals" (formula "29") (term "0,0,1,1,1,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "add_literals" (formula "29") (term "1,1,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,1,0"))
            (rule "mul_literals" (formula "29") (term "1,1,0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "29") (term "1,0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,1,1,0"))
            (rule "add_literals" (formula "29") (term "0,0,1,0,1,1,1,0"))
            (rule "getOfSeqSub" (formula "6") (term "0"))
            (rule "castDel" (formula "6") (term "2,0"))
            (rule "add_zero_right" (formula "6") (term "1,1,0"))
            (rule "leq_literals" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
            (rule "times_zero_2" (formula "6") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "6") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "37") (term "0"))
            (rule "castDel" (formula "37") (term "2,0"))
            (rule "leq_literals" (formula "37") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "add_literals" (formula "37") (term "1,1,0"))
            (rule "sub_literals" (formula "37") (term "1,0,0"))
            (rule "less_literals" (formula "37") (term "0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "getOfSeqSub" (formula "26") (term "1,1,1,0"))
            (rule "castDel" (formula "26") (term "2,1,1,1,0"))
            (rule "leq_literals" (formula "26") (term "0,0,1,1,1,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "1,1,1,1,1,0"))
            (rule "add_literals" (formula "26") (term "0,1,1,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "1,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "26") (term "0,1,0,1,1,1,0"))
            (rule "getOfSeqSub" (formula "8") (term "0"))
            (rule "castDel" (formula "8") (term "2,0"))
            (rule "sub_literals" (formula "8") (term "1,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0"))
            (rule "leq_literals" (formula "8") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "less_literals" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "eqSeqConcat" (formula "40"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "add_literals" (formula "40") (term "1,0,0"))
            (rule "andLeft" (formula "40"))
            (rule "andLeft" (formula "40"))
            (rule "lenOfSeqSub" (formula "42") (term "2,0"))
            (rule "less_literals" (formula "42") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "sub_literals" (formula "42") (term "2,0"))
            (rule "lenOfSeqSub" (formula "40") (term "0"))
            (rule "sub_literals" (formula "40") (term "1,0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "less_literals" (formula "40") (term "0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "true_left" (formula "40"))
            (rule "eqSeqSingleton" (formula "40"))
            (rule "andLeft" (formula "40"))
            (rule "eqSeqSingleton" (formula "42"))
            (rule "andLeft" (formula "42"))
            (rule "lenOfSeqSub" (formula "40") (term "0"))
            (rule "sub_literals" (formula "40") (term "1,0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "equal_literals" (formula "40") (term "1"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "less_literals" (formula "40"))
            (rule "true_left" (formula "40"))
            (rule "lenOfSeqSub" (formula "41") (term "0"))
            (rule "less_literals" (formula "41") (term "0,0"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "sub_literals" (formula "41") (term "0"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "true_left" (formula "41"))
            (rule "getOfSeqSub" (formula "9") (term "0"))
            (rule "castDel" (formula "9") (term "2,0"))
            (rule "sub_literals" (formula "9") (term "1,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "1,1,0"))
            (rule "leq_literals" (formula "9") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "less_literals" (formula "9") (term "0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "getOfSeqSub" (formula "39") (term "0"))
            (rule "castDel" (formula "39") (term "2,0"))
            (rule "sub_literals" (formula "39") (term "1,1,0,0"))
            (rule "leq_literals" (formula "39") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "less_literals" (formula "39") (term "0,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "add_literals" (formula "39") (term "1,0"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "sub_literals" (formula "7") (term "1,0,0"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "getOfSeqSub" (formula "38") (term "0"))
            (rule "castDel" (formula "38") (term "2,0"))
            (rule "sub_literals" (formula "38") (term "1,1,0,0"))
            (rule "add_literals" (formula "38") (term "1,1,0"))
            (rule "leq_literals" (formula "38") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "less_literals" (formula "38") (term "0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "getOfSeqSub" (formula "29") (term "1,1,1,1,0"))
            (rule "castDel" (formula "29") (term "2,1,1,1,1,0"))
            (rule "leq_literals" (formula "29") (term "0,0,1,1,1,1,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,1,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "1,1,1,1,1,1,0"))
            (rule "add_literals" (formula "29") (term "0,1,1,1,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "1,0,1,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "29") (term "0,1,0,1,1,1,1,0"))
            (rule "getOfSeqSub" (formula "37") (term "0"))
            (rule "castDel" (formula "37") (term "2,0"))
            (rule "add_literals" (formula "37") (term "1,1,0"))
            (rule "sub_literals" (formula "37") (term "1,1,0,0"))
            (rule "leq_literals" (formula "37") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "less_literals" (formula "37") (term "0,0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "tryEmpty" (formula "115") (term "1"))
            (rule "blockEmptyLabel" (formula "115") (term "1"))
            (rule "blockEmpty" (formula "115") (term "1"))
            (rule "getOfSeqSub" (formula "8") (term "0"))
            (rule "castDel" (formula "8") (term "2,0"))
            (rule "sub_literals" (formula "8") (term "1,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0"))
            (rule "leq_literals" (formula "8") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "less_literals" (formula "8") (term "0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "eqSeqConcat" (formula "10"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "lenOfSeqSub" (formula "12") (term "2,0"))
            (rule "sub_literals" (formula "12") (term "1,2,0"))
            (rule "less_literals" (formula "12") (term "0,2,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "add_literals" (formula "10") (term "1,1"))
            (rule "add_literals" (formula "10") (term "1"))
            (rule "eqSeqSingleton" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "lenOfSeqSub" (formula "10") (term "0"))
            (rule "sub_literals" (formula "10") (term "1,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "less_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "lenOfSeqSub" (formula "10") (term "0"))
            (rule "sub_literals" (formula "10") (term "1,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "equal_literals" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "less_literals" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "getOfSeqSub" (formula "41") (term "0"))
            (rule "castDel" (formula "41") (term "2,0"))
            (rule "leq_literals" (formula "41") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "add_zero_left" (formula "41") (term "1,1,0"))
            (rule "sub_literals" (formula "41") (term "1,0,0"))
            (rule "less_literals" (formula "41") (term "0,0"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "getOfSeqSub" (formula "42") (term "0"))
            (rule "castDel" (formula "42") (term "2,0"))
            (rule "add_literals" (formula "42") (term "1,1,0"))
            (rule "leq_literals" (formula "42") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "sub_literals" (formula "42") (term "1,0,0"))
            (rule "less_literals" (formula "42") (term "0,0"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "getOfSeqSub" (formula "9") (term "0"))
            (rule "castDel" (formula "9") (term "2,0"))
            (rule "add_zero_left" (formula "9") (term "1,1,0"))
            (rule "leq_literals" (formula "9") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "sub_literals" (formula "9") (term "1,0,0"))
            (rule "less_literals" (formula "9") (term "0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "getOfSeqSub" (formula "40") (term "0"))
            (rule "castDel" (formula "40") (term "2,0"))
            (rule "sub_literals" (formula "40") (term "1,1,0,0"))
            (rule "add_literals" (formula "40") (term "1,1,0"))
            (rule "leq_literals" (formula "40") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "less_literals" (formula "40") (term "0,0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "getOfSeqSub" (formula "7") (term "0"))
            (rule "castDel" (formula "7") (term "2,0"))
            (rule "sub_literals" (formula "7") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "7") (term "1,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "less_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "getOfSeqSub" (formula "39") (term "0"))
            (rule "castDel" (formula "39") (term "2,0"))
            (rule "leq_literals" (formula "39") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "add_literals" (formula "39") (term "1,1,0"))
            (rule "sub_literals" (formula "39") (term "1,0,0"))
            (rule "less_literals" (formula "39") (term "0,0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "1") (ifseqformula "46"))
            (rule "replace_known_right" (formula "74") (term "0") (ifseqformula "98"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "getOfSeqSub" (formula "38") (term "0"))
            (rule "castDel" (formula "38") (term "2,0"))
            (rule "leq_literals" (formula "38") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "sub_literals" (formula "38") (term "1,0,0"))
            (rule "add_literals" (formula "38") (term "1,1,0"))
            (rule "less_literals" (formula "38") (term "0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "46"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "47"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "48"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "49"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "50"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "getOfSeqSub" (formula "13") (term "0"))
            (rule "castDel" (formula "13") (term "2,0"))
            (rule "sub_literals" (formula "13") (term "1,1,0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0"))
            (rule "leq_literals" (formula "13") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "less_literals" (formula "13") (term "0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "51"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "52"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "53"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "54"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "55"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "56"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "57"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "58"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "1") (ifseqformula "59"))
            (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "108"))
             (builtin "One Step Simplification" (formula "69"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "59"))
            (rule "applyEq" (formula "70") (term "1,0,1") (ifseqformula "71"))
            (rule "replace_known_left" (formula "70") (term "1") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "70"))
            (rule "true_left" (formula "70"))
            (rule "getOfSeqSub" (formula "23") (term "0"))
            (rule "castDel" (formula "23") (term "2,0"))
            (rule "sub_literals" (formula "23") (term "1,1,0,0"))
            (rule "add_zero_left" (formula "23") (term "1,1,0"))
            (rule "leq_literals" (formula "23") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "less_literals" (formula "23") (term "0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "59"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "60"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "61"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "62"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "63"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "getOfSeqSub" (formula "59") (term "0"))
            (rule "castDel" (formula "59") (term "2,0"))
            (rule "add_zero_left" (formula "59") (term "1,1,0"))
            (rule "sub_literals" (formula "59") (term "1,1,0,0"))
            (rule "leq_literals" (formula "59") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "less_literals" (formula "59") (term "0,0"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "getOfSeqSub" (formula "60") (term "0"))
            (rule "castDel" (formula "60") (term "2,0"))
            (rule "sub_literals" (formula "60") (term "1,1,0,0"))
            (rule "add_literals" (formula "60") (term "1,1,0"))
            (rule "leq_literals" (formula "60") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "less_literals" (formula "60") (term "0,0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "64"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "65"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "66"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "61") (term "0"))
            (rule "castDel" (formula "61") (term "2,0"))
            (rule "leq_literals" (formula "61") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "add_literals" (formula "61") (term "1,1,0"))
            (rule "sub_literals" (formula "61") (term "1,0,0"))
            (rule "less_literals" (formula "61") (term "0,0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "getOfSeqSub" (formula "28") (term "0"))
            (rule "castDel" (formula "28") (term "2,0"))
            (rule "add_literals" (formula "28") (term "1,1,0"))
            (rule "leq_literals" (formula "28") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,0"))
            (rule "times_zero_2" (formula "28") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "28") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "60") (term "0"))
            (rule "castDel" (formula "60") (term "2,0"))
            (rule "sub_literals" (formula "60") (term "1,1,0,0"))
            (rule "leq_literals" (formula "60") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "add_literals" (formula "60") (term "1,1,0"))
            (rule "less_literals" (formula "60") (term "0,0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "eqSeqConcat" (formula "32"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,0,0"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "eqSeqSingleton" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "eqSeqSingleton" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "lenOfSeqSub" (formula "32") (term "0"))
            (rule "sub_literals" (formula "32") (term "1,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "equal_literals" (formula "32") (term "1"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "lenOfSeqSub" (formula "34") (term "0"))
            (rule "polySimp_elimSub" (formula "34") (term "1,0"))
            (rule "mul_literals" (formula "34") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "34") (term "1,0"))
            (rule "lenOfSeqSub" (formula "35") (term "2,0,0"))
            (rule "sub_literals" (formula "35") (term "1,2,0,0"))
            (rule "less_literals" (formula "35") (term "0,2,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "lenOfSeqSub" (formula "32") (term "0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "sub_literals" (formula "32") (term "0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "lenOfSeqSub" (formula "33") (term "1,0,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "less_literals" (formula "33") (term "0,1,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "lenOfSeqSub" (formula "33") (term "1,0"))
            (rule "less_literals" (formula "33") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0"))
            (rule "add_literals" (formula "33") (term "0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "true_left" (formula "33"))
            (rule "getOfSeqSub" (formula "29") (term "0"))
            (rule "castDel" (formula "29") (term "2,0"))
            (rule "add_literals" (formula "29") (term "1,1,0"))
            (rule "leq_literals" (formula "29") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "sub_literals" (formula "29") (term "1,0,0"))
            (rule "less_literals" (formula "29") (term "0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "add_zero_left" (formula "31") (term "1,1,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "sub_literals" (formula "31") (term "1,0,0"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "63") (term "0"))
            (rule "castDel" (formula "63") (term "2,0"))
            (rule "add_literals" (formula "63") (term "1,1,0"))
            (rule "sub_literals" (formula "63") (term "1,1,0,0"))
            (rule "leq_literals" (formula "63") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "less_literals" (formula "63") (term "0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "getOfSeqSub" (formula "64") (term "0"))
            (rule "castDel" (formula "64") (term "2,0"))
            (rule "add_literals" (formula "64") (term "1,1,0"))
            (rule "sub_literals" (formula "64") (term "1,1,0,0"))
            (rule "leq_literals" (formula "64") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "less_literals" (formula "64") (term "0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "lenNonNegative" (formula "65") (term "2,0"))
            (rule "inEqSimp_commuteLeq" (formula "65"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "sub_literals" (formula "30") (term "1,0,0"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "66") (inst "iv=iv"))
            (rule "andLeft" (formula "66"))
            (rule "lenOfSeqSub" (formula "66") (term "0"))
            (rule "polySimp_elimSub" (formula "66") (term "1,0"))
            (rule "mul_literals" (formula "66") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "66") (term "1,0"))
            (rule "lenOfSeqSub" (formula "67") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "67") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "67") (term "1,1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "67") (term "1,1,1,0,0"))
            (rule "lenOfSeqSubEQ" (formula "66") (term "1") (ifseqformula "34"))
            (rule "eqSymm" (formula "66"))
            (rule "polySimp_elimSub" (formula "66") (term "1,0"))
            (rule "mul_literals" (formula "66") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "66") (term "1,0"))
            (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0"))
            (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "68"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "true_left" (formula "67"))
            (rule "getOfSeqSub" (formula "62") (term "0"))
            (rule "castDel" (formula "62") (term "2,0"))
            (rule "sub_literals" (formula "62") (term "1,1,0,0"))
            (rule "leq_literals" (formula "62") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "add_literals" (formula "62") (term "1,1,0"))
            (rule "less_literals" (formula "62") (term "0,0"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "getOfSeqSub" (formula "61") (term "0"))
            (rule "castDel" (formula "61") (term "2,0"))
            (rule "leq_literals" (formula "61") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "sub_literals" (formula "61") (term "1,0,0"))
            (rule "add_literals" (formula "61") (term "1,1,0"))
            (rule "less_literals" (formula "61") (term "0,0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_zero_right" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "charLiteral_to_int" (formula "55") (term "1"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "29") (term "0"))
            (rule "castDel" (formula "29") (term "2,0"))
            (rule "add_literals" (formula "29") (term "1,1,0"))
            (rule "sub_literals" (formula "29") (term "1,1,0,0"))
            (rule "leq_literals" (formula "29") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "less_literals" (formula "29") (term "0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "sub_literals" (formula "31") (term "1,0,0"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "63") (term "0"))
            (rule "castDel" (formula "63") (term "2,0"))
            (rule "sub_literals" (formula "63") (term "1,1,0,0"))
            (rule "add_literals" (formula "63") (term "1,1,0"))
            (rule "leq_literals" (formula "63") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "less_literals" (formula "63") (term "0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "getOfSeqSub" (formula "64") (term "0"))
            (rule "castDel" (formula "64") (term "2,0"))
            (rule "sub_literals" (formula "64") (term "1,1,0,0"))
            (rule "leq_literals" (formula "64") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "less_literals" (formula "64") (term "0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "add_literals" (formula "64") (term "1,0"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "62") (term "0"))
            (rule "castDel" (formula "62") (term "2,0"))
            (rule "leq_literals" (formula "62") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "add_literals" (formula "62") (term "1,1,0"))
            (rule "sub_literals" (formula "62") (term "1,0,0"))
            (rule "less_literals" (formula "62") (term "0,0"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "getOfSeqSub" (formula "61") (term "0"))
            (rule "castDel" (formula "61") (term "2,0"))
            (rule "sub_literals" (formula "61") (term "1,1,0,0"))
            (rule "leq_literals" (formula "61") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "less_literals" (formula "61") (term "0,0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "add_zero_right" (formula "61") (term "1,0"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "add_zero_left" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "lenNonNegative" (formula "22") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "add_zero_right" (formula "30") (term "1,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "polySimp_elimSub" (formula "30") (term "1,0,0"))
            (rule "times_zero_2" (formula "30") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "64") (term "0"))
            (rule "castDel" (formula "64") (term "2,0"))
            (rule "sub_literals" (formula "64") (term "1,1,0,0"))
            (rule "leq_literals" (formula "64") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "less_literals" (formula "64") (term "0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "add_literals" (formula "64") (term "1,0"))
            (rule "getOfSeqSub" (formula "65") (term "0"))
            (rule "castDel" (formula "65") (term "2,0"))
            (rule "sub_literals" (formula "65") (term "1,1,0,0"))
            (rule "leq_literals" (formula "65") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "less_literals" (formula "65") (term "0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "add_literals" (formula "65") (term "1,0"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "sub_literals" (formula "31") (term "1,0,0"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "63") (term "0"))
            (rule "castDel" (formula "63") (term "2,0"))
            (rule "add_literals" (formula "63") (term "1,1,0"))
            (rule "leq_literals" (formula "63") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "sub_literals" (formula "63") (term "1,0,0"))
            (rule "less_literals" (formula "63") (term "0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "sub_literals" (formula "34") (term "1,1,0,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "seqGetAlphaCast" (formula "56") (term "0"))
            (rule "castDel" (formula "56") (term "0"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "true_left" (formula "56"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,0"))
            (rule "getOfSeqSub" (formula "64") (term "0"))
            (rule "castDel" (formula "64") (term "2,0"))
            (rule "leq_literals" (formula "64") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "add_literals" (formula "64") (term "1,1,0"))
            (rule "sub_literals" (formula "64") (term "1,0,0"))
            (rule "less_literals" (formula "64") (term "0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "getOfSeqSub" (formula "65") (term "0"))
            (rule "castDel" (formula "65") (term "2,0"))
            (rule "sub_literals" (formula "65") (term "1,1,0,0"))
            (rule "leq_literals" (formula "65") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "less_literals" (formula "65") (term "0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "add_literals" (formula "65") (term "1,0"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "63") (term "0"))
            (rule "castDel" (formula "63") (term "2,0"))
            (rule "add_literals" (formula "63") (term "1,1,0"))
            (rule "leq_literals" (formula "63") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "sub_literals" (formula "63") (term "1,0,0"))
            (rule "less_literals" (formula "63") (term "0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "sub_literals" (formula "34") (term "1,0,0"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "64") (term "0"))
            (rule "castDel" (formula "64") (term "2,0"))
            (rule "sub_literals" (formula "64") (term "1,1,0,0"))
            (rule "add_literals" (formula "64") (term "1,1,0"))
            (rule "leq_literals" (formula "64") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "less_literals" (formula "64") (term "0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "getOfSeqSub" (formula "65") (term "0"))
            (rule "castDel" (formula "65") (term "2,0"))
            (rule "leq_literals" (formula "65") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "sub_literals" (formula "65") (term "1,0,0"))
            (rule "add_literals" (formula "65") (term "1,1,0"))
            (rule "less_literals" (formula "65") (term "0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "charLiteral_to_int" (formula "38") (term "1"))
            (rule "ifEqualsInteger" (formula "38"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "31") (term "1,1,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "63") (term "0"))
            (rule "castDel" (formula "63") (term "2,0"))
            (rule "leq_literals" (formula "63") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "add_literals" (formula "63") (term "1,1,0"))
            (rule "sub_literals" (formula "63") (term "1,0,0"))
            (rule "less_literals" (formula "63") (term "0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
            (rule "andLeft" (formula "35"))
            (rule "lenOfSeqSub" (formula "36") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "36") (term "1,1,1,0,0"))
            (rule "lenOfSeqSub" (formula "35") (term "0"))
            (rule "polySimp_elimSub" (formula "35") (term "1,0"))
            (rule "mul_literals" (formula "35") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "35") (term "1,0"))
            (rule "lenOfSeqSubEQ" (formula "35") (term "1") (ifseqformula "37"))
            (rule "eqSymm" (formula "35"))
            (rule "polySimp_elimSub" (formula "35") (term "1,0"))
            (rule "mul_literals" (formula "35") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "35") (term "1,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
            (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "substringSubstring" (formula "35") (term "0") (inst "newSym=newSym_0"))
            (rule "add_zero_right" (formula "35") (term "1,0,1,1"))
            (rule "add_zero_left" (formula "35") (term "2,0,1,1"))
            (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "qeq_literals" (formula "35") (term "1,0,0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "polySimp_elimSub" (formula "35") (term "1,1,0"))
            (rule "times_zero_2" (formula "35") (term "1,1,1,0"))
            (rule "add_zero_right" (formula "35") (term "1,1,0"))
            (rule "applyEq" (formula "35") (term "0,0,1") (ifseqformula "36"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "sub_literals" (formula "34") (term "1,1,0,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "65") (term "0"))
            (rule "castDel" (formula "65") (term "2,0"))
            (rule "add_literals" (formula "65") (term "1,1,0"))
            (rule "leq_literals" (formula "65") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "sub_literals" (formula "65") (term "1,0,0"))
            (rule "less_literals" (formula "65") (term "0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "getOfSeqSub" (formula "66") (term "0"))
            (rule "castDel" (formula "66") (term "2,0"))
            (rule "sub_literals" (formula "66") (term "1,1,0,0"))
            (rule "add_literals" (formula "66") (term "1,1,0"))
            (rule "leq_literals" (formula "66") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "less_literals" (formula "66") (term "0,0"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "add_zero_right" (formula "31") (term "1,1,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "polySimp_elimSub" (formula "31") (term "1,0,0"))
            (rule "mul_literals" (formula "31") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "31") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "sub_literals" (formula "34") (term "1,1,0,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "charLiteral_to_int" (formula "58") (term "1"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "65") (term "0"))
            (rule "castDel" (formula "65") (term "2,0"))
            (rule "sub_literals" (formula "65") (term "1,1,0,0"))
            (rule "leq_literals" (formula "65") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "add_literals" (formula "65") (term "1,1,0"))
            (rule "less_literals" (formula "65") (term "0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "getOfSeqSub" (formula "66") (term "0"))
            (rule "castDel" (formula "66") (term "2,0"))
            (rule "sub_literals" (formula "66") (term "1,1,0,0"))
            (rule "leq_literals" (formula "66") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "add_literals" (formula "66") (term "1,1,0"))
            (rule "less_literals" (formula "66") (term "0,0"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "1,0,0"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "65") (term "0"))
            (rule "castDel" (formula "65") (term "2,0"))
            (rule "add_literals" (formula "65") (term "1,1,0"))
            (rule "sub_literals" (formula "65") (term "1,1,0,0"))
            (rule "leq_literals" (formula "65") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "less_literals" (formula "65") (term "0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "getOfSeqSub" (formula "66") (term "0"))
            (rule "castDel" (formula "66") (term "2,0"))
            (rule "add_zero_right" (formula "66") (term "1,1,0"))
            (rule "sub_literals" (formula "66") (term "1,1,0,0"))
            (rule "leq_literals" (formula "66") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "less_literals" (formula "66") (term "0,0"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "charLiteral_to_int" (formula "25") (term "1"))
            (rule "ifEqualsInteger" (formula "25"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "sub_literals" (formula "34") (term "1,1,0,0"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "add_zero_right" (formula "32") (term "1,1,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "polySimp_elimSub" (formula "32") (term "1,0,0"))
            (rule "times_zero_2" (formula "32") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "32") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "1,0,0"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_zero_right" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "add_literals" (formula "34") (term "1,1,0"))
            (rule "sub_literals" (formula "34") (term "1,0,0"))
            (rule "less_literals" (formula "34") (term "0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
            (rule "mul_literals" (formula "33") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "33") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "34") (term "0"))
            (rule "castDel" (formula "34") (term "2,0"))
            (rule "add_zero_right" (formula "34") (term "1,1,0"))
            (rule "leq_literals" (formula "34") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "polySimp_elimSub" (formula "34") (term "1,0,0"))
            (rule "times_zero_2" (formula "34") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "34") (term "1,0,0"))
            (rule "seqGetAlphaCast" (formula "58") (term "0"))
            (rule "castDel" (formula "58") (term "0"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "charLiteral_to_int" (formula "42") (term "1"))
            (rule "ifEqualsInteger" (formula "42"))
            (rule "charLiteral_to_int" (formula "59") (term "1"))
            (rule "charLiteral_to_int" (formula "26") (term "1"))
            (rule "ifEqualsInteger" (formula "26"))
            (rule "charLiteral_to_int" (formula "45") (term "1"))
            (rule "ifEqualsInteger" (formula "45"))
            (rule "ifEqualsInteger" (formula "45") (term "1,0"))
            (rule "seqGetAlphaCast" (formula "59") (term "0"))
            (rule "castDel" (formula "59") (term "0"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "true_left" (formula "59"))
            (rule "charLiteral_to_int" (formula "60") (term "1"))
            (rule "charLiteral_to_int" (formula "27") (term "1"))
            (rule "ifEqualsInteger" (formula "27"))
            (rule "charLiteral_to_int" (formula "48") (term "1"))
            (rule "ifEqualsInteger" (formula "48"))
            (rule "ifEqualsInteger" (formula "48") (term "1,0"))
            (rule "ifEqualsInteger" (formula "48") (term "1,0,1,0"))
            (rule "seqGetAlphaCast" (formula "60") (term "0"))
            (rule "castDel" (formula "60") (term "0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "true_left" (formula "60"))
            (rule "charLiteral_to_int" (formula "61") (term "1"))
            (rule "charLiteral_to_int" (formula "28") (term "1"))
            (rule "ifEqualsInteger" (formula "28"))
            (rule "charLiteral_to_int" (formula "51") (term "1"))
            (rule "ifEqualsInteger" (formula "51"))
            (rule "ifEqualsInteger" (formula "51") (term "1,0"))
            (rule "ifEqualsInteger" (formula "51") (term "1,0,1,0"))
            (rule "ifEqualsInteger" (formula "51") (term "1,0,1,0,1,0"))
            (rule "charLiteral_to_int" (formula "54") (term "1"))
            (rule "ifEqualsInteger" (formula "54"))
            (rule "ifEqualsInteger" (formula "54") (term "1,0"))
            (rule "ifEqualsInteger" (formula "54") (term "1,0,1,0"))
            (rule "ifEqualsInteger" (formula "54") (term "1,0,1,0,1,0"))
            (rule "ifEqualsInteger" (formula "54") (term "1,0,1,0,1,0,1,0"))
            (rule "seqGetAlphaCast" (formula "61") (term "0"))
            (rule "castDel" (formula "61") (term "0"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "true_left" (formula "61"))
            (rule "methodCallEmpty" (formula "144") (term "1"))
            (rule "charLiteral_to_int" (formula "62") (term "1"))
            (rule "charLiteral_to_int" (formula "29") (term "1"))
            (rule "ifEqualsInteger" (formula "29"))
            (rule "seqGetAlphaCast" (formula "62") (term "0"))
            (rule "castDel" (formula "62") (term "0"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "true_left" (formula "62"))
            (rule "charLiteral_to_int" (formula "63") (term "1"))
            (rule "charLiteral_to_int" (formula "30") (term "1"))
            (rule "ifEqualsInteger" (formula "30"))
            (rule "commute_and" (formula "39") (term "1"))
            (rule "commute_and" (formula "39") (term "0"))
            (rule "charLiteral_to_int" (formula "64") (term "1"))
            (rule "seqGetAlphaCast" (formula "63") (term "0"))
            (rule "castDel" (formula "63") (term "0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "true_left" (formula "63"))
            (rule "charLiteral_to_int" (formula "31") (term "1"))
            (rule "ifEqualsInteger" (formula "31"))
            (rule "commute_and" (formula "25") (term "0"))
            (rule "commute_and" (formula "25") (term "1"))
            (rule "commute_and" (formula "42") (term "0"))
            (rule "commute_and" (formula "42") (term "1"))
            (rule "charLiteral_to_int" (formula "65") (term "1"))
            (rule "commute_and" (formula "26") (term "0"))
            (rule "commute_and" (formula "26") (term "1"))
            (rule "commute_and" (formula "45") (term "1"))
            (rule "charLiteral_to_int" (formula "66") (term "1"))
            (rule "commute_and" (formula "27") (term "1"))
            (rule "commute_and" (formula "27") (term "0"))
            (rule "commute_and" (formula "48") (term "1"))
            (rule "commute_and" (formula "28") (term "1"))
            (rule "commute_and" (formula "28") (term "0"))
            (rule "commute_and" (formula "51") (term "1"))
            (rule "commute_and" (formula "54") (term "1"))
            (rule "charLiteral_to_int" (formula "32") (term "1"))
            (rule "ifEqualsInteger" (formula "32"))
            (rule "commute_and" (formula "29") (term "1"))
            (rule "commute_and" (formula "29") (term "0"))
            (rule "commute_and" (formula "45") (term "1,1,0"))
            (rule "commute_and" (formula "45") (term "0,1,0"))
            (rule "seqGetAlphaCast" (formula "64") (term "0"))
            (rule "castDel" (formula "64") (term "0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "true_left" (formula "64"))
            (rule "commute_and" (formula "30") (term "1"))
            (rule "commute_and" (formula "30") (term "0"))
            (rule "commute_and" (formula "48") (term "1,1,0"))
            (rule "cnf_rightDist" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "commute_or" (formula "39"))
            (rule "commute_and" (formula "31") (term "0"))
            (rule "commute_and" (formula "31") (term "1"))
            (rule "cnf_rightDist" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "commute_or" (formula "25"))
            (rule "commute_and" (formula "53") (term "1,1,0"))
            (rule "cnf_rightDist" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "commute_or" (formula "44"))
            (rule "cnf_rightDist" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "commute_or" (formula "27"))
            (rule "commute_and" (formula "58") (term "1,1,0"))
            (rule "charLiteral_to_int" (formula "35") (term "1"))
            (rule "ifEqualsInteger" (formula "35"))
            (rule "cnf_rightDist" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "commute_or" (formula "29"))
            (rule "commute_and" (formula "35") (term "0"))
            (rule "commute_and" (formula "35") (term "1"))
            (rule "cnf_rightDist" (formula "31"))
            (rule "andLeft" (formula "31"))
            (rule "commute_or" (formula "31"))
            (rule "cnf_rightDist" (formula "44"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "commute_or" (formula "44"))
            (rule "charLiteral_to_int" (formula "38") (term "1"))
            (rule "ifEqualsInteger" (formula "38"))
            (rule "cnf_rightDist" (formula "43"))
            (rule "andLeft" (formula "43"))
            (rule "commute_or" (formula "44"))
            (rule "cnf_rightDist" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "commute_or" (formula "33"))
            (rule "cnf_rightDist" (formula "26"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "commute_or" (formula "26"))
            (rule "cnf_rightDist" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "commute_or" (formula "26"))
            (rule "cnf_rightDist" (formula "51"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "commute_or" (formula "51"))
            (rule "cnf_rightDist" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "commute_or" (formula "51"))
            (rule "cnf_rightDist" (formula "36"))
            (rule "andLeft" (formula "36"))
            (rule "commute_or" (formula "36"))
            (rule "cnf_rightDist" (formula "29"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "commute_or" (formula "29"))
            (rule "cnf_rightDist" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "commute_or" (formula "29"))
            (rule "commute_and" (formula "60") (term "0,1,0,1,0"))
            (rule "commute_and" (formula "60") (term "1,1,0,1,0"))
            (rule "cnf_rightDist" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "commute_or" (formula "39"))
            (rule "cnf_rightDist" (formula "32"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "commute_or" (formula "32"))
            (rule "cnf_rightDist" (formula "31"))
            (rule "andLeft" (formula "31"))
            (rule "commute_or" (formula "32"))
            (rule "cnf_rightDist" (formula "35"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "commute_or" (formula "35"))
            (rule "cnf_rightDist" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "commute_or" (formula "35"))
            (rule "commute_and" (formula "44") (term "0"))
            (rule "commute_and" (formula "44") (term "1"))
            (rule "commute_and" (formula "66") (term "1,1,0,1,0"))
            (rule "commute_and" (formula "69") (term "1,1,0,1,0"))
            (rule "cnf_rightDist" (formula "38"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "commute_or" (formula "38"))
            (rule "cnf_rightDist" (formula "37"))
            (rule "andLeft" (formula "37"))
            (rule "commute_or" (formula "38"))
            (rule "cnf_rightDist" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "commute_or" (formula "44"))
            (rule "commute_and" (formula "47") (term "0"))
            (rule "commute_and" (formula "47") (term "1"))
            (rule "cnf_rightDist" (formula "62") (term "1,0"))
            (rule "cnf_rightDist" (formula "41"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "commute_or" (formula "41"))
            (rule "cnf_rightDist" (formula "40"))
            (rule "andLeft" (formula "40"))
            (rule "commute_or" (formula "41"))
            (rule "emptyModality" (formula "162") (term "1"))
            (rule "andRight" (formula "162"))
            (branch "Case 1"
               (rule "andRight" (formula "162"))
               (branch
                   (builtin "One Step Simplification" (formula "162"))
                  (rule "closeTrue" (formula "162"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "162"))
                  (rule "notRight" (formula "162"))
                  (rule "polySimp_homoEq" (formula "72"))
                  (rule "polySimp_homoEq" (formula "53"))
                  (rule "polySimp_homoEq" (formula "24"))
                  (rule "polySimp_homoEq" (formula "66"))
                  (rule "polySimp_homoEq" (formula "58"))
                  (rule "polySimp_homoEq" (formula "25") (term "1"))
                  (rule "times_zero_2" (formula "25") (term "1,0,1"))
                  (rule "add_zero_right" (formula "25") (term "0,1"))
                  (rule "polySimp_homoEq" (formula "69"))
                  (rule "polySimp_homoEq" (formula "75"))
                  (rule "polySimp_homoEq" (formula "63"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "69") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "polySimp_addComm1" (formula "75") (term "0"))
                  (rule "polySimp_rightDist" (formula "72") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "69") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "0,1,0"))
                  (rule "mul_literals" (formula "72") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "0,1,0"))
                  (rule "mul_literals" (formula "53") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,1,0"))
                  (rule "mul_literals" (formula "66") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "0,1,0"))
                  (rule "mul_literals" (formula "58") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "69") (term "0,1,0"))
                  (rule "mul_literals" (formula "69") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0"))
                  (rule "mul_literals" (formula "63") (term "0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "57"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "57") (term "0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,1,1,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,1,1,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,1,1,0,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "122") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "122") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "122") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "122") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "122") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,1,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,1,1,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "52"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,2,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,0,2,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "68"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                  (rule "add_zero_right" (formula "64") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "106"))
                  (rule "polySimp_mulComm0" (formula "106") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "71"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,1,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "42") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,1,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0"))
                  (rule "add_zero_right" (formula "70") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1"))
                  (rule "add_zero_right" (formula "56") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,1,0,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,1,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "122") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,1,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,1,1,0"))
                  (rule "add_zero_right" (formula "87") (term "0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1"))
                  (rule "add_zero_right" (formula "67") (term "0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "119"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,1,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,1,1"))
                  (rule "add_zero_right" (formula "73") (term "0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,1,1,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "108") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,1,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "115") (term "0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,1,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,1,1,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "1"))
                  (rule "add_zero_right" (formula "55") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,1,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,0,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,1,0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62"))
                  (rule "inEqSimp_ltToLeq" (formula "112"))
                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,2,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "103") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "115") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,2,0,1,1"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,1,2,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "72") (term "0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,1,0,1,1"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,1,1,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0"))
                  (rule "polySimp_addComm1" (formula "70") (term "0,0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "70") (term "0,0,0,0,1,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,1,1,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "69") (term "0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "27") (term "0,0,0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "75") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,0,2,0,1,1"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,2,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,1"))
                  (rule "polySimp_addComm1" (formula "106") (term "0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "122") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,1,0,2,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,0,1,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "119") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "36") (term "0,0,0,1,1,1"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
                  (rule "add_literals" (formula "46") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "71") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,1,1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,1,1,1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,1"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,1,1,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,1,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,1,1,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,1,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "112") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,2,0,0"))
                  (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,2,0,1,1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "87") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "87") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1,1,1"))
                  (rule "add_literals" (formula "60") (term "0,0,0,0,1,1,1"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "87") (term "0,0,1,1,1,0,0"))
                  (rule "add_literals" (formula "87") (term "0,0,0,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "51") (term "0,0,1,1,2,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,1,1,2,0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,1,1"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,1,1,1"))
                  (rule "polySimp_addComm1" (formula "70") (term "0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "70") (term "0,0,0,0,1,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1,1,0,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,1,1,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,1,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0,0,1,1,0,1"))
                  (rule "add_literals" (formula "54") (term "0,0,0,1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,0,1,1,0,1"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,1,1"))
                  (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1,1,1"))
                  (rule "add_literals" (formula "45") (term "0,0,0,1,1,1,1"))
                  (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,1"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,1,1"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "0,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "51") (term "0,0,1,1,0,2,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,1,1,0,2,0"))
                  (rule "polySimp_addComm1" (formula "57") (term "0"))
                  (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "68") (term "0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "72") (term "0,0"))
                  (rule "add_literals" (formula "72") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "119") (term "0"))
                  (rule "polySimp_rightDist" (formula "70") (term "0,1,0,0,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "70") (term "0,0,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "46") (term "0,1,1"))
                  (rule "add_literals" (formula "46") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "85") (term "0,0,1,1,1,1,0"))
                  (rule "add_literals" (formula "85") (term "0,0,0,1,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                  (rule "add_literals" (formula "57") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "83") (term "0,0,1,1,0,1,0,0"))
                  (rule "add_literals" (formula "83") (term "0,0,0,1,1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                  (rule "add_literals" (formula "33") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0"))
                  (rule "add_zero_right" (formula "68") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,1,0,1,1"))
                  (rule "add_literals" (formula "65") (term "0,0,0,0,1,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "68") (term "0,0,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1,1,1,1,1,1,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0,1,1,1,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1"))
                  (rule "add_zero_right" (formula "61") (term "0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,1,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "59") (term "0,0,0,1,1,0,1"))
                  (rule "add_literals" (formula "59") (term "0,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,1,0,1,1,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,1,1,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,1,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,1,1,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1"))
                  (rule "add_zero_right" (formula "27") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,1,1,0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,1,1,0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,0,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,0,1,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,1,1,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "82") (term "0,0,1"))
                  (rule "add_literals" (formula "82") (term "0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,2,0,1,1"))
                  (rule "add_zero_right" (formula "50") (term "0,0,2,0,1,1"))
                  (rule "polySimp_addComm1" (formula "57") (term "0,0,1,1,0,1"))
                  (rule "add_literals" (formula "57") (term "0,0,0,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "55") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,1,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "107") (term "0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "51") (term "0,0,1,2,0,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,1,2,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,0,1,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "63") (term "0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,2,0,1,1"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,1,2,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                  (rule "add_literals" (formula "42") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,1"))
                  (rule "add_literals" (formula "25") (term "0,0,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,0,1,1,1,0"))
                  (rule "mul_literals" (formula "68") (term "0,0,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,1,1"))
                  (rule "mul_literals" (formula "63") (term "0,0,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "68") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,1,1"))
                  (rule "mul_literals" (formula "68") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "70") (term "0,0,1,0"))
                  (rule "add_literals" (formula "70") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,1,1,1,0"))
                  (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "68") (term "0,0,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "0,1,0,1"))
                  (rule "mul_literals" (formula "54") (term "0,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "60") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "82") (term "0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                  (rule "add_literals" (formula "28") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,1,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                  (rule "add_literals" (formula "33") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "68") (term "0,0,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "1"))
                  (rule "add_zero_right" (formula "58") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "1,1"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "66") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,0,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0"))
                  (rule "add_zero_right" (formula "25") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,2,0"))
                  (rule "add_zero_right" (formula "51") (term "0,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "mul_literals" (formula "63") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0,1"))
                  (rule "add_literals" (formula "37") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,2,0,1,1"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,1,0,0,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62"))
                  (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                  (rule "add_literals" (formula "42") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1"))
                  (rule "add_literals" (formula "49") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "49") (term "0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "mul_literals" (formula "68") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1"))
                  (rule "add_zero_right" (formula "65") (term "0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,1,1"))
                  (rule "add_literals" (formula "47") (term "0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                  (rule "add_zero_right" (formula "59") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                  (rule "add_literals" (formula "49") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "49") (term "0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,0,0,0,1,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,1"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,1"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,1"))
                  (rule "mul_literals" (formula "61") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,2,0"))
                  (rule "mul_literals" (formula "51") (term "0,1,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "52") (term "0,0,1,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "61") (term "0,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,1,1,0,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                  (rule "add_literals" (formula "27") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "66") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0,1,1"))
                  (rule "add_literals" (formula "50") (term "0,0,0,2,0,1,1"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,0,0,0,1,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,0,0,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "55") (term "0,0,1,1,0,0,1"))
                  (rule "add_literals" (formula "55") (term "0,0,0,1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0,1,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,1,1,0,0,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1,0,1,1"))
                  (rule "add_literals" (formula "46") (term "0,0,0,0,1,0,1,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "81") (term "0,0,0"))
                  (rule "add_literals" (formula "81") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "63") (term "0,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,0,0,1,1"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "58") (term "0,1,0,1"))
                  (rule "mul_literals" (formula "58") (term "0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,1,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                  (rule "add_literals" (formula "36") (term "0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "0,0,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0,0,1,1,0,1"))
                  (rule "add_literals" (formula "54") (term "0,0,0,1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,0,1,1"))
                  (rule "polySimp_addComm1" (formula "60") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "61") (term "0,0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "62") (term "0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,1,0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,1"))
                  (rule "add_literals" (formula "45") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,1,1"))
                  (rule "mul_literals" (formula "65") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,2,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,1,1,1,0"))
                  (rule "mul_literals" (formula "61") (term "0,0,1,0,0,1,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "63") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "59") (term "0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,0,1,1,1,0"))
                  (rule "mul_literals" (formula "63") (term "0,0,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "63") (term "0,0,1,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "81") (term "0,0,0,1,0,0,1,1,0"))
                  (rule "add_literals" (formula "81") (term "0,0,0,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                  (rule "add_literals" (formula "36") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0,1"))
                  (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1,0,0,1,1"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,1,1"))
                  (rule "add_literals" (formula "44") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,0,1"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0,1,1"))
                  (rule "add_literals" (formula "45") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                  (rule "add_literals" (formula "39") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "81") (term "0,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,1"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,0,1,1"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0"))
                  (rule "polySimp_addComm0" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "66") (term "0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "60") (term "0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "62") (term "0"))
                  (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                  (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                  (rule "replace_known_left" (formula "55") (term "0,1") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "true_left" (formula "53"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "60") (term "0,1,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,1"))
                  (rule "add_literals" (formula "57") (term "0,0,0,1"))
                  (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "true_left" (formula "57"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "65") (term "0,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1"))
                  (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "true_left" (formula "53"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "62") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                  (rule "replace_known_left" (formula "56") (term "0,1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "true_left" (formula "55"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,1,1,0,1,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "60") (term "0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,0"))
                  (rule "replace_known_left" (formula "61") (term "0,0,1,0") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")))
                  (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0"))
                  (rule "replace_known_left" (formula "63") (term "0,1,1") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "77") (term "0,0,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "57") (term "0,0,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0,0"))
                  (rule "jmod_axiom" (formula "80") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,1,1,1,1,0"))
                  (rule "add_literals" (formula "57") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "59") (term "0,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,1,0,1,0"))
                  (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,0,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                  (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "63"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0"))
                  (rule "replace_known_left" (formula "57") (term "0,0,1,1,0") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "replace_known_left" (formula "57") (term "1,0") (ifseqformula "59"))
                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "58")))
                  (rule "true_left" (formula "57"))
                  (rule "polySimp_addComm1" (formula "59") (term "0,0"))
                  (rule "add_literals" (formula "59") (term "0,0,0"))
                  (rule "replace_known_left" (formula "60") (term "0,1,1") (ifseqformula "59"))
                   (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                  (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1,1,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,1,1,0"))
                  (rule "replace_known_left" (formula "62") (term "0,1,1,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "62"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,1,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,1,1,0"))
                  (rule "replace_known_left" (formula "64") (term "0,1,1,0") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "polySimp_addComm1" (formula "58") (term "0,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "59") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "59") (term "0,0,0,0,1,1"))
                  (rule "replace_known_left" (formula "59") (term "0,1,1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "59"))
                  (rule "andLeft" (formula "59"))
                  (rule "andLeft" (formula "60"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,0"))
                  (rule "replace_known_left" (formula "63") (term "0,0,1,0") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "63"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "65") (term "0,0,0,0,1,1"))
                  (rule "replace_known_left" (formula "65") (term "0,1,1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "andLeft" (formula "65"))
                  (rule "andLeft" (formula "66"))
                  (rule "polySimp_addComm1" (formula "59") (term "0,0"))
                  (rule "add_literals" (formula "59") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "60") (term "0,0"))
                  (rule "add_literals" (formula "60") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0,1,1"))
                  (rule "replace_known_left" (formula "61") (term "0,1,1") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "andLeft" (formula "61"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "112") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                  (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                  (rule "polySimp_elimOne" (formula "96") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "112") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "105") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "106") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "106") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "93") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,1,1,2,0"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "0,0,1,1,2,0"))
                  (rule "polySimp_elimOne" (formula "51") (term "0,0,1,1,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "0,0,1,1,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "25") (term "1"))
                  (rule "mul_literals" (formula "25") (term "1,1"))
                  (rule "ifEqualsInteger" (formula "25") (term "1"))
                  (rule "equal_literals" (formula "25") (term "1,1,1"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "polySimp_homoEq" (formula "25") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                  (rule "add_literals" (formula "25") (term "0,0,1,1"))
                  (rule "add_zero_left" (formula "25") (term "0,1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1"))
                  (rule "polySimp_rightDist" (formula "24") (term "1"))
                  (rule "mul_literals" (formula "24") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                  (rule "applyEqRigid" (formula "50") (term "0,1,0,0,2,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,2,0,1,1"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,2,0,1,1"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0,1,1"))
                  (rule "add_literals" (formula "50") (term "0,0,0,2,0,1,1"))
                  (rule "applyEqRigid" (formula "55") (term "1,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "55") (term "1,0"))
                  (rule "add_literals" (formula "55") (term "0,1,0"))
                  (rule "applyEqRigid" (formula "50") (term "0,1,0,0,0,1,0,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,1,0,0"))
                  (rule "applyEqRigid" (formula "53") (term "1,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
                  (rule "add_literals" (formula "53") (term "0,1,0"))
                  (rule "applyEqRigid" (formula "52") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0"))
                  (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "52") (term "0"))
                  (rule "add_literals" (formula "52") (term "1,1,0"))
                  (rule "times_zero_1" (formula "52") (term "1,0"))
                  (rule "add_literals" (formula "52") (term "0"))
                  (rule "leq_literals" (formula "52"))
                  (rule "true_left" (formula "52"))
                  (rule "applyEqRigid" (formula "49") (term "0,0,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0,1,1"))
                  (rule "mul_literals" (formula "49") (term "0,0,0,1,1"))
                  (rule "applyEqRigid" (formula "76") (term "1,1,0,1,0,0,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "76") (term "1,0,1,0,0,0"))
                  (rule "add_literals" (formula "76") (term "0,1,0,1,0,0,0"))
                  (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "56") (term "1,0"))
                  (rule "add_literals" (formula "56") (term "0,1,0"))
                  (rule "applyEqRigid" (formula "33") (term "0,1,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                  (rule "add_literals" (formula "33") (term "0,0,1"))
                  (rule "applyEq" (formula "76") (term "1,1,1,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "76") (term "1,1,1,0"))
                  (rule "add_literals" (formula "76") (term "0,1,1,1,0"))
                  (rule "applyEq" (formula "50") (term "1,1,2,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "50") (term "1,2,0,1,1"))
                  (rule "add_literals" (formula "50") (term "0,1,2,0,1,1"))
                  (rule "applyEqRigid" (formula "30") (term "0,1,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,1"))
                  (rule "applyEq" (formula "42") (term "0,1,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,1"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,1"))
                  (rule "add_literals" (formula "42") (term "0,0,1"))
                  (rule "applyEq" (formula "37") (term "0,1,0,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                  (rule "add_literals" (formula "37") (term "0,0,0,1"))
                  (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "60") (term "1,0"))
                  (rule "add_literals" (formula "60") (term "0,1,0"))
                  (rule "applyEq" (formula "76") (term "0,1,0,0,0,1,0,0,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "76") (term "0,1,0,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "76") (term "0,0,0,0,1,0,0,0"))
                  (rule "applyEq" (formula "28") (term "0,1,0,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                  (rule "add_literals" (formula "28") (term "0,0,0,1"))
                  (rule "applyEqRigid" (formula "25") (term "0,1,0,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "43") (term "0,1,0,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1"))
                  (rule "applyEqRigid" (formula "49") (term "0,0,1,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,1,0"))
                  (rule "mul_literals" (formula "49") (term "0,0,1,0"))
                  (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0"))
                  (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "53") (term "0"))
                  (rule "add_literals" (formula "53") (term "1,1,0"))
                  (rule "times_zero_1" (formula "53") (term "1,0"))
                  (rule "add_zero_right" (formula "53") (term "0"))
                  (rule "leq_literals" (formula "53"))
                  (rule "true_left" (formula "53"))
                  (rule "applyEq" (formula "27") (term "0,1,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                  (rule "add_literals" (formula "27") (term "0,0,1"))
                  (rule "applyEq" (formula "50") (term "0,1,0,1,0,0,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "50") (term "1,1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,1,0,0,0"))
                  (rule "qeq_literals" (formula "50") (term "1,0,0,0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "applyEq" (formula "45") (term "0,1,0,0,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0"))
                  (rule "applyEqRigid" (formula "63") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0"))
                  (rule "add_literals" (formula "63") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "45") (term "0,1,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,1,1"))
                  (rule "add_literals" (formula "45") (term "0,0,1,1"))
                  (rule "applyEq" (formula "51") (term "0,1,0,0,2,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,2,0"))
                  (rule "mul_literals" (formula "51") (term "0,1,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,2,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,2,0"))
                  (rule "applyEqRigid" (formula "51") (term "1,2,0,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "51") (term "2,0,0"))
                  (rule "add_literals" (formula "51") (term "0,2,0,0"))
                  (rule "applyEqRigid" (formula "39") (term "0,1,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                  (rule "add_literals" (formula "39") (term "0,0,1"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1"))
                  (rule "applyEq" (formula "44") (term "0,1,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,1,1"))
                  (rule "add_literals" (formula "44") (term "0,0,1,1"))
                  (rule "applyEqRigid" (formula "36") (term "0,1,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                  (rule "add_literals" (formula "36") (term "0,0,1"))
                  (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "57") (term "1,0"))
                  (rule "add_literals" (formula "57") (term "0,1,0"))
                  (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0"))
                  (rule "polySimp_addComm1" (formula "58") (term "0,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "58") (term "0"))
                  (rule "add_literals" (formula "58") (term "1,1,0"))
                  (rule "times_zero_1" (formula "58") (term "1,0"))
                  (rule "add_zero_right" (formula "58") (term "0"))
                  (rule "leq_literals" (formula "58"))
                  (rule "true_left" (formula "58"))
                  (rule "applyEq" (formula "48") (term "0,1,0,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,1"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,1"))
                  (rule "add_literals" (formula "48") (term "0,0,0,1,1"))
                  (rule "applyEqRigid" (formula "56") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "56") (term "0"))
                  (rule "add_literals" (formula "56") (term "1,1,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0"))
                  (rule "add_literals" (formula "56") (term "0"))
                  (rule "leq_literals" (formula "56"))
                  (rule "true_left" (formula "56"))
                  (rule "applyEqRigid" (formula "48") (term "0,1,0,1,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                  (rule "add_literals" (formula "48") (term "0,0,1,0"))
                  (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "59") (term "1,0"))
                  (rule "add_literals" (formula "59") (term "0,1,0"))
                  (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "54") (term "0"))
                  (rule "add_literals" (formula "54") (term "1,1,0"))
                  (rule "times_zero_1" (formula "54") (term "1,0"))
                  (rule "add_zero_right" (formula "54") (term "0"))
                  (rule "leq_literals" (formula "54"))
                  (rule "true_left" (formula "54"))
                  (rule "applyEq" (formula "72") (term "0,1,0,0,1,1,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "72") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "72") (term "0,0,0,1,1,0"))
                  (rule "applyEqRigid" (formula "34") (term "0,1,0,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1"))
                  (rule "applyEq" (formula "47") (term "0,1,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,1,1"))
                  (rule "add_literals" (formula "47") (term "0,0,1,1"))
                  (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0"))
                  (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                  (rule "add_literals" (formula "57") (term "0,0,0"))
                  (rule "add_zero_left" (formula "57") (term "0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "57") (term "0"))
                  (rule "add_literals" (formula "57") (term "1,0"))
                  (rule "times_zero_1" (formula "57") (term "0"))
                  (rule "leq_literals" (formula "57"))
                  (rule "true_left" (formula "57"))
                  (rule "applyEq" (formula "47") (term "0,1,0,0,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0"))
                  (rule "applyEqRigid" (formula "46") (term "0,1,0,1,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,1,1"))
                  (rule "add_literals" (formula "46") (term "0,0,1,1"))
                  (rule "applyEq" (formula "40") (term "0,1,0,0,1") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1"))
                  (rule "applyEqRigid" (formula "71") (term "1") (ifseqformula "24"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "103"))
                  (rule "polySimp_mulLiterals" (formula "103") (term "0"))
                  (rule "polySimp_elimOne" (formula "103") (term "0"))
                  (rule "applyEqRigid" (formula "50") (term "1,1,0,1,0,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "50") (term "1,0,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,1,0,1,0,0"))
                  (rule "applyEqRigid" (formula "50") (term "0,1,0,0,0,1,0") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,1,0"))
                  (rule "applyEq" (formula "50") (term "1,1,0,1,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "50") (term "1,0,1,0"))
                  (rule "add_literals" (formula "50") (term "0,1,0,1,0"))
                  (rule "applyEqRigid" (formula "50") (term "1,0,0,0,0") (ifseqformula "24"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                  (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                  (rule "polySimp_elimOne" (formula "96") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "74"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "147") (ifseqformula "2"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "162"))
               (rule "allRight" (formula "162") (inst "sk=f_0"))
               (rule "allRight" (formula "162") (inst "sk=o_0"))
               (rule "orRight" (formula "162"))
               (rule "orRight" (formula "162"))
               (rule "eqSymm" (formula "164"))
               (rule "polySimp_homoEq" (formula "23"))
               (rule "polySimp_homoEq" (formula "68"))
               (rule "polySimp_homoEq" (formula "57"))
               (rule "polySimp_homoEq" (formula "71"))
               (rule "polySimp_homoEq" (formula "65"))
               (rule "polySimp_homoEq" (formula "52"))
               (rule "polySimp_homoEq" (formula "62"))
               (rule "polySimp_homoEq" (formula "24") (term "1"))
               (rule "times_zero_2" (formula "24") (term "1,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,1"))
               (rule "polySimp_homoEq" (formula "74"))
               (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "polySimp_addComm1" (formula "74") (term "0"))
               (rule "polySimp_rightDist" (formula "68") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "68") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "57") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "57") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "71") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "71") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "52") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "52") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "62") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "68") (term "0,1,0"))
               (rule "mul_literals" (formula "68") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "57") (term "0,1,0"))
               (rule "mul_literals" (formula "57") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "71") (term "0,1,0"))
               (rule "mul_literals" (formula "71") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "65") (term "0,1,0"))
               (rule "mul_literals" (formula "65") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "52") (term "0,1,0"))
               (rule "mul_literals" (formula "52") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "67") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0,1"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1,1,0,0,1,0"))
               (rule "add_literals" (formula "69") (term "0,0,0,0,1,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0,0"))
               (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,1,1,0,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,1,1,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,0,1,1,0,1,1,1,0,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,0,1,1,0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,1,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "41") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1,1"))
               (rule "add_literals" (formula "32") (term "0,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "108") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,1,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,1,0,0,1,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "86") (term "0,1,0,0"))
               (rule "add_zero_right" (formula "86") (term "0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "121") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,1,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,1,1,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,1,1,0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,1,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,1,1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "51"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,1,0,0,1,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,1,1"))
               (rule "add_zero_right" (formula "66") (term "0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,1,0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,1,1,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,1,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,1,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1"))
               (rule "add_zero_right" (formula "60") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,2,0,1,1"))
               (rule "add_zero_right" (formula "49") (term "0,0,2,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "86") (term "0,1,1,0"))
               (rule "add_zero_right" (formula "86") (term "0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "86") (term "0,1,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "118"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "114") (term "0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,1,1,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "121") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "121") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "121") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "64"))
               (rule "inEqSimp_ltToLeq" (formula "59") (term "1"))
               (rule "add_zero_right" (formula "59") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,1,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1"))
               (rule "add_zero_right" (formula "27") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "111"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "102") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1,2,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "105"))
               (rule "inEqSimp_ltToLeq" (formula "115") (term "0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "86") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,1,1,0,1,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "115") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "114") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "121") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "86") (term "0,1,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1,1,0,0,1,1,0,1,0,1,0"))
               (rule "add_literals" (formula "69") (term "0,0,0,0,1,1,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,1,1,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1,0,1,1"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,1,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,1,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "68") (term "0"))
               (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1,1,0,1"))
               (rule "add_literals" (formula "55") (term "0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,0,1,1,1"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "57") (term "0"))
               (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "86") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "71") (term "0"))
               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,1,1,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1,1,0,0,1,0,1,0"))
               (rule "add_literals" (formula "69") (term "0,0,0,0,1,1,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0"))
               (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,0,1"))
               (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,1,1,1,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "69") (term "0,0,0,0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "52") (term "0"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,1,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,1,1,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "74") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,1,1,0,0,0,1,0,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,1,0,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1,0,1,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,1,1,1"))
               (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,1,0,0,1,0,1,0"))
               (rule "add_literals" (formula "72") (term "0,0,0,0,1,1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "42") (term "0,0,1,1,0,1"))
               (rule "add_literals" (formula "42") (term "0,0,0,1,1,0,1"))
               (rule "polySimp_addComm1" (formula "58") (term "0,0,1,1,0,1"))
               (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,1,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "72") (term "0,0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "72") (term "0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1,1,0,1,1"))
               (rule "add_literals" (formula "69") (term "0,0,0,0,1,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "118") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "114") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,1,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,1,1,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67"))
               (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,2,0,1,1"))
               (rule "polySimp_mulComm0" (formula "105") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,0"))
               (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,0,2,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,1,2,0"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,1,0,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,2,0,0"))
               (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,1,1,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "114") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,2,0,1,1"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,2,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "1"))
               (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,1,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,1,0"))
               (rule "mul_literals" (formula "86") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,1"))
               (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "59") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,1,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,1,0,0,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "72") (term "0,0,0,0,1,1,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "48") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "70") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "70") (term "0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1,0,1,1"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,1,0,1,1"))
               (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,1,0,1,1"))
               (rule "add_literals" (formula "72") (term "0,0,0,0,1,1,0,1,1"))
               (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1,0,1"))
               (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "72") (term "0,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "72") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,1,0,1,1"))
               (rule "add_literals" (formula "63") (term "0,0,0,0,1,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "56") (term "0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,1,0,1,1,1,0,1,0"))
               (rule "add_literals" (formula "72") (term "0,0,0,0,1,1,0,1,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "72") (term "0,0,0,0,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,1,1,1,1,1,0"))
               (rule "add_literals" (formula "63") (term "0,0,0,0,1,1,1,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1,1,0,1,1,1,0"))
               (rule "add_literals" (formula "69") (term "0,0,0,0,1,1,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,1,1,0,0,1,0"))
               (rule "add_literals" (formula "63") (term "0,0,0,0,1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "72") (term "0,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "72") (term "0,0,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,0,1,1,1,1"))
               (rule "add_literals" (formula "43") (term "0,0,0,1,1,1,1"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
               (rule "add_literals" (formula "41") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1,0,0,1,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "86") (term "0,0,1,1,1,0,0"))
               (rule "add_literals" (formula "86") (term "0,0,0,1,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1"))
               (rule "add_literals" (formula "44") (term "0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
               (rule "add_literals" (formula "68") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "118") (term "0"))
               (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,1"))
               (rule "add_literals" (formula "35") (term "0,0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
               (rule "add_literals" (formula "57") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1,0,1,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "85") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "85") (term "0,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,1"))
               (rule "add_literals" (formula "38") (term "0,0,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,1,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,1,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "70") (term "0,0"))
               (rule "add_literals" (formula "70") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1,1,0,1,1,1,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,0,1,1,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "59") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "59") (term "0,0,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "58") (term "1,1,0,1"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
               (rule "add_literals" (formula "64") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,1,0,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
               (rule "add_zero_right" (formula "64") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
               (rule "add_literals" (formula "52") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "107") (term "0"))
               (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "68") (term "0,0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
               (rule "add_literals" (formula "60") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "46") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "64") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,1,1,1,0,1,0"))
               (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1"))
               (rule "add_zero_right" (formula "54") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1,2,0,1,1"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,1,2,0,1,1"))
               (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "100") (term "0"))
               (rule "polySimp_addComm1" (formula "59") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "59") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "1"))
               (rule "add_zero_right" (formula "53") (term "0,1"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,0,2,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,2,0"))
               (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,2,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,1,1,0,0,1,1,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,1,1,0,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,0,1,0,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "81") (term "0,0,1"))
               (rule "add_literals" (formula "81") (term "0,0,0,1"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,1,1"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "50") (term "0,0,1,2,0,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,1,2,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0"))
               (rule "add_zero_right" (formula "65") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "65") (term "0,0,1,1,0,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "65") (term "0,0,0,1,1,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "58") (term "0,0,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "81") (term "0,0,1,1,1,1,0"))
               (rule "add_literals" (formula "81") (term "0,0,0,1,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1"))
               (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1"))
               (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
               (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1"))
               (rule "add_zero_right" (formula "65") (term "0,0,1,1"))
               (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0"))
               (rule "mul_literals" (formula "61") (term "0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "57") (term "0,1,0,1"))
               (rule "mul_literals" (formula "57") (term "0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0"))
               (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,0,1,1,1,0"))
               (rule "mul_literals" (formula "67") (term "0,0,1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "67") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "69") (term "0,0,1,0"))
               (rule "add_literals" (formula "69") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,2,0,1,1"))
               (rule "add_literals" (formula "49") (term "0,0,0,2,0,1,1"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,1"))
               (rule "add_literals" (formula "45") (term "0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "81") (term "0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "48") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
               (rule "add_literals" (formula "29") (term "0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
               (rule "add_literals" (formula "27") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "41") (term "0,1"))
               (rule "add_literals" (formula "41") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1"))
               (rule "add_literals" (formula "46") (term "0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "44") (term "0,1,1"))
               (rule "add_literals" (formula "44") (term "0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "66"))
               (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1"))
               (rule "add_zero_right" (formula "67") (term "0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1"))
               (rule "add_zero_right" (formula "60") (term "0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "55"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,0,0,0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0"))
               (rule "add_zero_right" (formula "67") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "1,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0"))
               (rule "mul_literals" (formula "63") (term "0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1"))
               (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0"))
               (rule "add_zero_right" (formula "24") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "51") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "51") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0"))
               (rule "add_zero_right" (formula "49") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "65") (term "0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "1"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
               (rule "add_zero_right" (formula "60") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,1"))
               (rule "add_literals" (formula "33") (term "0,0,0,1"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,0,1,1,1,0,1,0"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0,1"))
               (rule "add_literals" (formula "36") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,0,0,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "67") (term "0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1"))
               (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,1,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,1,1"))
               (rule "add_literals" (formula "45") (term "0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1"))
               (rule "add_literals" (formula "48") (term "0,0,0,1,1"))
               (rule "add_zero_left" (formula "48") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,1,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1"))
               (rule "add_literals" (formula "29") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "59"))
               (rule "polySimp_addComm1" (formula "46") (term "0,1,1"))
               (rule "add_literals" (formula "46") (term "0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "0,2,0"))
               (rule "add_zero_right" (formula "50") (term "0,0,2,0"))
               (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
               (rule "add_literals" (formula "32") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "1"))
               (rule "add_zero_right" (formula "26") (term "0,1"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,1"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,1,1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,1,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "54") (term "0,0,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0,0,0,1,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "53") (term "0,1,0,1"))
               (rule "mul_literals" (formula "53") (term "0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0,0,2,0,1,1"))
               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
               (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
               (rule "add_literals" (formula "30") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "66") (term "0,0,1,0,0,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,1,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,1,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,1,1,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,1,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1,0,0,0,1,1,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,1,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "51") (term "0"))
               (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,1,1"))
               (rule "mul_literals" (formula "64") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,1,1,0,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,1,1,0,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,1,1,0,0,1,1"))
               (rule "add_literals" (formula "62") (term "0,0,0,1,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "58") (term "0,0,1,1,0,0,1"))
               (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1"))
               (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0,1"))
               (rule "add_literals" (formula "32") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "80") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "80") (term "0,0,0,0,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,2,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "61") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
               (rule "mul_literals" (formula "26") (term "0,1,0,1"))
               (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "66") (term "0,0,1,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1"))
               (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,1,0,0,2,0,1,1"))
               (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0"))
               (rule "mul_literals" (formula "65") (term "0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "57") (term "0,0,1,1,0,1"))
               (rule "add_literals" (formula "57") (term "0,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0,1,1"))
               (rule "mul_literals" (formula "66") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,1,1,0,0,0,1,1,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,1,0,0,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,1"))
               (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,1,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0"))
               (rule "mul_literals" (formula "55") (term "0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0,0,1,1,1,0,1,0"))
               (rule "mul_literals" (formula "66") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "66") (term "0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,1,1,1,0"))
               (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,1,1,1,0"))
               (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "60") (term "0,0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
               (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,1,1,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "47") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,0,1,1,1,0"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "60") (term "0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
               (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "62") (term "0,0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,1"))
               (rule "add_literals" (formula "43") (term "0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
               (rule "polySimp_addComm1" (formula "51") (term "0,0"))
               (rule "add_literals" (formula "51") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
               (rule "add_literals" (formula "35") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
               (rule "add_literals" (formula "38") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "39") (term "0,0,1"))
               (rule "add_literals" (formula "39") (term "0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,1,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0"))
               (rule "mul_literals" (formula "59") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "42") (term "0,0,1"))
               (rule "add_literals" (formula "42") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0,0,2,0,1,1"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,2,0,1,1"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,0,1,1"))
               (rule "polySimp_addComm1" (formula "80") (term "0,0,0,1,0,0,1,1,0"))
               (rule "add_literals" (formula "80") (term "0,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,1"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,1"))
               (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,0,1"))
               (rule "add_literals" (formula "41") (term "0,0,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,1,1"))
               (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
               (rule "add_literals" (formula "48") (term "0,0,1,0"))
               (rule "add_zero_left" (formula "48") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,2,0"))
               (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,1"))
               (rule "add_literals" (formula "26") (term "0,0,1"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
               (rule "add_literals" (formula "47") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "57") (term "0,1"))
               (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
               (rule "add_literals" (formula "43") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0,0,1"))
               (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0,1"))
               (rule "add_literals" (formula "35") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
               (rule "polySimp_addComm1" (formula "38") (term "0,1"))
               (rule "add_literals" (formula "38") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,0,1"))
               (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0,1,1"))
               (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "48") (term "0,0,0,0,0,1,1"))
               (rule "add_literals" (formula "48") (term "0,0,0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,1"))
               (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,1"))
               (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1,0,1,1"))
               (rule "add_literals" (formula "46") (term "0,0,0,0,1,0,1,1"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
               (rule "add_literals" (formula "63") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,1"))
               (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "54"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "true_left" (formula "52"))
               (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
               (rule "add_literals" (formula "52") (term "0,0,0,1"))
               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "true_left" (formula "52"))
               (rule "polySimp_addComm1" (formula "59") (term "0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,1,1,1,0,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "53") (term "0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "58") (term "0,1,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1"))
               (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
               (rule "add_literals" (formula "78") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "61") (term "0,0"))
               (rule "add_literals" (formula "61") (term "0,0,0"))
               (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "61")))
               (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
               (rule "add_literals" (formula "55") (term "0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1,1,1,0,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "57") (term "0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "49") (term "0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
               (rule "add_literals" (formula "59") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
               (rule "add_literals" (formula "63") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,1,1,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,1,0,0"))
               (rule "replace_known_left" (formula "62") (term "0,0,1,1,0,0") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,1,1,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,1,1,1,0"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,1,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,1,0,0,1,0"))
               (rule "jmod_axiom" (formula "81") (term "0"))
               (rule "polySimp_mulLiterals" (formula "81") (term "1,0"))
               (rule "polySimp_addComm1" (formula "59") (term "0,0"))
               (rule "add_literals" (formula "59") (term "0,0,0"))
               (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
               (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,0,1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "63") (term "0,0"))
               (rule "add_literals" (formula "63") (term "0,0,0"))
               (rule "replace_known_left" (formula "64") (term "0,0,1,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
               (rule "polySimp_addComm1" (formula "53") (term "0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0"))
               (rule "replace_known_left" (formula "56") (term "0,1") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "true_left" (formula "55"))
               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "55"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "true_left" (formula "54"))
               (rule "polySimp_addComm1" (formula "56") (term "0,0,1,1,1,1,0"))
               (rule "add_literals" (formula "56") (term "0,0,0,1,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
               (rule "add_literals" (formula "55") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "56") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,1,1"))
               (rule "replace_known_left" (formula "62") (term "0,1,1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "polySimp_addComm1" (formula "55") (term "0,0"))
               (rule "add_literals" (formula "55") (term "0,0,0"))
               (rule "replace_known_left" (formula "56") (term "0,1,1") (ifseqformula "55"))
                (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
               (rule "andLeft" (formula "56"))
               (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "57"))
                (builtin "One Step Simplification" (formula "56"))
               (rule "true_left" (formula "56"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,1,1"))
               (rule "replace_known_left" (formula "62") (term "0,1,1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,1,1"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,0,1"))
               (rule "add_literals" (formula "62") (term "0,0,0,0,0,1"))
               (rule "replace_known_left" (formula "62") (term "0,0,1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,1,1,0"))
               (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "60"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,1,1"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,1,0"))
               (rule "replace_known_left" (formula "60") (term "0,1,0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "60"))
               (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "58") (term "0,0,0,0,1,1"))
               (rule "replace_known_left" (formula "58") (term "0,1,1") (ifseqformula "57"))
                (builtin "One Step Simplification" (formula "58"))
               (rule "andLeft" (formula "58"))
               (rule "polySimp_addComm1" (formula "61") (term "0,0,0,0"))
               (rule "add_literals" (formula "61") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "60"))
                (builtin "One Step Simplification" (formula "61"))
               (rule "polySimp_addComm1" (formula "58") (term "0,0"))
               (rule "add_literals" (formula "58") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "60") (term "0,0,0,0,1,1"))
               (rule "replace_known_left" (formula "60") (term "0,1,1") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "60"))
               (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "111") (term "1,0,0,0"))
               (rule "mul_literals" (formula "111") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "111") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,1,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "49") (term "0,0,1,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0,0"))
               (rule "mul_literals" (formula "49") (term "1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "104") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "104") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "104") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0"))
               (rule "mul_literals" (formula "92") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "92") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "92") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "105") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0"))
               (rule "mul_literals" (formula "97") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "104") (term "1,0,0,0"))
               (rule "mul_literals" (formula "104") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "104") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "111") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
               (rule "mul_literals" (formula "24") (term "1,1"))
               (rule "ifEqualsInteger" (formula "24") (term "1"))
               (rule "equal_literals" (formula "24") (term "1,1,1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "polySimp_homoEq" (formula "24") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
               (rule "add_literals" (formula "24") (term "0,0,1,1"))
               (rule "add_zero_left" (formula "24") (term "0,1,1"))
               (rule "polySimp_sepPosMonomial" (formula "23"))
               (rule "polySimp_mulComm0" (formula "23") (term "1"))
               (rule "polySimp_rightDist" (formula "23") (term "1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
               (rule "mul_literals" (formula "23") (term "0,1"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1"))
               (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "61") (term "0"))
               (rule "polySimp_addComm1" (formula "61") (term "0,0"))
               (rule "add_literals" (formula "61") (term "0,0,0"))
               (rule "add_zero_left" (formula "61") (term "0,0"))
               (rule "polySimp_pullOutFactor2" (formula "61") (term "0"))
               (rule "add_literals" (formula "61") (term "1,0"))
               (rule "times_zero_1" (formula "61") (term "0"))
               (rule "leq_literals" (formula "61"))
               (rule "true_left" (formula "61"))
               (rule "applyEqRigid" (formula "49") (term "0,1,0,0,0,1,0,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0"))
               (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
               (rule "add_literals" (formula "42") (term "0,0,0,1"))
               (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "57") (term "0"))
               (rule "polySimp_addComm1" (formula "57") (term "0,0"))
               (rule "add_literals" (formula "57") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "57") (term "0"))
               (rule "add_literals" (formula "57") (term "1,1,0"))
               (rule "times_zero_1" (formula "57") (term "1,0"))
               (rule "add_literals" (formula "57") (term "0"))
               (rule "leq_literals" (formula "57"))
               (rule "true_left" (formula "57"))
               (rule "applyEq" (formula "27") (term "0,1,0,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
               (rule "add_literals" (formula "27") (term "0,0,0,1"))
               (rule "applyEq" (formula "49") (term "0,1,0,0,2,0,1,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,2,0,1,1"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,2,0,1,1"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,2,0,1,1"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,2,0,1,1"))
               (rule "add_literals" (formula "49") (term "0,0,0,2,0,1,1"))
               (rule "applyEqRigid" (formula "30") (term "0,1,0,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
               (rule "add_literals" (formula "30") (term "0,0,0,1"))
               (rule "applyEq" (formula "74") (term "0,1,0,0,0,1,0,0,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "74") (term "0,0,0,0,1,0,0,0"))
               (rule "applyEq" (formula "29") (term "0,1,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
               (rule "mul_literals" (formula "29") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
               (rule "add_literals" (formula "29") (term "0,0,1"))
               (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "59") (term "1,0"))
               (rule "add_literals" (formula "59") (term "0,1,0"))
               (rule "applyEqRigid" (formula "35") (term "0,1,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
               (rule "mul_literals" (formula "35") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
               (rule "add_literals" (formula "35") (term "0,0,1"))
               (rule "applyEqRigid" (formula "47") (term "0,1,0,0,1,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,1"))
               (rule "applyEqRigid" (formula "48") (term "0,0,0,1,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,1"))
               (rule "polySimp_rightDist" (formula "48") (term "0,0,1,1"))
               (rule "mul_literals" (formula "48") (term "0,0,0,1,1"))
               (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
               (rule "add_literals" (formula "33") (term "0,0,0,1"))
               (rule "applyEqRigid" (formula "47") (term "0,1,0,1,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
               (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
               (rule "add_literals" (formula "47") (term "0,0,1,0"))
               (rule "applyEqRigid" (formula "56") (term "1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "56") (term "1,0"))
               (rule "add_literals" (formula "56") (term "0,1,0"))
               (rule "applyEqRigid" (formula "49") (term "0,1,0,1,0,0,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "49") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,1,0,0,0"))
               (rule "add_literals" (formula "49") (term "1,1,0,1,0,0,0"))
               (rule "times_zero_1" (formula "49") (term "1,0,1,0,0,0"))
               (rule "add_literals" (formula "49") (term "0,1,0,0,0"))
               (rule "qeq_literals" (formula "49") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "applyEq" (formula "41") (term "0,1,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,1"))
               (rule "mul_literals" (formula "41") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
               (rule "add_literals" (formula "41") (term "0,0,1"))
               (rule "applyEq" (formula "45") (term "0,1,0,1,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
               (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,1,1"))
               (rule "add_literals" (formula "45") (term "0,0,1,1"))
               (rule "applyEq" (formula "50") (term "1,2,0,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "50") (term "2,0,0"))
               (rule "add_literals" (formula "50") (term "0,2,0,0"))
               (rule "applyEqRigid" (formula "44") (term "0,1,0,0,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0"))
               (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "53") (term "0"))
               (rule "polySimp_addComm1" (formula "53") (term "0,0"))
               (rule "add_literals" (formula "53") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "53") (term "0"))
               (rule "add_literals" (formula "53") (term "1,1,0"))
               (rule "times_zero_1" (formula "53") (term "1,0"))
               (rule "add_zero_right" (formula "53") (term "0"))
               (rule "leq_literals" (formula "53"))
               (rule "true_left" (formula "53"))
               (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,1,1"))
               (rule "mul_literals" (formula "43") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,1,1"))
               (rule "add_literals" (formula "43") (term "0,0,1,1"))
               (rule "applyEqRigid" (formula "46") (term "0,1,0,1,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1"))
               (rule "mul_literals" (formula "46") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,1,1"))
               (rule "add_literals" (formula "46") (term "0,0,1,1"))
               (rule "applyEqRigid" (formula "38") (term "0,1,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
               (rule "mul_literals" (formula "38") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
               (rule "add_literals" (formula "38") (term "0,0,1"))
               (rule "applyEqRigid" (formula "73") (term "0,1,0,0,1,1,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,1,0"))
               (rule "mul_literals" (formula "73") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "73") (term "0,0,0,1,1,0"))
               (rule "applyEq" (formula "48") (term "0,0,1,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "48") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "48") (term "0,1,0"))
               (rule "mul_literals" (formula "48") (term "0,0,1,0"))
               (rule "applyEqRigid" (formula "53") (term "1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
               (rule "add_literals" (formula "53") (term "0,1,0"))
               (rule "applyEqRigid" (formula "50") (term "0,1,0,0,2,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,2,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,2,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,2,0"))
               (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "57") (term "0"))
               (rule "polySimp_addComm1" (formula "57") (term "0,0"))
               (rule "add_literals" (formula "57") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "57") (term "0"))
               (rule "add_literals" (formula "57") (term "1,1,0"))
               (rule "times_zero_1" (formula "57") (term "1,0"))
               (rule "add_zero_right" (formula "57") (term "0"))
               (rule "leq_literals" (formula "57"))
               (rule "true_left" (formula "57"))
               (rule "applyEq" (formula "36") (term "0,1,0,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
               (rule "add_literals" (formula "36") (term "0,0,0,1"))
               (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "56") (term "1,0"))
               (rule "add_literals" (formula "56") (term "0,1,0"))
               (rule "applyEqRigid" (formula "60") (term "1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "60") (term "0"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0"))
               (rule "add_literals" (formula "60") (term "0,0,0"))
               (rule "applyEq" (formula "72") (term "1,1,1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "72") (term "1,1,1,0"))
               (rule "add_literals" (formula "72") (term "0,1,1,1,0"))
               (rule "applyEqRigid" (formula "58") (term "1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "58") (term "1,0"))
               (rule "add_literals" (formula "58") (term "0,1,0"))
               (rule "applyEqRigid" (formula "26") (term "0,1,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
               (rule "mul_literals" (formula "26") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,1"))
               (rule "add_literals" (formula "26") (term "0,0,1"))
               (rule "applyEq" (formula "50") (term "1,1,2,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "50") (term "1,2,0"))
               (rule "add_literals" (formula "50") (term "0,1,2,0"))
               (rule "applyEq" (formula "46") (term "0,1,0,0,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0,0"))
               (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0"))
               (rule "applyEq" (formula "32") (term "0,1,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
               (rule "mul_literals" (formula "32") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
               (rule "add_literals" (formula "32") (term "0,0,1"))
               (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "54") (term "0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "54") (term "0"))
               (rule "add_literals" (formula "54") (term "1,1,0"))
               (rule "times_zero_1" (formula "54") (term "1,0"))
               (rule "add_zero_right" (formula "54") (term "0"))
               (rule "leq_literals" (formula "54"))
               (rule "true_left" (formula "54"))
               (rule "applyEqRigid" (formula "39") (term "0,1,0,0,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
               (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
               (rule "add_literals" (formula "39") (term "0,0,0,1"))
               (rule "applyEqRigid" (formula "71") (term "1,1,0,1,0,0,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "71") (term "1,0,1,0,0,0"))
               (rule "add_literals" (formula "71") (term "0,1,0,1,0,0,0"))
               (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "52") (term "1,0"))
               (rule "add_literals" (formula "52") (term "0,1,0"))
               (rule "applyEqRigid" (formula "44") (term "0,1,0,1,1") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,1,1"))
               (rule "mul_literals" (formula "44") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,1,1"))
               (rule "add_literals" (formula "44") (term "0,0,1,1"))
               (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "51") (term "0"))
               (rule "polySimp_addComm1" (formula "51") (term "0,0"))
               (rule "add_literals" (formula "51") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "51") (term "0"))
               (rule "add_literals" (formula "51") (term "1,1,0"))
               (rule "times_zero_1" (formula "51") (term "1,0"))
               (rule "add_zero_right" (formula "51") (term "0"))
               (rule "leq_literals" (formula "51"))
               (rule "true_left" (formula "51"))
               (rule "applyEqRigid" (formula "70") (term "1") (ifseqformula "23"))
               (rule "inEqSimp_sepNegMonomial0" (formula "102"))
               (rule "polySimp_mulLiterals" (formula "102") (term "0"))
               (rule "polySimp_elimOne" (formula "102") (term "0"))
               (rule "applyEq" (formula "49") (term "1,1,0,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "49") (term "1,0,1,0"))
               (rule "add_literals" (formula "49") (term "0,1,0,1,0"))
               (rule "applyEq" (formula "49") (term "1,1,1,0") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "49") (term "1,1,0"))
               (rule "add_literals" (formula "49") (term "0,1,1,0"))
               (rule "applyEq" (formula "49") (term "1,1,2,0,1,1") (ifseqformula "23"))
               (rule "polySimp_addAssoc" (formula "49") (term "1,2,0,1,1"))
               (rule "add_literals" (formula "49") (term "0,1,2,0,1,1"))
               (rule "applyEq" (formula "49") (term "0,1,0,0,0,1,0") (ifseqformula "23"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,1,0"))
               (rule "applyEqRigid" (formula "49") (term "0,0,0,0") (ifseqformula "23"))
               (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "95"))
               (rule "polySimp_mulLiterals" (formula "95") (term "0"))
               (rule "polySimp_elimOne" (formula "95") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "89"))
               (rule "polySimp_mulLiterals" (formula "89") (term "0"))
               (rule "polySimp_elimOne" (formula "89") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "73"))
               (rule "polySimp_mulLiterals" (formula "73") (term "0"))
               (rule "pullOutSelect" (formula "148") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "149"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "147"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "146"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_invertEq" (formula "25") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1"))
               (rule "times_zero_2" (formula "25") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "25") (term "0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
               (rule "applyEqRigid" (formula "50") (term "1,1,0,1,0,0") (ifseqformula "24"))
               (rule "polySimp_addAssoc" (formula "50") (term "1,0,1,0,0"))
               (rule "add_literals" (formula "50") (term "0,1,0,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "43") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "71") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "71") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
               (rule "polySimp_elimOne" (formula "30") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "59"))
               (rule "polySimp_mulComm0" (formula "59") (term "1"))
               (rule "polySimp_rightDist" (formula "59") (term "1"))
               (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
               (rule "mul_literals" (formula "59") (term "0,1"))
               (rule "polySimp_elimOne" (formula "59") (term "1,1"))
               (rule "applyEq" (formula "71") (term "1,1,0,1,0,0,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "71") (term "1,0,1,0,0,0"))
               (rule "add_literals" (formula "71") (term "0,1,0,1,0,0,0"))
               (rule "add_zero_left" (formula "71") (term "1,0,1,0,0,0"))
               (rule "applyEqRigid" (formula "46") (term "0,1,0,1,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1"))
               (rule "mul_literals" (formula "46") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "46") (term "0,1,1"))
               (rule "add_literals" (formula "46") (term "0,0,1,1"))
               (rule "applyEqRigid" (formula "33") (term "0,1,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
               (rule "mul_literals" (formula "33") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
               (rule "add_literals" (formula "33") (term "0,0,1"))
               (rule "applyEq" (formula "27") (term "0,1,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
               (rule "mul_literals" (formula "27") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
               (rule "add_literals" (formula "27") (term "0,0,1"))
               (rule "applyEqRigid" (formula "48") (term "0,1,0,1,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
               (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
               (rule "add_literals" (formula "48") (term "0,0,1,0"))
               (rule "applyEq" (formula "34") (term "0,1,0,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
               (rule "add_literals" (formula "34") (term "0,0,0,1"))
               (rule "applyEqRigid" (formula "57") (term "1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "57") (term "1,0"))
               (rule "add_literals" (formula "57") (term "0,1,0"))
               (rule "applyEqRigid" (formula "50") (term "0,1,0,0,2,0,1,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,2,0,1,1"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,2,0,1,1"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0,1,1"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0,1,1"))
               (rule "add_literals" (formula "50") (term "0,0,0,2,0,1,1"))
               (rule "applyEqRigid" (formula "51") (term "0,1,0,0,2,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,2,0"))
               (rule "polySimp_rightDist" (formula "51") (term "1,0,0,2,0"))
               (rule "mul_literals" (formula "51") (term "0,1,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "51") (term "0,0,2,0"))
               (rule "add_literals" (formula "51") (term "0,0,0,2,0"))
               (rule "applyEq" (formula "45") (term "0,1,0,0,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,0"))
               (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "59"))
               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
               (rule "add_literals" (formula "28") (term "0,0,0,1"))
               (rule "applyEq" (formula "49") (term "0,1,0,1,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
               (rule "add_literals" (formula "49") (term "0,0,1,0"))
               (rule "applyEq" (formula "50") (term "0,1,0,0,0,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "50") (term "0,0,0,0"))
               (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "55") (term "1,0"))
               (rule "add_literals" (formula "55") (term "0,1,0"))
               (rule "applyEqRigid" (formula "50") (term "1,1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "50") (term "1,1,0"))
               (rule "add_literals" (formula "50") (term "0,1,1,0"))
               (rule "add_zero_left" (formula "50") (term "1,1,0"))
               (rule "applyEq" (formula "51") (term "1,1,2,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "51") (term "1,2,0"))
               (rule "add_literals" (formula "51") (term "0,1,2,0"))
               (rule "add_zero_left" (formula "51") (term "1,2,0"))
               (rule "applyEqRigid" (formula "36") (term "0,1,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
               (rule "mul_literals" (formula "36") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
               (rule "add_literals" (formula "36") (term "0,0,1"))
               (rule "applyEqRigid" (formula "50") (term "0,1,0,0,0,1,0,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,0,1,0,0"))
               (rule "applyEq" (formula "42") (term "0,1,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,1"))
               (rule "mul_literals" (formula "42") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,1"))
               (rule "add_literals" (formula "42") (term "0,0,1"))
               (rule "applyEq" (formula "50") (term "0,1,0,0,0,1,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "50") (term "0,0,0,0,1,0"))
               (rule "applyEq" (formula "71") (term "1,1,1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "71") (term "1,1,1,0"))
               (rule "add_literals" (formula "71") (term "0,1,1,1,0"))
               (rule "add_zero_left" (formula "71") (term "1,1,1,0"))
               (rule "applyEq" (formula "47") (term "0,1,0,0,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,0"))
               (rule "applyEqRigid" (formula "50") (term "1,1,2,0,1,1") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "50") (term "1,2,0,1,1"))
               (rule "add_literals" (formula "50") (term "0,1,2,0,1,1"))
               (rule "add_zero_left" (formula "50") (term "1,2,0,1,1"))
               (rule "applyEqRigid" (formula "31") (term "0,0,1") (ifseqformula "59"))
               (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
               (rule "add_literals" (formula "31") (term "0,0,0,1"))
               (rule "applyEq" (formula "51") (term "1,2,0,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "51") (term "2,0,0"))
               (rule "add_literals" (formula "51") (term "0,2,0,0"))
               (rule "add_zero_left" (formula "51") (term "2,0,0"))
               (rule "applyEq" (formula "49") (term "0,1,0,0,1,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,1"))
               (rule "applyEq" (formula "48") (term "0,1,0,0,1,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,1"))
               (rule "mul_literals" (formula "48") (term "0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,1"))
               (rule "add_literals" (formula "48") (term "0,0,0,1,1"))
               (rule "applyEq" (formula "44") (term "0,1,0,1,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,1,1"))
               (rule "mul_literals" (formula "44") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,1,1"))
               (rule "add_literals" (formula "44") (term "0,0,1,1"))
               (rule "applyEqRigid" (formula "25") (term "0,1,0,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0"))
               (rule "applyEqRigid" (formula "53") (term "1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "53") (term "1,0"))
               (rule "add_literals" (formula "53") (term "0,1,0"))
               (rule "applyEqRigid" (formula "52") (term "1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "52") (term "1,0"))
               (rule "add_literals" (formula "52") (term "0,1,0"))
               (rule "add_zero_left" (formula "52") (term "1,0"))
               (rule "applyEqRigid" (formula "30") (term "0,1") (ifseqformula "59"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
               (rule "mul_literals" (formula "30") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
               (rule "add_literals" (formula "30") (term "0,0,1"))
               (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "59"))
               (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
               (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
               (rule "add_literals" (formula "40") (term "0,0,0,1"))
               (rule "applyEq" (formula "45") (term "0,1,0,1,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,1,1"))
               (rule "mul_literals" (formula "45") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,1,1"))
               (rule "add_literals" (formula "45") (term "0,0,1,1"))
               (rule "applyEq" (formula "47") (term "0,1,0,1,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,1,1"))
               (rule "mul_literals" (formula "47") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,1,1"))
               (rule "add_literals" (formula "47") (term "0,0,1,1"))
               (rule "applyEq" (formula "39") (term "0,1,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
               (rule "mul_literals" (formula "39") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
               (rule "add_literals" (formula "39") (term "0,0,1"))
               (rule "applyEqRigid" (formula "43") (term "0,0,1") (ifseqformula "59"))
               (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
               (rule "add_literals" (formula "43") (term "0,0,0,1"))
               (rule "applyEq" (formula "50") (term "1,1,0,1,0,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "50") (term "1,0,1,0,0"))
               (rule "add_literals" (formula "50") (term "0,1,0,1,0,0"))
               (rule "add_zero_left" (formula "50") (term "1,0,1,0,0"))
               (rule "applyEq" (formula "71") (term "0,1,0,0,1,1,0") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,1,0"))
               (rule "mul_literals" (formula "71") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "71") (term "0,0,0,1,1,0"))
               (rule "applyEqRigid" (formula "56") (term "1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "56") (term "1,0"))
               (rule "add_literals" (formula "56") (term "0,1,0"))
               (rule "applyEq" (formula "71") (term "0,0,0,1,0,0,0") (ifseqformula "59"))
               (rule "inEqSimp_homoInEq1" (formula "71") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "71") (term "0,1,0,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "71") (term "0,0,0,0,1,0,0,0"))
               (rule "applyEqRigid" (formula "37") (term "0,1,0,0,1") (ifseqformula "59"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
               (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
               (rule "add_literals" (formula "37") (term "0,0,0,1"))
               (rule "applyEqRigid" (formula "54") (term "1,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
               (rule "add_literals" (formula "54") (term "0,1,0"))
               (rule "applyEqRigid" (formula "50") (term "1,1,0,1,0") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "50") (term "1,0,1,0"))
               (rule "add_literals" (formula "50") (term "0,1,0,1,0"))
               (rule "add_zero_left" (formula "50") (term "1,0,1,0"))
               (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "24") (term "1"))
               (rule "add_literals" (formula "24") (term "0,1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "polySimp_homoEq" (formula "24") (term "1"))
               (rule "mul_literals" (formula "24") (term "1,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,1"))
               (rule "applyEqRigid" (formula "71") (term "1,1") (ifseqformula "59"))
               (rule "polySimp_addAssoc" (formula "71") (term "1"))
               (rule "add_literals" (formula "71") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "46") (term "0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
               (rule "polySimp_elimOne" (formula "33") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
               (rule "polySimp_elimOne" (formula "27") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "34") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,2,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "50") (term "0,0,2,0,1,1"))
               (rule "polySimp_elimOne" (formula "50") (term "0,0,2,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,2,0"))
               (rule "polySimp_mulLiterals" (formula "51") (term "0,0,2,0"))
               (rule "polySimp_elimOne" (formula "51") (term "0,0,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
               (rule "inEqSimp_invertInEq0" (formula "50") (term "0,0,0"))
               (rule "times_zero_2" (formula "50") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "50") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
               (rule "polySimp_elimOne" (formula "36") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
               (rule "polySimp_elimOne" (formula "42") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
               (rule "mul_literals" (formula "24") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "49") (term "0,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "48") (term "0,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "44") (term "0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
               (rule "polySimp_elimOne" (formula "30") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "40") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "45") (term "0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "47") (term "0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
               (rule "polySimp_elimOne" (formula "39") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "43") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "71") (term "0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "71") (term "0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "71") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "71") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "50") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "50") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "71") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "71") (term "0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "70"))
               (rule "leq_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "145"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "commute_and" (formula "147"))
               (rule "newSym_eq" (formula "74") (inst "l=l_0") (inst "newSymDef=mul(result_199, Z(0(#)))"))
               (rule "times_zero_1" (formula "74") (term "1,1"))
               (rule "add_zero_right" (formula "74") (term "1"))
               (rule "applyEq" (formula "75") (term "0,0") (ifseqformula "74"))
               (rule "eqSymm" (formula "75"))
               (rule "applyEq" (formula "110") (term "0") (ifseqformula "75"))
               (rule "applyEq" (formula "109") (term "0") (ifseqformula "75"))
               (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "75"))
               (rule "elimGcdLeq_antec" (formula "109") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "polySimp_mulLiterals" (formula "109") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "109") (term "0,0"))
                (builtin "One Step Simplification" (formula "109"))
               (rule "mul_literals" (formula "109") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "109") (term "1,0,0"))
               (rule "neg_literal" (formula "109") (term "0,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "109") (term "0,0,0,0"))
               (rule "add_literals" (formula "109") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "109") (term "0,0"))
               (rule "add_literals" (formula "109") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "109") (term "1,0,0"))
               (rule "add_literals" (formula "109") (term "0,0"))
               (rule "qeq_literals" (formula "109") (term "0"))
                (builtin "One Step Simplification" (formula "109"))
               (rule "elimGcdGeq_antec" (formula "110") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "leq_literals" (formula "110") (term "0,0"))
                (builtin "One Step Simplification" (formula "110"))
               (rule "polySimp_mulLiterals" (formula "110") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "110") (term "1,0,0"))
               (rule "mul_literals" (formula "110") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "110") (term "0,0,0,0"))
               (rule "add_literals" (formula "110") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "110") (term "0,0"))
               (rule "add_literals" (formula "110") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "110") (term "1,0,0"))
               (rule "add_literals" (formula "110") (term "0,0"))
               (rule "leq_literals" (formula "110") (term "0"))
                (builtin "One Step Simplification" (formula "110"))
               (rule "cut_direct" (formula "44") (term "0"))
               (branch "CUT: seqGetOutside = 115 TRUE"
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "true_left" (formula "45"))
                  (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "44"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "43"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "42"))
                  (rule "equal_literals" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "41"))
                  (rule "equal_literals" (formula "46") (term "0,1"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "applyEqRigid" (formula "36") (term "0,0") (ifseqformula "41"))
                  (rule "equal_literals" (formula "36") (term "0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "applyEqRigid" (formula "38") (term "0,0") (ifseqformula "41"))
                  (rule "equal_literals" (formula "38") (term "0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "39"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "40"))
                  (rule "equal_literals" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "applyEqRigid" (formula "43") (term "0,0,1") (ifseqformula "39"))
                  (rule "equal_literals" (formula "43") (term "0,1"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "andLeft" (formula "43"))
                  (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "39"))
                  (rule "equal_literals" (formula "33") (term "0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "39"))
                  (rule "equal_literals" (formula "27") (term "0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "replace_known_left" (formula "48") (term "0,2,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "replace_known_left" (formula "68") (term "0,1,1,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "27")))
                  (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "replace_known_left" (formula "45") (term "0,2,0,1,1") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "44")))
                  (rule "polySimp_homoEq" (formula "66") (term "1"))
                  (rule "times_zero_2" (formula "66") (term "1,0,1"))
                  (rule "add_zero_right" (formula "66") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                  (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0"))
                  (rule "add_literals" (formula "45") (term "1,0,0"))
                  (rule "times_zero_1" (formula "45") (term "0,0"))
                  (rule "qeq_literals" (formula "45") (term "0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "andLeft" (formula "45"))
                  (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "37"))
                  (rule "equal_literals" (formula "39") (term "0"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "replace_known_left" (formula "41") (term "0,1") (ifseqformula "39"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                  (rule "true_left" (formula "41"))
                  (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "37"))
                  (rule "equal_literals" (formula "27") (term "0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "36"))
                  (rule "equal_literals" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "applyEq" (formula "46") (term "1") (ifseqformula "44"))
                  (rule "applyEq" (formula "67") (term "1") (ifseqformula "44"))
                  (rule "polySimp_sepPosMonomial" (formula "66") (term "1"))
                  (rule "mul_literals" (formula "66") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "39"))
                  (rule "leq_literals" (formula "33") (term "0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                  (rule "leq_literals" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "39"))
                  (rule "leq_literals" (formula "37") (term "0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "inEqSimp_subsumption1" (formula "35") (term "1,1") (ifseqformula "38"))
                  (rule "leq_literals" (formula "35") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "31"))
                  (rule "leq_literals" (formula "62") (term "0"))
                   (builtin "One Step Simplification" (formula "62"))
                  (rule "true_left" (formula "62"))
                  (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "38"))
                  (rule "leq_literals" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "39"))
                  (rule "leq_literals" (formula "37") (term "0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "inEqSimp_subsumption1" (formula "32") (term "0,1") (ifseqformula "38"))
                  (rule "leq_literals" (formula "32") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "29"))
                  (rule "leq_literals" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "37"))
                  (rule "leq_literals" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "32") (term "0,0") (ifseqformula "36"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "inEqSimp_and_subsumption3" (formula "70") (term "0,0,0"))
                  (rule "leq_literals" (formula "70") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "70"))
                  (rule "cut_direct" (formula "135") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                      (builtin "One Step Simplification" (formula "136"))
                     (rule "false_right" (formula "136"))
                     (rule "replace_known_left" (formula "135") (term "1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "135"))
                     (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3") (term "0,0,0"))
                     (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "134"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "136") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "132"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "135")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                      (builtin "One Step Simplification" (formula "136"))
                     (rule "notRight" (formula "136"))
                     (rule "replace_known_right" (formula "135") (term "1") (ifseqformula "136"))
                      (builtin "One Step Simplification" (formula "135"))
                     (rule "false_right" (formula "135"))
                     (rule "inEqSimp_and_subsumption3" (formula "72") (term "0,0,0"))
                     (rule "leq_literals" (formula "72") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "seqGetAlphaCast" (formula "57") (term "0"))
                     (rule "castDel" (formula "57") (term "0"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "true_left" (formula "57"))
                     (rule "seqGetAlphaCast" (formula "58") (term "0"))
                     (rule "castDel" (formula "58") (term "0"))
                      (builtin "One Step Simplification" (formula "58"))
                     (rule "true_left" (formula "58"))
                     (rule "cut_direct" (formula "47") (term "0"))
                     (branch "CUT: sk_0 = strPool( 〈' '〉 ∘ ( 〈'l'〉 ∘ (〈'i'〉 ∘ (〈'n'〉 ∘ (〈'e'〉 ∘ 〈's'〉))))) TRUE"
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "55") (term "0,0"))
                        (rule "applyEqRigid" (formula "52") (term "0,0,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "52") (term "0,0"))
                        (rule "applyEqRigid" (formula "58") (term "0,0,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "58") (term "0,0"))
                        (rule "applyEq" (formula "42") (term "0,0,1,1,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "42") (term "0,1,1,0"))
                        (rule "lenOfSeqConcat" (formula "42") (term "1,1,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                        (rule "add_literals" (formula "42") (term "0,1,0"))
                        (rule "lenOfSeqConcat" (formula "42") (term "1,1,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                        (rule "add_literals" (formula "42") (term "0,1,0"))
                        (rule "lenOfSeqConcat" (formula "42") (term "1,1,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                        (rule "add_literals" (formula "42") (term "0,1,0"))
                        (rule "lenOfSeqConcat" (formula "42") (term "1,1,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                        (rule "add_literals" (formula "42") (term "0,1,0"))
                        (rule "lenOfSeqConcat" (formula "42") (term "1,1,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "add_literals" (formula "42") (term "1,1,0"))
                        (rule "add_literals" (formula "42") (term "1,0"))
                        (rule "applyEq" (formula "39") (term "0,0,2,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "39") (term "0,2,0"))
                        (rule "lenOfSeqConcat" (formula "39") (term "2,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "polySimp_addAssoc" (formula "39") (term "2,0"))
                        (rule "add_literals" (formula "39") (term "0,2,0"))
                        (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "polySimp_addAssoc" (formula "39") (term "2,0"))
                        (rule "add_literals" (formula "39") (term "0,2,0"))
                        (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "polySimp_addAssoc" (formula "39") (term "2,0"))
                        (rule "add_literals" (formula "39") (term "0,2,0"))
                        (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "add_literals" (formula "39") (term "1,2,0"))
                        (rule "add_literals" (formula "39") (term "2,0"))
                        (rule "applyEq" (formula "40") (term "0,0,2,0,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "40") (term "0,2,0,0"))
                        (rule "lenOfSeqConcat" (formula "40") (term "2,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "polySimp_addAssoc" (formula "40") (term "2,0,0"))
                        (rule "add_literals" (formula "40") (term "0,2,0,0"))
                        (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "polySimp_addAssoc" (formula "40") (term "2,0,0"))
                        (rule "add_literals" (formula "40") (term "0,2,0,0"))
                        (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "polySimp_addAssoc" (formula "40") (term "2,0,0"))
                        (rule "add_literals" (formula "40") (term "0,2,0,0"))
                        (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "add_literals" (formula "40") (term "1,2,0,0"))
                        (rule "add_literals" (formula "40") (term "2,0,0"))
                        (rule "applyEqRigid" (formula "57") (term "0,0,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "57") (term "0,0"))
                        (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "47"))
                        (rule "poolKeyIsContentOfValue" (formula "37") (term "0,0"))
                        (rule "lenOfSeqConcat" (formula "37") (term "0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0"))
                        (rule "add_literals" (formula "37") (term "0,0"))
                        (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0"))
                        (rule "add_literals" (formula "37") (term "0,0"))
                        (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0"))
                        (rule "add_literals" (formula "37") (term "0,0"))
                        (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "add_literals" (formula "37") (term "1,0"))
                        (rule "add_literals" (formula "37") (term "0"))
                        (rule "qeq_literals" (formula "37"))
                        (rule "closeFalse" (formula "37"))
                     )
                     (branch "CUT: sk_0 = strPool( 〈' '〉 ∘ ( 〈'l'〉 ∘ (〈'i'〉 ∘ (〈'n'〉 ∘ (〈'e'〉 ∘ 〈's'〉))))) FALSE"
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "nnf_imp2or" (formula "81") (term "0"))
                        (rule "nnf_imp2or" (formula "75") (term "0"))
                        (rule "nnf_imp2or" (formula "80") (term "0"))
                        (rule "nnf_imp2or" (formula "88") (term "0"))
                        (rule "nnf_imp2or" (formula "87") (term "0"))
                        (rule "nnf_imp2or" (formula "94") (term "0"))
                        (rule "commute_and" (formula "3") (term "0,0"))
                        (rule "nnf_imp2or" (formula "71") (term "0"))
                        (rule "commute_or" (formula "25"))
                        (rule "inEqSimp_or_weaken1" (formula "25"))
                        (rule "add_literals" (formula "25") (term "1,0"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "37")))
                        (rule "true_left" (formula "25"))
                        (rule "nnf_imp2or" (formula "71") (term "0"))
                        (rule "nnf_notAnd" (formula "80") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "80") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "80") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0"))
                        (rule "times_zero_1" (formula "80") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                        (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "74") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                        (rule "times_zero_1" (formula "74") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                        (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "79") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                        (rule "times_zero_1" (formula "79") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "79") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "87") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "87") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "87") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0"))
                        (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0"))
                        (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "86") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "86") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "86") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0"))
                        (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "86") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                        (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "93") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0"))
                        (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "93") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0"))
                        (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "93") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "93") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "93") (term "1,0"))
                        (rule "nnf_notAnd" (formula "70") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                        (rule "seqGetAlphaCast" (formula "45") (term "0"))
                        (rule "castDel" (formula "45") (term "0"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "seqGetAlphaCast" (formula "43") (term "0"))
                        (rule "castDel" (formula "43") (term "0"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "true_left" (formula "43"))
                        (rule "nnf_notAnd" (formula "70") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "70") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "70") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "70") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,1,0,0,0"))
                        (rule "commute_and" (formula "2") (term "0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "71") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0,0"))
                        (rule "seqGetAlphaCast" (formula "41") (term "0"))
                        (rule "castDel" (formula "41") (term "0"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "seqGetAlphaCast" (formula "40") (term "0"))
                        (rule "castDel" (formula "40") (term "0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "true_left" (formula "40"))
                        (rule "seqGetAlphaCast" (formula "44") (term "0"))
                        (rule "castDel" (formula "44") (term "0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "seqGetAlphaCast" (formula "42") (term "0"))
                        (rule "castDel" (formula "42") (term "0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "true_left" (formula "42"))
                        (rule "commute_or_2" (formula "80") (term "0"))
                        (rule "commute_or_2" (formula "74") (term "0"))
                        (rule "jdiv_axiom" (formula "60") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "60"))
                        (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "61"))
                        (rule "elimGcdGeq" (formula "60") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
                        (rule "mul_literals" (formula "60") (term "0,0,0,0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,0"))
                        (rule "sub_literals" (formula "60") (term "0,0,0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "60") (term "0,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "60") (term "0,0,1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "60") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "60") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "60") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,0,0"))
                        (rule "add_literals" (formula "60") (term "1,0,0,0,0"))
                        (rule "times_zero_1" (formula "60") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "60") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "polyDiv_pullOut" (formula "60") (term "1,0") (inst "polyDivCoeff=l_0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,1,0"))
                        (rule "equal_literals" (formula "60") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,1,0"))
                        (rule "add_literals" (formula "60") (term "1,0,0,1,0"))
                        (rule "times_zero_1" (formula "60") (term "0,0,1,0"))
                        (rule "div_literals" (formula "60") (term "0,1,0"))
                        (rule "add_zero_left" (formula "60") (term "1,0"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "polySimp_homoEq" (formula "60") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "60") (term "1"))
                        (rule "polyDiv_pullOut" (formula "60") (term "0,1") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,2,0,1"))
                        (rule "equal_literals" (formula "60") (term "0,0,1"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,1"))
                        (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,0,1"))
                        (rule "add_literals" (formula "60") (term "1,0,0,0,1"))
                        (rule "times_zero_1" (formula "60") (term "0,0,0,1"))
                        (rule "div_literals" (formula "60") (term "0,0,1"))
                        (rule "add_zero_left" (formula "60") (term "0,1"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "commute_or_2" (formula "79") (term "0"))
                        (rule "commute_or" (formula "87") (term "0,0"))
                        (rule "commute_and" (formula "87") (term "0,0,1,0"))
                        (rule "commute_and" (formula "86") (term "0,0,1,0"))
                        (rule "commute_or" (formula "86") (term "0,0"))
                        (rule "commute_or" (formula "93") (term "0,0"))
                        (rule "commute_or_2" (formula "70") (term "0"))
                        (rule "commute_or_2" (formula "71") (term "0"))
                        (rule "seqGetAlphaCast" (formula "28") (term "0"))
                        (rule "castDel" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "commute_or" (formula "80") (term "0,0"))
                        (rule "commute_or" (formula "74") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "35") (term "0"))
                        (rule "castDel" (formula "35") (term "0"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "seqGetAlphaCast" (formula "29") (term "0"))
                        (rule "castDel" (formula "29") (term "0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "commute_and_2" (formula "93") (term "0,1,1,0"))
                        (rule "seqGetAlphaCast" (formula "27") (term "0"))
                        (rule "castDel" (formula "27") (term "0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "substringSubstring" (formula "39") (term "0") (inst "newSym=newSym_1"))
                        (rule "add_zero_right" (formula "39") (term "1,0,1,1"))
                        (rule "qeq_literals" (formula "39") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")))
                        (rule "add_zero_left" (formula "39") (term "2,0,1,1"))
                        (rule "qeq_literals" (formula "39") (term "1,0,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                        (rule "times_zero_2" (formula "39") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "39") (term "1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,0"))
                        (rule "add_literals" (formula "39") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "39") (term "0,1,0"))
                        (rule "qeq_literals" (formula "39") (term "1,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "applyEqRigid" (formula "39") (term "0,1,0") (ifseqformula "48"))
                        (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,1,0"))
                        (rule "add_literals" (formula "39") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "39") (term "1,0,1,0"))
                        (rule "add_literals" (formula "39") (term "0,1,0"))
                        (rule "leq_literals" (formula "39") (term "1,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "applyEqRigid" (formula "39") (term "0,1,1") (ifseqformula "38"))
                        (rule "eqSymm" (formula "39") (term "1,1"))
                        (rule "applyEqRigid" (formula "39") (term "0,0,1") (ifseqformula "40"))
                        (rule "eqSymm" (formula "39") (term "0,1"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "inEqSimp_subsumption1" (formula "39") (term "0") (ifseqformula "36"))
                        (rule "leq_literals" (formula "39") (term "0,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "seqGetAlphaCast" (formula "25") (term "0"))
                        (rule "castDel" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "commute_or_2" (formula "81") (term "0"))
                        (rule "commute_or_2" (formula "75") (term "0"))
                        (rule "commute_or" (formula "80") (term "0,0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                        (rule "andLeft" (formula "38"))
                        (rule "lenOfSeqSub" (formula "38") (term "0"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                        (rule "lenOfSeqSub" (formula "39") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "39") (term "1,1,1,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "42"))
                        (rule "eqSymm" (formula "38"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "true_left" (formula "38"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "true_left" (formula "38"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                        (rule "andLeft" (formula "37"))
                        (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "42"))
                        (rule "eqSymm" (formula "37"))
                        (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                        (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "39"))
                        (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "40"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "38") (term "1,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,1,0,0"))
                        (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "39"))
                        (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "42"))
                        (rule "eqSymm" (formula "37"))
                        (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                        (rule "eqSymm" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "37"))
                        (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "commute_or_2" (formula "71") (term "0,0"))
                        (rule "commute_or_2" (formula "72") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "26") (term "0"))
                        (rule "castDel" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                        (rule "andLeft" (formula "40"))
                        (rule "lenOfSeqSub" (formula "40") (term "0"))
                        (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                        (rule "lenOfSeqSubEQ" (formula "40") (term "1") (ifseqformula "42"))
                        (rule "eqSymm" (formula "40"))
                        (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "true_left" (formula "40"))
                        (rule "lenOfSeqSub" (formula "40") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "40") (term "1,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                        (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "true_left" (formula "40"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "59") (inst "iv=iv"))
                        (rule "andLeft" (formula "59"))
                        (rule "lenOfSeqSub" (formula "59") (term "0"))
                        (rule "polySimp_elimSub" (formula "59") (term "1,0"))
                        (rule "mul_literals" (formula "59") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "59") (term "1,0"))
                        (rule "lenOfSeqSub" (formula "60") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "60") (term "1,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "60") (term "1,1,1,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "59") (term "1") (ifseqformula "40"))
                        (rule "eqSymm" (formula "59"))
                        (rule "polySimp_elimSub" (formula "59") (term "1,0"))
                        (rule "mul_literals" (formula "59") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "59") (term "1,0"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "59") (term "0,0,1,1,0,0"))
                        (rule "add_literals" (formula "59") (term "0,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
                        (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "seqGetAlphaCast" (formula "30") (term "0"))
                        (rule "castDel" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "commute_or_2" (formula "80") (term "0"))
                        (rule "seqGetAlphaCast" (formula "32") (term "0"))
                        (rule "castDel" (formula "32") (term "0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "commute_and_2" (formula "88") (term "0,1,0"))
                        (rule "commute_and_2" (formula "87") (term "0,1,0"))
                        (rule "commute_and" (formula "94") (term "0,0,1,1,0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_0 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                           (rule "applyEqReverse" (formula "139") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "136") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "136") (term "2,0") (ifseqformula "2"))
                           (rule "castTrueImpliesOriginalTrue" (formula "136") (ifseqformula "1"))
                           (rule "closeTrue" (formula "136"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_0 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_or" (formula "70") (term "0,0,0"))
                           (rule "commute_or" (formula "71") (term "0,0,0"))
                           (rule "commute_or_2" (formula "70") (term "0,0"))
                           (rule "commute_or_2" (formula "70") (term "0"))
                           (rule "commute_or_2" (formula "71") (term "0,0"))
                           (rule "commute_or_2" (formula "71") (term "0"))
                           (rule "commute_and_2" (formula "93") (term "0,1,1,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                           (rule "andLeft" (formula "38"))
                           (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "41"))
                           (rule "eqSymm" (formula "38"))
                           (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                           (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                           (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                           (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0,0,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,1,0,0"))
                           (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "40"))
                           (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "37"))
                           (rule "eqSymm" (formula "38"))
                           (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                           (rule "eqSymm" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1"))
                           (rule "eqSymm" (formula "38"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "ex_pull_out3" (formula "87") (term "0"))
                           (rule "cnf_rightDist" (formula "87") (term "0,0"))
                           (rule "shift_paren_or" (formula "87") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "87") (term "0,0,0"))
                           (rule "commute_or_2" (formula "87") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "87") (term "1,0,0,0"))
                           (rule "commute_or" (formula "87") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "86") (term "0"))
                           (rule "cnf_rightDist" (formula "86") (term "0,0"))
                           (rule "shift_paren_or" (formula "86") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "86") (term "0,0,0"))
                           (rule "commute_or_2" (formula "86") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "86") (term "1,0,0,0"))
                           (rule "commute_or" (formula "86") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "93") (term "1,0"))
                           (rule "cnf_rightDist" (formula "93") (term "0,1,0"))
                           (rule "commute_or" (formula "93") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "93") (term "0,0,1,0"))
                           (rule "commute_or" (formula "93") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "74") (inst "t=i_2_0"))
                           (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                           (rule "applyEq" (formula "74") (term "0,0,0,0") (ifseqformula "79"))
                           (rule "replace_known_right" (formula "74") (term "0,0,0") (ifseqformula "118"))
                            (builtin "One Step Simplification" (formula "74"))
                           (rule "true_left" (formula "74"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "139") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "138") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "138") (term "2,0") (ifseqformula "2"))
                              (rule "castTrueImpliesOriginalTrue" (formula "138") (ifseqformula "1"))
                              (rule "closeTrue" (formula "138"))
                           )
                           (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                              (rule "close" (formula "138") (ifseqformula "2"))
                           )
                        )
                     )
                  )
               )
               (branch "CUT: seqGetOutside = 115 FALSE"
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "115"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "115"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "replace_known_left" (formula "46") (term "1,1") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "45")) (ifInst ""  (formula "44")))
                  (rule "true_left" (formula "46"))
                  (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "41"))
                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                  (rule "true_left" (formula "43"))
                  (rule "inEqSimp_contradEq7" (formula "25") (term "1,1") (ifseqformula "44"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,1,1"))
                  (rule "add_zero_right" (formula "25") (term "0,0,1,1"))
                  (rule "leq_literals" (formula "25") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "replace_known_left" (formula "70") (term "0,1,1,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "25")))
                  (rule "replace_known_left" (formula "50") (term "0,2,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "replace_known_left" (formula "47") (term "0,0,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                  (rule "polySimp_homoEq" (formula "68") (term "1"))
                  (rule "times_zero_2" (formula "68") (term "1,0,1"))
                  (rule "add_zero_right" (formula "68") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "47") (term "0,1,0"))
                  (rule "add_literals" (formula "47") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "47") (term "0,1,0"))
                  (rule "qeq_literals" (formula "47") (term "1,0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "polySimp_sepPosMonomial" (formula "68") (term "1"))
                  (rule "mul_literals" (formula "68") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "25"))
                  (rule "leq_literals" (formula "67") (term "0"))
                   (builtin "One Step Simplification" (formula "67"))
                  (rule "true_left" (formula "67"))
                  (rule "inEqSimp_subsumption1" (formula "28") (term "1") (ifseqformula "42"))
                  (rule "leq_literals" (formula "28") (term "0,1"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "36") (term "1") (ifseqformula "39"))
                  (rule "leq_literals" (formula "36") (term "0,1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "inEqSimp_subsumption1" (formula "34") (term "0,1") (ifseqformula "38"))
                  (rule "leq_literals" (formula "34") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "inEqSimp_subsumption1" (formula "28") (term "0,1") (ifseqformula "39"))
                  (rule "leq_literals" (formula "28") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "inEqSimp_subsumption1" (formula "31") (term "1") (ifseqformula "36"))
                  (rule "leq_literals" (formula "31") (term "0,1"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_subsumption1" (formula "33") (term "0,1") (ifseqformula "35"))
                  (rule "leq_literals" (formula "33") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "inEqSimp_subsumption1" (formula "30") (term "0,1") (ifseqformula "36"))
                  (rule "leq_literals" (formula "30") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "30"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "35"))
                  (rule "leq_literals" (formula "33") (term "0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "34"))
                  (rule "leq_literals" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "inEqSimp_subsumption1" (formula "27") (term "1") (ifseqformula "33"))
                  (rule "leq_literals" (formula "27") (term "0,1"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "cut_direct" (formula "33") (term "0"))
                  (branch "CUT: seqGetOutside = 101 TRUE"
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "applyEqRigid" (formula "36") (term "0,0,1") (ifseqformula "33"))
                     (rule "equal_literals" (formula "36") (term "0,1"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "andLeft" (formula "36"))
                     (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "applyEq" (formula "35") (term "0,0,1") (ifseqformula "33"))
                     (rule "equal_literals" (formula "35") (term "0,1"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "applyEqRigid" (formula "102") (term "0") (ifseqformula "33"))
                     (rule "equal_literals" (formula "102"))
                     (rule "false_right" (formula "102"))
                     (rule "applyEq" (formula "60") (term "1") (ifseqformula "39"))
                     (rule "applyEq" (formula "41") (term "1") (ifseqformula "39"))
                     (rule "inEqSimp_subsumption1" (formula "34") (term "1,1") (ifseqformula "38"))
                     (rule "leq_literals" (formula "34") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "36"))
                     (rule "leq_literals" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "37"))
                     (rule "leq_literals" (formula "35") (term "0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "inEqSimp_subsumption1" (formula "33") (term "0,0") (ifseqformula "36"))
                     (rule "leq_literals" (formula "33") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "inEqSimp_and_subsumption3" (formula "70") (term "0,0,0"))
                     (rule "leq_literals" (formula "70") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "cut_direct" (formula "135") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                         (builtin "One Step Simplification" (formula "136"))
                        (rule "false_right" (formula "136"))
                        (rule "replace_known_left" (formula "135") (term "1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "135"))
                        (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "0,0,0"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "134"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "136") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "135") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "132"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "135")))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "136"))
                        (rule "notRight" (formula "136"))
                        (rule "replace_known_right" (formula "135") (term "1") (ifseqformula "136"))
                         (builtin "One Step Simplification" (formula "135"))
                        (rule "false_right" (formula "135"))
                        (rule "inEqSimp_and_subsumption3" (formula "72") (term "0,0,0"))
                        (rule "leq_literals" (formula "72") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "72"))
                        (rule "cut_direct" (formula "47") (term "0"))
                        (branch "CUT: sk_0 = strPool( 〈' '〉 ∘ ( 〈'l'〉 ∘ (〈'i'〉 ∘ (〈'n'〉 ∘ (〈'e'〉 ∘ 〈's'〉))))) TRUE"
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "57") (term "0,0"))
                           (rule "applyEq" (formula "43") (term "0,0,1,1,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "43") (term "0,1,1,0"))
                           (rule "lenOfSeqConcat" (formula "43") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "polySimp_addAssoc" (formula "43") (term "1,0"))
                           (rule "add_literals" (formula "43") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "43") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "polySimp_addAssoc" (formula "43") (term "1,0"))
                           (rule "add_literals" (formula "43") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "43") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "polySimp_addAssoc" (formula "43") (term "1,0"))
                           (rule "add_literals" (formula "43") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "43") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "polySimp_addAssoc" (formula "43") (term "1,0"))
                           (rule "add_literals" (formula "43") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "43") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "add_literals" (formula "43") (term "1,1,0"))
                           (rule "add_literals" (formula "43") (term "1,0"))
                           (rule "applyEqRigid" (formula "2") (term "1,0,0,0") (ifseqformula "47"))
                           (rule "applyEqRigid" (formula "46") (term "0,0,1,1,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "46") (term "0,1,1,0"))
                           (rule "lenOfSeqConcat" (formula "46") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                           (rule "add_literals" (formula "46") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "46") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                           (rule "add_literals" (formula "46") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "46") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                           (rule "add_literals" (formula "46") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "46") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                           (rule "add_literals" (formula "46") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "46") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "add_literals" (formula "46") (term "1,1,0"))
                           (rule "add_literals" (formula "46") (term "1,0"))
                           (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "55") (term "0,0"))
                           (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "49") (term "0,0"))
                           (rule "applyEq" (formula "44") (term "0,0,1,1,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "44") (term "0,1,1,0"))
                           (rule "lenOfSeqConcat" (formula "44") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "polySimp_addAssoc" (formula "44") (term "1,0"))
                           (rule "add_literals" (formula "44") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "44") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "polySimp_addAssoc" (formula "44") (term "1,0"))
                           (rule "add_literals" (formula "44") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "44") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "polySimp_addAssoc" (formula "44") (term "1,0"))
                           (rule "add_literals" (formula "44") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "44") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "polySimp_addAssoc" (formula "44") (term "1,0"))
                           (rule "add_literals" (formula "44") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "44") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "add_literals" (formula "44") (term "1,1,0"))
                           (rule "add_literals" (formula "44") (term "1,0"))
                           (rule "applyEq" (formula "41") (term "0,0,1,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "41") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "41") (term "1,0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "lenOfSeqConcat" (formula "41") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "polySimp_addAssoc" (formula "41") (term "1,0"))
                           (rule "add_literals" (formula "41") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "41") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "polySimp_addAssoc" (formula "41") (term "1,0"))
                           (rule "add_literals" (formula "41") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "41") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "polySimp_addAssoc" (formula "41") (term "1,0"))
                           (rule "add_literals" (formula "41") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "41") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "add_literals" (formula "41") (term "1,1,0"))
                           (rule "add_literals" (formula "41") (term "1,0"))
                           (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "54") (term "0,0"))
                           (rule "applyEqRigid" (formula "39") (term "0,0,2,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "39") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "39") (term "2,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "polySimp_addAssoc" (formula "39") (term "2,0"))
                           (rule "add_literals" (formula "39") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "polySimp_addAssoc" (formula "39") (term "2,0"))
                           (rule "add_literals" (formula "39") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "polySimp_addAssoc" (formula "39") (term "2,0"))
                           (rule "add_literals" (formula "39") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "39") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "add_literals" (formula "39") (term "1,2,0"))
                           (rule "add_literals" (formula "39") (term "2,0"))
                           (rule "applyEqRigid" (formula "40") (term "0,0,2,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "40") (term "0,2,0,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "2,0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "polySimp_addAssoc" (formula "40") (term "2,0,0"))
                           (rule "add_literals" (formula "40") (term "0,2,0,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "polySimp_addAssoc" (formula "40") (term "2,0,0"))
                           (rule "add_literals" (formula "40") (term "0,2,0,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "polySimp_addAssoc" (formula "40") (term "2,0,0"))
                           (rule "add_literals" (formula "40") (term "0,2,0,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,2,0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "add_literals" (formula "40") (term "1,2,0,0"))
                           (rule "add_literals" (formula "40") (term "2,0,0"))
                           (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "58") (term "0,0"))
                           (rule "applyEqRigid" (formula "59") (term "0,0,2,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "59") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "59") (term "2,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "lenOfSeqConcat" (formula "59") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polySimp_addAssoc" (formula "59") (term "2,0"))
                           (rule "add_literals" (formula "59") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "59") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polySimp_addAssoc" (formula "59") (term "2,0"))
                           (rule "add_literals" (formula "59") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "59") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polySimp_addAssoc" (formula "59") (term "2,0"))
                           (rule "add_literals" (formula "59") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "59") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "add_literals" (formula "59") (term "1,2,0"))
                           (rule "add_literals" (formula "59") (term "2,0"))
                           (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "51") (term "0,0"))
                           (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "53") (term "0,0"))
                           (rule "applyEqRigid" (formula "45") (term "0,0,1,1,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "45") (term "0,1,1,0"))
                           (rule "lenOfSeqConcat" (formula "45") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "polySimp_addAssoc" (formula "45") (term "1,0"))
                           (rule "add_literals" (formula "45") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "45") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "polySimp_addAssoc" (formula "45") (term "1,0"))
                           (rule "add_literals" (formula "45") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "45") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "polySimp_addAssoc" (formula "45") (term "1,0"))
                           (rule "add_literals" (formula "45") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "45") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "polySimp_addAssoc" (formula "45") (term "1,0"))
                           (rule "add_literals" (formula "45") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "45") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "add_literals" (formula "45") (term "1,1,0"))
                           (rule "add_literals" (formula "45") (term "1,0"))
                           (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "47"))
                           (rule "poolKeyIsContentOfValue" (formula "37") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "37") (term "0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0"))
                           (rule "add_literals" (formula "37") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0"))
                           (rule "add_literals" (formula "37") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0"))
                           (rule "add_literals" (formula "37") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "37") (term "1,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "add_literals" (formula "37") (term "1,0"))
                           (rule "add_literals" (formula "37") (term "0"))
                           (rule "qeq_literals" (formula "37"))
                           (rule "closeFalse" (formula "37"))
                        )
                        (branch "CUT: sk_0 = strPool( 〈' '〉 ∘ ( 〈'l'〉 ∘ (〈'i'〉 ∘ (〈'n'〉 ∘ (〈'e'〉 ∘ 〈's'〉))))) FALSE"
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "seqGetAlphaCast" (formula "58") (term "0"))
                           (rule "castDel" (formula "58") (term "0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "true_left" (formula "58"))
                           (rule "seqGetAlphaCast" (formula "57") (term "0"))
                           (rule "castDel" (formula "57") (term "0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "true_left" (formula "57"))
                           (rule "nnf_imp2or" (formula "81") (term "0"))
                           (rule "nnf_imp2or" (formula "75") (term "0"))
                           (rule "nnf_imp2or" (formula "80") (term "0"))
                           (rule "nnf_imp2or" (formula "88") (term "0"))
                           (rule "nnf_imp2or" (formula "87") (term "0"))
                           (rule "nnf_imp2or" (formula "94") (term "0"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "nnf_imp2or" (formula "71") (term "0"))
                           (rule "commute_or" (formula "25"))
                           (rule "inEqSimp_or_weaken1" (formula "25"))
                           (rule "add_literals" (formula "25") (term "1,0"))
                            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "37")))
                           (rule "true_left" (formula "25"))
                           (rule "nnf_imp2or" (formula "71") (term "0"))
                           (rule "nnf_notAnd" (formula "80") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "80") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "80") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0"))
                           (rule "times_zero_1" (formula "80") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                           (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "74") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                           (rule "times_zero_1" (formula "74") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                           (rule "times_zero_1" (formula "79") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "79") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "87") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "87") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "87") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0"))
                           (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0"))
                           (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "86") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "86") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "86") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0"))
                           (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "86") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                           (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "93") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0"))
                           (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "93") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0"))
                           (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "93") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "93") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "93") (term "1,0"))
                           (rule "nnf_notAnd" (formula "70") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "71") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                           (rule "seqGetAlphaCast" (formula "45") (term "0"))
                           (rule "castDel" (formula "45") (term "0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "true_left" (formula "45"))
                           (rule "seqGetAlphaCast" (formula "43") (term "0"))
                           (rule "castDel" (formula "43") (term "0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "nnf_notAnd" (formula "70") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "70") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "70") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "70") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "71") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "71") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "71") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "71") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "41") (term "0"))
                           (rule "castDel" (formula "41") (term "0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "seqGetAlphaCast" (formula "40") (term "0"))
                           (rule "castDel" (formula "40") (term "0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "seqGetAlphaCast" (formula "44") (term "0"))
                           (rule "castDel" (formula "44") (term "0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "true_left" (formula "44"))
                           (rule "seqGetAlphaCast" (formula "42") (term "0"))
                           (rule "castDel" (formula "42") (term "0"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "commute_or_2" (formula "80") (term "0"))
                           (rule "commute_or_2" (formula "74") (term "0"))
                           (rule "jdiv_axiom" (formula "60") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "60"))
                           (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "61"))
                           (rule "elimGcdGeq" (formula "60") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
                           (rule "mul_literals" (formula "60") (term "0,0,0,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,0"))
                           (rule "sub_literals" (formula "60") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "60") (term "0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "60") (term "0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "60") (term "1,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "60") (term "0,0,0,0,0"))
                           (rule "qeq_literals" (formula "60") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,0,0"))
                           (rule "add_literals" (formula "60") (term "1,0,0,0,0"))
                           (rule "times_zero_1" (formula "60") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "60") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "polyDiv_pullOut" (formula "60") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "60") (term "0,0,2,0"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,2,0"))
                           (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,0,2,0"))
                           (rule "add_literals" (formula "60") (term "1,0,0,0,2,0"))
                           (rule "times_zero_1" (formula "60") (term "0,0,0,2,0"))
                           (rule "div_literals" (formula "60") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "60") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "2,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "2,0"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "polyDiv_pullOut" (formula "60") (term "0,1") (inst "polyDivCoeff=l_0"))
                           (rule "equal_literals" (formula "60") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,0,1"))
                           (rule "add_literals" (formula "60") (term "1,0,0,0,1"))
                           (rule "times_zero_1" (formula "60") (term "0,0,0,1"))
                           (rule "div_literals" (formula "60") (term "0,0,1"))
                           (rule "add_zero_left" (formula "60") (term "0,1"))
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "true_left" (formula "60"))
                           (rule "commute_or_2" (formula "79") (term "0"))
                           (rule "commute_or" (formula "87") (term "0,0"))
                           (rule "commute_and" (formula "87") (term "0,0,1,0"))
                           (rule "commute_and" (formula "86") (term "0,0,1,0"))
                           (rule "commute_or" (formula "86") (term "0,0"))
                           (rule "commute_or" (formula "93") (term "0,0"))
                           (rule "commute_or_2" (formula "70") (term "0"))
                           (rule "commute_or_2" (formula "71") (term "0"))
                           (rule "seqGetAlphaCast" (formula "31") (term "0"))
                           (rule "castDel" (formula "31") (term "0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "seqGetAlphaCast" (formula "30") (term "0"))
                           (rule "castDel" (formula "30") (term "0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "commute_or" (formula "80") (term "0,0"))
                           (rule "commute_or" (formula "74") (term "0,0"))
                           (rule "substringSubstring" (formula "39") (term "0") (inst "newSym=newSym_1"))
                           (rule "add_zero_right" (formula "39") (term "1,0,1,1"))
                           (rule "qeq_literals" (formula "39") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")))
                           (rule "add_zero_left" (formula "39") (term "2,0,1,1"))
                           (rule "qeq_literals" (formula "39") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                           (rule "times_zero_2" (formula "39") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "39") (term "1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,0"))
                           (rule "add_literals" (formula "39") (term "1,0,1,0"))
                           (rule "times_zero_1" (formula "39") (term "0,1,0"))
                           (rule "qeq_literals" (formula "39") (term "1,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "applyEqRigid" (formula "39") (term "0,1,0") (ifseqformula "48"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,1,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,1,0"))
                           (rule "add_literals" (formula "39") (term "0,1,0"))
                           (rule "leq_literals" (formula "39") (term "1,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "applyEqRigid" (formula "39") (term "0,1,1") (ifseqformula "38"))
                           (rule "eqSymm" (formula "39") (term "1,1"))
                           (rule "applyEqRigid" (formula "39") (term "0,0,1") (ifseqformula "40"))
                           (rule "eqSymm" (formula "39") (term "0,1"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_subsumption1" (formula "39") (term "0") (ifseqformula "36"))
                           (rule "leq_literals" (formula "39") (term "0,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "commute_and_2" (formula "94") (term "0,1,1,0"))
                           (rule "seqGetAlphaCast" (formula "25") (term "0"))
                           (rule "castDel" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "seqGetAlphaCast" (formula "28") (term "0"))
                           (rule "castDel" (formula "28") (term "0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "commute_or_2" (formula "81") (term "0"))
                           (rule "commute_or_2" (formula "75") (term "0"))
                           (rule "seqGetAlphaCast" (formula "26") (term "0"))
                           (rule "castDel" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "commute_or" (formula "80") (term "0,0"))
                           (rule "commute_or_2" (formula "71") (term "0,0"))
                           (rule "commute_or_2" (formula "72") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "29") (term "0"))
                           (rule "castDel" (formula "29") (term "0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "seqGetAlphaCast" (formula "27") (term "0"))
                           (rule "castDel" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "seqGetAlphaCast" (formula "35") (term "0"))
                           (rule "castDel" (formula "35") (term "0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                           (rule "andLeft" (formula "37"))
                           (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "40"))
                           (rule "eqSymm" (formula "37"))
                           (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                           (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "38"))
                           (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "41"))
                           (rule "eqSymm" (formula "37"))
                           (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                           (rule "eqSymm" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                           (rule "eqSymm" (formula "37"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                           (rule "andLeft" (formula "38"))
                           (rule "lenOfSeqSub" (formula "38") (term "0"))
                           (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                           (rule "lenOfSeqSub" (formula "39") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,1,1,0,0"))
                           (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "42"))
                           (rule "eqSymm" (formula "38"))
                           (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "seqGetAlphaCast" (formula "34") (term "0"))
                           (rule "castDel" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "59") (inst "iv=iv"))
                           (rule "andLeft" (formula "59"))
                           (rule "lenOfSeqSub" (formula "59") (term "0"))
                           (rule "polySimp_elimSub" (formula "59") (term "1,0"))
                           (rule "mul_literals" (formula "59") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "59") (term "1,0"))
                           (rule "lenOfSeqSub" (formula "60") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "60") (term "1,1,1,0,0"))
                           (rule "lenOfSeqSubEQ" (formula "59") (term "1") (ifseqformula "40"))
                           (rule "eqSymm" (formula "59"))
                           (rule "polySimp_elimSub" (formula "59") (term "1,0"))
                           (rule "mul_literals" (formula "59") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "59") (term "1,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "true_left" (formula "59"))
                           (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "59") (term "0,0,1,1,0,0"))
                           (rule "add_literals" (formula "59") (term "0,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
                           (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "true_left" (formula "59"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                           (rule "andLeft" (formula "40"))
                           (rule "lenOfSeqSub" (formula "40") (term "0"))
                           (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                           (rule "lenOfSeqSubEQ" (formula "40") (term "1") (ifseqformula "42"))
                           (rule "eqSymm" (formula "40"))
                           (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "lenOfSeqSub" (formula "40") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "40") (term "1,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                           (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "commute_or_2" (formula "80") (term "0"))
                           (rule "commute_and_2" (formula "88") (term "0,1,0"))
                           (rule "commute_and_2" (formula "87") (term "0,1,0"))
                           (rule "seqGetAlphaCast" (formula "33") (term "0"))
                           (rule "castDel" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "commute_or" (formula "71") (term "0,0,0"))
                           (rule "commute_or" (formula "72") (term "0,0,0"))
                           (rule "commute_and" (formula "94") (term "0,0,1,1,0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_0 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                              (rule "applyEqReverse" (formula "139") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEqRigid" (formula "137") (term "2,0") (ifseqformula "2"))
                              (rule "castTrueImpliesOriginalTrue" (formula "137") (ifseqformula "1"))
                              (rule "closeTrue" (formula "137"))
                           )
                           (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_0 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_or_2" (formula "70") (term "0,0"))
                              (rule "commute_or_2" (formula "70") (term "0"))
                              (rule "commute_or_2" (formula "71") (term "0,0"))
                              (rule "commute_or_2" (formula "71") (term "0"))
                              (rule "commute_and_2" (formula "93") (term "0,1,1,0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                              (rule "andLeft" (formula "38"))
                              (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "37"))
                              (rule "eqSymm" (formula "38"))
                              (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                              (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                              (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                              (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "39") (term "1,0,1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,1,0,0"))
                              (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "40"))
                              (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "41"))
                              (rule "eqSymm" (formula "38"))
                              (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                              (rule "eqSymm" (formula "38"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1"))
                              (rule "eqSymm" (formula "38"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "true_left" (formula "38"))
                              (rule "applyEqRigid" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "true_left" (formula "38"))
                              (rule "ex_pull_out3" (formula "87") (term "0"))
                              (rule "cnf_rightDist" (formula "87") (term "0,0"))
                              (rule "shift_paren_or" (formula "87") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "87") (term "0,0,0"))
                              (rule "commute_or_2" (formula "87") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "87") (term "1,0,0,0"))
                              (rule "commute_or" (formula "87") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "86") (term "0"))
                              (rule "cnf_rightDist" (formula "86") (term "0,0"))
                              (rule "shift_paren_or" (formula "86") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "86") (term "0,0,0"))
                              (rule "commute_or_2" (formula "86") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "86") (term "1,0,0,0"))
                              (rule "commute_or" (formula "86") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "93") (term "1,0"))
                              (rule "cnf_rightDist" (formula "93") (term "0,1,0"))
                              (rule "commute_or" (formula "93") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "93") (term "0,0,1,0"))
                              (rule "commute_or" (formula "93") (term "1,0,0,1,0"))
                              (rule "allLeft" (formula "74") (inst "t=i_2_0"))
                              (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                              (rule "applyEq" (formula "74") (term "0,0,0,0") (ifseqformula "79"))
                              (rule "replace_known_right" (formula "74") (term "0,0,0") (ifseqformula "118"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "true_left" (formula "74"))
                              (rule "ex_pull_out3" (formula "93") (term "0"))
                              (rule "cnf_rightDist" (formula "93") (term "0,0"))
                              (rule "commute_or_2" (formula "93") (term "1,0,0"))
                              (rule "shift_paren_or" (formula "93") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "93") (term "0,0,0"))
                              (rule "commute_or_2" (formula "93") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "93") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "93") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "93") (term "0,1,0,0,0"))
                              (rule "commute_or" (formula "93") (term "0,0,0,0,0,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "139") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "101"))
                                 (rule "applyEq" (formula "101") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "137") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "137") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "137") (term "0") (ifseqformula "63"))
                                 (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "137") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                                 (rule "close" (formula "138") (ifseqformula "2"))
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: seqGetOutside = 101 FALSE"
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                     (rule "true_left" (formula "35"))
                     (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "34"))
                     (rule "leq_literals" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "inEqSimp_and_subsumption3" (formula "68") (term "0,0,0"))
                     (rule "leq_literals" (formula "68") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "cut_direct" (formula "135") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                         (builtin "One Step Simplification" (formula "136"))
                        (rule "false_right" (formula "136"))
                        (rule "replace_known_left" (formula "135") (term "1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "135"))
                        (rule "applyEqRigid" (formula "136") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "133"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "133"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "135")))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "136"))
                        (rule "notRight" (formula "136"))
                        (rule "replace_known_right" (formula "135") (term "1") (ifseqformula "136"))
                         (builtin "One Step Simplification" (formula "135"))
                        (rule "false_right" (formula "135"))
                        (rule "inEqSimp_and_subsumption3" (formula "70") (term "0,0,0"))
                        (rule "leq_literals" (formula "70") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "seqGetAlphaCast" (formula "35") (term "0,0,0"))
                        (rule "castDel" (formula "35") (term "0"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "seqGetAlphaCast" (formula "55") (term "0"))
                        (rule "castDel" (formula "55") (term "0"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "true_left" (formula "55"))
                        (rule "seqGetAlphaCast" (formula "56") (term "0"))
                        (rule "castDel" (formula "56") (term "0"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "true_left" (formula "56"))
                        (rule "seqGetAlphaCast" (formula "36") (term "0,0,0"))
                        (rule "castDel" (formula "36") (term "0"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "true_left" (formula "36"))
                        (rule "cut_direct" (formula "45") (term "0"))
                        (branch "CUT: sk_0 = strPool( 〈' '〉 ∘ ( 〈'l'〉 ∘ (〈'i'〉 ∘ (〈'n'〉 ∘ (〈'e'〉 ∘ 〈's'〉))))) TRUE"
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "applyEqRigid" (formula "40") (term "0,0,1,1,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "40") (term "0,1,1,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                           (rule "add_literals" (formula "40") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                           (rule "add_literals" (formula "40") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                           (rule "add_literals" (formula "40") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                           (rule "add_literals" (formula "40") (term "0,1,0"))
                           (rule "lenOfSeqConcat" (formula "40") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "add_literals" (formula "40") (term "1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,0"))
                           (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "53") (term "0,0"))
                           (rule "applyEqRigid" (formula "35") (term "0,0,0,0,1,1") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "35") (term "0,0,0,1,1"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0,0,1,1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,1"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,1"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,1"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "add_literals" (formula "35") (term "1,0,0,1,1"))
                           (rule "add_literals" (formula "35") (term "0,0,1,1"))
                           (rule "qeq_literals" (formula "35") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "57") (term "0,0"))
                           (rule "applyEqRigid" (formula "25") (term "0,0,0,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "25") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "25") (term "0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "lenOfSeqConcat" (formula "25") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "25") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "25") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "25") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "add_literals" (formula "25") (term "1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0"))
                           (rule "qeq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "49") (term "0,0"))
                           (rule "applyEq" (formula "38") (term "0,0,2,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "38") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "38") (term "2,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "lenOfSeqConcat" (formula "38") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "polySimp_addAssoc" (formula "38") (term "2,0"))
                           (rule "add_literals" (formula "38") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "38") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "polySimp_addAssoc" (formula "38") (term "2,0"))
                           (rule "add_literals" (formula "38") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "38") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "polySimp_addAssoc" (formula "38") (term "2,0"))
                           (rule "add_literals" (formula "38") (term "0,2,0"))
                           (rule "lenOfSeqConcat" (formula "38") (term "1,2,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "add_literals" (formula "38") (term "1,2,0"))
                           (rule "add_literals" (formula "38") (term "2,0"))
                           (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "54") (term "0,0"))
                           (rule "applyEqRigid" (formula "55") (term "0,0,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "55") (term "0,0"))
                           (rule "applyEqRigid" (formula "34") (term "0,0,0") (ifseqformula "45"))
                           (rule "poolKeyIsContentOfValue" (formula "34") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "lenOfSeqConcat" (formula "34") (term "1,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "34") (term "1,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "34") (term "1,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "34") (term "1,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "add_literals" (formula "34") (term "1,0"))
                           (rule "add_literals" (formula "34") (term "0"))
                           (rule "qeq_literals" (formula "34"))
                           (rule "closeFalse" (formula "34"))
                        )
                        (branch "CUT: sk_0 = strPool( 〈' '〉 ∘ ( 〈'l'〉 ∘ (〈'i'〉 ∘ (〈'n'〉 ∘ (〈'e'〉 ∘ 〈's'〉))))) FALSE"
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "nnf_imp2or" (formula "79") (term "0"))
                           (rule "nnf_imp2or" (formula "73") (term "0"))
                           (rule "nnf_imp2or" (formula "78") (term "0"))
                           (rule "nnf_imp2or" (formula "86") (term "0"))
                           (rule "nnf_imp2or" (formula "85") (term "0"))
                           (rule "nnf_imp2or" (formula "92") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "1,1"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,1,1"))
                           (rule "add_literals" (formula "36") (term "0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1"))
                           (rule "mul_literals" (formula "36") (term "1,1,1"))
                           (rule "inEqSimp_notGeq" (formula "35") (term "1,1"))
                           (rule "mul_literals" (formula "35") (term "1,0,0,1,1"))
                           (rule "add_literals" (formula "35") (term "0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,1"))
                           (rule "mul_literals" (formula "35") (term "1,1,1"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "nnf_imp2or" (formula "69") (term "0"))
                           (rule "nnf_imp2or" (formula "70") (term "0"))
                           (rule "commute_or" (formula "25"))
                           (rule "inEqSimp_or_weaken1" (formula "25"))
                           (rule "add_literals" (formula "25") (term "1,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "andLeft" (formula "37"))
                           (rule "applyEq" (formula "58") (term "1") (ifseqformula "37"))
                           (rule "applyEq" (formula "39") (term "1") (ifseqformula "37"))
                           (rule "inEqSimp_subsumption1" (formula "35") (term "1,0") (ifseqformula "25"))
                           (rule "leq_literals" (formula "35") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "25"))
                           (rule "leq_literals" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1,1") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "35") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1,1") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "34") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                           (rule "times_zero_1" (formula "79") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "79") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "73") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "73") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "78") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "78") (term "1,0,0"))
                           (rule "times_zero_1" (formula "78") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "78") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0"))
                           (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "78") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "78") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "78") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "86") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "86") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "86") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0"))
                           (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "86") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                           (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "85") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "85") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "85") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0"))
                           (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "85") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0"))
                           (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "92") (term "1,0"))
                           (rule "nnf_notAnd" (formula "92") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "92") (term "1,0,0"))
                           (rule "times_zero_1" (formula "92") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0"))
                           (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "92") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "92") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "92") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "92") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "92") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "70") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                           (rule "seqGetAlphaCast" (formula "44") (term "0"))
                           (rule "castDel" (formula "44") (term "0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "true_left" (formula "44"))
                           (rule "seqGetAlphaCast" (formula "42") (term "0"))
                           (rule "castDel" (formula "42") (term "0"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "69") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "70") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "70") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "70") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "70") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,1,0,0,0"))
                           (rule "seqGetAlphaCast" (formula "40") (term "0"))
                           (rule "castDel" (formula "40") (term "0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "seqGetAlphaCast" (formula "39") (term "0"))
                           (rule "castDel" (formula "39") (term "0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "seqGetAlphaCast" (formula "43") (term "0"))
                           (rule "castDel" (formula "43") (term "0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "seqGetAlphaCast" (formula "41") (term "0"))
                           (rule "castDel" (formula "41") (term "0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "commute_or_2" (formula "79") (term "0"))
                           (rule "jdiv_axiom" (formula "59") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "59"))
                           (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "60"))
                           (rule "elimGcdGeq" (formula "59") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "59") (term "0,0,0,0,1,0,0,0"))
                           (rule "sub_literals" (formula "59") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "59") (term "0,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "59") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "59") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "59") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "59") (term "1,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "59") (term "0,1,0,0,0"))
                           (rule "leq_literals" (formula "59") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0,0,0"))
                           (rule "add_literals" (formula "59") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "59") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "59") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "59") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polyDiv_pullOut" (formula "59") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "59") (term "0,0,2,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,2,0"))
                           (rule "polySimp_pullOutFactor0" (formula "59") (term "0,0,0,2,0"))
                           (rule "add_literals" (formula "59") (term "1,0,0,0,2,0"))
                           (rule "times_zero_1" (formula "59") (term "0,0,0,2,0"))
                           (rule "div_literals" (formula "59") (term "0,0,2,0"))
                           (rule "add_zero_left" (formula "59") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "2,0"))
                           (rule "polySimp_elimOne" (formula "59") (term "2,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polyDiv_pullOut" (formula "59") (term "0,1") (inst "polyDivCoeff=l_0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,2,0,1"))
                           (rule "equal_literals" (formula "59") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "polySimp_pullOutFactor0" (formula "59") (term "0,0,0,1"))
                           (rule "add_literals" (formula "59") (term "1,0,0,0,1"))
                           (rule "times_zero_1" (formula "59") (term "0,0,0,1"))
                           (rule "div_literals" (formula "59") (term "0,0,1"))
                           (rule "add_zero_left" (formula "59") (term "0,1"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "true_left" (formula "59"))
                           (rule "commute_or_2" (formula "73") (term "0"))
                           (rule "commute_or_2" (formula "78") (term "0"))
                           (rule "commute_and" (formula "86") (term "0,0,1,0"))
                           (rule "commute_and" (formula "85") (term "0,0,1,0"))
                           (rule "commute_or" (formula "86") (term "0,0"))
                           (rule "commute_or" (formula "85") (term "0,0"))
                           (rule "commute_or" (formula "92") (term "0,0"))
                           (rule "commute_or_2" (formula "69") (term "0"))
                           (rule "commute_or_2" (formula "70") (term "0"))
                           (rule "seqGetAlphaCast" (formula "32") (term "0"))
                           (rule "castDel" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "seqGetAlphaCast" (formula "31") (term "0"))
                           (rule "castDel" (formula "31") (term "0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "substringSubstring" (formula "38") (term "0") (inst "newSym=newSym_1"))
                           (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "25")))
                           (rule "add_zero_left" (formula "38") (term "2,0,1,1"))
                           (rule "qeq_literals" (formula "38") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "add_zero_right" (formula "38") (term "1,0,1,1"))
                           (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "38") (term "1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,0"))
                           (rule "add_literals" (formula "38") (term "1,0,1,0"))
                           (rule "times_zero_1" (formula "38") (term "0,1,0"))
                           (rule "qeq_literals" (formula "38") (term "1,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "applyEqRigid" (formula "38") (term "0,0,1") (ifseqformula "39"))
                           (rule "eqSymm" (formula "38") (term "0,1"))
                           (rule "applyEqRigid" (formula "38") (term "0,1,1") (ifseqformula "37"))
                           (rule "eqSymm" (formula "38") (term "1,1"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "applyEqRigid" (formula "38") (term "0,1,0") (ifseqformula "47"))
                           (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,1,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "38") (term "0,1,0"))
                           (rule "leq_literals" (formula "38") (term "1,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "inEqSimp_subsumption1" (formula "38") (term "0") (ifseqformula "25"))
                           (rule "leq_literals" (formula "38") (term "0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "commute_and_2" (formula "93") (term "0,1,1,0"))
                           (rule "seqGetAlphaCast" (formula "26") (term "0"))
                           (rule "castDel" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "commute_or" (formula "80") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "29") (term "0"))
                           (rule "castDel" (formula "29") (term "0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "seqGetAlphaCast" (formula "27") (term "0"))
                           (rule "castDel" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "seqGetAlphaCast" (formula "30") (term "0"))
                           (rule "castDel" (formula "30") (term "0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "commute_or" (formula "74") (term "0,0"))
                           (rule "commute_or" (formula "79") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "28") (term "0"))
                           (rule "castDel" (formula "28") (term "0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "commute_or_2" (formula "70") (term "0,0"))
                           (rule "commute_or_2" (formula "71") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "33") (term "0"))
                           (rule "castDel" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "commute_or_2" (formula "80") (term "0"))
                           (rule "commute_or_2" (formula "74") (term "0"))
                           (rule "commute_or_2" (formula "79") (term "0"))
                           (rule "commute_and_2" (formula "87") (term "0,1,0"))
                           (rule "commute_and_2" (formula "86") (term "0,1,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                           (rule "andLeft" (formula "36"))
                           (rule "lenOfSeqSubEQ" (formula "36") (term "1") (ifseqformula "41"))
                           (rule "eqSymm" (formula "36"))
                           (rule "polySimp_elimSub" (formula "36") (term "1,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                           (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                           (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,0,0") (ifseqformula "41"))
                           (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "37") (term "1,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,1,0,0"))
                           (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "37"))
                           (rule "lenOfSeqSubEQ" (formula "36") (term "1") (ifseqformula "38"))
                           (rule "eqSymm" (formula "36"))
                           (rule "polySimp_elimSub" (formula "36") (term "1,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                           (rule "eqSymm" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1"))
                           (rule "eqSymm" (formula "36"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                           (rule "andLeft" (formula "37"))
                           (rule "lenOfSeqSub" (formula "38") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0,0"))
                           (rule "lenOfSeqSub" (formula "37") (term "0"))
                           (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                           (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "39"))
                           (rule "eqSymm" (formula "37"))
                           (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,0,1,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                           (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "58") (inst "iv=iv"))
                           (rule "andLeft" (formula "58"))
                           (rule "lenOfSeqSub" (formula "58") (term "0"))
                           (rule "polySimp_elimSub" (formula "58") (term "1,0"))
                           (rule "mul_literals" (formula "58") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "58") (term "1,0"))
                           (rule "lenOfSeqSub" (formula "59") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "59") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "59") (term "1,1,1,0,0"))
                           (rule "lenOfSeqSubEQ" (formula "58") (term "1") (ifseqformula "39"))
                           (rule "eqSymm" (formula "58"))
                           (rule "polySimp_elimSub" (formula "58") (term "1,0"))
                           (rule "mul_literals" (formula "58") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "58") (term "1,0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "true_left" (formula "58"))
                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "58") (term "0,0,1,1,0,0"))
                           (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "58") (term "0,0,1,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "true_left" (formula "58"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                           (rule "andLeft" (formula "39"))
                           (rule "lenOfSeqSub" (formula "40") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "40") (term "1,1,1,0,0"))
                           (rule "lenOfSeqSub" (formula "39") (term "0"))
                           (rule "polySimp_elimSub" (formula "39") (term "1,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,0"))
                           (rule "lenOfSeqSubEQ" (formula "39") (term "1") (ifseqformula "41"))
                           (rule "eqSymm" (formula "39"))
                           (rule "polySimp_elimSub" (formula "39") (term "1,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "39") (term "0,0,1,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "commute_or" (formula "70") (term "0,0,0"))
                           (rule "commute_or" (formula "71") (term "0,0,0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_0 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                              (rule "applyEqReverse" (formula "140") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "137") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "137") (term "2,0") (ifseqformula "2"))
                              (rule "castTrueImpliesOriginalTrue" (formula "137") (ifseqformula "1"))
                              (rule "closeTrue" (formula "137"))
                           )
                           (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_0 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_and" (formula "92") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "69") (term "0,0"))
                              (rule "commute_or_2" (formula "69") (term "0"))
                              (rule "commute_or_2" (formula "70") (term "0,0"))
                              (rule "commute_or_2" (formula "70") (term "0"))
                              (rule "ex_pull_out3" (formula "86") (term "0"))
                              (rule "ex_pull_out3" (formula "85") (term "0"))
                              (rule "cnf_rightDist" (formula "86") (term "0,0"))
                              (rule "shift_paren_or" (formula "86") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "85") (term "0,0"))
                              (rule "shift_paren_or" (formula "85") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "86") (term "0,0,0"))
                              (rule "commute_or_2" (formula "86") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "86") (term "1,0,0,0"))
                              (rule "commute_or" (formula "86") (term "0,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "85") (term "0,0,0"))
                              (rule "commute_or_2" (formula "85") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "85") (term "1,0,0,0"))
                              (rule "commute_or" (formula "85") (term "0,0,0,0,0"))
                              (rule "commute_and_2" (formula "92") (term "0,1,1,0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                              (rule "andLeft" (formula "37"))
                              (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "40"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "39"))
                              (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "36"))
                              (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "1,0,1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,1,0,0"))
                              (rule "applyEqRigid" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "true_left" (formula "38"))
                              (rule "applyEqRigid" (formula "37") (term "0,1") (ifseqformula "38"))
                              (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "39"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                              (rule "eqSymm" (formula "37"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "ex_pull_out3" (formula "92") (term "1,0"))
                              (rule "cnf_rightDist" (formula "92") (term "0,1,0"))
                              (rule "commute_or" (formula "92") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "92") (term "0,0,1,0"))
                              (rule "commute_or" (formula "92") (term "1,0,0,1,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "140") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "100") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "100"))
                                 (rule "applyEq" (formula "138") (term "0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "138") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "100") (term "0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "138") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "138") (term "0") (ifseqformula "62"))
                                 (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "138") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                                 (rule "close" (formula "139") (ifseqformula "2"))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (getCurrentLineNumber)"
             (builtin "One Step Simplification" (formula "68"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "andLeft" (formula "36"))
            (rule "andLeft" (formula "36"))
            (rule "andLeft" (formula "38"))
            (rule "notLeft" (formula "36"))
            (rule "close" (formula "39") (ifseqformula "38"))
         )
         (branch "Pre (getCurrentLineNumber)"
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "3")))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "32") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
            (rule "jmod_axiom" (formula "2") (term "0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "32") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
            (rule "polySimp_elimOne" (formula "30") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "23"))
            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
            (rule "polySimp_elimOne" (formula "23") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
            (rule "newSym_eq" (formula "2") (inst "l=l_0") (inst "newSymDef=mul(result_199, Z(0(#)))"))
            (rule "times_zero_1" (formula "2") (term "1,1"))
            (rule "add_zero_right" (formula "2") (term "1"))
            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "3"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
            (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
            (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "36") (term "0,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
            (rule "add_literals" (formula "36") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "36") (term "1,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0"))
            (rule "leq_literals" (formula "36") (term "0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "35") (term "0,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "neg_literal" (formula "35") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
            (rule "add_literals" (formula "35") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0"))
            (rule "add_zero_right" (formula "35") (term "0,0"))
            (rule "qeq_literals" (formula "35") (term "0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
            (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_and_subsumption3" (formula "12") (term "0,0,0"))
            (rule "leq_literals" (formula "12") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "nnf_imp2or" (formula "33") (term "1,0"))
            (rule "nnf_imp2or" (formula "21") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_imp2or" (formula "20") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "mul_literals" (formula "28") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
            (rule "mul_literals" (formula "20") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "mul_literals" (formula "27") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "mul_literals" (formula "33") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "68"))
            (rule "closeTrue" (formula "68"))
         )
         (branch "Null reference (c_4 = null)"
             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "55")))
            (rule "closeTrue" (formula "67"))
         )
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "notLeft" (formula "1"))
         (rule "tryEmpty" (formula "65") (term "1"))
         (rule "blockEmptyLabel" (formula "65") (term "1"))
         (rule "blockEmpty" (formula "65") (term "1"))
         (rule "methodCallEmpty" (formula "65") (term "1"))
         (rule "emptyModality" (formula "65") (term "1"))
         (rule "andRight" (formula "65"))
         (branch
            (rule "andRight" (formula "65"))
            (branch
                (builtin "One Step Simplification" (formula "65"))
               (rule "closeTrue" (formula "65"))
            )
            (branch
                (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "40")))
               (rule "closeTrue" (formula "65"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "65"))
            (rule "closeTrue" (formula "65"))
         )
      )
   )
   (branch "Exceptional Post (getCurrentLineNumber)"
       (builtin "One Step Simplification" (formula "59"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "29"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "28"))
      (rule "close" (formula "31") (ifseqformula "30"))
   )
   (branch "Pre (getCurrentLineNumber)"
       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "1")))
      (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "14"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "25"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "25") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "polySimp_elimOne" (formula "14") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
      (rule "polySimp_elimOne" (formula "25") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
      (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "nnf_imp2or" (formula "22") (term "0"))
      (rule "nnf_imp2or" (formula "27") (term "1,0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "21") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_imp2or" (formula "27") (term "0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "27") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
      (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
      (rule "mul_literals" (formula "27") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "58"))
      (rule "closeTrue" (formula "58"))
   )
   (branch "Null reference (c_3 = null)"
       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "46")))
      (rule "closeTrue" (formula "58"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "57"))
   (branch
       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "57"))
   )
   (branch
      (rule "andRight" (formula "57"))
      (branch
         (rule "andRight" (formula "57"))
         (branch
             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "56")))
            (rule "closeTrue" (formula "57"))
         )
         (branch
             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "57"))
         )
      )
      (branch
          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "3")))
         (rule "closeTrue" (formula "57"))
      )
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "58"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "28"))
   (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "27"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "true_left" (formula "29"))
   (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
   (rule "simplifySelectOfAnon" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "commute_and" (formula "17") (term "0,0"))
   (rule "commute_and" (formula "16") (term "0,0"))
   (rule "commute_and" (formula "12") (term "0,0"))
   (rule "commute_and_2" (formula "21") (term "0,1,0"))
   (rule "commute_and_2" (formula "22") (term "0,1,0"))
   (rule "shift_paren_and" (formula "9") (term "0,0"))
   (rule "commute_and_2" (formula "9") (term "0,0,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0"))
   (rule "commute_and_2" (formula "10") (term "0,0,0"))
   (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
   (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
   (rule "charLiteral_to_int" (formula "26") (term "1,0,0,0,1,1,0"))
   (rule "lenNonNegative" (formula "24") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "seqGetAlphaCast" (formula "26") (term "0"))
   (rule "castedGetAny" (formula "26") (term "0"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "lenNonNegative" (formula "8") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
   (rule "ifUnfold" (formula "61") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "61") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "61") (term "1"))
    (builtin "One Step Simplification" (formula "61"))
   (rule "replace_known_left" (formula "61") (term "0,0,1,0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "61"))
   (rule "lenNonNegative" (formula "19") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "lenNonNegative" (formula "14") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "seqGetAlphaCast" (formula "22") (term "0"))
   (rule "castedGetAny" (formula "22") (term "0"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "true_left" (formula "22"))
   (rule "seqGetAlphaCast" (formula "16") (term "0"))
   (rule "castedGetAny" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "lenNonNegative" (formula "23") (term "1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "23"))
   (rule "ifSplit" (formula "64"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "1"))
       (builtin "One Step Simplification" (formula "65"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "64") (term "1"))
      (rule "variableDeclarationFinalAssign" (formula "64") (term "1"))
      (rule "variableDeclarationFinal" (formula "64") (term "1") (newnames "voterId_15"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "64") (term "1"))
      (rule "variableDeclarationAssign" (formula "64") (term "1"))
      (rule "variableDeclaration" (formula "64") (term "1") (newnames "var"))
      (rule "assignment" (formula "64") (term "1"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "variableDeclarationAssign" (formula "64") (term "1"))
      (rule "variableDeclaration" (formula "64") (term "1") (newnames "var_1"))
      (rule "assignment_read_attribute_this" (formula "64") (term "1"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "pullOutSelect" (formula "64") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "3")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
      (rule "applyEqReverse" (formula "65") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
       (builtin "Use Operation Contract" (formula "64") (newnames "heapBefore_get,result_199,exc_240") (contract "org.apache.commons.csv.CSVRecord[org.apache.commons.csv.CSVRecord::get(java.lang.String)].JML normal_behavior operation contract.0"))
      (branch "Post (get)"
          (builtin "One Step Simplification" (formula "33"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "35"))
         (rule "notLeft" (formula "36"))
         (rule "exLeft" (formula "34") (inst "sk=i_2"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "36"))
         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "40"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "castedGetAny" (formula "36") (term "0"))
         (rule "castedGetAny" (formula "37") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "34"))
         (rule "assignment" (formula "72") (term "1"))
          (builtin "One Step Simplification" (formula "72"))
         (rule "blockEmpty" (formula "72") (term "1"))
         (rule "pullOutSelect" (formula "35") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
         (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "35"))
         (rule "simplifySelectOfAnon" (formula "35"))
          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "71")) (ifInst ""  (formula "4")))
         (rule "elementOfSingleton" (formula "35") (term "0,0"))
          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "71")))
         (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "35"))
         (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "35"))
         (rule "hideAuxiliaryEq" (formula "35"))
         (rule "pullOutSelect" (formula "37") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
         (rule "simplifySelectOfAnon" (formula "37"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "71")) (ifInst ""  (formula "4")))
         (rule "elementOfSingleton" (formula "37") (term "0,0"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "71")))
         (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "37"))
         (rule "hideAuxiliaryEq" (formula "37"))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "38") (inst "i=i") (inst "i_0=i_0"))
         (rule "replaceKnownSelect_taclet012_4" (formula "38") (term "0,0,0,0"))
         (rule "replaceKnownSelect_taclet012_6" (formula "38") (term "0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "38") (term "0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet012_7" (formula "38") (term "0,1,0,0"))
         (rule "replaceKnownSelect_taclet012_6" (formula "38") (term "0,0,0,0,1,0,1"))
         (rule "replaceKnownSelect_taclet012_6" (formula "38") (term "0,1,1,0,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet012_7" (formula "38") (term "0,0,0,0,1,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet012_7" (formula "38") (term "0,1,1,0,0,0,1"))
         (rule "replaceKnownSelect_taclet012_4" (formula "38") (term "0,1,1,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet012_4" (formula "38") (term "0,0,0,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "38") (term "0,1,1,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "38") (term "0,0,0,0,1,0,1,0"))
         (rule "expand_inInt" (formula "38") (term "1,0,0,1,0"))
         (rule "expand_inInt" (formula "38") (term "1,0,0,1"))
         (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1,0"))
         (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1,0"))
         (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1"))
         (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "38"))
         (rule "eqSymm" (formula "38"))
         (rule "castedGetAny" (formula "39") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "38") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0"))
         (rule "applyEq" (formula "39") (term "1,1,0,0,0") (ifseqformula "8"))
         (rule "commute_and" (formula "39") (term "1,0,0"))
         (rule "commute_and" (formula "38") (term "0,0,0"))
         (rule "commute_and" (formula "38") (term "1,0,0"))
         (rule "commute_and" (formula "39") (term "0,0,0"))
         (rule "shift_paren_and" (formula "38") (term "0,0"))
         (rule "commute_and_2" (formula "38") (term "0,0,0"))
         (rule "shift_paren_and" (formula "38") (term "0,0"))
         (rule "commute_and_2" (formula "38") (term "0,0,0"))
         (rule "ifUnfold" (formula "71") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_1"))
         (rule "compound_assignment_2" (formula "71") (term "1") (inst "#v=x_2"))
         (rule "variableDeclarationAssign" (formula "71") (term "1"))
         (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_2"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "1,0,1,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "55"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "71"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "Use Operation Contract" (formula "77") (newnames "heapBefore_voterIdCheck,result_200,exc_241,heapAfter_voterIdCheck,anon_heap_voterIdCheck") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::voterIdCheck(java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (voterIdCheck)"
             (builtin "One Step Simplification" (formula "46"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "48"))
            (rule "assignment" (formula "81") (term "1"))
             (builtin "One Step Simplification" (formula "81"))
            (rule "applyEq" (formula "81") (term "0,1,0") (ifseqformula "48"))
            (rule "compound_assignment_1_new" (formula "81") (term "1"))
             (builtin "One Step Simplification" (formula "81"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1,0,1") (ifseqformula "5"))
            (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "7"))
            (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "19"))
            (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "64"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1") (ifseqformula "7"))
            (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
            (rule "true_left" (formula "19"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "seqGetAlphaCast" (formula "59") (term "0"))
            (rule "castedGetAny" (formula "59") (term "0"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "true_left" (formula "59"))
            (rule "lenNonNegative" (formula "58") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "58"))
            (rule "seqGetAlphaCast" (formula "60") (term "0"))
            (rule "castedGetAny" (formula "60") (term "0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "true_left" (formula "60"))
            (rule "ifSplit" (formula "98"))
            (branch "if x_1 true"
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_1 false"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "true_left" (formula "1"))
               (rule "variableDeclarationFinalAssign" (formula "98") (term "1"))
               (rule "variableDeclarationFinal" (formula "98") (term "1") (newnames "dataForVoter_7"))
                (builtin "Use Operation Contract" (formula "98") (newnames "heapBefore_generateDataForVoter,result_201,exc_242,heapAfter_generateDataForVoter,anon_heap_generateDataForVoter") (contract "de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator::generateDataForVoter(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
               (branch "Post (generateDataForVoter)"
                   (builtin "One Step Simplification" (formula "67"))
                   (builtin "One Step Simplification" (formula "100"))
                  (rule "andLeft" (formula "67"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1,0") (ifseqformula "67"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,1,0") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "68"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "69"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "69"))
                  (rule "andLeft" (formula "70"))
                  (rule "notLeft" (formula "71"))
                  (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "68"))
                  (rule "assignment" (formula "105") (term "1"))
                   (builtin "One Step Simplification" (formula "105"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "69"))
                  (rule "andLeft" (formula "69"))
                  (rule "andLeft" (formula "69"))
                  (rule "notLeft" (formula "71"))
                  (rule "notLeft" (formula "70"))
                  (rule "notLeft" (formula "69"))
                  (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "79")))
                  (rule "ifthenelse_negated" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_2"))
                  (rule "simplifySelectOfAnon" (formula "5"))
                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "81")))
                  (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "81")))
                  (rule "ifthenelse_negated" (formula "5") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_2"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "82")))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "82")))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_2"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "78"))
                  (rule "andLeft" (formula "78"))
                  (rule "andLeft" (formula "78"))
                  (rule "andLeft" (formula "78"))
                  (rule "notLeft" (formula "79"))
                  (rule "notLeft" (formula "78"))
                  (rule "pullOutSelect" (formula "79") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
                  (rule "applyEq" (formula "83") (term "0") (ifseqformula "79"))
                  (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "simplifySelectOfAnon" (formula "79"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "elementOfSingleton" (formula "79") (term "0,0"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "79"))
                  (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "79"))
                  (rule "hideAuxiliaryEq" (formula "79"))
                  (rule "pullOutSelect" (formula "78") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
                  (rule "applyEq" (formula "82") (term "0") (ifseqformula "78"))
                  (rule "simplifySelectOfAnonEQ" (formula "78") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "simplifySelectOfAnonEQ" (formula "78") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "simplifySelectOfAnon" (formula "78"))
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "elementOfSingleton" (formula "78") (term "0,0"))
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "78"))
                  (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "78"))
                  (rule "hideAuxiliaryEq" (formula "78"))
                  (rule "commute_or_2" (formula "77"))
                  (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "79"))
                  (rule "true_left" (formula "79"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "78"))
                  (rule "andLeft" (formula "78"))
                  (rule "andLeft" (formula "79"))
                  (rule "andLeft" (formula "78"))
                  (rule "notLeft" (formula "79"))
                  (rule "notLeft" (formula "78"))
                  (rule "pullOutSelect" (formula "79") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
                  (rule "applyEq" (formula "83") (term "0") (ifseqformula "79"))
                  (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "115")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,0,0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "25")))
                  (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "115")) (ifInst ""  (formula "25")))
                  (rule "simplifySelectOfAnon" (formula "79"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "115")) (ifInst ""  (formula "25")))
                  (rule "elementOfSingleton" (formula "79") (term "0,0"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "115")))
                  (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "79"))
                  (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "79"))
                  (rule "hideAuxiliaryEq" (formula "79"))
                  (rule "pullOutSelect" (formula "78") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                  (rule "applyEq" (formula "82") (term "0") (ifseqformula "78"))
                  (rule "simplifySelectOfAnonEQ" (formula "78") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "114")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,0,0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "25")))
                  (rule "simplifySelectOfAnonEQ" (formula "78") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "114")) (ifInst ""  (formula "25")))
                  (rule "simplifySelectOfAnon" (formula "78"))
                   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "114")) (ifInst ""  (formula "25")))
                  (rule "elementOfSingleton" (formula "78") (term "0,0"))
                   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "114")))
                  (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "78"))
                  (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "78"))
                  (rule "hideAuxiliaryEq" (formula "78"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "79"))
                  (rule "andLeft" (formula "79"))
                  (rule "notLeft" (formula "79"))
                  (rule "pullOutSelect" (formula "79") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                  (rule "applyEq" (formula "82") (term "0") (ifseqformula "79"))
                  (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "90")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,0,0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "12")))
                  (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "90")) (ifInst ""  (formula "12")))
                  (rule "simplifySelectOfAnon" (formula "79"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "90")) (ifInst ""  (formula "12")))
                  (rule "elementOfSingleton" (formula "79") (term "0,0"))
                   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "90")))
                  (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "79"))
                  (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "79"))
                  (rule "hideAuxiliaryEq" (formula "79"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "78"))
                  (rule "true_left" (formula "78"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "78"))
                  (rule "true_left" (formula "78"))
                   (builtin "Use Operation Contract" (formula "115") (newnames "heapBefore_initDistVals,exc_243,heapAfter_initDistVals,anon_heap_initDistVals") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
                  (branch "Post (initDistVals)"
                      (builtin "One Step Simplification" (formula "117"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "andLeft" (formula "80"))
                     (rule "andLeft" (formula "81"))
                     (rule "andLeft" (formula "82"))
                     (rule "andLeft" (formula "82"))
                     (rule "andLeft" (formula "83"))
                     (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "82") (inst "i=i") (inst "i_0=i_0"))
                     (rule "expand_inInt" (formula "82") (term "1,0,0,1,0"))
                     (rule "expand_inInt" (formula "82") (term "1,0,0,1"))
                     (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1"))
                     (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1"))
                     (rule "andLeft" (formula "82"))
                     (rule "andLeft" (formula "82"))
                     (rule "eqSymm" (formula "82"))
                     (rule "castedGetAny" (formula "84") (term "0,0,1,0"))
                     (rule "castedGetAny" (formula "83") (term "0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "84") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "83") (term "1,1,0,0"))
                     (rule "pullOutSelect" (formula "84") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                     (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "84"))
                     (rule "applyEq" (formula "85") (term "0,0,0,1,0") (ifseqformula "84"))
                     (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "122")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1,0,0") (ifseqformula "76"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,1,0,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "32")))
                     (rule "eqSymm" (formula "82"))
                     (rule "elementOfSingleton" (formula "84") (term "0,0"))
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "122")))
                     (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "122")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "32")))
                     (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "122")) (ifInst ""  (formula "32")))
                     (rule "replaceKnownSelect_taclet012_6" (formula "84") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet012_7" (formula "84") (term "0"))
                     (rule "applyEqReverse" (formula "82") (term "0,1") (ifseqformula "84"))
                     (rule "applyEqReverse" (formula "85") (term "0,1,1,0,0,0") (ifseqformula "84"))
                     (rule "applyEqReverse" (formula "85") (term "0,0,0,1,0") (ifseqformula "84"))
                     (rule "hideAuxiliaryEq" (formula "84"))
                     (rule "applyEq" (formula "84") (term "1,1,0,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "82") (term "1") (ifseqformula "37"))
                     (rule "pullOutSelect" (formula "83") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                     (rule "applyEq" (formula "84") (term "0,0,0,1,0") (ifseqformula "83"))
                     (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "83"))
                     (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "122")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,1,0,0") (ifseqformula "76"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,1,0,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "32")))
                     (rule "eqSymm" (formula "82"))
                     (rule "elementOfSingleton" (formula "83") (term "0,0"))
                      (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "122")))
                     (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "122")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "32")))
                     (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "122")) (ifInst ""  (formula "32")))
                     (rule "replaceKnownSelect_taclet012_4" (formula "83") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "83") (term "0"))
                     (rule "applyEqReverse" (formula "84") (term "0,1,1,0,0,0") (ifseqformula "83"))
                     (rule "applyEqReverse" (formula "82") (term "0,1") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "true_left" (formula "82"))
                     (rule "applyEqReverse" (formula "83") (term "0,0,0,1,0") (ifseqformula "82"))
                     (rule "hideAuxiliaryEq" (formula "82"))
                     (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "84"))
                     (rule "andLeft" (formula "84"))
                     (rule "andLeft" (formula "84"))
                     (rule "notLeft" (formula "86"))
                     (rule "notLeft" (formula "84"))
                     (rule "notLeft" (formula "84"))
                     (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                     (rule "replaceKnownSelect_taclet010012_8" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "77"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "73"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "82"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                     (rule "replaceKnownSelect_taclet010012_10" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "78"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "74"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                     (rule "replaceKnownSelect_taclet010012_9" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "79"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "87") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "insert_constant_string_value" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "insert_constant_string_value" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "insert_constant_string_value" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "castDel" (formula "87") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "castDel" (formula "87") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "castDel" (formula "87") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "89"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "89"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "89"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "89"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "89"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "89"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "89"))
                     (rule "notLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "notLeft" (formula "87"))
                     (rule "notLeft" (formula "87"))
                     (rule "exLeft" (formula "92") (inst "sk=i_3"))
                     (rule "andLeft" (formula "92"))
                     (rule "andLeft" (formula "92"))
                     (rule "exLeft" (formula "89") (inst "sk=i_2_1"))
                     (rule "andLeft" (formula "89"))
                     (rule "andLeft" (formula "89"))
                     (rule "castedGetAny" (formula "93") (term "0,0,1,0"))
                     (rule "castedGetAny" (formula "92") (term "0,0,1,0"))
                     (rule "castedGetAny" (formula "88") (term "0,0,1,0"))
                     (rule "castedGetAny" (formula "96") (term "0"))
                     (rule "castedGetAny" (formula "91") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "93") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "94"))
                     (rule "inEqSimp_commuteLeq" (formula "89"))
                     (rule "applyEqRigid" (formula "100") (term "0") (ifseqformula "87"))
                     (rule "pullOutSelect" (formula "93") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_0"))
                     (rule "applyEq" (formula "94") (term "0,0,0,1,0") (ifseqformula "93"))
                     (rule "simplifySelectOfAnonEQ" (formula "93") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "108")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,0,0") (ifseqformula "79"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,1,0,0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "93"))
                     (rule "elementOfSingleton" (formula "93") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "108")))
                     (rule "ifthenelse_negated" (formula "93") (term "0"))
                     (rule "pullOutSelect" (formula "92") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_1"))
                     (rule "applyEq" (formula "98") (term "0,0") (ifseqformula "92"))
                     (rule "applyEq" (formula "93") (term "0,0,0,1,0") (ifseqformula "92"))
                     (rule "applyEq" (formula "97") (term "0,1") (ifseqformula "92"))
                     (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "110")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,0,0") (ifseqformula "79"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,1,0,0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "92"))
                     (rule "elementOfSingleton" (formula "92") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "110")))
                     (rule "ifthenelse_negated" (formula "92") (term "0"))
                     (rule "pullOutSelect" (formula "88") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_2"))
                     (rule "applyEq" (formula "89") (term "0,0,0,1,0") (ifseqformula "88"))
                     (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "88"))
                     (rule "applyEq" (formula "92") (term "0,0") (ifseqformula "88"))
                     (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "109")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,1,0,0") (ifseqformula "79"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,1,0,0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "elementOfSingleton" (formula "88") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "109")))
                     (rule "ifthenelse_negated" (formula "88") (term "0"))
                     (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "eqSymm" (formula "88"))
                     (rule "applyEq" (formula "104") (term "0") (ifseqformula "88"))
                     (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "elementOfSingleton" (formula "87") (term "0,0"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "simplifySelectOfAnon" (formula "87"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "elementOfSingleton" (formula "88") (term "0,0"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "simplifySelectOfAnon" (formula "88"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "elementOfSingleton" (formula "87") (term "0,0"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "87"))
                     (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "87"))
                     (rule "hideAuxiliaryEq" (formula "87"))
                     (rule "elementOfSingleton" (formula "87") (term "0,0"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "eqSymm" (formula "87"))
                     (rule "applyEq" (formula "102") (term "0") (ifseqformula "44"))
                     (rule "pullOutSelect" (formula "112") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")) (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")) (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")))
                     (rule "applyEqReverse" (formula "113") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "111") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")) (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")) (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")))
                     (rule "applyEqReverse" (formula "112") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "110") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")) (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")) (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
                     (rule "applyEqReverse" (formula "111") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                     (rule "applyEq" (formula "93") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "93") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "93") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "93") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "93") (term "1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "93") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")) (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")) (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")))
                     (rule "applyEqReverse" (formula "93") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "93") (term "1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "93") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "93") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "93") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "93") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "110") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "92") (term "0,0,0,0,0") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "92"))
                     (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "135")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "54")))
                     (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "135")) (ifInst ""  (formula "54")))
                     (rule "simplifySelectOfAnon" (formula "92"))
                      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "135")) (ifInst ""  (formula "54")))
                     (rule "elementOfSingleton" (formula "92") (term "0,0"))
                      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "135")))
                     (rule "applyEqReverse" (formula "97") (term "0,1") (ifseqformula "92"))
                     (rule "applyEqReverse" (formula "98") (term "0,0") (ifseqformula "92"))
                     (rule "applyEqReverse" (formula "93") (term "0,0,0,1,0") (ifseqformula "92"))
                     (rule "applyEqReverse" (formula "93") (term "0,1,1,0,0") (ifseqformula "92"))
                     (rule "hideAuxiliaryEq" (formula "92"))
                     (rule "pullOutSelect" (formula "107") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                     (rule "applyEq" (formula "94") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "94") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "94") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "94") (term "1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "94") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "94") (term "1,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")) (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")) (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                     (rule "applyEqReverse" (formula "94") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "94") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "94") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "94") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "94") (term "1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "94") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "93") (term "0,0,0,0,0") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "93"))
                     (rule "simplifySelectOfAnonEQ" (formula "93") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "132")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "21")))
                     (rule "simplifySelectOfAnonEQ" (formula "93") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "132")) (ifInst ""  (formula "21")))
                     (rule "simplifySelectOfAnon" (formula "93"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "132")) (ifInst ""  (formula "21")))
                     (rule "elementOfSingleton" (formula "93") (term "0,0"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "132")))
                     (rule "applyEqReverse" (formula "94") (term "0,0,0,1,0") (ifseqformula "93"))
                     (rule "applyEqReverse" (formula "94") (term "0,1,1,0,0") (ifseqformula "93"))
                     (rule "hideAuxiliaryEq" (formula "93"))
                     (rule "pullOutSelect" (formula "105") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                     (rule "applyEq" (formula "88") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "88") (term "1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "88") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "88") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "88") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "88") (term "1,2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")) (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")) (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                     (rule "applyEqReverse" (formula "88") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "88") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "88") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "88") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "88") (term "1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "88") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "87") (term "0,0,0,0,0") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "129")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "18")))
                     (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "129")) (ifInst ""  (formula "18")))
                     (rule "simplifySelectOfAnon" (formula "87"))
                      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "129")) (ifInst ""  (formula "18")))
                     (rule "elementOfSingleton" (formula "87") (term "0,0"))
                      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "129")))
                     (rule "applyEqReverse" (formula "90") (term "0,1") (ifseqformula "87"))
                     (rule "applyEqReverse" (formula "91") (term "0,0") (ifseqformula "87"))
                     (rule "applyEqReverse" (formula "88") (term "0,1,1,0,0") (ifseqformula "87"))
                     (rule "applyEqReverse" (formula "88") (term "0,0,0,1,0") (ifseqformula "87"))
                     (rule "hideAuxiliaryEq" (formula "87"))
                     (rule "pullOutSelect" (formula "103") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")) (ifInst ""  (formula "34")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")) (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                     (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "102") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
                     (rule "applyEq" (formula "96") (term "1") (ifseqformula "1"))
                     (rule "applyEq" (formula "91") (term "1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "91"))
                     (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "91"))
                     (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "91"))
                     (rule "hideAuxiliaryEq" (formula "91"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "102") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "95") (term "1") (ifseqformula "1"))
                     (rule "pullOutSelect" (formula "101") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "81"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")) (ifInst ""  (formula "35")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")) (ifInst ""  (formula "35")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")))
                     (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "81"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")) (ifInst ""  (formula "35")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")) (ifInst ""  (formula "35")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")))
                     (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "81"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")) (ifInst ""  (formula "35")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")) (ifInst ""  (formula "35")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")))
                     (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "98") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet2_0" (formula "1") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "99") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "97") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "96") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_2"))
                     (rule "applyEq" (formula "96") (term "1") (ifseqformula "1"))
                     (rule "applyEq" (formula "98") (term "0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "137")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "137")) (ifInst ""  (formula "35")))
                     (rule "replaceKnownSelect_taclet12_2" (formula "1") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet12_3" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "eqSymm" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "68"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "88") (term "1,0,0"))
                     (rule "commute_and" (formula "87") (term "1,0,0"))
                     (rule "commute_or_2" (formula "5") (term "0,0"))
                     (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "82"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "commute_or_2" (formula "4") (term "0,0"))
                     (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "commute_and" (formula "86") (term "0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0"))
                     (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "96") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "commute_and" (formula "84") (term "0,0,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "1") (ifseqformula "31"))
                     (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "115"))
                      (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "63")))
                     (rule "true_left" (formula "70"))
                      (builtin "Use Operation Contract" (formula "131") (newnames "heapBefore_initPolyasVals,exc_244,heapAfter_initPolyasVals,anon_heap_initPolyasVals") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
                     (branch "Post (initPolyasVals)"
                         (builtin "One Step Simplification" (formula "133"))
                         (builtin "One Step Simplification" (formula "95"))
                        (rule "andLeft" (formula "95"))
                        (rule "commute_and" (formula "89") (term "0,0"))
                        (rule "commute_and" (formula "89") (term "0,0"))
                        (rule "commute_and" (formula "86") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "90") (term "0"))
                        (rule "castedGetAny" (formula "90") (term "0"))
                         (builtin "One Step Simplification" (formula "90"))
                        (rule "true_left" (formula "90"))
                        (rule "shift_paren_and" (formula "85") (term "0,0"))
                        (rule "commute_and_2" (formula "85") (term "0,0,0"))
                        (rule "shift_paren_and" (formula "84") (term "0,0"))
                        (rule "commute_and_2" (formula "84") (term "0,0,0"))
                        (rule "methodCallEmpty" (formula "129") (term "1"))
                        (rule "tryEmpty" (formula "129") (term "1"))
                         (builtin "One Step Simplification" (formula "129"))
                        (rule "emptyModality" (formula "129") (term "1"))
                         (builtin "One Step Simplification" (formula "129"))
                        (rule "closeTrue" (formula "129"))
                     )
                     (branch "Exceptional Post (initPolyasVals)"
                         (builtin "One Step Simplification" (formula "95"))
                         (builtin "One Step Simplification" (formula "133"))
                        (rule "andLeft" (formula "95"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0") (ifseqformula "95"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,1,0") (ifseqformula "82"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,1,0") (ifseqformula "78"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,1,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "96"))
                        (rule "andLeft" (formula "96"))
                        (rule "andLeft" (formula "96"))
                        (rule "notLeft" (formula "96"))
                        (rule "close" (formula "98") (ifseqformula "97"))
                     )
                     (branch "Pre (initPolyasVals)"
                         (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "129")) (ifInst ""  (formula "98")) (ifInst ""  (formula "129")) (ifInst ""  (formula "98")))
                        (rule "andRight" (formula "131"))
                        (branch "Case 1"
                           (rule "andRight" (formula "131"))
                           (branch "Case 1"
                              (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "131") (inst "i=i") (inst "i_0=i_0") (userinteraction))
                              (rule "andRight" (formula "131"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "131"))
                                 (branch
                                    (rule "replaceKnownSelect_taclet0010012_41" (formula "131") (term "0,0"))
                                    (rule "replaceKnownSelect_taclet0010012_37" (formula "131") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "131") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0010012_40" (formula "131") (term "0,1"))
                                    (rule "eqSymm" (formula "131"))
                                    (rule "close" (formula "131") (ifseqformula "39"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "131") (inst "sk=i_0_0") (userinteraction))
                                    (rule "allLeft" (formula "84") (inst "t=i_0_0") (userinteraction))
                                    (rule "replaceKnownSelect_taclet0010012_41" (formula "132") (term "0,1,1,0,0"))
                                    (rule "replaceKnownSelect_taclet0010012_41" (formula "132") (term "0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "132") (term "0,1,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "132") (term "0,0,0,0,1"))
                                    (rule "expand_inInt" (formula "132") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "132") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "132") (term "1,0,1,0"))
                                    (rule "impRight" (formula "132"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "134"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "replace_known_left" (formula "89") (term "1,1,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "3")))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "replace_known_left" (formula "89") (term "0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "notLeft" (formula "89"))
                                    (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "93"))
                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "93") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "66") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "97"))
                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "97") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "52") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "69") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "74") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "replace_known_left" (formula "99") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "99"))
                                    (rule "inEqSimp_commuteLeq" (formula "5"))
                                    (rule "close" (formula "99") (ifseqformula "5"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "131") (inst "sk=i_4") (userinteraction))
                                 (rule "allLeft" (formula "85") (inst "t=i_4") (userinteraction))
                                 (rule "replaceKnownSelect_taclet0010012_37" (formula "132") (term "0,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet0010012_37" (formula "132") (term "0,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010012_40" (formula "132") (term "0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010012_40" (formula "132") (term "0,0,0,0,1"))
                                 (rule "expand_inInt" (formula "132") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "132") (term "0,1,1,0"))
                                 (rule "replace_int_MAX" (formula "132") (term "1,0,1,0"))
                                 (rule "impRight" (formula "132"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "134"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "replace_known_left" (formula "90") (term "1,1,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "90"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "90") (term "0,1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "90"))
                                 (rule "notLeft" (formula "90"))
                                 (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "69") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "93"))
                                 (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "93") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "66") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "97") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "74") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "99") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5"))
                                 (rule "replace_known_left" (formula "99") (term "1") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "99"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "replace_known_left" (formula "99") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "99"))
                                 (rule "inEqSimp_leqRight" (formula "99"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "45"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "95") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "95") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "70") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "70") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "94"))
                                 (rule "polySimp_mulLiterals" (formula "94") (term "0"))
                                 (rule "polySimp_elimOne" (formula "94") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "98"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "96") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "96") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "92") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "92") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "92") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "92") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "92") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_literals" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "131"))
                              (branch
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "88"))
                                 (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "88") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "61") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "92"))
                                 (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "92") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "86") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "84") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "88"))
                                 (rule "polySimp_mulLiterals" (formula "88") (term "0"))
                                 (rule "polySimp_elimOne" (formula "88") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "90") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "90") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "90") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                 (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                 (rule "polySimp_elimOne" (formula "92") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                 (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                                 (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "nnf_imp2or" (formula "86") (term "0"))
                                 (rule "nnf_imp2or" (formula "84") (term "0"))
                                 (rule "nnf_imp2or" (formula "85") (term "0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0"))
                                 (rule "nnf_imp2or" (formula "50") (term "0"))
                                 (rule "nnf_imp2or" (formula "90") (term "0"))
                                 (rule "nnf_imp2or" (formula "64") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "57") (term "0"))
                                 (rule "nnf_imp2or" (formula "89") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "49") (term "0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0"))
                                 (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "86") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "86") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "86") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "86") (term "0,0,0"))
                                 (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "86") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                                 (rule "mul_literals" (formula "86") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "84") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "90") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "90") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "90") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "90") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "90") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "90") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "90") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "90") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0"))
                                 (rule "mul_literals" (formula "90") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "89") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "89") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "89") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "84") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "84") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "84") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "84") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "84") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "84") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "84") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "84") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "84") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "84") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "84") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "84") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "84") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "84") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "84") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "84") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "84") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "84") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "84") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "84") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "85") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "85") (term "1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "85") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "85") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,1,1,0,0"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "131"))
                                 (rule "replaceKnownSelect_taclet0010012_45" (formula "131") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010012_138" (formula "131") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet0010012_46" (formula "131") (term "0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet0010012_47" (formula "131") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010012_139" (formula "131") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010012_140" (formula "131") (term "0,0,1,0"))
                                 (rule "replace_known_right" (formula "131") (term "0,1") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "95")) (ifInst ""  (formula "96")))
                                 (rule "closeTrue" (formula "131"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "131"))
                                 (branch "Case 1"
                                    (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "131") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
                                    (rule "andRight" (formula "131"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "131"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "131"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "131"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "131"))
                                                (branch
                                                   (rule "andRight" (formula "131"))
                                                   (branch
                                                      (rule "andRight" (formula "131"))
                                                      (branch
                                                         (rule "andRight" (formula "131"))
                                                         (branch
                                                            (rule "andRight" (formula "131"))
                                                            (branch
                                                               (rule "andRight" (formula "131"))
                                                               (branch
                                                                  (rule "andRight" (formula "131"))
                                                                  (branch
                                                                     (rule "andRight" (formula "131"))
                                                                     (branch
                                                                        (rule "andRight" (formula "131"))
                                                                        (branch
                                                                           (rule "andRight" (formula "131"))
                                                                           (branch
                                                                              (rule "andRight" (formula "131"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "131"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "131"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "131"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "131"))
                                                                                          (branch
                                                                                             (rule "andRight" (formula "131"))
                                                                                             (branch
                                                                                                (rule "andRight" (formula "131"))
                                                                                                (branch
                                                                                                   (rule "andRight" (formula "131"))
                                                                                                   (branch
                                                                                                      (rule "andRight" (formula "131"))
                                                                                                      (branch
                                                                                                         (rule "replaceKnownSelect_taclet0010012_128" (formula "131") (term "0,0"))
                                                                                                         (rule "replaceKnownAuxiliaryConstant_taclet0010012_129" (formula "131") (term "0,0"))
                                                                                                         (rule "notRight" (formula "131"))
                                                                                                         (rule "close" (formula "95") (ifseqformula "1"))
                                                                                                      )
                                                                                                      (branch
                                                                                                         (rule "replaceKnownSelect_taclet0010012_130" (formula "131") (term "0,0"))
                                                                                                         (rule "replaceKnownAuxiliaryConstant_taclet0010012_134" (formula "131") (term "0,0"))
                                                                                                         (rule "notRight" (formula "131"))
                                                                                                         (rule "close" (formula "106") (ifseqformula "1"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch
                                                                                                      (rule "replaceKnownSelect_taclet0010012_124" (formula "131") (term "0,0"))
                                                                                                      (rule "replaceKnownAuxiliaryConstant_taclet0010012_127" (formula "131") (term "0,0"))
                                                                                                      (rule "notRight" (formula "131"))
                                                                                                      (rule "close" (formula "101") (ifseqformula "1"))
                                                                                                   )
                                                                                                )
                                                                                                (branch
                                                                                                   (rule "insert_constant_string_value" (formula "131") (term "0,0") (ifseqformula "31"))
                                                                                                    (builtin "One Step Simplification" (formula "131"))
                                                                                                   (rule "castDel" (formula "131") (term "0,0,0"))
                                                                                                   (rule "notRight" (formula "131"))
                                                                                                   (rule "close" (formula "108") (ifseqformula "1"))
                                                                                                )
                                                                                             )
                                                                                             (branch
                                                                                                (rule "insert_constant_string_value" (formula "131") (term "0,0") (ifseqformula "31"))
                                                                                                 (builtin "One Step Simplification" (formula "131"))
                                                                                                (rule "castDel" (formula "131") (term "0,0,0"))
                                                                                                (rule "notRight" (formula "131"))
                                                                                                (rule "close" (formula "109") (ifseqformula "1"))
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (rule "insert_constant_string_value" (formula "131") (term "0,0") (ifseqformula "31"))
                                                                                              (builtin "One Step Simplification" (formula "131"))
                                                                                             (rule "castDel" (formula "131") (term "0,0,0"))
                                                                                             (rule "notRight" (formula "131"))
                                                                                             (rule "close" (formula "110") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "replaceKnownSelect_taclet0010012_51" (formula "131") (term "0,0"))
                                                                                          (rule "replaceKnownAuxiliaryConstant_taclet0010012_59" (formula "131") (term "0,0"))
                                                                                          (rule "notRight" (formula "131"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "89"))
                                                                                          (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "89") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "70"))
                                                                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "48"))
                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                                          (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                          (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                          (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "44"))
                                                                                          (rule "close" (formula "111") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "replaceKnownSelect_taclet0010012_119" (formula "131") (term "0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_123" (formula "131") (term "0,0"))
                                                                                       (rule "notRight" (formula "131"))
                                                                                       (rule "close" (formula "112") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "replaceKnownSelect_taclet0010012_114" (formula "131") (term "0,0"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet0010012_118" (formula "131") (term "0,0"))
                                                                                    (rule "notRight" (formula "131"))
                                                                                    (rule "close" (formula "113") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "replaceKnownSelect_taclet0010012_109" (formula "131") (term "0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet0010012_113" (formula "131") (term "0,0"))
                                                                                 (rule "notRight" (formula "131"))
                                                                                 (rule "close" (formula "114") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "replaceKnownSelect_taclet0010012_107" (formula "131") (term "0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0010012_108" (formula "131") (term "0,0"))
                                                                              (rule "notRight" (formula "131"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "48"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "89"))
                                                                              (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "89") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                              (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "70"))
                                                                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                                              (rule "eqSymm" (formula "3"))
                                                                              (rule "close" (formula "115") (ifseqformula "3"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "replaceKnownSelect_taclet0010012_102" (formula "131") (term "0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0010012_106" (formula "131") (term "0,0"))
                                                                           (rule "notRight" (formula "131"))
                                                                           (rule "close" (formula "116") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "replaceKnownSelect_taclet0010012_93" (formula "131") (term "0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet0010012_97" (formula "131") (term "0,0"))
                                                                        (rule "notRight" (formula "131"))
                                                                        (rule "close" (formula "117") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "replaceKnownSelect_taclet0010012_84" (formula "131") (term "0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0010012_88" (formula "131") (term "0,0"))
                                                                     (rule "notRight" (formula "131"))
                                                                     (rule "close" (formula "118") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "replaceKnownSelect_taclet0010012_75" (formula "131") (term "0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010012_79" (formula "131") (term "0,0"))
                                                                  (rule "notRight" (formula "131"))
                                                                  (rule "close" (formula "119") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "replaceKnownSelect_taclet0010012_70" (formula "131") (term "0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0010012_74" (formula "131") (term "0,0"))
                                                               (rule "notRight" (formula "131"))
                                                               (rule "close" (formula "120") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "replaceKnownSelect_taclet0010012_65" (formula "131") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0010012_69" (formula "131") (term "0,0"))
                                                            (rule "notRight" (formula "131"))
                                                            (rule "close" (formula "121") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "replaceKnownSelect_taclet0010012_60" (formula "131") (term "0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0010012_64" (formula "131") (term "0,0"))
                                                         (rule "notRight" (formula "131"))
                                                         (rule "close" (formula "122") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "131"))
                                                      (rule "replaceKnownSelect_taclet0010012_51" (formula "131") (term "0"))
                                                      (rule "replaceKnownSelect_taclet0010012_52" (formula "131") (term "1"))
                                                       (builtin "One Step Simplification" (formula "131"))
                                                      (rule "closeTrue" (formula "131"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "131") (inst "sk=i_3_0") (userinteraction))
                                                   (rule "allLeft" (formula "86") (inst "t=i_3_0") (userinteraction))
                                                   (rule "replaceKnownSelect_taclet0010012_50" (formula "132") (term "0,1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0010012_101" (formula "132") (term "0,1,1,0"))
                                                   (rule "replaceKnownSelect_taclet0010012_50" (formula "132") (term "0,0,0,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0010012_101" (formula "132") (term "0,0,0,0,1"))
                                                   (rule "impRight" (formula "132"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notRight" (formula "134"))
                                                   (rule "replace_known_left" (formula "89") (term "1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "89"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "89") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "89"))
                                                   (rule "notLeft" (formula "89"))
                                                   (rule "inEqSimp_ltToLeq" (formula "95"))
                                                   (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "95") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "91"))
                                                   (rule "polySimp_mulComm0" (formula "91") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "91") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "50"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "64"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "57"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "72"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_geqRight" (formula "97"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                                   (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "96") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                                   (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "92") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                                   (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "90") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "90") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "90") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "90") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "94") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "68") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "68") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "93") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "93") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "93") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "93") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "93") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "exRight" (formula "131") (inst "t=i_2_0") (userinteraction))
                                                (rule "replaceKnownSelect_taclet0010012_107" (formula "131") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010012_108" (formula "131") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet0010012_107" (formula "132") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010012_108" (formula "132") (term "1,1,0"))
                                                (rule "replaceKnownSelect_taclet0010012_50" (formula "131") (term "0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet0010012_50" (formula "131") (term "0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010012_101" (formula "131") (term "0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010012_101" (formula "131") (term "0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet0010012_50" (formula "132") (term "0,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet0010012_50" (formula "132") (term "0,1,1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010012_101" (formula "132") (term "0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0010012_101" (formula "132") (term "0,1,1,0,0"))
                                                (rule "replace_known_left" (formula "131") (term "1,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "castedGetAny" (formula "132") (term "0,1,0"))
                                                (rule "castedGetAny" (formula "131") (term "0,1"))
                                                (rule "eqSymm" (formula "131") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "69"))
                                                (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "54"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "61"))
                                                (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "88"))
                                                (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "88") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "92"))
                                                (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "92") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "132") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "131") (term "0"))
                                                (rule "replace_known_left" (formula "131") (term "0") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "applyEq" (formula "131") (term "1") (ifseqformula "48"))
                                                (rule "close" (formula "131") (ifseqformula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "131") (inst "sk=i_1_0") (userinteraction))
                                             (rule "allLeft" (formula "89") (inst "t=i_1_0") (userinteraction))
                                             (rule "replaceKnownSelect_taclet0010012_49" (formula "132") (term "0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "132") (term "0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet0010012_49" (formula "132") (term "0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "132") (term "0,0,0,0,1"))
                                             (rule "impRight" (formula "132"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notRight" (formula "134"))
                                             (rule "replace_known_left" (formula "92") (term "1,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "92"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "92") (term "0,1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "92"))
                                             (rule "notLeft" (formula "92"))
                                             (rule "inEqSimp_ltToLeq" (formula "95"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "95") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "91"))
                                             (rule "polySimp_mulComm0" (formula "91") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "91") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "50"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "64") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "72"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "72") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_geqRight" (formula "97"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                             (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                             (rule "polySimp_elimOne" (formula "92") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                             (rule "polySimp_elimOne" (formula "51") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                             (rule "polySimp_elimOne" (formula "65") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "90") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "90") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "68") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "93") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "93") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "93") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "93") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                             (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                             (rule "polySimp_elimOne" (formula "73") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "131") (inst "sk=i_0_0") (userinteraction))
                                          (rule "allLeft" (formula "90") (inst "t=i_0_0") (userinteraction))
                                          (rule "replaceKnownSelect_taclet0010012_48" (formula "132") (term "0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0010012_92" (formula "132") (term "0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet0010012_48" (formula "132") (term "0,0,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0010012_92" (formula "132") (term "0,0,0,0,1"))
                                          (rule "impRight" (formula "132"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notRight" (formula "134"))
                                          (rule "replace_known_left" (formula "93") (term "1,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "93"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "93") (term "0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "93"))
                                          (rule "notLeft" (formula "93"))
                                          (rule "inEqSimp_ltToLeq" (formula "95"))
                                          (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "95") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "91"))
                                          (rule "polySimp_mulComm0" (formula "91") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "91") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "72") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_geqRight" (formula "97"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                          (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                          (rule "polySimp_elimOne" (formula "92") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                          (rule "polySimp_elimOne" (formula "51") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "90") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "90") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "90") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "90") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "68") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "93") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "93") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "93") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "93") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "93") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                          (rule "polySimp_elimOne" (formula "73") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "exRight" (formula "131") (inst "t=i_3") (userinteraction))
                                       (rule "replaceKnownSelect_taclet0010012_107" (formula "131") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_108" (formula "131") (term "1,1"))
                                       (rule "replaceKnownSelect_taclet0010012_107" (formula "132") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_108" (formula "132") (term "1,1,0"))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "131") (term "0,1,1,0"))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "131") (term "0,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "131") (term "0,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "131") (term "0,0,0,1"))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "132") (term "0,0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "132") (term "0,1,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "132") (term "0,0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "132") (term "0,1,1,0,0"))
                                       (rule "replace_known_left" (formula "131") (term "1,0") (ifseqformula "92"))
                                        (builtin "One Step Simplification" (formula "131"))
                                       (rule "castedGetAny" (formula "132") (term "0,1,0"))
                                       (rule "castedGetAny" (formula "131") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "88"))
                                       (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "88") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "92"))
                                       (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "92") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "54"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "47"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "47") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "61") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "132") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "132") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "131") (term "0"))
                                       (rule "replace_known_left" (formula "131") (term "0") (ifseqformula "91"))
                                        (builtin "One Step Simplification" (formula "131"))
                                       (rule "applyEq" (formula "131") (term "1") (ifseqformula "2"))
                                       (rule "close" (formula "131") (ifseqformula "93"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "131") (inst "sk=j_0") (userinteraction))
                                    (rule "allLeft" (formula "58") (inst "t=j_0") (userinteraction))
                                    (rule "impLeft" (formula "58") (userinteraction))
                                    (branch "Case 1"
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "132") (term "0,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "132") (term "0,1,1,0"))
                                       (rule "replaceKnownSelect_taclet0010012_41" (formula "132") (term "0,1,1,0,0,1"))
                                       (rule "replaceKnownSelect_taclet0010012_41" (formula "132") (term "0,0,0,1,0,1"))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "132") (term "0,0,1,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "132") (term "0,1,1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "132") (term "0,0,0,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "132") (term "0,0,1,1,0,1"))
                                       (rule "impRight" (formula "132"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "replace_known_left" (formula "96") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "96"))
                                       (rule "castedGetAny" (formula "134") (term "0,1,0"))
                                       (rule "castedGetAny" (formula "134") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "94"))
                                       (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "94") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "66") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "66") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "56") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "71"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "71") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "49"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "63"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "63") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "90"))
                                       (rule "polySimp_mulComm0" (formula "90") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "90") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_geqRight" (formula "96"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "134") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "134") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "93") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "93") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "93") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "93") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "93") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "92") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "92") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "92") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "92") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "92") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "89") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "95"))
                                       (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                       (rule "polySimp_elimOne" (formula "95") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "67") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                       (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                       (rule "polySimp_elimOne" (formula "72") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                       (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                       (rule "polySimp_elimOne" (formula "91") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "134") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "134") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "134") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "134") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "134") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "134") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "exLeft" (formula "58") (inst "sk=i_4") (userinteraction))
                                       (rule "impRight" (formula "132") (userinteraction))
                                       (rule "exRight" (formula "133") (inst "t=i_4") (userinteraction))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "1") (term "0,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "1") (term "0,1,1"))
                                       (rule "replaceKnownSelect_taclet0010012_41" (formula "133") (term "0,1,1,0"))
                                       (rule "replaceKnownSelect_taclet0010012_41" (formula "133") (term "0,0,0,1"))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "133") (term "0,0,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "133") (term "0,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "133") (term "0,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "133") (term "0,0,1,1"))
                                       (rule "replaceKnownSelect_taclet0010012_41" (formula "134") (term "0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet0010012_41" (formula "134") (term "0,0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet0010012_49" (formula "134") (term "0,0,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "134") (term "0,1,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_44" (formula "134") (term "0,0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0010012_83" (formula "134") (term "0,0,1,1,0"))
                                       (rule "andLeft" (formula "59"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "60"))
                                       (rule "eqSymm" (formula "136") (term "1"))
                                       (rule "replace_known_left" (formula "136") (term "1,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "castedGetAny" (formula "137") (term "0,1,0"))
                                       (rule "castedGetAny" (formula "137") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "66") (term "0"))
                                       (rule "castedGetAny" (formula "136") (term "1,1"))
                                       (rule "castedGetAny" (formula "136") (term "0,1"))
                                       (rule "replace_known_left" (formula "136") (term "1") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "inEqSimp_ltToLeq" (formula "97"))
                                       (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "97") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "56") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "49"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "93"))
                                       (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "93") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "69") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "74"))
                                       (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "74") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "137") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "137") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "60") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "136"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "137") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "applyEq" (formula "137") (term "1,1,0") (ifseqformula "62"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "98"))
                                       (rule "polySimp_mulLiterals" (formula "98") (term "0"))
                                       (rule "polySimp_elimOne" (formula "98") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "92") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "92") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "92") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "92") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "92") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "95") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "95") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "95") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "95") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "95") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "94"))
                                       (rule "polySimp_mulLiterals" (formula "94") (term "0"))
                                       (rule "polySimp_elimOne" (formula "94") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "70") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "96") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "96") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "96") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "96") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "96") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "137") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "137") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "137") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "137") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "137") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "63") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "63") (term "0"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "closeFalse" (formula "63"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "131"))
                           (branch
                              (rule "andRight" (formula "131"))
                              (branch
                                 (rule "wellFormedAnonEQ" (formula "131") (ifseqformula "82"))
                                 (rule "wellFormedAnonEQ" (formula "131") (term "0") (ifseqformula "78"))
                                 (rule "wellFormedAnonEQ" (formula "131") (term "0,0") (ifseqformula "74"))
                                 (rule "wellFormedAnon" (formula "131") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "131") (term "1") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "31")) (ifInst ""  (formula "66")) (ifInst ""  (formula "73")) (ifInst ""  (formula "77")))
                                 (rule "closeTrue" (formula "131"))
                              )
                              (branch
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (ifseqformula "82"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0") (ifseqformula "78"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0,0") (ifseqformula "74"))
                                  (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "34")))
                                 (rule "closeTrue" (formula "131"))
                              )
                           )
                           (branch
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (ifseqformula "82"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0") (ifseqformula "78"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0,0") (ifseqformula "74"))
                               (builtin "One Step Simplification" (formula "131"))
                              (rule "orRight" (formula "131"))
                              (rule "orRight" (formula "131"))
                              (rule "orRight" (formula "131"))
                              (rule "orRight" (formula "131"))
                              (rule "replace_known_right" (formula "10") (term "1,0,0") (ifseqformula "132"))
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "131")))
                              (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                              (rule "hideAuxiliaryEq" (formula "10"))
                              (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "130"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "131")))
                              (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "replace_known_right" (formula "5") (term "1,0,0,0") (ifseqformula "130"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "129")) (ifInst ""  (formula "131")))
                              (rule "applyEqReverse" (formula "93") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "129"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "128")))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "127"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "128")) (ifInst ""  (formula "129")))
                              (rule "applyEqReverse" (formula "93") (term "0") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "126"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "125"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "124"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "125")) (ifInst ""  (formula "126")))
                              (rule "applyEqReverse" (formula "89") (term "0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "123"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "70") (term "0,0,0") (ifseqformula "122"))
                               (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "123")) (ifInst ""  (formula "125")) (ifInst ""  (formula "124")))
                              (rule "closeFalse" (formula "70"))
                           )
                        )
                     )
                  )
                  (branch "Exceptional Post (initDistVals)"
                      (builtin "One Step Simplification" (formula "117"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "andLeft" (formula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0") (ifseqformula "80"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "0,1,0") (ifseqformula "76"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "0,0,1,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "andLeft" (formula "81"))
                     (rule "andLeft" (formula "82"))
                     (rule "andLeft" (formula "81"))
                     (rule "andLeft" (formula "83"))
                     (rule "notLeft" (formula "81"))
                     (rule "close" (formula "85") (ifseqformula "84"))
                  )
                  (branch "Pre (initDistVals)"
                      (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "113")) (ifInst ""  (formula "82")) (ifInst ""  (formula "113")) (ifInst ""  (formula "82")))
                     (rule "andRight" (formula "115"))
                     (branch "Case 1"
                        (rule "andRight" (formula "115"))
                        (branch "Case 1"
                           (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "115") (inst "i=i") (inst "i_0=i_0") (userinteraction))
                           (rule "andRight" (formula "115"))
                           (branch
                              (rule "andRight" (formula "115"))
                              (branch
                                 (rule "eqSymm" (formula "115"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "67") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "62") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                 (rule "pullOutSelect" (formula "115") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "73"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")) (ifInst ""  (formula "33")))
                                 (rule "replaceKnownSelect_taclet012_6" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet012_7" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "116") (term "0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "115"))
                                 (rule "applyEq" (formula "115") (term "1") (ifseqformula "37"))
                                 (rule "pullOutSelect" (formula "115") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "73"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")) (ifInst ""  (formula "33")))
                                 (rule "replaceKnownSelect_taclet012_4" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "116") (term "0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "116"))
                                 (rule "closeTrue" (formula "116"))
                              )
                              (branch
                                 (rule "expand_inInt" (formula "115") (term "1,0,0"))
                                 (rule "replace_int_MAX" (formula "115") (term "1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "115") (term "0,1,1,0,0"))
                                 (rule "allRight" (formula "115") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "115"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "117"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "50") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "57") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "64") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "72") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "37")))
                                 (rule "replaceKnownSelect_taclet012_4" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                 (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "nnf_imp2or" (formula "46") (term "0"))
                                 (rule "nnf_imp2or" (formula "52") (term "0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0"))
                                 (rule "nnf_imp2or" (formula "66") (term "0"))
                                 (rule "nnf_imp2or" (formula "59") (term "0"))
                                 (rule "nnf_imp2or" (formula "60") (term "0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "66") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "ifthenelse_split" (formula "8") (term "0"))
                                 (branch "result_201.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "73"))
                                    (rule "true_left" (formula "73"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or" (formula "58") (term "0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "52") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "cut_direct" (formula "61") (term "0"))
                                    (branch "CUT: result_199.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "true_left" (formula "62"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (rule "commute_or" (formula "35") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0"))
                                       (rule "commute_or" (formula "34") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0"))
                                       (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                       (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ex_pull_out3" (formula "51") (term "0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "52") (term "0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                       (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                       (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                       (rule "allLeft" (formula "34") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "34") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "inEqSimp_homoInEq1" (formula "34"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0"))
                                       (rule "add_literals" (formula "34") (term "0"))
                                       (rule "leq_literals" (formula "34"))
                                       (rule "closeFalse" (formula "34"))
                                    )
                                    (branch "CUT: result_199.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (rule "commute_or" (formula "35") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0"))
                                       (rule "commute_or" (formula "34") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0"))
                                       (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                       (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ex_pull_out3" (formula "51") (term "0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "52") (term "0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                       (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                       (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                       (rule "allLeft" (formula "34") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "34") (term "0,0,1"))
                                       (rule "leq_literals" (formula "34") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "34") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "34"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "closeFalse" (formula "33"))
                                    )
                                 )
                                 (branch "result_201.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_right" (formula "78") (term "0,0,0") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "48") (term "0"))
                                    (rule "commute_or" (formula "63") (term "0,0"))
                                    (rule "commute_or" (formula "56") (term "0,0"))
                                    (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "57") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "57") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "cut_direct" (formula "66") (term "0"))
                                    (branch "CUT: result_199.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "true_left" (formula "67"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or" (formula "49") (term "0,0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or" (formula "48") (term "0,0"))
                                       (rule "commute_or_2" (formula "48") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or" (formula "39") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                       (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "true_left" (formula "73"))
                                          (rule "ex_pull_out3" (formula "51") (term "0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "52") (term "0"))
                                          (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                          (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                          (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                          (rule "allLeft" (formula "34") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                          (rule "leq_literals" (formula "34") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "34") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "34"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "33"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "78"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "78"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "ex_pull_out3" (formula "53") (term "0"))
                                          (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                          (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "54") (term "0"))
                                          (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                          (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                          (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                          (rule "allLeft" (formula "36") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "36"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "35"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch "CUT: result_199.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or" (formula "49") (term "0,0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or" (formula "48") (term "0,0"))
                                       (rule "commute_or_2" (formula "48") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or" (formula "39") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                       (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "true_left" (formula "73"))
                                          (rule "ex_pull_out3" (formula "51") (term "0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "52") (term "0"))
                                          (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                          (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                          (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                          (rule "allLeft" (formula "34") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                          (rule "leq_literals" (formula "34") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "34"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                       (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "78"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "78"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "ex_pull_out3" (formula "53") (term "0"))
                                          (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                          (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "54") (term "0"))
                                          (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                          (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                          (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                          (rule "allLeft" (formula "36") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "expand_inInt" (formula "115") (term "1,0,0"))
                              (rule "replace_int_MAX" (formula "115") (term "1,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "115") (term "0,1,1,0,0"))
                              (rule "allRight" (formula "115") (inst "sk=i_3"))
                              (rule "impRight" (formula "115"))
                              (rule "andLeft" (formula "1"))
                              (rule "notRight" (formula "117"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "2"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "50") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "72"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "72") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "64"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "64") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "57"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "57") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                              (rule "polySimp_elimOne" (formula "50") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                              (rule "polySimp_elimOne" (formula "72") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                              (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                              (rule "polySimp_elimOne" (formula "64") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                              (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                              (rule "polySimp_elimOne" (formula "57") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "37")))
                              (rule "replaceKnownSelect_taclet012_6" (formula "1") (term "0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet012_7" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "41"))
                              (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                              (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "nnf_imp2or" (formula "52") (term "0"))
                              (rule "nnf_imp2or" (formula "51") (term "0"))
                              (rule "nnf_imp2or" (formula "46") (term "0"))
                              (rule "nnf_imp2or" (formula "59") (term "0"))
                              (rule "nnf_imp2or" (formula "66") (term "0"))
                              (rule "nnf_imp2or" (formula "60") (term "0"))
                              (rule "nnf_imp2or" (formula "43") (term "0"))
                              (rule "nnf_imp2or" (formula "42") (term "0"))
                              (rule "nnf_notAnd" (formula "52") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "51") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "46") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                              (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "59") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                              (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                              (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "66") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                              (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                              (rule "nnf_imp2or" (formula "66") (term "1,0"))
                              (rule "nnf_notAnd" (formula "60") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                              (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                              (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "43") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                              (rule "ifthenelse_split" (formula "11") (term "0"))
                              (branch "result_201.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "13") (term "1,0") (ifseqformula "12"))
                                 (rule "hideAuxiliaryEq" (formula "12"))
                                 (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "true_left" (formula "73"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or" (formula "51") (term "0,0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "52") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "52") (term "0,0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "cut_direct" (formula "61") (term "0"))
                                 (branch "CUT: result_199.<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "true_left" (formula "62"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or" (formula "35") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                    (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ex_pull_out3" (formula "51") (term "0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "52") (term "0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "35") (inst "t=i_3"))
                                    (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "35") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "35") (term "0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "closeFalse" (formula "35"))
                                 )
                                 (branch "CUT: result_199.<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or" (formula "35") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                    (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ex_pull_out3" (formula "51") (term "0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "52") (term "0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "35") (inst "t=i_3"))
                                    (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "35") (term "0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "closeFalse" (formula "35"))
                                 )
                              )
                              (branch "result_201.<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "11"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "78") (term "0,0,0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "78"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or_2" (formula "48") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or" (formula "56") (term "0,0"))
                                 (rule "commute_or" (formula "63") (term "0,0"))
                                 (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "57") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "cut_direct" (formula "66") (term "0"))
                                 (branch "CUT: result_199.<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "true_left" (formula "67"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or" (formula "48") (term "0,0"))
                                    (rule "commute_or_2" (formula "48") (term "0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                    (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifthenelse_split" (formula "7") (term "0"))
                                    (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "true_left" (formula "73"))
                                       (rule "ex_pull_out3" (formula "51") (term "0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "52") (term "0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "35") (inst "t=i_3"))
                                       (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                       (rule "leq_literals" (formula "35") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "35"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeFalse" (formula "34"))
                                    )
                                    (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "79"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "ex_pull_out3" (formula "53") (term "0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "54") (term "0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "37") (inst "t=i_3"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                       (rule "leq_literals" (formula "37") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "37"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "36"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "CUT: result_199.<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or" (formula "48") (term "0,0"))
                                    (rule "commute_or_2" (formula "48") (term "0"))
                                    (rule "commute_or" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                    (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifthenelse_split" (formula "7") (term "0"))
                                    (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "true_left" (formula "73"))
                                       (rule "ex_pull_out3" (formula "51") (term "0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "52") (term "0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "35") (inst "t=i_3"))
                                       (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                       (rule "leq_literals" (formula "35") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "35"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeFalse" (formula "34"))
                                    )
                                    (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "79"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "79"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "ex_pull_out3" (formula "53") (term "0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "54") (term "0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "37") (inst "t=i_3"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "37") (term "0,0,1"))
                                       (rule "leq_literals" (formula "37") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "37"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "115"))
                           (branch
                              (rule "inEqSimp_ltToLeq" (formula "45"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "59"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "52") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "67"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "67") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "62") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                              (rule "polySimp_elimOne" (formula "45") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                              (rule "polySimp_elimOne" (formula "52") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                              (rule "polySimp_elimOne" (formula "67") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                              (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                              (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                              (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "nnf_imp2or" (formula "56") (term "0"))
                              (rule "nnf_imp2or" (formula "48") (term "0"))
                              (rule "nnf_imp2or" (formula "62") (term "0"))
                              (rule "nnf_imp2or" (formula "42") (term "0"))
                              (rule "nnf_imp2or" (formula "47") (term "0"))
                              (rule "nnf_imp2or" (formula "55") (term "0"))
                              (rule "nnf_imp2or" (formula "39") (term "0"))
                              (rule "nnf_imp2or" (formula "38") (term "0"))
                              (rule "nnf_notAnd" (formula "56") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                              (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                              (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "48") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                              (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                              (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "62") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                              (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                              (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                              (rule "nnf_imp2or" (formula "62") (term "1,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "47") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                              (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                              (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "55") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                              (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                              (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "115"))
                              (rule "replaceKnownSelect_taclet010012_8" (formula "115") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet010012_9" (formula "115") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet010012_10" (formula "115") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "115") (term "0,1") (ifseqformula "81"))
                               (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "79")) (ifInst ""  (formula "80")))
                              (rule "closeTrue" (formula "115"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "115"))
                              (branch "Case 1"
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "115") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
                                 (rule "andRight" (formula "115"))
                                 (branch
                                    (rule "andRight" (formula "115"))
                                    (branch
                                       (rule "andRight" (formula "115"))
                                       (branch
                                          (rule "andRight" (formula "115"))
                                          (branch
                                             (rule "andRight" (formula "115"))
                                             (branch
                                                (rule "andRight" (formula "115"))
                                                (branch
                                                   (rule "andRight" (formula "115"))
                                                   (branch
                                                      (rule "andRight" (formula "115"))
                                                      (branch
                                                         (rule "andRight" (formula "115"))
                                                         (branch
                                                            (rule "andRight" (formula "115"))
                                                            (branch
                                                               (rule "andRight" (formula "115"))
                                                               (branch
                                                                  (rule "andRight" (formula "115"))
                                                                  (branch
                                                                     (rule "andRight" (formula "115"))
                                                                     (branch
                                                                        (rule "andRight" (formula "115"))
                                                                        (branch
                                                                           (rule "andRight" (formula "115"))
                                                                           (branch
                                                                              (rule "andRight" (formula "115"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "115"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "115"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "115"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "115"))
                                                                                          (branch
                                                                                             (rule "andRight" (formula "115"))
                                                                                             (branch
                                                                                                (rule "andRight" (formula "115"))
                                                                                                (branch
                                                                                                   (rule "andRight" (formula "115"))
                                                                                                   (branch
                                                                                                      (rule "notRight" (formula "115"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                      (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
                                                                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                      (rule "close" (formula "90") (ifseqformula "2"))
                                                                                                   )
                                                                                                   (branch
                                                                                                      (rule "notRight" (formula "115"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                      (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                                                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                      (rule "close" (formula "91") (ifseqformula "2"))
                                                                                                   )
                                                                                                )
                                                                                                (branch
                                                                                                   (rule "notRight" (formula "115"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                                   (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                                                   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                                   (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                                                   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                                                   (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                                                   (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                   (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                   (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                   (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                                   (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                                   (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                                   (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                   (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                   (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                                                   (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                                                   (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                                   (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                   (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
                                                                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "replaceKnownSelect_taclet2_0" (formula "1") (term "0"))
                                                                                                   (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "1") (term "0"))
                                                                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                   (rule "close" (formula "86") (ifseqformula "2"))
                                                                                                )
                                                                                             )
                                                                                             (branch
                                                                                                (rule "insert_constant_string_value" (formula "115") (term "0,0") (ifseqformula "29"))
                                                                                                 (builtin "One Step Simplification" (formula "115"))
                                                                                                (rule "castDel" (formula "115") (term "0,0,0"))
                                                                                                (rule "notRight" (formula "115"))
                                                                                                (rule "close" (formula "92") (ifseqformula "1"))
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (rule "insert_constant_string_value" (formula "115") (term "0,0") (ifseqformula "29"))
                                                                                              (builtin "One Step Simplification" (formula "115"))
                                                                                             (rule "castDel" (formula "115") (term "0,0,0"))
                                                                                             (rule "notRight" (formula "115"))
                                                                                             (rule "close" (formula "93") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "insert_constant_string_value" (formula "115") (term "0,0") (ifseqformula "29"))
                                                                                           (builtin "One Step Simplification" (formula "115"))
                                                                                          (rule "castDel" (formula "115") (term "0,0,0"))
                                                                                          (rule "notRight" (formula "115"))
                                                                                          (rule "close" (formula "94") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "notRight" (formula "115"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                                       (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                                       (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                                       (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                       (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                                       (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                       (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                                                                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "simplifySelectOfAnon" (formula "1"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                       (rule "hideAuxiliaryEq" (formula "1"))
                                                                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "42"))
                                                                                       (rule "close" (formula "95") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "notRight" (formula "115"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                    (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                                    (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                    (rule "close" (formula "97") (ifseqformula "2"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "notRight" (formula "115"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                                 (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                 (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                                 (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                 (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                                 (rule "simplifySelectOfAnon" (formula "1"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                 (rule "close" (formula "98") (ifseqformula "2"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "notRight" (formula "115"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                              (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                              (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                              (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                              (rule "simplifySelectOfAnon" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                              (rule "close" (formula "99") (ifseqformula "2"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "notRight" (formula "115"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                           (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                           (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                           (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                           (rule "replaceKnownSelect_taclet12_2" (formula "1") (term "0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet12_3" (formula "1") (term "0"))
                                                                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                           (rule "close" (formula "100") (ifseqformula "2"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "notRight" (formula "115"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                        (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                        (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                        (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                        (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "close" (formula "101") (ifseqformula "2"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "notRight" (formula "115"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "close" (formula "102") (ifseqformula "2"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "115"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "60"))
                                                                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                  (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                                  (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                  (rule "close" (formula "103") (ifseqformula "2"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "notRight" (formula "115"))
                                                               (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "60"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "68"))
                                                               (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "53"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                               (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "close" (formula "104") (ifseqformula "2"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "notRight" (formula "115"))
                                                            (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "60"))
                                                            (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "68"))
                                                            (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                            (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "53"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "46"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                            (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "105") (ifseqformula "2"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "115"))
                                                         (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "60"))
                                                         (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "68"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "53"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "106") (ifseqformula "2"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "115"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "46"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                      (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "68") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "107") (ifseqformula "2"))
                                                   )
                                                )
                                                (branch
                                                   (rule "orRight" (formula "115"))
                                                   (rule "inEqSimp_ltToLeq" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "67"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "62") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "52"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "59"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                                   (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "67") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "59") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                                   (rule "pullOutSelect" (formula "115") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "116") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "115") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "116"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "116") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "115"))
                                                   (rule "close" (formula "115") (ifseqformula "41"))
                                                )
                                             )
                                             (branch
                                                (rule "allRight" (formula "115") (inst "sk=i_3_0"))
                                                (rule "impRight" (formula "115"))
                                                (rule "notRight" (formula "116"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "62"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "70"))
                                                (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                                (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                (rule "polySimp_elimOne" (formula "70") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                                (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0,1,0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                                (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "35")))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "35")))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")) (ifInst ""  (formula "19")))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")) (ifInst ""  (formula "19")))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")))
                                                (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                                (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                                (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "nnf_imp2or" (formula "51") (term "0"))
                                                (rule "nnf_imp2or" (formula "45") (term "0"))
                                                (rule "nnf_imp2or" (formula "58") (term "0"))
                                                (rule "nnf_imp2or" (formula "50") (term "0"))
                                                (rule "nnf_imp2or" (formula "59") (term "0"))
                                                (rule "nnf_imp2or" (formula "65") (term "0"))
                                                (rule "nnf_imp2or" (formula "41") (term "0"))
                                                (rule "nnf_imp2or" (formula "42") (term "0"))
                                                (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                                (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                                (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                                (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                                (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "65") (term "1,0"))
                                                (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "65") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                                (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                                (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                                (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                                (rule "ifthenelse_split" (formula "7") (term "0"))
                                                (branch "result_201.<created> = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "72") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "true_left" (formula "72"))
                                                   (rule "commute_or_2" (formula "43") (term "0"))
                                                   (rule "commute_or_2" (formula "37") (term "0"))
                                                   (rule "commute_or_2" (formula "42") (term "0"))
                                                   (rule "commute_or" (formula "50") (term "0,0"))
                                                   (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "51") (term "0,0"))
                                                   (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "0,0"))
                                                   (rule "commute_or_2" (formula "33") (term "0"))
                                                   (rule "commute_or_2" (formula "34") (term "0"))
                                                   (rule "cut_direct" (formula "60") (term "0"))
                                                   (branch "CUT: result_199.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                      (rule "commute_or" (formula "43") (term "0,0"))
                                                      (rule "commute_or_2" (formula "43") (term "0"))
                                                      (rule "commute_or" (formula "37") (term "0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "commute_or" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or" (formula "34") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                                      (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                                      (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                                      (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "3") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3"))
                                                      (rule "ex_pull_out3" (formula "50") (term "0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "51") (term "0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "1,0,0"))
                                                      (rule "shift_paren_or" (formula "57") (term "0,1,0,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "57") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "57") (term "0,1,0,0,0"))
                                                      (rule "commute_or" (formula "57") (term "0,0,0,0,0,0"))
                                                      (rule "allLeft" (formula "37") (inst "t=i_3_0"))
                                                      (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "37") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "37"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "CUT: result_199.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                      (rule "commute_or" (formula "43") (term "0,0"))
                                                      (rule "commute_or_2" (formula "43") (term "0"))
                                                      (rule "commute_or" (formula "37") (term "0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "commute_or" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or" (formula "34") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                                      (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                                      (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                                      (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "3") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3"))
                                                      (rule "ex_pull_out3" (formula "50") (term "0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "51") (term "0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "1,0,0"))
                                                      (rule "shift_paren_or" (formula "57") (term "0,1,0,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "57") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "57") (term "0,1,0,0,0"))
                                                      (rule "commute_or" (formula "57") (term "0,0,0,0,0,0"))
                                                      (rule "allLeft" (formula "37") (inst "t=i_3_0"))
                                                      (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "37"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "result_201.<created> = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "81"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "81"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "80"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "80"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "79"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "79"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "79"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "79"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "79"))
                                                    (builtin "One Step Simplification" (formula "77"))
                                                   (rule "commute_or_2" (formula "48") (term "0"))
                                                   (rule "commute_or_2" (formula "42") (term "0"))
                                                   (rule "commute_or_2" (formula "47") (term "0"))
                                                   (rule "commute_or" (formula "55") (term "0,0"))
                                                   (rule "commute_or" (formula "56") (term "0,0"))
                                                   (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                                   (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "62") (term "0,0"))
                                                   (rule "commute_or_2" (formula "38") (term "0"))
                                                   (rule "commute_or_2" (formula "39") (term "0"))
                                                   (rule "cut_direct" (formula "65") (term "0"))
                                                   (branch "CUT: result_199.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "66"))
                                                      (rule "true_left" (formula "66"))
                                                      (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0"))
                                                      (rule "commute_or" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or" (formula "47") (term "0,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "commute_or_2" (formula "39") (term "0,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "39") (term "0,0"))
                                                      (rule "commute_or_2" (formula "39") (term "0"))
                                                      (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                                      (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                                      (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                                      (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "3") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "8") (term "0"))
                                                      (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                         (rule "hideAuxiliaryEq" (formula "9"))
                                                         (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "true_left" (formula "72"))
                                                         (rule "ex_pull_out3" (formula "50") (term "0"))
                                                         (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "51") (term "0"))
                                                         (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                         (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                         (rule "allLeft" (formula "37") (inst "t=i_3_0"))
                                                         (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                         (rule "add_literals" (formula "37") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0"))
                                                         (rule "add_literals" (formula "37") (term "0"))
                                                         (rule "leq_literals" (formula "37"))
                                                         (rule "closeFalse" (formula "37"))
                                                      )
                                                      (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "78"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "76"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "76"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "76"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "76"))
                                                          (builtin "One Step Simplification" (formula "74"))
                                                         (rule "ex_pull_out3" (formula "52") (term "0"))
                                                         (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "53") (term "0"))
                                                         (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                         (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_3_0"))
                                                         (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "39") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0"))
                                                         (rule "add_literals" (formula "39") (term "0"))
                                                         (rule "leq_literals" (formula "39"))
                                                         (rule "closeFalse" (formula "39"))
                                                      )
                                                   )
                                                   (branch "CUT: result_199.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "65"))
                                                      (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0"))
                                                      (rule "commute_or" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or" (formula "47") (term "0,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "commute_or_2" (formula "39") (term "0,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0"))
                                                      (rule "commute_or" (formula "39") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "39") (term "0,0"))
                                                      (rule "commute_or_2" (formula "39") (term "0"))
                                                      (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                                      (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                                      (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                                      (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "3") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "8") (term "0"))
                                                      (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                         (rule "hideAuxiliaryEq" (formula "9"))
                                                         (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "72"))
                                                         (rule "true_left" (formula "72"))
                                                         (rule "ex_pull_out3" (formula "50") (term "0"))
                                                         (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "51") (term "0"))
                                                         (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                         (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                         (rule "allLeft" (formula "37") (inst "t=i_3_0"))
                                                         (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                         (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "37") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "37") (term "0"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "closeFalse" (formula "37"))
                                                      )
                                                      (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "78"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "78"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "76"))
                                                          (builtin "One Step Simplification" (formula "74"))
                                                         (rule "ex_pull_out3" (formula "52") (term "0"))
                                                         (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "53") (term "0"))
                                                         (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                         (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                         (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                         (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_3_0"))
                                                         (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "39") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "39"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch
                                             (rule "castedGetAny" (formula "115") (term "0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "62") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "115") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "67"))
                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                                             (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                             (rule "polySimp_elimOne" (formula "59") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                             (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                             (rule "polySimp_elimOne" (formula "67") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0"))
                                             (rule "pullOutSelect" (formula "115") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "31")))
                                             (rule "replaceKnownSelect_taclet12_2" (formula "1") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet12_3" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "116") (term "1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "115") (term "0,0,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                                             (rule "applyEq" (formula "116") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "32")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "101")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "101")) (ifInst ""  (formula "16")))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "101")) (ifInst ""  (formula "16")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "101")))
                                             (rule "applyEqReverse" (formula "116") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "116") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                             (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "nnf_imp2or" (formula "48") (term "0"))
                                             (rule "nnf_imp2or" (formula "62") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "55") (term "0"))
                                             (rule "nnf_imp2or" (formula "47") (term "0"))
                                             (rule "nnf_imp2or" (formula "42") (term "0"))
                                             (rule "nnf_ex2all" (formula "115"))
                                             (rule "nnf_imp2or" (formula "57") (term "0"))
                                             (rule "nnf_imp2or" (formula "39") (term "0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                             (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                             (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                             (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                                             (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                             (rule "ifthenelse_split" (formula "8") (term "0"))
                                             (branch "result_201.<created> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_left" (formula "70") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "commute_or_2" (formula "41") (term "0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_or_2" (formula "35") (term "0"))
                                                (rule "commute_and" (formula "48") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "49") (term "0,0"))
                                                (rule "commute_and" (formula "49") (term "0,0,1,0"))
                                                (rule "commute_and_2" (formula "55") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (rule "commute_or" (formula "55") (term "0,0"))
                                                (rule "commute_or_2" (formula "31") (term "0"))
                                                (rule "cut_direct" (formula "58") (term "0"))
                                                (branch "CUT: result_199.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "true_left" (formula "59"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "commute_or" (formula "41") (term "0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0"))
                                                   (rule "commute_or" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or" (formula "35") (term "0,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0,0"))
                                                   (rule "commute_or" (formula "31") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0"))
                                                   (rule "commute_or" (formula "32") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "commute_and_2" (formula "48") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "49") (term "0,1,0"))
                                                   (rule "commute_and" (formula "55") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "55") (term "0,1,1,0"))
                                                   (rule "ex_pull_out3" (formula "48") (term "0"))
                                                   (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "49") (term "0"))
                                                   (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                                   (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                                   (rule "ex_pull_out3" (formula "55") (term "0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,0"))
                                                   (rule "commute_or_2" (formula "55") (term "1,0,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,1,0,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "55") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "55") (term "0,0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,1,0,0,0"))
                                                   (rule "commute_or" (formula "55") (term "0,0,0,0,0,0"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "39"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "37"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "CUT: result_199.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "commute_or" (formula "41") (term "0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0"))
                                                   (rule "commute_or" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or" (formula "35") (term "0,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0,0"))
                                                   (rule "commute_or" (formula "31") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0"))
                                                   (rule "commute_or" (formula "32") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "commute_and_2" (formula "48") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "49") (term "0,1,0"))
                                                   (rule "commute_and" (formula "55") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "55") (term "0,1,1,0"))
                                                   (rule "ex_pull_out3" (formula "48") (term "0"))
                                                   (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "49") (term "0"))
                                                   (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                                   (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                                   (rule "ex_pull_out3" (formula "55") (term "0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,0"))
                                                   (rule "commute_or_2" (formula "55") (term "1,0,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,1,0,0"))
                                                   (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "55") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "55") (term "0,0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "55") (term "0,1,0,0,0"))
                                                   (rule "commute_or" (formula "55") (term "0,0,0,0,0,0"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "39"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                             )
                                             (branch "result_201.<created> = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "78"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_right" (formula "75") (term "0,0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "commute_or_2" (formula "46") (term "0"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "commute_or" (formula "53") (term "0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "commute_and" (formula "53") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "54") (term "0,0"))
                                                (rule "commute_and" (formula "54") (term "0,0,1,0"))
                                                (rule "commute_and_2" (formula "60") (term "0,1,1,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (rule "commute_or" (formula "60") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "cut_direct" (formula "63") (term "0"))
                                                (branch "CUT: result_199.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "commute_or_2" (formula "37") (term "0"))
                                                   (rule "commute_or" (formula "46") (term "0,0"))
                                                   (rule "commute_or_2" (formula "46") (term "0"))
                                                   (rule "commute_or" (formula "45") (term "0,0"))
                                                   (rule "commute_or_2" (formula "45") (term "0"))
                                                   (rule "commute_or" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0,0"))
                                                   (rule "commute_or" (formula "36") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0"))
                                                   (rule "commute_or" (formula "37") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0"))
                                                   (rule "commute_and_2" (formula "53") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "54") (term "0,1,0"))
                                                   (rule "commute_and" (formula "60") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "60") (term "0,1,1,0"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "70") (term "0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "70"))
                                                      (rule "true_left" (formula "70"))
                                                      (rule "ex_pull_out3" (formula "48") (term "0"))
                                                      (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "49") (term "0"))
                                                      (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                                      (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "39"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "1") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "37"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "76"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "76"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "76"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "75"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "75"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "74"))
                                                       (builtin "One Step Simplification" (formula "72"))
                                                      (rule "ex_pull_out3" (formula "50") (term "0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "51") (term "0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "39"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0"))
                                                      (rule "add_literals" (formula "41") (term "0"))
                                                      (rule "leq_literals" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                )
                                                (branch "CUT: result_199.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "commute_or_2" (formula "37") (term "0"))
                                                   (rule "commute_or" (formula "46") (term "0,0"))
                                                   (rule "commute_or_2" (formula "46") (term "0"))
                                                   (rule "commute_or" (formula "45") (term "0,0"))
                                                   (rule "commute_or_2" (formula "45") (term "0"))
                                                   (rule "commute_or" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0,0"))
                                                   (rule "commute_or" (formula "36") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0"))
                                                   (rule "commute_or" (formula "37") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0"))
                                                   (rule "commute_and_2" (formula "53") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "54") (term "0,1,0"))
                                                   (rule "commute_and" (formula "60") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "60") (term "0,1,1,0"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_left" (formula "70") (term "0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "70"))
                                                      (rule "true_left" (formula "70"))
                                                      (rule "ex_pull_out3" (formula "48") (term "0"))
                                                      (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "49") (term "0"))
                                                      (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                                      (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "37"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "39"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "76"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "76"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "76"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "75"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "75"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "74"))
                                                       (builtin "One Step Simplification" (formula "72"))
                                                      (rule "ex_pull_out3" (formula "50") (term "0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "51") (term "0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "39"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0"))
                                                      (rule "add_literals" (formula "41") (term "0"))
                                                      (rule "leq_literals" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch
                                          (rule "allRight" (formula "115") (inst "sk=i_1_0"))
                                          (rule "impRight" (formula "115"))
                                          (rule "notRight" (formula "116"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "48") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "70"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                          (rule "polySimp_elimOne" (formula "70") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                          (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "76"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "35")))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "35")))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")) (ifInst ""  (formula "55")))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")) (ifInst ""  (formula "55")))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                                          (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                          (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                          (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "nnf_imp2or" (formula "51") (term "0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "nnf_imp2or" (formula "58") (term "0"))
                                          (rule "nnf_imp2or" (formula "59") (term "0"))
                                          (rule "nnf_imp2or" (formula "50") (term "0"))
                                          (rule "nnf_imp2or" (formula "65") (term "0"))
                                          (rule "nnf_imp2or" (formula "41") (term "0"))
                                          (rule "nnf_imp2or" (formula "42") (term "0"))
                                          (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                          (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                          (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                          (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                          (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                          (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "65") (term "1,0"))
                                          (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "65") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                          (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "7") (term "0"))
                                          (branch "result_201.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "72") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "72"))
                                             (rule "true_left" (formula "72"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "commute_or" (formula "50") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or" (formula "51") (term "0,0"))
                                             (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "0,0"))
                                             (rule "commute_or_2" (formula "33") (term "0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "cut_direct" (formula "60") (term "0"))
                                             (branch "CUT: result_199.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "true_left" (formula "61"))
                                                (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "commute_or" (formula "37") (term "0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0"))
                                                (rule "commute_or" (formula "42") (term "0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or_2" (formula "33") (term "0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0"))
                                                (rule "commute_or" (formula "33") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "33") (term "0,0"))
                                                (rule "commute_or_2" (formula "33") (term "0"))
                                                (rule "commute_or" (formula "34") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0"))
                                                (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                                (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                                (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "lenNonNegative" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "3"))
                                                (rule "ex_pull_out3" (formula "50") (term "0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "51") (term "0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                                (rule "commute_or_2" (formula "57") (term "1,0,0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,1,0,0,0"))
                                                (rule "commute_or" (formula "57") (term "0,0,0,0,0,0"))
                                                (rule "allLeft" (formula "42") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                (rule "leq_literals" (formula "42") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "42"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: result_199.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "commute_or" (formula "37") (term "0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0"))
                                                (rule "commute_or" (formula "42") (term "0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or_2" (formula "33") (term "0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0"))
                                                (rule "commute_or" (formula "33") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "33") (term "0,0"))
                                                (rule "commute_or_2" (formula "33") (term "0"))
                                                (rule "commute_or" (formula "34") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0"))
                                                (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                                (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                                (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "lenNonNegative" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "3"))
                                                (rule "ex_pull_out3" (formula "50") (term "0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "51") (term "0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                                (rule "commute_or_2" (formula "57") (term "1,0,0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,1,0,0,0"))
                                                (rule "commute_or" (formula "57") (term "0,0,0,0,0,0"))
                                                (rule "allLeft" (formula "42") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "42") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "3"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "inEqSimp_homoInEq1" (formula "42"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                (rule "add_literals" (formula "42") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0"))
                                                (rule "add_literals" (formula "42") (term "0"))
                                                (rule "leq_literals" (formula "42"))
                                                (rule "closeFalse" (formula "42"))
                                             )
                                          )
                                          (branch "result_201.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "81"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "81"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "80"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "80"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "80"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "79"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "79"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "79"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "79"))
                                              (builtin "One Step Simplification" (formula "77"))
                                             (rule "commute_or_2" (formula "48") (term "0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or" (formula "55") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or" (formula "56") (term "0,0"))
                                             (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "62") (term "0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "cut_direct" (formula "65") (term "0"))
                                             (branch "CUT: result_199.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "commute_or" (formula "42") (term "0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "commute_or_2" (formula "38") (term "0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0,0"))
                                                (rule "commute_or" (formula "38") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "38") (term "0,0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                                (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                                (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "lenNonNegative" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "true_left" (formula "72"))
                                                   (rule "ex_pull_out3" (formula "50") (term "0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "51") (term "0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "allLeft" (formula "42") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "42") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "42"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "78"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "78"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "76"))
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "ex_pull_out3" (formula "52") (term "0"))
                                                   (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "53") (term "0"))
                                                   (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                   (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                   (rule "allLeft" (formula "44") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "44"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0"))
                                                   (rule "add_literals" (formula "44") (term "0"))
                                                   (rule "leq_literals" (formula "44"))
                                                   (rule "closeFalse" (formula "44"))
                                                )
                                             )
                                             (branch "CUT: result_199.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "65"))
                                                (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "commute_or" (formula "42") (term "0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "commute_or_2" (formula "38") (term "0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0,0"))
                                                (rule "commute_or" (formula "38") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "38") (term "0,0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                                (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                                (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "lenNonNegative" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "true_left" (formula "72"))
                                                   (rule "ex_pull_out3" (formula "50") (term "0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "51") (term "0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "allLeft" (formula "42") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "42") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "42"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "78"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "76"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "76"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "76"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "76"))
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "ex_pull_out3" (formula "52") (term "0"))
                                                   (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "53") (term "0"))
                                                   (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                   (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                   (rule "allLeft" (formula "44") (inst "t=i_1_0"))
                                                   (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "44") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "44") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "44"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "115") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "115"))
                                       (rule "notRight" (formula "116"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "62") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "55") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "70"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "70") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                       (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "34")))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "34")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                       (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")) (ifInst ""  (formula "22")))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")) (ifInst ""  (formula "22")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                       (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                       (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "nnf_imp2or" (formula "51") (term "0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0"))
                                       (rule "nnf_imp2or" (formula "58") (term "0"))
                                       (rule "nnf_imp2or" (formula "50") (term "0"))
                                       (rule "nnf_imp2or" (formula "59") (term "0"))
                                       (rule "nnf_imp2or" (formula "65") (term "0"))
                                       (rule "nnf_imp2or" (formula "41") (term "0"))
                                       (rule "nnf_imp2or" (formula "42") (term "0"))
                                       (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                       (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                       (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                       (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "65") (term "1,0"))
                                       (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "65") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                       (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                       (rule "ifthenelse_split" (formula "10") (term "0"))
                                       (branch "result_201.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "72") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "true_left" (formula "72"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "commute_or" (formula "50") (term "0,0"))
                                          (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "51") (term "0,0"))
                                          (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "57") (term "0,0"))
                                          (rule "commute_or_2" (formula "33") (term "0"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "cut_direct" (formula "60") (term "0"))
                                          (branch "CUT: result_199.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or" (formula "37") (term "0,0"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "33") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or" (formula "33") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "33") (term "0,0"))
                                             (rule "commute_or_2" (formula "33") (term "0"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                             (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "lenNonNegative" (formula "3") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "43") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,1"))
                                             (rule "leq_literals" (formula "43") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "closeFalse" (formula "43"))
                                          )
                                          (branch "CUT: result_199.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or" (formula "37") (term "0,0"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "33") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or" (formula "33") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "33") (term "0,0"))
                                             (rule "commute_or_2" (formula "33") (term "0"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                             (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "lenNonNegative" (formula "3") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "43") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                             (rule "leq_literals" (formula "43") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "closeFalse" (formula "43"))
                                          )
                                       )
                                       (branch "result_201.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "81"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "77"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "commute_or" (formula "55") (term "0,0"))
                                          (rule "commute_or" (formula "56") (term "0,0"))
                                          (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "62") (term "0,0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "cut_direct" (formula "65") (term "0"))
                                          (branch "CUT: result_199.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "true_left" (formula "66"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "48") (term "0,0"))
                                             (rule "commute_or_2" (formula "48") (term "0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "38") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0"))
                                             (rule "commute_or" (formula "39") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "lenNonNegative" (formula "3") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "8") (term "0"))
                                             (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "72"))
                                                (rule "true_left" (formula "72"))
                                                (rule "ex_pull_out3" (formula "50") (term "0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "51") (term "0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "43") (inst "t=i_0_0"))
                                                (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                (rule "leq_literals" (formula "43") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "43"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "78"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "ex_pull_out3" (formula "52") (term "0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "53") (term "0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "45") (inst "t=i_0_0"))
                                                (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "45") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "3"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "inEqSimp_homoInEq1" (formula "45"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                (rule "add_literals" (formula "45") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0"))
                                                (rule "add_literals" (formula "45") (term "0"))
                                                (rule "leq_literals" (formula "45"))
                                                (rule "closeFalse" (formula "45"))
                                             )
                                          )
                                          (branch "CUT: result_199.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "48") (term "0,0"))
                                             (rule "commute_or_2" (formula "48") (term "0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "38") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0"))
                                             (rule "commute_or" (formula "39") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "lenNonNegative" (formula "3") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "8") (term "0"))
                                             (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "72"))
                                                (rule "true_left" (formula "72"))
                                                (rule "ex_pull_out3" (formula "50") (term "0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "51") (term "0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "43") (inst "t=i_0_0"))
                                                (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                (rule "leq_literals" (formula "43") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "43"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "78"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "78"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "ex_pull_out3" (formula "52") (term "0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "53") (term "0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "45") (inst "t=i_0_0"))
                                                (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,1"))
                                                (rule "leq_literals" (formula "45") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "45"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "castedGetAny" (formula "115") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "52") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "62") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "115") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "67") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "115") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "115") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "0"))
                                    (rule "pullOutSelect" (formula "115") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "31")))
                                    (rule "replaceKnownSelect_taclet12_2" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet12_3" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "116") (term "1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "115") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                    (rule "applyEq" (formula "116") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "31")))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "31")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
                                    (rule "applyEqReverse" (formula "116") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "116") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "115") (term "0,1,1,1,0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                    (rule "applyEq" (formula "116") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")) (ifInst ""  (formula "52")))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")) (ifInst ""  (formula "52")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                                    (rule "applyEqReverse" (formula "116") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "116") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                    (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "nnf_imp2or" (formula "55") (term "0"))
                                    (rule "nnf_imp2or" (formula "48") (term "0"))
                                    (rule "nnf_imp2or" (formula "62") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "47") (term "0"))
                                    (rule "nnf_ex2all" (formula "115"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "57") (term "0"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                    (rule "nnf_imp2or" (formula "63") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                    (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                    (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                                    (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                    (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "result_201.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "70") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "70"))
                                       (rule "true_left" (formula "70"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_or" (formula "48") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "35") (term "0"))
                                       (rule "commute_and" (formula "48") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "49") (term "0,0"))
                                       (rule "commute_and" (formula "49") (term "0,0,1,0"))
                                       (rule "commute_and_2" (formula "55") (term "0,1,1,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "commute_or_2" (formula "31") (term "0"))
                                       (rule "cut_direct" (formula "58") (term "0"))
                                       (branch "CUT: result_199.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "commute_or_2" (formula "32") (term "0"))
                                          (rule "commute_or" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "31") (term "0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "31") (term "0,0"))
                                          (rule "commute_or_2" (formula "31") (term "0"))
                                          (rule "commute_or" (formula "32") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0"))
                                          (rule "commute_and_2" (formula "48") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "49") (term "0,1,0"))
                                          (rule "commute_and" (formula "55") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "55") (term "0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "48") (term "0"))
                                          (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                          (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "49") (term "0"))
                                          (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                          (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                          (rule "ex_pull_out3" (formula "55") (term "0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,0"))
                                          (rule "commute_or_2" (formula "55") (term "1,0,0"))
                                          (rule "shift_paren_or" (formula "55") (term "0,1,0,0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "55") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "55") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "55") (term "0,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "55") (term "0,1,0,0,0"))
                                          (rule "commute_or" (formula "55") (term "0,0,0,0,0,0"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "46"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "43"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "CUT: result_199.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "commute_or_2" (formula "32") (term "0"))
                                          (rule "commute_or" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "31") (term "0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "31") (term "0,0"))
                                          (rule "commute_or_2" (formula "31") (term "0"))
                                          (rule "commute_or" (formula "32") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0"))
                                          (rule "commute_and_2" (formula "48") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "49") (term "0,1,0"))
                                          (rule "commute_and" (formula "55") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "55") (term "0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "48") (term "0"))
                                          (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                          (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "49") (term "0"))
                                          (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                          (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                          (rule "ex_pull_out3" (formula "55") (term "0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,0"))
                                          (rule "commute_or_2" (formula "55") (term "1,0,0"))
                                          (rule "shift_paren_or" (formula "55") (term "0,1,0,0"))
                                          (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "55") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "55") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "55") (term "0,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "55") (term "0,1,0,0,0"))
                                          (rule "commute_or" (formula "55") (term "0,0,0,0,0,0"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "46"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "43"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "result_201.<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "79"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "78"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "75") (term "0,0,0") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "commute_or_2" (formula "46") (term "0"))
                                       (rule "commute_or" (formula "53") (term "0,0"))
                                       (rule "commute_or_2" (formula "45") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_and" (formula "53") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "54") (term "0,0"))
                                       (rule "commute_and" (formula "54") (term "0,0,1,0"))
                                       (rule "commute_and_2" (formula "60") (term "0,1,1,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (rule "commute_or" (formula "60") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "cut_direct" (formula "63") (term "0"))
                                       (branch "CUT: result_199.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "true_left" (formula "64"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or" (formula "37") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_and_2" (formula "53") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "54") (term "0,1,0"))
                                          (rule "commute_and" (formula "60") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "60") (term "0,1,1,0"))
                                          (rule "ifthenelse_split" (formula "6") (term "0"))
                                          (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "70") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "70"))
                                             (rule "true_left" (formula "70"))
                                             (rule "ex_pull_out3" (formula "48") (term "0"))
                                             (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                             (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "49") (term "0"))
                                             (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                             (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                             (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "43"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "1"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "inEqSimp_homoInEq1" (formula "46"))
                                             (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0"))
                                             (rule "add_literals" (formula "46") (term "0"))
                                             (rule "leq_literals" (formula "46"))
                                             (rule "closeFalse" (formula "46"))
                                          )
                                          (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "76"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "76"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "75"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "72"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "45"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "48") (ifseqformula "1"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "inEqSimp_homoInEq1" (formula "48"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0"))
                                             (rule "add_literals" (formula "48") (term "0"))
                                             (rule "leq_literals" (formula "48"))
                                             (rule "closeFalse" (formula "48"))
                                          )
                                       )
                                       (branch "CUT: result_199.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or" (formula "37") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_and_2" (formula "53") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "54") (term "0,1,0"))
                                          (rule "commute_and" (formula "60") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "60") (term "0,1,1,0"))
                                          (rule "ifthenelse_split" (formula "6") (term "0"))
                                          (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "70") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "70"))
                                             (rule "true_left" (formula "70"))
                                             (rule "ex_pull_out3" (formula "48") (term "0"))
                                             (rule "cnf_rightDist" (formula "48") (term "0,0"))
                                             (rule "shift_paren_or" (formula "48") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "48") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "48") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "49") (term "0"))
                                             (rule "cnf_rightDist" (formula "49") (term "0,0"))
                                             (rule "shift_paren_or" (formula "49") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "49") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "49") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "55") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "55") (term "0,1,0"))
                                             (rule "commute_or" (formula "55") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "55") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "55") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "43"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "46"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " result_201.<created>@anonOut_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "76"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "75"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "75"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "75"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "72"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "45"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "48"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "115") (inst "sk=j_0") (userinteraction))
                                 (rule "allLeft" (formula "55") (inst "t=j_0") (userinteraction))
                                 (rule "impLeft" (formula "55") (userinteraction))
                                 (branch "Case 1"
                                    (rule "impRight" (formula "116") (userinteraction))
                                    (rule "andLeft" (formula "1"))
                                    (rule "castedGetAny" (formula "118") (term "1,1,0"))
                                    (rule "castedGetAny" (formula "118") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "61") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "69") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "118") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "81") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "81") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "118") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "replace_known_left" (formula "81") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "81"))
                                    (rule "inEqSimp_leqRight" (formula "81"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "118") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "118") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "118") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "118") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "118") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "118") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "119") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                    (rule "applyEq" (formula "120") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "37")))
                                    (rule "replaceKnownSelect_taclet012_4" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "120") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "120") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "58") (term "0,0"))
                                    (rule "add_zero_left" (formula "58") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,0,0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "35")))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "35")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")) (ifInst ""  (formula "22")))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")) (ifInst ""  (formula "22")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "119") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "exLeft" (formula "55") (inst "sk=i_3") (userinteraction))
                                    (rule "impRight" (formula "116") (userinteraction))
                                    (rule "exRight" (formula "117") (inst "t=i_3") (userinteraction))
                                    (rule "andLeft" (formula "56"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "eqSymm" (formula "120") (term "1"))
                                    (rule "castedGetAny" (formula "121") (term "1,1,0"))
                                    (rule "castedGetAny" (formula "121") (term "0,1,0"))
                                    (rule "castedGetAny" (formula "120") (term "1,1"))
                                    (rule "castedGetAny" (formula "120") (term "0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "120") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "120") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "121") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "72") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "120") (term "0,0"))
                                    (rule "replace_known_left" (formula "120") (term "0,0") (ifseqformula "59"))
                                     (builtin "One Step Simplification" (formula "120"))
                                    (rule "inEqSimp_commuteLeq" (formula "121") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "121") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "121") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "121") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "121") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "120") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "120") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "120") (term "0,0"))
                                    (rule "pullOutSelect" (formula "121") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                                    (rule "applyEq" (formula "121") (term "0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "121") (term "1"))
                                    (rule "pullOutSelect" (formula "122") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                    (rule "applyEq" (formula "122") (term "0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "123") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "122") (term "0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "120")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "120")) (ifInst ""  (formula "36")))
                                    (rule "replaceKnownSelect_taclet012_4" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet012_5" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "122") (term "0,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "123") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "122") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "123") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "121") (term "0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "121"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "121")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "121")) (ifInst ""  (formula "34")))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "121")) (ifInst ""  (formula "34")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "121")))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")) (ifInst ""  (formula "21")))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")) (ifInst ""  (formula "21")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                    (rule "applyEqReverse" (formula "122") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "121") (term "0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "120"))
                                    (rule "close" (formula "120") (ifseqformula "58"))
                                 )
                              )
                           )
                        )
                     )
                     (branch
                        (rule "andRight" (formula "115"))
                        (branch
                           (rule "andRight" (formula "115"))
                           (branch
                              (rule "wellFormedAnonEQ" (formula "115") (ifseqformula "76"))
                              (rule "wellFormedAnonEQ" (formula "115") (term "0") (ifseqformula "72"))
                              (rule "wellFormedAnon" (formula "115") (term "0,0"))
                              (rule "replace_known_left" (formula "115") (term "1") (ifseqformula "75"))
                               (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "29")) (ifInst ""  (formula "64")) (ifInst ""  (formula "71")))
                              (rule "closeTrue" (formula "115"))
                           )
                           (branch
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (ifseqformula "76"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0") (ifseqformula "72"))
                               (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "32")))
                              (rule "closeTrue" (formula "115"))
                           )
                        )
                        (branch
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (ifseqformula "76"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0") (ifseqformula "72"))
                            (builtin "One Step Simplification" (formula "115"))
                           (rule "orRight" (formula "115"))
                           (rule "orRight" (formula "115"))
                           (rule "orRight" (formula "115"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "115"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "116")))
                           (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "8") (term "1,0,0,0") (ifseqformula "115"))
                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "114")) (ifInst ""  (formula "116")))
                           (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "113"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "114")) (ifInst ""  (formula "115")))
                           (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "113"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "112")) (ifInst ""  (formula "114")))
                           (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "112")))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "110")))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "109"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "108"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "107"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "68") (term "1") (ifseqformula "108"))
                            (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "109")))
                           (rule "closeFalse" (formula "68"))
                        )
                     )
                  )
               )
               (branch "Exceptional Post (generateDataForVoter)"
                   (builtin "One Step Simplification" (formula "67"))
                   (builtin "One Step Simplification" (formula "100"))
                  (rule "andLeft" (formula "67"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0") (ifseqformula "67"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,0") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "68"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "70"))
                  (rule "notLeft" (formula "68"))
                  (rule "close" (formula "71") (ifseqformula "70"))
               )
               (branch "Pre (generateDataForVoter)"
                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "66")) (ifInst ""  (formula "95")) (ifInst ""  (formula "66")) (ifInst ""  (formula "95")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,1") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "24")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,1") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "56")))
                  (rule "wellFormedAnonEQ" (formula "98") (term "1") (ifseqformula "63"))
                  (rule "wellFormedAnon" (formula "98") (term "0,1"))
                  (rule "replace_known_left" (formula "98") (term "1,1") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "20")) (ifInst ""  (formula "55")))
                  (rule "inEqSimp_gtToGeq" (formula "53") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "58") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                  (rule "polySimp_elimOne" (formula "36") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                  (rule "polySimp_elimOne" (formula "58") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                  (rule "polySimp_elimOne" (formula "50") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                  (rule "polySimp_elimOne" (formula "43") (term "0"))
                  (rule "inEqSimp_and_subsumption3" (formula "30") (term "0,0,0"))
                  (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "inEqSimp_and_subsumption3" (formula "29") (term "0,0,0"))
                  (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "nnf_imp2or" (formula "33") (term "0"))
                  (rule "nnf_imp2or" (formula "46") (term "0"))
                  (rule "nnf_imp2or" (formula "47") (term "0"))
                  (rule "nnf_imp2or" (formula "53") (term "0"))
                  (rule "nnf_imp2or" (formula "39") (term "0"))
                  (rule "nnf_imp2or" (formula "38") (term "0"))
                  (rule "nnf_imp2or" (formula "30") (term "0"))
                  (rule "nnf_imp2or" (formula "29") (term "0"))
                  (rule "nnf_notAnd" (formula "33") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0"))
                  (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                  (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "33") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "46") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                  (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                  (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                  (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "53") (term "1,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                  (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                  (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                  (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "98") (term "1,1"))
                  (rule "pullOutSelect" (formula "98") (term "1,1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
                  (rule "applyEq" (formula "99") (term "0,0,0,0,0,1,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "99") (term "1,1,0,1,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "99") (term "0,0,0,0,0,1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "98") (term "0,0,0,0,1,1") (ifseqformula "93"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "pullOutSelect" (formula "98") (term "0,0,0,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
                  (rule "applyEq" (formula "99") (term "1,1,1,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "99") (term "1,1,1,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "99") (term "0,0,0,0,1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "98") (term "0,0,0,1,1") (ifseqformula "92"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "1,1,0,0,0"))
                  (rule "commute_or_2" (formula "33") (term "0"))
                  (rule "commute_or" (formula "46") (term "0,0"))
                  (rule "commute_or" (formula "47") (term "0,0"))
                  (rule "commute_or_2" (formula "39") (term "0"))
                  (rule "commute_or" (formula "53") (term "0,0"))
                  (rule "commute_or_2" (formula "38") (term "0"))
                  (rule "commute_and" (formula "46") (term "0,0,1,0"))
                  (rule "commute_and" (formula "47") (term "0,0,1,0"))
                  (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "98") (term "0"))
                  (rule "insert_constant_string_value" (formula "98") (term "0,0,0,0,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "castDel" (formula "98") (term "0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "98") (term "0,0,0,0") (ifseqformula "89"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "pullOutSelect" (formula "98") (term "0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "99") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "98") (term "0,1,0") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "pullOutSelect" (formula "98") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "99") (term "0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "98") (term "0,0") (ifseqformula "90"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "commute_or_2" (formula "30") (term "0"))
                  (rule "commute_or_2" (formula "29") (term "0"))
                  (rule "commute_and_2" (formula "53") (term "0,1,1,0"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "98") (term "0,1"))
                  (rule "pullOutSelect" (formula "98") (term "0,0,1,0,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
                  (rule "applyEq" (formula "99") (term "1,1,1,0,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")) (ifInst ""  (formula "17")))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")) (ifInst ""  (formula "17")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                  (rule "applyEqReverse" (formula "99") (term "1,1,1,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "99") (term "0,0,1,0,0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "98") (term "0,1,0,0,1") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "pullOutSelect" (formula "98") (term "0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                  (rule "applyEq" (formula "99") (term "1,0,1,0,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")) (ifInst ""  (formula "17")))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")) (ifInst ""  (formula "17")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                  (rule "applyEqReverse" (formula "99") (term "1,0,1,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "99") (term "0,0,0,0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "98") (term "0,0,0,1") (ifseqformula "70"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "commute_or" (formula "33") (term "0,0"))
                  (rule "commute_or" (formula "39") (term "0,0"))
                  (rule "commute_or" (formula "38") (term "0,0"))
                  (rule "cut_direct" (formula "56") (term "0"))
                  (branch "CUT: result_199.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "true_left" (formula "57"))
                     (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "98") (term "1,1"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "98") (term "0,1"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "98") (term "0"))
                     (rule "pullOutSelect" (formula "98") (term "0,1,0") (inst "selectSK=java_math_BigInteger_value_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "99") (term "0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                     (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "100") (term "0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "95")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "95")) (ifInst ""  (formula "27")))
                     (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "95"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "95")))
                     (rule "applyEqReverse" (formula "99") (term "0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "98") (term "0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "commute_or_2" (formula "30") (term "0,0"))
                     (rule "commute_or_2" (formula "29") (term "0,0"))
                     (rule "commute_or_2" (formula "33") (term "0"))
                     (rule "commute_or_2" (formula "39") (term "0"))
                     (rule "commute_or_2" (formula "38") (term "0"))
                     (rule "commute_and_2" (formula "46") (term "0,1,0"))
                     (rule "commute_and_2" (formula "47") (term "0,1,0"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "98"))
                     (rule "pullOutSelect" (formula "98") (term "1,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                     (rule "applyEq" (formula "99") (term "0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "4")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "4")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                     (rule "applyEqReverse" (formula "99") (term "0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "99") (term "1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "98") (term "0,0") (ifseqformula "68"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "98"))
                     (rule "closeTrue" (formula "98"))
                  )
                  (branch "CUT: result_199.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "99") (term "1,1"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "99") (term "0,1"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "99") (term "0"))
                     (rule "pullOutSelect" (formula "99") (term "0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                     (rule "applyEq" (formula "100") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "100") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "100") (term "0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "95"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "pullOutSelect" (formula "99") (term "0,0") (inst "selectSK=java_math_BigInteger_value_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")) (ifInst ""  (formula "27")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")) (ifInst ""  (formula "27")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
                     (rule "applyEqReverse" (formula "100") (term "0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "99") (term "0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "commute_or_2" (formula "30") (term "0,0"))
                     (rule "commute_or_2" (formula "29") (term "0,0"))
                     (rule "commute_or_2" (formula "33") (term "0"))
                     (rule "commute_or_2" (formula "39") (term "0"))
                     (rule "commute_or_2" (formula "38") (term "0"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
                     (rule "pullOutSelect" (formula "99") (term "0,0,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                     (rule "applyEq" (formula "100") (term "1,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "4")))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "4")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                     (rule "applyEqReverse" (formula "100") (term "1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "100") (term "0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "99") (term "0,0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "commute_and_2" (formula "46") (term "0,1,0"))
                     (rule "commute_and_2" (formula "47") (term "0,1,0"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "99"))
                     (rule "closeTrue" (formula "99"))
                  )
               )
            )
         )
         (branch "Exceptional Post (voterIdCheck)"
             (builtin "One Step Simplification" (formula "46"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "andLeft" (formula "46"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0") (ifseqformula "46"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "47"))
            (rule "notLeft" (formula "47"))
            (rule "close" (formula "50") (ifseqformula "49"))
         )
         (branch "Pre (voterIdCheck)"
             (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "39")))
            (rule "wellFormedAnon" (formula "77") (term "1"))
            (rule "replace_known_left" (formula "77") (term "0,1") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "38")))
            (rule "castedGetAny" (formula "77") (term "0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "41"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "41") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "33") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "77") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "41"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0"))
            (rule "polySimp_elimOne" (formula "41") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "26"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
            (rule "polySimp_elimOne" (formula "26") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0"))
            (rule "mul_literals" (formula "77") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "77") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0"))
            (rule "mul_literals" (formula "77") (term "0,1,1,0"))
            (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0"))
            (rule "inEqSimp_and_subsumption3" (formula "15") (term "0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
            (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "nnf_ex2all" (formula "77"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_imp2or" (formula "23") (term "0"))
            (rule "nnf_imp2or" (formula "24") (term "0"))
            (rule "nnf_imp2or" (formula "31") (term "0"))
            (rule "nnf_imp2or" (formula "37") (term "0"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "mul_literals" (formula "30") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "23") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "24") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "mul_literals" (formula "24") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "31") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
            (rule "mul_literals" (formula "31") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "37") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
            (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
            (rule "mul_literals" (formula "37") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "37") (term "1,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
            (rule "commute_or_2" (formula "18") (term "0"))
            (rule "commute_or" (formula "30") (term "0,0"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "commute_or_2" (formula "24") (term "0"))
            (rule "commute_and" (formula "30") (term "0,0,1,0"))
            (rule "commute_and" (formula "31") (term "0,0,1,0"))
            (rule "commute_or" (formula "31") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "charLiteral_to_int" (formula "1") (term "1,1,0"))
            (rule "commute_or_2" (formula "16") (term "0"))
            (rule "commute_or_2" (formula "15") (term "0"))
            (rule "cut_direct" (formula "40") (term "0"))
            (branch "CUT: result_199.<created> = TRUE TRUE"
                (builtin "One Step Simplification" (formula "41"))
               (rule "true_left" (formula "41"))
               (rule "seqGetAlphaCast" (formula "43") (term "0"))
               (rule "castedGetAny" (formula "43") (term "0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "seqGetAlphaCast" (formula "44") (term "0"))
               (rule "castedGetAny" (formula "44") (term "0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "true_left" (formula "44"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "commute_or_2" (formula "23") (term "0"))
               (rule "commute_or_2" (formula "24") (term "0"))
               (rule "commute_or_2" (formula "16") (term "0,0"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_and_2" (formula "37") (term "0,1,1,0"))
               (rule "commute_or" (formula "16") (term "0,0,0"))
               (rule "commute_or_2" (formula "16") (term "0,0"))
               (rule "commute_or_2" (formula "16") (term "0"))
               (rule "commute_or" (formula "15") (term "0,0,0"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "lenNonNegative" (formula "42") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "42"))
               (rule "commute_and_2" (formula "30") (term "0,1,0"))
               (rule "commute_and_2" (formula "31") (term "0,1,0"))
               (rule "commute_and" (formula "37") (term "0,0,1,1,0"))
               (rule "commute_and_2" (formula "37") (term "0,1,1,0"))
               (rule "ex_pull_out3" (formula "30") (term "0"))
               (rule "cnf_rightDist" (formula "30") (term "0,0"))
               (rule "shift_paren_or" (formula "30") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
               (rule "commute_or_2" (formula "30") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "30") (term "1,0,0,0"))
               (rule "commute_or" (formula "30") (term "0,0,0,0,0"))
               (rule "ex_pull_out3" (formula "31") (term "0"))
               (rule "cnf_rightDist" (formula "31") (term "0,0"))
               (rule "shift_paren_or" (formula "31") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "31") (term "0,0,0"))
               (rule "commute_or_2" (formula "31") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "31") (term "1,0,0,0"))
               (rule "commute_or" (formula "31") (term "0,0,0,0,0"))
               (rule "ex_pull_out3" (formula "37") (term "1,0"))
               (rule "cnf_rightDist" (formula "37") (term "0,1,0"))
               (rule "commute_or" (formula "37") (term "1,0,1,0"))
               (rule "cnf_rightDist" (formula "37") (term "0,0,1,0"))
               (rule "commute_or" (formula "37") (term "1,0,0,1,0"))
               (rule "ex_pull_out3" (formula "37") (term "0"))
               (rule "cnf_rightDist" (formula "37") (term "0,0"))
               (rule "commute_or_2" (formula "37") (term "1,0,0"))
               (rule "shift_paren_or" (formula "37") (term "0,1,0,0"))
               (rule "cnf_rightDist" (formula "37") (term "0,0,0"))
               (rule "commute_or_2" (formula "37") (term "1,0,0,0"))
               (rule "shift_paren_or" (formula "37") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "37") (term "0,0,0,0,0"))
               (rule "shift_paren_or" (formula "37") (term "0,1,0,0,0"))
               (rule "commute_or" (formula "37") (term "0,0,0,0,0,0"))
               (rule "commute_and" (formula "30") (term "0,0,0"))
               (rule "commute_and_2" (formula "37") (term "0,0"))
               (rule "commute_and_2" (formula "30") (term "0,0"))
               (rule "commute_and" (formula "31") (term "0,0,0"))
               (rule "commute_and_2" (formula "31") (term "0,0"))
               (rule "lenNonNegative" (formula "1") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "allLeft" (formula "19") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
               (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "24"))
               (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "allLeft" (formula "24") (inst "t=i_1"))
               (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
               (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "30"))
               (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "allLeft" (formula "32") (inst "t=i_1"))
               (rule "exLeft" (formula "32") (inst "sk=i_3"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "32"))
               (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
               (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "29"))
               (rule "eqSymm" (formula "34") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "26"))
               (rule "qeq_literals" (formula "33") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "28"))
               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
               (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
               (rule "add_literals" (formula "32") (term "0,0,1"))
               (rule "leq_literals" (formula "32") (term "0,1"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "28"))
               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
               (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "34") (term "0,0,1"))
               (rule "leq_literals" (formula "34") (term "0,1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "28"))
               (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "33") (term "0,0,1"))
               (rule "leq_literals" (formula "33") (term "0,1"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "26"))
               (rule "qeq_literals" (formula "34") (term "0,1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "26"))
               (rule "qeq_literals" (formula "32") (term "0,1"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "allLeft" (formula "41") (inst "t=i_2"))
               (rule "exLeft" (formula "41") (inst "sk=j_0"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "41"))
               (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "43") (term "1"))
               (rule "polySimp_addComm1" (formula "43") (term "0,1"))
               (rule "applyEq" (formula "43") (term "0,0,1,0,1") (ifseqformula "51"))
               (rule "applyEq" (formula "42") (term "0,0,0,1") (ifseqformula "51"))
               (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
               (rule "polySimp_rightDist" (formula "43") (term "1,1"))
               (rule "mul_literals" (formula "43") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "48"))
               (rule "qeq_literals" (formula "41") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
               (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
               (rule "leq_literals" (formula "42") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
               (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "43") (term "0,0,1,0"))
               (rule "leq_literals" (formula "43") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "48"))
               (rule "qeq_literals" (formula "42") (term "0,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "49"))
               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "41") (term "0,0,0"))
               (rule "leq_literals" (formula "41") (term "0,0"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "48"))
               (rule "qeq_literals" (formula "43") (term "0,0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "allLeft" (formula "44") (inst "t=i_0"))
               (rule "exLeft" (formula "44") (inst "sk=j_1"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "replace_known_left" (formula "46") (term "0,0,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "replace_known_left" (formula "45") (term "0,0,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "46") (term "1"))
               (rule "polySimp_addComm1" (formula "46") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
               (rule "polySimp_rightDist" (formula "46") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
               (rule "mul_literals" (formula "46") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "36"))
               (rule "qeq_literals" (formula "45") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "36"))
               (rule "qeq_literals" (formula "46") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "38"))
               (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0"))
               (rule "add_literals" (formula "44") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "44") (term "0,0,1,0"))
               (rule "leq_literals" (formula "44") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "38"))
               (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
               (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0"))
               (rule "leq_literals" (formula "45") (term "0,0"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "36"))
               (rule "qeq_literals" (formula "44") (term "0,0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "38"))
               (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
               (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0"))
               (rule "leq_literals" (formula "46") (term "0,0"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "allLeft" (formula "2") (inst "t=j_0"))
               (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "43"))
               (rule "qeq_literals" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "44"))
               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "leq_literals" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "2"))
               (rule "qeq_literals" (formula "42") (term "0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "closeFalse" (formula "42"))
            )
            (branch "CUT: result_199.<created> = TRUE FALSE"
                (builtin "One Step Simplification" (formula "40"))
               (rule "seqGetAlphaCast" (formula "43") (term "0"))
               (rule "castedGetAny" (formula "43") (term "0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "seqGetAlphaCast" (formula "44") (term "0"))
               (rule "castedGetAny" (formula "44") (term "0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "true_left" (formula "44"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "commute_or_2" (formula "23") (term "0"))
               (rule "commute_or_2" (formula "24") (term "0"))
               (rule "commute_or_2" (formula "16") (term "0,0"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_and_2" (formula "37") (term "0,1,1,0"))
               (rule "commute_or" (formula "16") (term "0,0,0"))
               (rule "commute_or_2" (formula "16") (term "0,0"))
               (rule "commute_or_2" (formula "16") (term "0"))
               (rule "commute_or" (formula "15") (term "0,0,0"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "lenNonNegative" (formula "42") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "42"))
               (rule "commute_and_2" (formula "30") (term "0,1,0"))
               (rule "commute_and_2" (formula "31") (term "0,1,0"))
               (rule "commute_and" (formula "37") (term "0,0,1,1,0"))
               (rule "commute_and_2" (formula "37") (term "0,1,1,0"))
               (rule "ex_pull_out3" (formula "30") (term "0"))
               (rule "cnf_rightDist" (formula "30") (term "0,0"))
               (rule "shift_paren_or" (formula "30") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
               (rule "commute_or_2" (formula "30") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "30") (term "1,0,0,0"))
               (rule "commute_or" (formula "30") (term "0,0,0,0,0"))
               (rule "ex_pull_out3" (formula "31") (term "0"))
               (rule "cnf_rightDist" (formula "31") (term "0,0"))
               (rule "shift_paren_or" (formula "31") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "31") (term "0,0,0"))
               (rule "commute_or_2" (formula "31") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "31") (term "1,0,0,0"))
               (rule "commute_or" (formula "31") (term "0,0,0,0,0"))
               (rule "ex_pull_out3" (formula "37") (term "1,0"))
               (rule "cnf_rightDist" (formula "37") (term "0,1,0"))
               (rule "commute_or" (formula "37") (term "1,0,1,0"))
               (rule "cnf_rightDist" (formula "37") (term "0,0,1,0"))
               (rule "commute_or" (formula "37") (term "1,0,0,1,0"))
               (rule "ex_pull_out3" (formula "37") (term "0"))
               (rule "cnf_rightDist" (formula "37") (term "0,0"))
               (rule "commute_or_2" (formula "37") (term "1,0,0"))
               (rule "shift_paren_or" (formula "37") (term "0,1,0,0"))
               (rule "cnf_rightDist" (formula "37") (term "0,0,0"))
               (rule "commute_or_2" (formula "37") (term "1,0,0,0"))
               (rule "shift_paren_or" (formula "37") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "37") (term "0,0,0,0,0"))
               (rule "shift_paren_or" (formula "37") (term "0,1,0,0,0"))
               (rule "commute_or" (formula "37") (term "0,0,0,0,0,0"))
               (rule "commute_and" (formula "30") (term "0,0,0"))
               (rule "commute_and_2" (formula "37") (term "0,0"))
               (rule "commute_and_2" (formula "30") (term "0,0"))
               (rule "commute_and" (formula "31") (term "0,0,0"))
               (rule "commute_and_2" (formula "31") (term "0,0"))
               (rule "lenNonNegative" (formula "1") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "allLeft" (formula "19") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
               (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "24"))
               (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "allLeft" (formula "24") (inst "t=i_1"))
               (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
               (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "30"))
               (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "allLeft" (formula "38") (inst "t=i_0"))
               (rule "exLeft" (formula "38") (inst "sk=j_0"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "40") (term "1"))
               (rule "polySimp_addComm1" (formula "40") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,1"))
               (rule "polySimp_rightDist" (formula "40") (term "1,1"))
               (rule "mul_literals" (formula "40") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "33"))
               (rule "qeq_literals" (formula "40") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "33"))
               (rule "qeq_literals" (formula "38") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
               (rule "leq_literals" (formula "39") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
               (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "38") (term "0,0,0"))
               (rule "leq_literals" (formula "38") (term "0,0"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
               (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
               (rule "add_literals" (formula "40") (term "0,0,0"))
               (rule "leq_literals" (formula "40") (term "0,0"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "33"))
               (rule "qeq_literals" (formula "39") (term "0,0"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "allLeft" (formula "32") (inst "t=i_1"))
               (rule "exLeft" (formula "32") (inst "sk=i_3"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "32"))
               (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
               (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "29"))
               (rule "eqSymm" (formula "34") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "26"))
               (rule "qeq_literals" (formula "33") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "28"))
               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
               (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
               (rule "add_literals" (formula "32") (term "0,0,1"))
               (rule "leq_literals" (formula "32") (term "0,1"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "26"))
               (rule "qeq_literals" (formula "34") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "28"))
               (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
               (rule "add_literals" (formula "33") (term "0,0,1"))
               (rule "leq_literals" (formula "33") (term "0,1"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "26"))
               (rule "qeq_literals" (formula "32") (term "0,1"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "28"))
               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
               (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "34") (term "0,0,1"))
               (rule "leq_literals" (formula "34") (term "0,1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "allLeft" (formula "44") (inst "t=i_2"))
               (rule "exLeft" (formula "44") (inst "sk=j_1"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "replace_known_left" (formula "46") (term "0,0,0,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "replace_known_left" (formula "45") (term "0,0,0,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
               (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "46") (term "1"))
               (rule "polySimp_addComm1" (formula "46") (term "0,1"))
               (rule "applyEq" (formula "46") (term "0,0,1,0,1") (ifseqformula "54"))
               (rule "applyEq" (formula "45") (term "0,0,0,1") (ifseqformula "54"))
               (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
               (rule "polySimp_rightDist" (formula "46") (term "1,1"))
               (rule "mul_literals" (formula "46") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "51"))
               (rule "qeq_literals" (formula "45") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "51"))
               (rule "qeq_literals" (formula "46") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "51"))
               (rule "qeq_literals" (formula "44") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "52"))
               (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
               (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0"))
               (rule "leq_literals" (formula "45") (term "0,0"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "52"))
               (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
               (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0"))
               (rule "leq_literals" (formula "44") (term "0,0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "52"))
               (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
               (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0"))
               (rule "leq_literals" (formula "46") (term "0,0"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "allLeft" (formula "2") (inst "t=j_1"))
               (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "47"))
               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
               (rule "leq_literals" (formula "2") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "46"))
               (rule "qeq_literals" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "2"))
               (rule "qeq_literals" (formula "45") (term "0"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "closeFalse" (formula "45"))
            )
         )
      )
      (branch "Exceptional Post (get)"
          (builtin "One Step Simplification" (formula "33"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "35"))
         (rule "notLeft" (formula "33"))
         (rule "close" (formula "37") (ifseqformula "36"))
      )
      (branch "Pre (get)"
          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
         (rule "wellFormedAnon" (formula "64") (term "0,1"))
         (rule "replace_known_left" (formula "64") (term "1,0,1") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "1")))
         (rule "castedGetAny" (formula "64") (term "0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "28"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
         (rule "polySimp_elimOne" (formula "21") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
         (rule "polySimp_elimOne" (formula "28") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,0"))
         (rule "pullOutSelect" (formula "64") (term "0,0,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
         (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "5")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
         (rule "applyEqReverse" (formula "65") (term "0,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "65") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
         (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
         (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "nnf_imp2or" (formula "25") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "30") (term "0"))
         (rule "nnf_imp2or" (formula "24") (term "0"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_notAnd" (formula "25") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
         (rule "mul_literals" (formula "25") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
         (rule "mul_literals" (formula "30") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "30") (term "1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
         (rule "mul_literals" (formula "24") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "64") (term "1,0") (inst "i=i") (inst "i_0=i_0"))
         (rule "replaceKnownSelect_taclet212_4" (formula "64") (term "0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet212_5" (formula "64") (term "0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet212_4" (formula "64") (term "0,1,1,0,0,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet212_4" (formula "64") (term "0,0,0,0,1,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet212_5" (formula "64") (term "0,1,1,0,0,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet212_5" (formula "64") (term "0,0,0,0,1,0,1,0,1,0"))
         (rule "expand_inInt" (formula "64") (term "1,0,0,1,0,1,0"))
         (rule "expand_inInt" (formula "64") (term "1,0,0,1,1,0"))
         (rule "replace_int_MAX" (formula "64") (term "1,0,1,0,0,1,0,1,0"))
         (rule "replace_int_MIN" (formula "64") (term "0,1,1,0,0,1,0,1,0"))
         (rule "replace_int_MIN" (formula "64") (term "0,1,1,0,0,1,1,0"))
         (rule "replace_int_MAX" (formula "64") (term "1,0,1,0,0,1,1,0"))
         (rule "eqSymm" (formula "64") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "64") (term "0,0,1,0,1,1,0"))
         (rule "castedGetAny" (formula "64") (term "0,0,1,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "64") (term "1,1,0,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "64") (term "1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,1,0,1,0"))
         (rule "pullOutSelect" (formula "64") (term "0,0,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
         (rule "applyEq" (formula "65") (term "0,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "5")))
         (rule "eqSymm" (formula "65") (term "0,0,1,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
         (rule "applyEqReverse" (formula "65") (term "0,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "65") (term "0,1,1,1,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "65") (term "0,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "eqSymm" (formula "64") (term "0,0,1,0"))
         (rule "replace_known_left" (formula "64") (term "0,0,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "64"))
         (rule "applyEq" (formula "64") (term "1,1,1,0,0,0,1,1,0") (ifseqformula "8"))
         (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
         (rule "nnf_imp2or" (formula "64") (term "0,0,1,0"))
         (rule "nnf_imp2or" (formula "64") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "64") (term "0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "64") (term "0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "64") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "64") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "64") (term "0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,1,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "64") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,0,1,1,0,0,0,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "1,1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "64") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "64") (term "0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "64") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "64") (term "1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "64") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "64") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "64") (term "1,0,1,0,0,1,1,0"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_or" (formula "25") (term "0,0"))
         (rule "commute_or" (formula "30") (term "0,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or" (formula "24") (term "0,0"))
         (rule "commute_or_2" (formula "18") (term "0"))
         (rule "commute_and" (formula "25") (term "0,0,1,0"))
         (rule "commute_and" (formula "24") (term "0,0,1,0"))
         (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or" (formula "18") (term "0,0"))
         (rule "commute_or_2" (formula "18") (term "0"))
         (rule "commute_or_2" (formula "9") (term "0,0"))
         (rule "commute_or_2" (formula "10") (term "0,0"))
         (rule "commute_or" (formula "9") (term "0,0,0"))
         (rule "commute_or_2" (formula "9") (term "0,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or" (formula "10") (term "0,0,0"))
         (rule "commute_or_2" (formula "10") (term "0,0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_and_2" (formula "25") (term "0,1,0"))
         (rule "commute_and_2" (formula "24") (term "0,1,0"))
         (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
         (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
         (rule "ex_pull_out3" (formula "25") (term "0"))
         (rule "cnf_rightDist" (formula "25") (term "0,0"))
         (rule "shift_paren_or" (formula "25") (term "1,0,0"))
         (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
         (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
         (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
         (rule "ex_pull_out3" (formula "24") (term "0"))
         (rule "cnf_rightDist" (formula "24") (term "0,0"))
         (rule "shift_paren_or" (formula "24") (term "1,0,0"))
         (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
         (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
         (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
         (rule "ex_pull_out3" (formula "30") (term "1,0"))
         (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
         (rule "commute_or" (formula "30") (term "1,0,1,0"))
         (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
         (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
         (rule "ex_pull_out3" (formula "30") (term "0"))
         (rule "cnf_rightDist" (formula "30") (term "0,0"))
         (rule "commute_or_2" (formula "30") (term "1,0,0"))
         (rule "shift_paren_or" (formula "30") (term "0,1,0,0"))
         (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
         (rule "commute_or_2" (formula "30") (term "1,0,0,0"))
         (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0"))
         (rule "commute_or" (formula "30") (term "0,0,0,0,0,0"))
         (rule "lenNonNegative" (formula "64") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "commute_and" (formula "25") (term "0,0,0"))
         (rule "commute_and_2" (formula "30") (term "0,0"))
         (rule "commute_and_2" (formula "25") (term "0,0"))
         (rule "andRight" (formula "64"))
         (branch
            (rule "andRight" (formula "64"))
            (branch
               (rule "nnf_ex2all" (formula "64"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "1") (term "0"))
               (rule "commute_or" (formula "1") (term "0,0"))
               (rule "commute_and" (formula "25") (term "0,0,0"))
               (rule "allLeft" (formula "13") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
               (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "18"))
               (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "49"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "allLeft" (formula "18") (inst "t=i_1"))
               (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
               (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "24"))
               (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "49"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "commute_and_2" (formula "25") (term "0,0"))
               (rule "allLeft" (formula "1") (inst "t=i_0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "31"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "28"))
               (rule "qeq_literals" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "1"))
               (rule "andLeft" (formula "30"))
               (rule "inEqSimp_homoInEq1" (formula "30"))
               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "times_zero_1" (formula "30") (term "1,0"))
               (rule "add_zero_right" (formula "30") (term "0"))
               (rule "leq_literals" (formula "30"))
               (rule "closeFalse" (formula "30"))
            )
            (branch
               (rule "andRight" (formula "64"))
               (branch
                  (rule "allRight" (formula "64") (inst "sk=i_0_0"))
                  (rule "orRight" (formula "64"))
                  (rule "orRight" (formula "64"))
                  (rule "notRight" (formula "66"))
                  (rule "orRight" (formula "65"))
                  (rule "orRight" (formula "67"))
                  (rule "inEqSimp_geqRight" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "66"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "68"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "68"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "commute_and" (formula "28") (term "0,0,0"))
                  (rule "allLeft" (formula "13") (inst "t=i_0_0"))
                  (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "13") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "13"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch
                  (rule "allRight" (formula "64") (inst "sk=i_2"))
                  (rule "orRight" (formula "64"))
                  (rule "orRight" (formula "64"))
                  (rule "notRight" (formula "66"))
                  (rule "orRight" (formula "65"))
                  (rule "orRight" (formula "67"))
                  (rule "inEqSimp_geqRight" (formula "66"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "66"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "68"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "68"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "commute_and" (formula "28") (term "0,0,0"))
                  (rule "allLeft" (formula "14") (inst "t=i_2"))
                  (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "14") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "14"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
         (branch
            (rule "orRight" (formula "64"))
            (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "47"))
            (rule "close" (formula "64") (ifseqformula "1"))
         )
      )
      (branch "Null reference (var = null)"
          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "62")))
         (rule "closeTrue" (formula "64"))
      )
   )
)
)
}
