\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 20 02:10:12 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Nov 20 02:10:12 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:processCSVRecord(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:processCSVRecord(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "126758")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "record_11,password_13,self_103,exc_131,heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "exLeft" (formula "14") (inst "sk=i_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "eqSymm" (formula "12") (term "1,0,1,0"))
(rule "eqSymm" (formula "13") (term "1,0,1,0"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "18"))
 (builtin "One Step Simplification" (formula "5"))
(rule "castedGetAny" (formula "17") (term "0,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,1,0,1,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,1,1,0,0,1,1,0"))
(rule "castedGetAny" (formula "16") (term "0"))
(rule "castedGetAny" (formula "12") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "12") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,0,1,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "assignment" (formula "21") (term "1"))
 (builtin "One Step Simplification" (formula "21"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "10"))
(rule "insert_constant_string_value" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "castDel" (formula "10") (term "0,0,0,0,0"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "10") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "eqSymm" (formula "10"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "10"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "insert_constant_string_value" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "castDel" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "exLeft" (formula "18") (inst "sk=i_1"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "exLeft" (formula "15") (inst "sk=i_2_0"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "castedGetAny" (formula "19") (term "0,0,1,0"))
(rule "castedGetAny" (formula "18") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "castedGetAny" (formula "22") (term "0"))
(rule "castedGetAny" (formula "17") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "applyEq" (formula "35") (term "0") (ifseqformula "13"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "9"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "commute_and" (formula "23") (term "0,0"))
(rule "commute_and" (formula "24") (term "0,0"))
(rule "commute_and" (formula "28") (term "0,0"))
(rule "commute_and" (formula "23") (term "0,0,1,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "8"))
(rule "true_left" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "commute_and" (formula "23") (term "0,0,1,0"))
(rule "commute_and_2" (formula "27") (term "0,1,1,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "8"))
(rule "true_left" (formula "8"))
(rule "commute_and" (formula "10") (term "1,0,0"))
(rule "commute_and" (formula "9") (term "1,0,0"))
(rule "commute_and" (formula "9") (term "0,0,0"))
(rule "commute_and" (formula "10") (term "0,0,0"))
(rule "methodBodyExpand" (formula "60") (term "1") (newnames "heapBefore_processCSVRecord,savedHeapBefore_processCSVRecord"))
 (builtin "One Step Simplification" (formula "60"))
(rule "variableDeclarationAssign" (formula "60") (term "1"))
(rule "variableDeclaration" (formula "60") (term "1") (newnames "dataForVoter_7"))
(rule "commute_and" (formula "17") (term "0,0"))
(rule "commute_and" (formula "16") (term "0,0"))
(rule "commute_and" (formula "12") (term "0,0"))
(rule "commute_and_2" (formula "21") (term "0,1,0"))
(rule "commute_and_2" (formula "22") (term "0,1,0"))
(rule "shift_paren_and" (formula "9") (term "0,0"))
(rule "commute_and_2" (formula "9") (term "0,0,0"))
(rule "shift_paren_and" (formula "10") (term "0,0"))
(rule "commute_and_2" (formula "10") (term "0,0,0"))
(rule "commute_and" (formula "26") (term "0,0,1,1,0"))
(rule "commute_and_2" (formula "26") (term "0,1,1,0"))
(rule "charLiteral_to_int" (formula "26") (term "1,0,0,0,1,1,0"))
(rule "lenNonNegative" (formula "24") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "24"))
(rule "seqGetAlphaCast" (formula "26") (term "0"))
(rule "castedGetAny" (formula "26") (term "0"))
 (builtin "One Step Simplification" (formula "26"))
(rule "true_left" (formula "26"))
 (builtin "Use Operation Contract" (formula "61") (newnames "heapBefore_generateDataForVoter,result_101,exc_132,heapAfter_generateDataForVoter,anon_heap_generateDataForVoter") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::generateDataForVoter(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0"))
(branch "Post (generateDataForVoter)"
    (builtin "One Step Simplification" (formula "29"))
    (builtin "One Step Simplification" (formula "63"))
   (rule "andLeft" (formula "29"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,1,0") (ifseqformula "29"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "33"))
   (rule "notLeft" (formula "34"))
   (rule "notLeft" (formula "33"))
   (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "34"))
    (builtin "One Step Simplification" (formula "31"))
   (rule "assignment" (formula "68") (term "1"))
    (builtin "One Step Simplification" (formula "68"))
   (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "32"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "33"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "32"))
   (rule "notLeft" (formula "32"))
   (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
   (rule "ifthenelse_negated" (formula "1") (term "0"))
   (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
   (rule "ifthenelse_negated" (formula "1") (term "0"))
   (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
   (rule "ifthenelse_negated" (formula "1") (term "0"))
   (rule "lenNonNegative" (formula "11") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
    (builtin "Use Operation Contract" (formula "73") (newnames "heapBefore_initDistVals,exc_133,heapAfter_initDistVals,anon_heap_initDistVals") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
   (branch "Post (initDistVals)"
       (builtin "One Step Simplification" (formula "36"))
       (builtin "One Step Simplification" (formula "75"))
      (rule "andLeft" (formula "36"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "39"))
      (rule "commuteUnion_2" (formula "36") (term "0,1,0"))
      (rule "commuteUnion_2" (formula "36") (term "1,0"))
      (rule "commuteUnion" (formula "36") (term "0,0,1,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "38") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "38") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "38") (term "1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1"))
      (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1,0"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "38"))
      (rule "eqSymm" (formula "38"))
      (rule "castedGetAny" (formula "40") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "39") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
      (rule "pullOutSelect" (formula "40") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "applyEq" (formula "41") (term "0,0,0,1,0") (ifseqformula "40"))
      (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "80")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,0") (ifseqformula "32"))
      (rule "eqSymm" (formula "38"))
      (rule "replace_known_left" (formula "40") (term "0,0,1,0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "elementOfUnion" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "elementOfUnion" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "elementOfUnion" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "80")))
      (rule "elementOfSingleton" (formula "40") (term "0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "80")) (ifInst ""  (formula "7")))
      (rule "elementOfSingleton" (formula "40") (term "0,0"))
       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "80")))
      (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "41") (term "0,1,1,0,0,0") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "40"))
      (rule "hideAuxiliaryEq" (formula "40"))
      (rule "applyEq" (formula "40") (term "1,1,0,0,0") (ifseqformula "11"))
      (rule "applyEq" (formula "38") (term "1") (ifseqformula "11"))
      (rule "pullOutSelect" (formula "39") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "applyEq" (formula "40") (term "0,0,0,1,0") (ifseqformula "39"))
      (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "80")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0") (ifseqformula "32"))
      (rule "eqSymm" (formula "38"))
      (rule "replace_known_left" (formula "39") (term "0,0,1,0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "38"))
      (rule "applyEq" (formula "13") (term "1,0,0,0,0,0") (ifseqformula "38"))
      (rule "applyEq" (formula "41") (term "1,1,0,0,0") (ifseqformula "38"))
      (rule "applyEq" (formula "25") (term "1,0,0,0,1,0") (ifseqformula "38"))
      (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "38"))
      (rule "applyEq" (formula "27") (term "0") (ifseqformula "38"))
      (rule "applyEq" (formula "24") (term "1,0,0,0,1,0") (ifseqformula "38"))
      (rule "applyEq" (formula "28") (term "1") (ifseqformula "38"))
      (rule "applyEq" (formula "11") (term "1") (ifseqformula "38"))
      (rule "elementOfUnion" (formula "39") (term "0,0"))
      (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "elementOfUnion" (formula "39") (term "0,0"))
      (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "elementOfUnion" (formula "39") (term "0,0"))
      (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "80")))
      (rule "elementOfSingleton" (formula "39") (term "0,0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "80")) (ifInst ""  (formula "7")))
      (rule "elementOfSingleton" (formula "39") (term "0,0"))
       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "80")))
      (rule "applyEqReverse" (formula "25") (term "0,1,0,0,0,1,0") (ifseqformula "39"))
      (rule "applyEqReverse" (formula "40") (term "0,1,1,0,0,0") (ifseqformula "39"))
      (rule "applyEqReverse" (formula "40") (term "0,0,0,1,0") (ifseqformula "39"))
      (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "true_left" (formula "38"))
      (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "38"))
      (rule "applyEqReverse" (formula "13") (term "0,1,0,0,0,0,0") (ifseqformula "38"))
      (rule "applyEqReverse" (formula "24") (term "0,1,0,0,0,1,0") (ifseqformula "38"))
      (rule "applyEqReverse" (formula "12") (term "0,1,0,0,0,0,0") (ifseqformula "38"))
      (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0") (ifseqformula "38"))
      (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "38"))
      (rule "applyEqReverse" (formula "40") (term "0,1,1,0,0,0") (ifseqformula "38"))
      (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "38"))
      (rule "hideAuxiliaryEq" (formula "38"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "41") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "insert_constant_string_value" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "insert_constant_string_value" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "insert_constant_string_value" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "castDel" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "41") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "notLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "notLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "notLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "notLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "notLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "43"))
      (rule "notLeft" (formula "42"))
      (rule "notLeft" (formula "41"))
      (rule "exLeft" (formula "46") (inst "sk=i_2"))
      (rule "andLeft" (formula "46"))
      (rule "andLeft" (formula "46"))
      (rule "exLeft" (formula "43") (inst "sk=i_2_1"))
      (rule "andLeft" (formula "43"))
      (rule "andLeft" (formula "43"))
      (rule "castedGetAny" (formula "47") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "46") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "42") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "50") (term "0"))
      (rule "castedGetAny" (formula "45") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "48"))
      (rule "inEqSimp_commuteLeq" (formula "43"))
      (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "41"))
      (rule "pullOutSelect" (formula "47") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_0"))
      (rule "applyEq" (formula "48") (term "0,0,0,1,0") (ifseqformula "47"))
      (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "62")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0") (ifseqformula "32"))
      (rule "elementOfUnion" (formula "47") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "47") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "47"))
      (rule "elementOfUnion" (formula "47") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "47") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "47"))
      (rule "elementOfUnion" (formula "47") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "47") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "62")))
      (rule "elementOfSingleton" (formula "47") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "47"))
      (rule "ifthenelse_negated" (formula "47") (term "0"))
      (rule "pullOutSelect" (formula "46") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_1"))
      (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "46"))
      (rule "applyEq" (formula "47") (term "0,0,0,1,0") (ifseqformula "46"))
      (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "46"))
      (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "64")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,0") (ifseqformula "32"))
      (rule "elementOfUnion" (formula "46") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "46") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "elementOfUnion" (formula "46") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "46") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "elementOfUnion" (formula "46") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "46") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "elementOfSingleton" (formula "46") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "64")))
      (rule "ifthenelse_negated" (formula "46") (term "0"))
      (rule "pullOutSelect" (formula "42") (term "1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
      (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "42"))
      (rule "applyEq" (formula "43") (term "1,0,0,0,1,0") (ifseqformula "42"))
      (rule "applyEq" (formula "63") (term "0") (ifseqformula "42"))
      (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "42"))
      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "109")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "32"))
      (rule "replace_known_left" (formula "42") (term "0,0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
      (rule "applyEq" (formula "58") (term "0") (ifseqformula "41"))
      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_record_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "111")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "44") (term "0,0"))
      (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "44"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_cols_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "112")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_vals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "45") (term "0,0"))
      (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "45"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "47") (term "0,0"))
      (rule "elementOfSingleton" (formula "47") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "47"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
      (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "1"))
      (rule "applyEq" (formula "55") (term "1,0,1,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "55") (term "1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "117")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "7") (term "0,0"))
      (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
      (rule "applyEq" (formula "58") (term "1,0,1,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "58") (term "1,2,0") (ifseqformula "1"))
      (rule "applyEq" (formula "58") (term "1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "40"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "51") (term "0,0"))
      (rule "elementOfSingleton" (formula "51") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "51"))
      (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "41"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
      (rule "applyEq" (formula "64") (term "1") (ifseqformula "1"))
      (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "120")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "42"))
      (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "64"))
      (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "64"))
      (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "64"))
      (rule "hideAuxiliaryEq" (formula "64"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "9") (term "0,0"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "120")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "43"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "121")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "122")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "45"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "11") (term "0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "11"))
      (rule "hideAuxiliaryEq" (formula "11"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "2,0"))
      (rule "elementOfUnion" (formula "54") (term "0,0"))
      (rule "elementOfSingleton" (formula "54") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "54"))
      (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "12") (term "0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfUnion" (formula "57") (term "0,0"))
      (rule "elementOfSingleton" (formula "57") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "57"))
      (rule "elementOfUnion" (formula "11") (term "0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfUnion" (formula "15") (term "0,0"))
      (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "15"))
      (rule "hideAuxiliaryEq" (formula "15"))
      (rule "elementOfUnion" (formula "9") (term "0,0"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "elementOfUnion" (formula "57") (term "0,0"))
      (rule "elementOfSingleton" (formula "57") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "123")))
      (rule "elementOfSingleton" (formula "57") (term "0,0"))
       (builtin "One Step Simplification" (formula "57"))
      (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "123")) (ifInst ""  (formula "19")))
      (rule "elementOfSingleton" (formula "57") (term "0,0"))
       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "123")))
      (rule "applyEqReverse" (formula "58") (term "1,0,1,1,0,0") (ifseqformula "57"))
      (rule "applyEqReverse" (formula "58") (term "1,0,0,0,1,0") (ifseqformula "57"))
      (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "57"))
      (rule "applyEqReverse" (formula "61") (term "1,0,0") (ifseqformula "57"))
      (rule "applyEqReverse" (formula "60") (term "1,0,1") (ifseqformula "57"))
      (rule "hideAuxiliaryEq" (formula "57"))
      (rule "elementOfUnion" (formula "8") (term "0,0"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "elementOfUnion" (formula "7") (term "0,0"))
      (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "elementOfUnion" (formula "14") (term "0,0"))
      (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "elementOfUnion" (formula "6") (term "0,0"))
      (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "elementOfUnion" (formula "5") (term "0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "elementOfUnion" (formula "13") (term "0,0"))
      (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "elementOfUnion" (formula "3") (term "0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "55") (term "0,0"))
      (rule "elementOfSingleton" (formula "55") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "elementOfSingleton" (formula "55") (term "0,0"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "elementOfSingleton" (formula "55") (term "0,0"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "55"))
      (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "55"))
      (rule "hideAuxiliaryEq" (formula "55"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "12") (term "0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfUnion" (formula "55") (term "0,0"))
      (rule "elementOfSingleton" (formula "55") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "elementOfSingleton" (formula "55") (term "0,0"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "elementOfUnion" (formula "11") (term "0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "60") (term "1,0") (inst "selectSK=java_util_Collection_seq_2"))
      (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "76")))
      (rule "elementOfSingleton" (formula "60") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "76")))
      (rule "ifthenelse_negated" (formula "60") (term "0"))
      (rule "elementOfUnion" (formula "9") (term "0,0"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "pullOutSelect" (formula "63") (term "1,0") (inst "selectSK=java_util_Collection_seq_3"))
      (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "76")))
      (rule "elementOfSingleton" (formula "63") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "76")))
      (rule "ifthenelse_negated" (formula "63") (term "0"))
      (rule "elementOfUnion" (formula "8") (term "0,0"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "elementOfUnion" (formula "7") (term "0,0"))
      (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "elementOfUnion" (formula "14") (term "0,0"))
      (rule "elementOfSingleton" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "14"))
      (rule "hideAuxiliaryEq" (formula "14"))
      (rule "elementOfUnion" (formula "6") (term "0,0"))
      (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "elementOfUnion" (formula "5") (term "0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "elementOfUnion" (formula "13") (term "0,0"))
      (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "120")))
      (rule "elementOfSingleton" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "45"))
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "120")) (ifInst ""  (formula "18")))
      (rule "elementOfSingleton" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "120")))
      (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "13"))
      (rule "hideAuxiliaryEq" (formula "13"))
      (rule "elementOfUnion" (formula "3") (term "0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "12") (term "0,0"))
      (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfSingleton" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "118")))
      (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "44"))
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "118")) (ifInst ""  (formula "17")))
      (rule "elementOfSingleton" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "118")))
      (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "12"))
      (rule "hideAuxiliaryEq" (formula "12"))
      (rule "elementOfUnion" (formula "11") (term "0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "116")))
      (rule "elementOfSingleton" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "43"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "116")) (ifInst ""  (formula "16")))
      (rule "elementOfSingleton" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "116")))
      (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "11"))
      (rule "hideAuxiliaryEq" (formula "11"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfSingleton" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "114")))
      (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "42"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "114")) (ifInst ""  (formula "15")))
      (rule "elementOfSingleton" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "114")))
      (rule "applyEqReverse" (formula "56") (term "1,0,0,0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "56") (term "1,2,0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "57") (term "1,0,1,0,0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "56") (term "1,1,0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "57") (term "1,2,0") (ifseqformula "10"))
      (rule "applyEqReverse" (formula "57") (term "1,0,0,0,0") (ifseqformula "10"))
      (rule "hideAuxiliaryEq" (formula "10"))
      (rule "elementOfUnion" (formula "9") (term "0,0"))
      (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "elementOfSingleton" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "112")))
      (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "41"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "112")) (ifInst ""  (formula "14")))
      (rule "elementOfSingleton" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "112")))
      (rule "applyEqReverse" (formula "59") (term "1,2,0") (ifseqformula "9"))
      (rule "applyEqReverse" (formula "59") (term "1,0,0,0,0") (ifseqformula "9"))
      (rule "applyEqReverse" (formula "58") (term "1,0,0,0") (ifseqformula "9"))
      (rule "applyEqReverse" (formula "58") (term "1,2,0") (ifseqformula "9"))
      (rule "applyEqReverse" (formula "58") (term "1,1,0") (ifseqformula "9"))
      (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "9"))
      (rule "applyEqReverse" (formula "59") (term "1,0,1,0,0") (ifseqformula "9"))
      (rule "hideAuxiliaryEq" (formula "9"))
      (rule "elementOfUnion" (formula "8") (term "0,0"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "110")))
      (rule "elementOfSingleton" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "40"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "110")) (ifInst ""  (formula "13")))
      (rule "elementOfSingleton" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "110")))
      (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "8"))
      (rule "hideAuxiliaryEq" (formula "8"))
      (rule "elementOfUnion" (formula "7") (term "0,0"))
      (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "elementOfSingleton" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "108")))
      (rule "eqSymm" (formula "7"))
      (rule "applyEq" (formula "67") (term "0") (ifseqformula "7"))
      (rule "applyEq" (formula "52") (term "1") (ifseqformula "7"))
      (rule "elementOfUnion" (formula "6") (term "0,0"))
      (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "108")))
      (rule "elementOfSingleton" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "108")) (ifInst ""  (formula "12")))
      (rule "elementOfSingleton" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "108")))
      (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "6"))
      (rule "hideAuxiliaryEq" (formula "6"))
      (rule "elementOfUnion" (formula "5") (term "0,0"))
      (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "elementOfSingleton" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "106")))
      (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "106")) (ifInst ""  (formula "11")))
      (rule "elementOfSingleton" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "106")))
      (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "104")))
      (rule "elementOfSingleton" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "104")) (ifInst ""  (formula "10")))
      (rule "elementOfSingleton" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "104")))
      (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "4"))
      (rule "hideAuxiliaryEq" (formula "4"))
      (rule "pullOutSelect" (formula "46") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_4"))
      (rule "applyEq" (formula "47") (term "0,0,0,1,0") (ifseqformula "46"))
      (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "46"))
      (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "46"))
      (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "40"))
       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "86")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,0") (ifseqformula "36"))
      (rule "elementOfUnion" (formula "3") (term "0,0"))
      (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfSingleton" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "3"))
      (rule "hideAuxiliaryEq" (formula "3"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfSingleton" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "35"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfSingleton" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "eqSymm" (formula "43"))
      (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "43"))
      (rule "hideAuxiliaryEq" (formula "43"))
      (rule "elementOfSingleton" (formula "42") (term "0,0"))
       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "15")))
      (rule "true_left" (formula "42"))
      (rule "elementOfUnion" (formula "42") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "elementOfUnion" (formula "42") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "elementOfUnion" (formula "42") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "80")))
      (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "ifthenelse_negated" (formula "42") (term "0"))
      (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
      (rule "applyEq" (formula "47") (term "1") (ifseqformula "1"))
      (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "98")) (ifInst ""  (formula "7")))
      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
      (rule "eqSymm" (formula "1"))
      (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "46") (term "1") (ifseqformula "1"))
      (rule "pullOutSelect" (formula "42") (term "1,0") (inst "selectSK=java_util_Collection_seq_5"))
      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "80")))
      (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "80")))
      (rule "ifthenelse_negated" (formula "42") (term "0"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "41"))
      (rule "notLeft" (formula "41"))
      (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
      (rule "replaceKnownSelect_taclet0_2" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
      (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
      (rule "replaceKnownSelect_taclet0_3" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
      (rule "replaceKnownSelect_taclet0_4" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
      (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "commute_and" (formula "40") (term "1,0,0"))
      (rule "commute_and" (formula "39") (term "1,0,0"))
      (rule "commute_and" (formula "39") (term "0,0,0"))
      (rule "commute_and" (formula "40") (term "0,0,0"))
       (builtin "Use Operation Contract" (formula "97") (newnames "heapBefore_initPolyasVals,exc_134,heapAfter_initPolyasVals,anon_heap_initPolyasVals") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
      (branch "Post (initPolyasVals)"
          (builtin "One Step Simplification" (formula "99"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "andLeft" (formula "56"))
         (rule "commuteUnion_2" (formula "56") (term "0,1,0"))
         (rule "commuteUnion" (formula "56") (term "0,0,1,0"))
         (rule "commuteUnion_2" (formula "56") (term "1,0"))
         (rule "lenNonNegative" (formula "23") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "lenNonNegative" (formula "18") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "seqGetAlphaCast" (formula "26") (term "0"))
         (rule "castedGetAny" (formula "26") (term "0"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "true_left" (formula "26"))
         (rule "seqGetAlphaCast" (formula "20") (term "0"))
         (rule "castedGetAny" (formula "20") (term "0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "commute_and" (formula "54") (term "0,0"))
         (rule "lenNonNegative" (formula "27") (term "1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27"))
         (rule "commute_and" (formula "52") (term "0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1") (ifseqformula "5"))
         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "105"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1") (ifseqformula "9"))
         (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "86"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "9"))
         (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "22"))
         (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "lenNonNegative" (formula "64") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "64"))
         (rule "commute_and" (formula "53") (term "0,0"))
         (rule "shift_paren_and" (formula "49") (term "0,0"))
         (rule "shift_paren_and" (formula "50") (term "0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "57") (inst "iv=iv"))
         (rule "andLeft" (formula "57"))
         (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
         (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "59"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "true_left" (formula "57"))
         (rule "applyEq" (formula "57") (term "0,1,1,0,0") (ifseqformula "58"))
         (rule "applyEq" (formula "57") (term "0,0,1,0") (ifseqformula "58"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "true_left" (formula "57"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "58") (inst "iv=iv"))
         (rule "andLeft" (formula "58"))
         (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
         (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "60"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "true_left" (formula "59"))
         (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "59"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "true_left" (formula "58"))
         (rule "methodCallEmpty" (formula "111") (term "1"))
         (rule "commute_and_2" (formula "49") (term "0,0,0"))
         (rule "commute_and_2" (formula "49") (term "0,0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "58") (inst "iv=iv"))
         (rule "andLeft" (formula "58"))
         (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
         (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "60"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "true_left" (formula "59"))
         (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "59"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "true_left" (formula "58"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "59") (inst "iv=iv"))
         (rule "andLeft" (formula "59"))
         (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
         (rule "applyEq" (formula "60") (term "1,1,0,0") (ifseqformula "59"))
         (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "61"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "true_left" (formula "59"))
         (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "60"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "true_left" (formula "59"))
         (rule "lenNonNegative" (formula "53") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "53"))
         (rule "seqGetAlphaCast" (formula "55") (term "0"))
         (rule "castedGetAny" (formula "55") (term "0"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "true_left" (formula "55"))
         (rule "tryEmpty" (formula "110") (term "1"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "emptyModality" (formula "110") (term "1"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "closeTrue" (formula "110"))
      )
      (branch "Exceptional Post (initPolyasVals)"
          (builtin "One Step Simplification" (formula "99"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "andLeft" (formula "56"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0") (ifseqformula "56"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,0") (ifseqformula "37"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,1,0") (ifseqformula "33"))
         (rule "andLeft" (formula "57"))
         (rule "andLeft" (formula "57"))
         (rule "notLeft" (formula "57"))
         (rule "close" (formula "59") (ifseqformula "58"))
      )
      (branch "Pre (initPolyasVals)"
          (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "95")) (ifInst ""  (formula "63")) (ifInst ""  (formula "95")) (ifInst ""  (formula "63")))
         (rule "andRight" (formula "97"))
         (branch "Case 1"
            (rule "andRight" (formula "97"))
            (branch "Case 1"
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "97") (inst "i=i") (inst "i_0=i_0") (userinteraction))
               (rule "andRight" (formula "97"))
               (branch
                  (rule "andRight" (formula "97"))
                  (branch
                     (rule "replaceKnownSelect_taclet00_5" (formula "97") (term "0,1"))
                     (rule "replaceKnownSelect_taclet00_8" (formula "97") (term "0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "97") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "97") (term "0,0"))
                     (rule "eqSymm" (formula "97"))
                     (rule "close" (formula "97") (ifseqformula "12"))
                  )
                  (branch
                     (rule "replaceKnownSelect_taclet00_8" (formula "97") (term "0,0,0,0,1,0"))
                     (rule "replaceKnownSelect_taclet00_8" (formula "97") (term "0,1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "97") (term "0,0,0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "97") (term "0,1,1,0,0,0"))
                     (rule "expand_inInt" (formula "97") (term "1,0,0"))
                     (rule "replace_int_MIN" (formula "97") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "97") (term "1,0,1,0,0"))
                     (rule "allRight" (formula "97") (inst "sk=i_0_0"))
                     (rule "impRight" (formula "97"))
                     (rule "andLeft" (formula "1"))
                     (rule "notRight" (formula "99"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "4"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "50"))
                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "50") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "59"))
                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "59") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_commuteLeq" (formula "5"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                     (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                     (rule "polySimp_elimOne" (formula "50") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                     (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                     (rule "polySimp_elimOne" (formula "59") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
                     (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                     (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "nnf_imp2or" (formula "56") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "53") (term "0"))
                     (rule "nnf_imp2or" (formula "47") (term "0"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "29") (term "0"))
                     (rule "nnf_imp2or" (formula "35") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "43") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_notAnd" (formula "56") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0"))
                     (rule "mul_literals" (formula "56") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "56") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                     (rule "mul_literals" (formula "56") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "56") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "53") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                     (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                     (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "47") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                     (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                     (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                     (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "35") (term "1,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "43") (term "1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                     (rule "commute_or_2" (formula "56") (term "0"))
                     (rule "ifthenelse_split" (formula "6") (term "0"))
                     (branch "result_101.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "commute_or_2" (formula "22") (term "0"))
                        (rule "ifthenelse_split" (formula "48") (term "0"))
                        (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                           (rule "hideAuxiliaryEq" (formula "49"))
                           (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "50") (term "0,1,1,0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "49"))
                           (rule "hideAuxiliaryEq" (formula "49"))
                           (rule "ifthenelse_split" (formula "50") (term "0"))
                           (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                              (rule "hideAuxiliaryEq" (formula "51"))
                              (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "50"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0,0") (ifseqformula "51"))
                              (rule "applyEqReverse" (formula "52") (term "0,1,1,0") (ifseqformula "51"))
                              (rule "hideAuxiliaryEq" (formula "51"))
                              (rule "ifthenelse_split" (formula "42") (term "0"))
                              (branch "self_103.inputCols.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "43"))
                                 (rule "hideAuxiliaryEq" (formula "43"))
                                 (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "43"))
                                 (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "43"))
                                 (rule "applyEqReverse" (formula "44") (term "0,0,0,1,0") (ifseqformula "43"))
                                 (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "43"))
                                 (rule "hideAuxiliaryEq" (formula "43"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "commute_and" (formula "28") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "28") (term "0,0"))
                                 (rule "commute_and" (formula "27") (term "0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "26") (term "0"))
                                 (rule "castedGetAny" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                 (rule "castedGetAny" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "commute_or" (formula "27") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_or" (formula "33") (term "0,0"))
                                 (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0,0"))
                                 (rule "lenNonNegative" (formula "20") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or" (formula "23") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "51") (term "0,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "lenNonNegative" (formula "26") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "commute_or" (formula "18") (term "0,0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or" (formula "49") (term "0,0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or" (formula "16") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0"))
                                 (rule "commute_or" (formula "15") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_and_2" (formula "29") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "28") (term "0,1,0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "42"))
                                 (rule "commute_or" (formula "41") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "41") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "15")))
                                 (rule "true_left" (formula "41"))
                                 (rule "commute_and" (formula "34") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "34") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "29") (term "0"))
                                 (rule "cnf_rightDist" (formula "29") (term "0,0"))
                                 (rule "shift_paren_or" (formula "29") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "29") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "28") (term "0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "34") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                                 (rule "commute_or" (formula "34") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "34") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "34") (term "1,0,0,1,0"))
                                 (rule "allLeft" (formula "15") (inst "t=i_0_0"))
                                 (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "closeFalse" (formula "15"))
                              )
                              (branch "self_103.inputCols.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "79"))
                                 (rule "close" (formula "54") (ifseqformula "7"))
                              )
                           )
                           (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "81"))
                              (rule "close" (formula "55") (ifseqformula "7"))
                           )
                        )
                        (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "83"))
                           (rule "close" (formula "56") (ifseqformula "7"))
                        )
                     )
                     (branch "result_101.<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "56"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "ifthenelse_split" (formula "48") (term "0"))
                        (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                           (rule "hideAuxiliaryEq" (formula "49"))
                           (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "50") (term "0,1,1,0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "49"))
                           (rule "hideAuxiliaryEq" (formula "49"))
                           (rule "ifthenelse_split" (formula "42") (term "0"))
                           (branch "self_103.inputCols.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "43"))
                              (rule "hideAuxiliaryEq" (formula "43"))
                              (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "44") (term "0,0,0,1,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "43"))
                              (rule "hideAuxiliaryEq" (formula "43"))
                              (rule "ifthenelse_split" (formula "49") (term "0"))
                              (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "0,1,1,0") (ifseqformula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "commute_and" (formula "27") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "27") (term "0,0"))
                                 (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                 (rule "castedGetAny" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                 (rule "castedGetAny" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or" (formula "32") (term "0,0"))
                                 (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or_2" (formula "14") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0,0"))
                                 (rule "lenNonNegative" (formula "19") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "22") (term "0,0"))
                                 (rule "commute_or" (formula "51") (term "0,0"))
                                 (rule "commute_or" (formula "23") (term "0,0"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "lenNonNegative" (formula "25") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or" (formula "49") (term "0,0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or" (formula "15") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "14") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0"))
                                 (rule "commute_and_2" (formula "28") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "15")))
                                 (rule "true_left" (formula "42"))
                                 (rule "commute_or" (formula "41") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "41") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "14")))
                                 (rule "true_left" (formula "41"))
                                 (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "28") (term "0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "27") (term "0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "33") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                                 (rule "commute_or" (formula "33") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                                 (rule "allLeft" (formula "14") (inst "t=i_0_0"))
                                 (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1"))
                                 (rule "leq_literals" (formula "14") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "81"))
                                 (rule "close" (formula "54") (ifseqformula "6"))
                              )
                           )
                           (branch "self_103.inputCols.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "81"))
                              (rule "close" (formula "55") (ifseqformula "6"))
                           )
                        )
                        (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "84"))
                           (rule "close" (formula "56") (ifseqformula "6"))
                        )
                     )
                  )
               )
               (branch
                  (rule "replaceKnownSelect_taclet00_5" (formula "97") (term "0,0,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet00_5" (formula "97") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "97") (term "0,0,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "97") (term "0,1,1,0,0,0"))
                  (rule "expand_inInt" (formula "97") (term "1,0,0"))
                  (rule "replace_int_MIN" (formula "97") (term "0,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "97") (term "1,0,1,0,0"))
                  (rule "allRight" (formula "97") (inst "sk=i_3"))
                  (rule "impRight" (formula "97"))
                  (rule "andLeft" (formula "1"))
                  (rule "notRight" (formula "99"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "4"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "59"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "59") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "17"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                  (rule "polySimp_elimOne" (formula "50") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                  (rule "polySimp_elimOne" (formula "59") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
                  (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "nnf_imp2or" (formula "56") (term "0"))
                  (rule "nnf_imp2or" (formula "24") (term "0"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "nnf_imp2or" (formula "25") (term "0"))
                  (rule "nnf_imp2or" (formula "29") (term "0"))
                  (rule "nnf_imp2or" (formula "53") (term "0"))
                  (rule "nnf_imp2or" (formula "30") (term "0"))
                  (rule "nnf_imp2or" (formula "35") (term "0"))
                  (rule "nnf_imp2or" (formula "47") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "43") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_notAnd" (formula "56") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "56") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0"))
                  (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "56") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                  (rule "mul_literals" (formula "56") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "24") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0"))
                  (rule "nnf_notAnd" (formula "25") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                  (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "35") (term "1,0"))
                  (rule "nnf_notAnd" (formula "47") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                  (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                  (rule "commute_or_2" (formula "56") (term "0"))
                  (rule "ifthenelse_split" (formula "8") (term "0"))
                  (branch "result_101.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "9"))
                     (rule "hideAuxiliaryEq" (formula "9"))
                     (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "7"))
                     (rule "hideAuxiliaryEq" (formula "7"))
                     (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "ifthenelse_split" (formula "51") (term "0"))
                     (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                        (rule "hideAuxiliaryEq" (formula "52"))
                        (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0,0") (ifseqformula "52"))
                        (rule "applyEqReverse" (formula "53") (term "0,1,1,0") (ifseqformula "52"))
                        (rule "hideAuxiliaryEq" (formula "52"))
                        (rule "ifthenelse_split" (formula "48") (term "0"))
                        (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                           (rule "hideAuxiliaryEq" (formula "49"))
                           (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "applyEqReverse" (formula "50") (term "0,1,1,0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "49"))
                           (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0") (ifseqformula "49"))
                           (rule "hideAuxiliaryEq" (formula "49"))
                           (rule "ifthenelse_split" (formula "42") (term "0"))
                           (branch "self_103.inputCols.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "43"))
                              (rule "hideAuxiliaryEq" (formula "43"))
                              (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "44") (term "0,0,0,1,0") (ifseqformula "43"))
                              (rule "hideAuxiliaryEq" (formula "43"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "commute_or" (formula "27") (term "0,0"))
                              (rule "commute_and" (formula "27") (term "0,0,1,0"))
                              (rule "commute_and" (formula "28") (term "0,0,1,0"))
                              (rule "commute_or" (formula "28") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "21") (term "0"))
                              (rule "castedGetAny" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "seqGetAlphaCast" (formula "26") (term "0"))
                              (rule "castedGetAny" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "commute_or" (formula "33") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "lenNonNegative" (formula "20") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "20"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "23") (term "0,0"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "lenNonNegative" (formula "26") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "26"))
                              (rule "commute_or" (formula "24") (term "0,0"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "commute_or_2" (formula "24") (term "0"))
                              (rule "commute_or" (formula "18") (term "0,0"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or" (formula "49") (term "0,0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "commute_or" (formula "16") (term "0,0,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "commute_or" (formula "15") (term "0,0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_and_2" (formula "28") (term "0,1,0"))
                              (rule "commute_and_2" (formula "29") (term "0,1,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0,0"))
                              (rule "commute_or" (formula "42") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                              (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "16")))
                              (rule "true_left" (formula "42"))
                              (rule "commute_or" (formula "41") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "41") (term "0,0,0"))
                              (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "15")))
                              (rule "true_left" (formula "41"))
                              (rule "commute_and" (formula "34") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "34") (term "0,1,1,0"))
                              (rule "ex_pull_out3" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "29") (term "0"))
                              (rule "cnf_rightDist" (formula "29") (term "0,0"))
                              (rule "shift_paren_or" (formula "29") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "29") (term "1,0,0,0"))
                              (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "34") (term "1,0"))
                              (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                              (rule "commute_or" (formula "34") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "34") (term "0,0,1,0"))
                              (rule "commute_or" (formula "34") (term "1,0,0,1,0"))
                              (rule "allLeft" (formula "16") (inst "t=i_3"))
                              (rule "replace_known_left" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "16") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_literals" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "16"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "self_103.inputCols.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "79"))
                              (rule "close" (formula "54") (ifseqformula "7"))
                           )
                        )
                        (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "82"))
                           (rule "close" (formula "55") (ifseqformula "7"))
                        )
                     )
                     (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "82"))
                        (rule "close" (formula "56") (ifseqformula "7"))
                     )
                  )
                  (branch "result_101.<created> = TRUE FALSE"
                     (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "8"))
                     (rule "hideAuxiliaryEq" (formula "8"))
                     (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "7"))
                     (rule "hideAuxiliaryEq" (formula "7"))
                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "56"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "ifthenelse_split" (formula "42") (term "0"))
                     (branch "self_103.inputCols.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "43"))
                        (rule "hideAuxiliaryEq" (formula "43"))
                        (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "42"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "43"))
                        (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "43"))
                        (rule "applyEqReverse" (formula "44") (term "0,0,0,1,0") (ifseqformula "43"))
                        (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "43"))
                        (rule "hideAuxiliaryEq" (formula "43"))
                        (rule "ifthenelse_split" (formula "47") (term "0"))
                        (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                           (rule "hideAuxiliaryEq" (formula "48"))
                           (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "applyEqReverse" (formula "49") (term "0,1,1,0,0") (ifseqformula "48"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "48"))
                           (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0") (ifseqformula "48"))
                           (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "48"))
                           (rule "hideAuxiliaryEq" (formula "48"))
                           (rule "ifthenelse_split" (formula "49") (term "0"))
                           (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                              (rule "hideAuxiliaryEq" (formula "50"))
                              (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "applyEqReverse" (formula "51") (term "0,1,1,0") (ifseqformula "50"))
                              (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0") (ifseqformula "50"))
                              (rule "hideAuxiliaryEq" (formula "50"))
                              (rule "commute_or_2" (formula "22") (term "0"))
                              (rule "commute_or" (formula "26") (term "0,0"))
                              (rule "commute_and" (formula "26") (term "0,0,1,0"))
                              (rule "commute_and" (formula "27") (term "0,0,1,0"))
                              (rule "commute_or" (formula "27") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "25") (term "0"))
                              (rule "castedGetAny" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "seqGetAlphaCast" (formula "20") (term "0"))
                              (rule "castedGetAny" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "commute_or" (formula "32") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_or_2" (formula "17") (term "0"))
                              (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "lenNonNegative" (formula "19") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "19"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "22") (term "0,0"))
                              (rule "lenNonNegative" (formula "25") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "25"))
                              (rule "commute_or" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "23") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or_2" (formula "22") (term "0"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "commute_or" (formula "17") (term "0,0"))
                              (rule "commute_or_2" (formula "17") (term "0"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "commute_or" (formula "48") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or" (formula "15") (term "0,0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or" (formula "14") (term "0,0,0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_and_2" (formula "27") (term "0,1,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "41") (term "0,0"))
                              (rule "qeq_literals" (formula "41") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "commute_and_2" (formula "28") (term "0,1,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "41") (term "0,0,0"))
                              (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "15")))
                              (rule "true_left" (formula "41"))
                              (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                              (rule "ex_pull_out3" (formula "27") (term "0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                              (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "33") (term "1,0"))
                              (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                              (rule "commute_or" (formula "33") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                              (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                              (rule "allLeft" (formula "15") (inst "t=i_3"))
                              (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "15") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                              (rule "add_literals" (formula "15") (term "0,0,1"))
                              (rule "leq_literals" (formula "15") (term "0,1"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "81"))
                              (rule "close" (formula "54") (ifseqformula "6"))
                           )
                        )
                        (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "83"))
                           (rule "close" (formula "55") (ifseqformula "6"))
                        )
                     )
                     (branch "self_103.inputCols.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "82"))
                        (rule "close" (formula "56") (ifseqformula "6"))
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "97"))
               (branch
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "54"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                  (rule "polySimp_elimOne" (formula "45") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                  (rule "polySimp_elimOne" (formula "54") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                  (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_imp2or" (formula "40") (term "0"))
                  (rule "nnf_imp2or" (formula "25") (term "0"))
                  (rule "nnf_imp2or" (formula "43") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "31") (term "1,0"))
                  (rule "nnf_imp2or" (formula "26") (term "0"))
                  (rule "nnf_imp2or" (formula "49") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "52") (term "0"))
                  (rule "nnf_imp2or" (formula "39") (term "0"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_imp2or" (formula "13") (term "0"))
                  (rule "nnf_imp2or" (formula "31") (term "0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0"))
                  (rule "nnf_notAnd" (formula "25") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "49") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                  (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                  (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,1,0,0"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "97"))
                  (rule "replaceKnownSelect_taclet00_70" (formula "97") (term "0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "97") (term "0,0,1"))
                  (rule "replaceKnownSelect_taclet00_74" (formula "97") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet00_72" (formula "97") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_75" (formula "97") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_73" (formula "97") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "97") (term "0,0,0") (ifseqformula "60"))
                   (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "59")) (ifInst ""  (formula "61")))
                  (rule "closeTrue" (formula "97"))
               )
               (branch "Case 2"
                  (rule "andRight" (formula "97"))
                  (branch "Case 1"
                     (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "97") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
                     (rule "andRight" (formula "97"))
                     (branch
                        (rule "andRight" (formula "97"))
                        (branch
                           (rule "andRight" (formula "97"))
                           (branch
                              (rule "andRight" (formula "97"))
                              (branch
                                 (rule "andRight" (formula "97"))
                                 (branch
                                    (rule "andRight" (formula "97"))
                                    (branch
                                       (rule "andRight" (formula "97"))
                                       (branch
                                          (rule "andRight" (formula "97"))
                                          (branch
                                             (rule "andRight" (formula "97"))
                                             (branch
                                                (rule "andRight" (formula "97"))
                                                (branch
                                                   (rule "andRight" (formula "97"))
                                                   (branch
                                                      (rule "andRight" (formula "97"))
                                                      (branch
                                                         (rule "andRight" (formula "97"))
                                                         (branch
                                                            (rule "andRight" (formula "97"))
                                                            (branch
                                                               (rule "andRight" (formula "97"))
                                                               (branch
                                                                  (rule "andRight" (formula "97"))
                                                                  (branch
                                                                     (rule "andRight" (formula "97"))
                                                                     (branch
                                                                        (rule "andRight" (formula "97"))
                                                                        (branch
                                                                           (rule "andRight" (formula "97"))
                                                                           (branch
                                                                              (rule "andRight" (formula "97"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "97"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "97"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "97"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "97"))
                                                                                          (branch
                                                                                             (rule "andRight" (formula "97"))
                                                                                             (branch
                                                                                                (rule "andRight" (formula "97"))
                                                                                                (branch
                                                                                                   (rule "replaceKnownSelect_taclet00_33" (formula "97") (term "0,0"))
                                                                                                   (rule "replaceKnownAuxiliaryConstant_taclet00_64" (formula "97") (term "0,0"))
                                                                                                   (rule "notRight" (formula "97"))
                                                                                                   (rule "close" (formula "56") (ifseqformula "1"))
                                                                                                )
                                                                                                (branch
                                                                                                   (rule "replaceKnownSelect_taclet00_32" (formula "97") (term "0,0"))
                                                                                                   (rule "replaceKnownAuxiliaryConstant_taclet00_63" (formula "97") (term "0,0"))
                                                                                                   (rule "notRight" (formula "97"))
                                                                                                   (rule "close" (formula "68") (ifseqformula "1"))
                                                                                                )
                                                                                             )
                                                                                             (branch
                                                                                                (rule "replaceKnownSelect_taclet00_31" (formula "97") (term "0,0"))
                                                                                                (rule "replaceKnownAuxiliaryConstant_taclet00_61" (formula "97") (term "0,0"))
                                                                                                (rule "notRight" (formula "97"))
                                                                                                (rule "close" (formula "63") (ifseqformula "1"))
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (rule "insert_constant_string_value" (formula "97") (term "0,0") (ifseqformula "5"))
                                                                                              (builtin "One Step Simplification" (formula "97"))
                                                                                             (rule "castDel" (formula "97") (term "0,0,0"))
                                                                                             (rule "notRight" (formula "97"))
                                                                                             (rule "close" (formula "71") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "insert_constant_string_value" (formula "97") (term "0,0") (ifseqformula "5"))
                                                                                           (builtin "One Step Simplification" (formula "97"))
                                                                                          (rule "castDel" (formula "97") (term "0,0,0"))
                                                                                          (rule "notRight" (formula "97"))
                                                                                          (rule "close" (formula "72") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "insert_constant_string_value" (formula "97") (term "0,0") (ifseqformula "5"))
                                                                                        (builtin "One Step Simplification" (formula "97"))
                                                                                       (rule "castDel" (formula "97") (term "0,0,0"))
                                                                                       (rule "notRight" (formula "97"))
                                                                                       (rule "close" (formula "73") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "replaceKnownSelect_taclet00_15" (formula "97") (term "0,0"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet00_38" (formula "97") (term "0,0"))
                                                                                    (rule "notRight" (formula "97"))
                                                                                    (rule "close" (formula "74") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "replaceKnownSelect_taclet00_29" (formula "97") (term "0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet00_59" (formula "97") (term "0,0"))
                                                                                 (rule "notRight" (formula "97"))
                                                                                 (rule "close" (formula "75") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "replaceKnownSelect_taclet00_28" (formula "97") (term "0,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet00_57" (formula "97") (term "0,0"))
                                                                              (rule "notRight" (formula "97"))
                                                                              (rule "close" (formula "76") (ifseqformula "1"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "replaceKnownSelect_taclet00_27" (formula "97") (term "0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet00_55" (formula "97") (term "0,0"))
                                                                           (rule "notRight" (formula "97"))
                                                                           (rule "close" (formula "77") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "replaceKnownSelect_taclet00_25" (formula "97") (term "0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet00_26" (formula "97") (term "0,0"))
                                                                        (rule "notRight" (formula "97"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "46"))
                                                                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "32") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
                                                                        (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "eqSymm" (formula "2"))
                                                                        (rule "close" (formula "78") (ifseqformula "2"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "replaceKnownSelect_taclet00_24" (formula "97") (term "0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00_53" (formula "97") (term "0,0"))
                                                                     (rule "notRight" (formula "97"))
                                                                     (rule "close" (formula "79") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "replaceKnownSelect_taclet00_13" (formula "97") (term "0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "97") (term "0,0"))
                                                                  (rule "notRight" (formula "97"))
                                                                  (rule "close" (formula "80") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "replaceKnownSelect_taclet00_23" (formula "97") (term "0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet00_51" (formula "97") (term "0,0"))
                                                               (rule "notRight" (formula "97"))
                                                               (rule "close" (formula "81") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "replaceKnownSelect_taclet00_22" (formula "97") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00_49" (formula "97") (term "0,0"))
                                                            (rule "notRight" (formula "97"))
                                                            (rule "close" (formula "82") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "replaceKnownSelect_taclet00_21" (formula "97") (term "0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00_47" (formula "97") (term "0,0"))
                                                         (rule "notRight" (formula "97"))
                                                         (rule "close" (formula "83") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "replaceKnownSelect_taclet00_20" (formula "97") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00_45" (formula "97") (term "0,0"))
                                                      (rule "notRight" (formula "97"))
                                                      (rule "close" (formula "84") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "replaceKnownSelect_taclet00_19" (formula "97") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00_43" (formula "97") (term "0,0"))
                                                   (rule "notRight" (formula "97"))
                                                   (rule "close" (formula "85") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "replaceKnownSelect_taclet00_18" (formula "97") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_30" (formula "97") (term "0,0"))
                                                (rule "notRight" (formula "97"))
                                                (rule "close" (formula "57") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "replaceKnownSelect_taclet00_17" (formula "97") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_41" (formula "97") (term "0,0"))
                                             (rule "notRight" (formula "97"))
                                             (rule "close" (formula "58") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "replaceKnownSelect_taclet00_16" (formula "97") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_34" (formula "97") (term "0,0"))
                                          (rule "notRight" (formula "97"))
                                          (rule "close" (formula "59") (ifseqformula "1"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "97"))
                                       (rule "replaceKnownSelect_taclet00_15" (formula "97") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_14" (formula "97") (term "1"))
                                        (builtin "One Step Simplification" (formula "97"))
                                       (rule "closeTrue" (formula "97"))
                                    )
                                 )
                                 (branch
                                    (rule "replaceKnownSelect_taclet00_13" (formula "97") (term "1,0,1,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "97") (term "1,0,1,1,0,0"))
                                    (rule "replaceKnownSelect_taclet00_60" (formula "97") (term "0,1,1,0,0"))
                                    (rule "replaceKnownSelect_taclet00_13" (formula "97") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "97") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00_60" (formula "97") (term "0,0,0,0,1,0"))
                                    (rule "allRight" (formula "97") (inst "sk=i_3_0"))
                                    (rule "impRight" (formula "97"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "99"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "34") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                                    (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                                    (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "nnf_imp2or" (formula "52") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "46") (term "0"))
                                    (rule "nnf_imp2or" (formula "24") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "34") (term "0"))
                                    (rule "nnf_imp2or" (formula "55") (term "0"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "nnf_imp2or" (formula "34") (term "1,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "55") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,1,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "result_101.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "ifthenelse_split" (formula "50") (term "0"))
                                       (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                          (rule "hideAuxiliaryEq" (formula "51"))
                                          (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0") (ifseqformula "51"))
                                          (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0") (ifseqformula "51"))
                                          (rule "hideAuxiliaryEq" (formula "51"))
                                          (rule "ifthenelse_split" (formula "47") (term "0"))
                                          (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "48"))
                                             (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "49") (term "0,1,1,0") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "48"))
                                             (rule "ifthenelse_split" (formula "41") (term "0"))
                                             (branch "self_103.inputCols.<created> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                                (rule "hideAuxiliaryEq" (formula "42"))
                                                (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                                (rule "hideAuxiliaryEq" (formula "42"))
                                                (rule "commute_or_2" (formula "22") (term "0"))
                                                (rule "commute_and" (formula "27") (term "0,0,1,0"))
                                                (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "27") (term "0,0"))
                                                (rule "commute_or" (formula "32") (term "0,0"))
                                                (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                                (rule "castedGetAny" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                                (rule "castedGetAny" (formula "25") (term "0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "commute_or" (formula "26") (term "0,0"))
                                                (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "40") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "lenNonNegative" (formula "24") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "40") (term "0,0,0"))
                                                (rule "commute_or" (formula "21") (term "0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "lenNonNegative" (formula "19") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "commute_or" (formula "23") (term "0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0"))
                                                (rule "commute_or_2" (formula "17") (term "0"))
                                                (rule "commute_or_2" (formula "22") (term "0"))
                                                (rule "commute_or_2" (formula "41") (term "0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0,0"))
                                                (rule "commute_or_2" (formula "15") (term "0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_or" (formula "14") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "commute_or" (formula "15") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "15") (term "0,0"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_and_2" (formula "28") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                                (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "41") (term "0"))
                                                (rule "commute_or_2" (formula "41") (term "0,0"))
                                                (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                (rule "commute_or" (formula "41") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "41") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "15")))
                                                (rule "true_left" (formula "41"))
                                                (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "14")))
                                                (rule "true_left" (formula "40"))
                                                (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                                                (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                                                (rule "ex_pull_out3" (formula "28") (term "0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                                (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "27") (term "0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                                (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "33") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                                                (rule "commute_or" (formula "33") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "17") (inst "t=i_3_0"))
                                                (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "17"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_literals" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "self_103.inputCols.<created> = TRUE FALSE"
                                                (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "78"))
                                                (rule "close" (formula "53") (ifseqformula "6"))
                                             )
                                          )
                                          (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "81"))
                                             (rule "close" (formula "54") (ifseqformula "6"))
                                          )
                                       )
                                       (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "81"))
                                          (rule "close" (formula "55") (ifseqformula "6"))
                                       )
                                    )
                                    (branch "result_101.<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "ifthenelse_split" (formula "47") (term "0"))
                                       (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                                          (rule "hideAuxiliaryEq" (formula "48"))
                                          (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "applyEqReverse" (formula "49") (term "0,1,1,0") (ifseqformula "48"))
                                          (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                          (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "48"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "48"))
                                          (rule "hideAuxiliaryEq" (formula "48"))
                                          (rule "ifthenelse_split" (formula "49") (term "0"))
                                          (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                             (rule "hideAuxiliaryEq" (formula "50"))
                                             (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0") (ifseqformula "50"))
                                             (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0") (ifseqformula "50"))
                                             (rule "hideAuxiliaryEq" (formula "50"))
                                             (rule "ifthenelse_split" (formula "41") (term "0"))
                                             (branch "self_103.inputCols.<created> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                                (rule "hideAuxiliaryEq" (formula "42"))
                                                (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                                (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "42"))
                                                (rule "hideAuxiliaryEq" (formula "42"))
                                                (rule "commute_or_2" (formula "21") (term "0"))
                                                (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                                (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "26") (term "0,0"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                (rule "castedGetAny" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                                (rule "castedGetAny" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "40") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0"))
                                                (rule "lenNonNegative" (formula "23") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "shift_paren_or" (formula "40") (term "0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "lenNonNegative" (formula "18") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "commute_or_2" (formula "41") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "commute_or_2" (formula "21") (term "0"))
                                                (rule "commute_or_2" (formula "41") (term "0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0"))
                                                (rule "commute_or" (formula "13") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0"))
                                                (rule "commute_or" (formula "14") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0"))
                                                (rule "qeq_literals" (formula "40") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                                (rule "commute_or" (formula "40") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "14")))
                                                (rule "true_left" (formula "40"))
                                                (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                                                (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                                (rule "ex_pull_out3" (formula "27") (term "0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                                (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "26") (term "0"))
                                                (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                                (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "32") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                                                (rule "commute_or" (formula "32") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "16") (inst "t=i_3_0"))
                                                (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "16") (term "0,0,1"))
                                                (rule "leq_literals" (formula "16") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "closeFalse" (formula "16"))
                                             )
                                             (branch "self_103.inputCols.<created> = TRUE FALSE"
                                                (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "79"))
                                                (rule "close" (formula "53") (ifseqformula "5"))
                                             )
                                          )
                                          (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "81"))
                                             (rule "close" (formula "54") (ifseqformula "5"))
                                          )
                                       )
                                       (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "83"))
                                          (rule "close" (formula "55") (ifseqformula "5"))
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (rule "replaceKnownSelect_taclet00_25" (formula "97") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_26" (formula "97") (term "1,1,0"))
                                 (rule "replaceKnownSelect_taclet00_13" (formula "97") (term "1,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_13" (formula "97") (term "1,0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "97") (term "1,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_60" (formula "97") (term "0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "97") (term "1,0,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet00_60" (formula "97") (term "0,1,1,0,0"))
                                 (rule "castedGetAny" (formula "97") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0"))
                                 (rule "applyEq" (formula "97") (term "1,1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "97") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "97") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "97") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "97") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                                 (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                                 (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "nnf_imp2or" (formula "40") (term "0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_imp2or" (formula "49") (term "0"))
                                 (rule "nnf_ex2all" (formula "97"))
                                 (rule "nnf_imp2or" (formula "53") (term "0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "nnf_imp2or" (formula "27") (term "0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0"))
                                 (rule "nnf_imp2or" (formula "26") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "32") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "40") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "result_101.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "ifthenelse_split" (formula "39") (term "0"))
                                    (branch "self_103.inputCols.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "41") (term "0,1,1,0,0") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "ifthenelse_split" (formula "44") (term "0"))
                                       (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "45"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0") (ifseqformula "45"))
                                          (rule "applyEqReverse" (formula "46") (term "0,0,0,1,0") (ifseqformula "45"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "ifthenelse_split" (formula "46") (term "0"))
                                          (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "0,1,1,0,0") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "0,0,0,1,0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "24") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "30") (term "0,0"))
                                             (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                             (rule "castedGetAny" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                             (rule "castedGetAny" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "commute_or" (formula "25") (term "0,0"))
                                             (rule "commute_or" (formula "24") (term "0,0"))
                                             (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "lenNonNegative" (formula "22") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "22"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "commute_or" (formula "38") (term "0,0,0"))
                                             (rule "lenNonNegative" (formula "17") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17"))
                                             (rule "commute_or" (formula "21") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "49") (term "0"))
                                             (rule "commute_or" (formula "20") (term "0,0"))
                                             (rule "commute_or_2" (formula "21") (term "0"))
                                             (rule "commute_or_2" (formula "15") (term "0"))
                                             (rule "commute_or_2" (formula "20") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0,0"))
                                             (rule "commute_or_2" (formula "13") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "commute_or" (formula "46") (term "0,0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or" (formula "12") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or" (formula "13") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "13") (term "0,0"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                             (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "13")))
                                             (rule "true_left" (formula "40"))
                                             (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "12")))
                                             (rule "true_left" (formula "39"))
                                             (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                             (rule "ex_pull_out3" (formula "27") (term "0"))
                                             (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                             (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "26") (term "0"))
                                             (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                             (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "32") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                                             (rule "commute_or" (formula "32") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_2_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "2") (inst "t=i_2_0"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "43"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "2") (term "0,0,1"))
                                             (rule "leq_literals" (formula "2") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "42") (term "0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "closeFalse" (formula "42"))
                                          )
                                          (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "77"))
                                             (rule "close" (formula "51") (ifseqformula "4"))
                                          )
                                       )
                                       (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "79"))
                                          (rule "close" (formula "52") (ifseqformula "4"))
                                       )
                                    )
                                    (branch "self_103.inputCols.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "78"))
                                       (rule "close" (formula "53") (ifseqformula "4"))
                                    )
                                 )
                                 (branch "result_101.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "ifthenelse_split" (formula "45") (term "0"))
                                    (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "46"))
                                       (rule "hideAuxiliaryEq" (formula "46"))
                                       (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "46"))
                                       (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0") (ifseqformula "46"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "46"))
                                       (rule "applyEqReverse" (formula "47") (term "0,1,1,0,0") (ifseqformula "46"))
                                       (rule "hideAuxiliaryEq" (formula "46"))
                                       (rule "ifthenelse_split" (formula "39") (term "0"))
                                       (branch "self_103.inputCols.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,1,1,0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "ifthenelse_split" (formula "46") (term "0"))
                                          (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "0,0,0,1,0") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "0,1,1,0,0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "commute_and" (formula "24") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "23") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "29") (term "0,0"))
                                             (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                             (rule "castedGetAny" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                             (rule "castedGetAny" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "commute_or" (formula "24") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "commute_and_2" (formula "29") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "11") (term "0"))
                                             (rule "lenNonNegative" (formula "21") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or" (formula "38") (term "0,0,0"))
                                             (rule "lenNonNegative" (formula "16") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16"))
                                             (rule "commute_or" (formula "20") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "49") (term "0"))
                                             (rule "commute_or" (formula "19") (term "0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "11") (term "0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or" (formula "11") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "11") (term "0,0"))
                                             (rule "commute_or_2" (formula "11") (term "0"))
                                             (rule "commute_or" (formula "12") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "25") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                             (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "12")))
                                             (rule "true_left" (formula "40"))
                                             (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "11")))
                                             (rule "true_left" (formula "39"))
                                             (rule "commute_and" (formula "31") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                             (rule "ex_pull_out3" (formula "26") (term "0"))
                                             (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                             (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "25") (term "0"))
                                             (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                             (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "31") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "31") (term "0,1,0"))
                                             (rule "commute_or" (formula "31") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "31") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "31") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_2_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "2") (inst "t=i_2_0"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "17"))
                                             (rule "qeq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "42"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "2"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "inEqSimp_homoInEq1" (formula "19"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0"))
                                             (rule "add_literals" (formula "19") (term "0"))
                                             (rule "leq_literals" (formula "19"))
                                             (rule "closeFalse" (formula "19"))
                                          )
                                          (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "78"))
                                             (rule "close" (formula "51") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "self_103.inputCols.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "78"))
                                          (rule "close" (formula "52") (ifseqformula "3"))
                                       )
                                    )
                                    (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "81"))
                                       (rule "close" (formula "53") (ifseqformula "3"))
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "replaceKnownSelect_taclet00_12" (formula "97") (term "0,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet00_12" (formula "97") (term "0,0,0,0,1,0"))
                              (rule "allRight" (formula "97") (inst "sk=i_1_0"))
                              (rule "impRight" (formula "97"))
                              (rule "andLeft" (formula "1"))
                              (rule "notRight" (formula "99"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "34") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "48"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "57"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "57") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "34") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                              (rule "polySimp_elimOne" (formula "48") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                              (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                              (rule "polySimp_elimOne" (formula "57") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                              (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "nnf_imp2or" (formula "52") (term "0"))
                              (rule "nnf_imp2or" (formula "24") (term "0"))
                              (rule "nnf_imp2or" (formula "28") (term "0"))
                              (rule "nnf_imp2or" (formula "55") (term "0"))
                              (rule "nnf_imp2or" (formula "42") (term "0"))
                              (rule "nnf_imp2or" (formula "34") (term "1,0"))
                              (rule "nnf_imp2or" (formula "23") (term "0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "46") (term "0"))
                              (rule "nnf_imp2or" (formula "29") (term "0"))
                              (rule "nnf_imp2or" (formula "43") (term "0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_imp2or" (formula "34") (term "0"))
                              (rule "nnf_notAnd" (formula "52") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "55") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                              (rule "mul_literals" (formula "55") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "55") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "55") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "46") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                              (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "43") (term "0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                              (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "42") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "43") (term "1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "43") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch "result_101.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "ifthenelse_split" (formula "50") (term "0"))
                                 (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                    (rule "hideAuxiliaryEq" (formula "51"))
                                    (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0") (ifseqformula "51"))
                                    (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0") (ifseqformula "51"))
                                    (rule "hideAuxiliaryEq" (formula "51"))
                                    (rule "ifthenelse_split" (formula "47") (term "0"))
                                    (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                                       (rule "hideAuxiliaryEq" (formula "48"))
                                       (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "48"))
                                       (rule "applyEqReverse" (formula "49") (term "0,1,1,0") (ifseqformula "48"))
                                       (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                       (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "48"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "48"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "48"))
                                       (rule "hideAuxiliaryEq" (formula "48"))
                                       (rule "ifthenelse_split" (formula "41") (term "0"))
                                       (branch "self_103.inputCols.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0") (ifseqformula "42"))
                                          (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "42"))
                                          (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "commute_or" (formula "26") (term "0,0"))
                                          (rule "commute_or_2" (formula "21") (term "0"))
                                          (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_and" (formula "27") (term "0,0,1,0"))
                                          (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                          (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                          (rule "castedGetAny" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                          (rule "castedGetAny" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "commute_or" (formula "27") (term "0,0"))
                                          (rule "commute_or" (formula "32") (term "0,0"))
                                          (rule "lenNonNegative" (formula "24") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24"))
                                          (rule "commute_or" (formula "40") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or" (formula "41") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "50") (term "0"))
                                          (rule "commute_or" (formula "22") (term "0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "lenNonNegative" (formula "19") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "commute_or" (formula "49") (term "0,0"))
                                          (rule "commute_or" (formula "22") (term "0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "50") (term "0,0"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or" (formula "14") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "28") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "14")))
                                          (rule "true_left" (formula "40"))
                                          (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "15")))
                                          (rule "true_left" (formula "40"))
                                          (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "27") (term "0"))
                                          (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "28") (term "0"))
                                          (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "45") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "45") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "45"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "self_103.inputCols.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "78"))
                                          (rule "close" (formula "53") (ifseqformula "6"))
                                       )
                                    )
                                    (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "81"))
                                       (rule "close" (formula "54") (ifseqformula "6"))
                                    )
                                 )
                                 (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "81"))
                                    (rule "close" (formula "55") (ifseqformula "6"))
                                 )
                              )
                              (branch "result_101.<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "commute_or_2" (formula "21") (term "0"))
                                 (rule "ifthenelse_split" (formula "41") (term "0"))
                                 (branch "self_103.inputCols.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "ifthenelse_split" (formula "49") (term "0"))
                                    (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                       (rule "hideAuxiliaryEq" (formula "50"))
                                       (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0") (ifseqformula "50"))
                                       (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0") (ifseqformula "50"))
                                       (rule "hideAuxiliaryEq" (formula "50"))
                                       (rule "ifthenelse_split" (formula "46") (term "0"))
                                       (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "applyEqReverse" (formula "48") (term "0,1,1,0") (ifseqformula "47"))
                                          (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "47"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "47"))
                                          (rule "applyEqReverse" (formula "48") (term "0,0,0,1,0,0") (ifseqformula "47"))
                                          (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "47"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "commute_or" (formula "25") (term "0,0"))
                                          (rule "commute_or_2" (formula "20") (term "0"))
                                          (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                          (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                          (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                          (rule "castedGetAny" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                          (rule "castedGetAny" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "commute_or" (formula "26") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "lenNonNegative" (formula "23") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23"))
                                          (rule "commute_or" (formula "40") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or" (formula "41") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or_2" (formula "50") (term "0"))
                                          (rule "commute_or" (formula "21") (term "0,0"))
                                          (rule "lenNonNegative" (formula "18") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "commute_or" (formula "49") (term "0,0"))
                                          (rule "commute_or" (formula "21") (term "0,0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0"))
                                          (rule "commute_or_2" (formula "21") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or" (formula "49") (term "0,0"))
                                          (rule "commute_or" (formula "13") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or" (formula "14") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "13")))
                                          (rule "true_left" (formula "40"))
                                          (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "40") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "14")))
                                          (rule "true_left" (formula "40"))
                                          (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "26") (term "0"))
                                          (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                          (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "27") (term "0"))
                                          (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "45") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "45") (term "0,0,1"))
                                          (rule "leq_literals" (formula "45") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "81"))
                                          (rule "close" (formula "53") (ifseqformula "5"))
                                       )
                                    )
                                    (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "81"))
                                       (rule "close" (formula "54") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "self_103.inputCols.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "81"))
                                    (rule "close" (formula "55") (ifseqformula "5"))
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "replaceKnownSelect_taclet00_11" (formula "97") (term "0,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet00_11" (formula "97") (term "0,0,0,0,1,0"))
                           (rule "allRight" (formula "97") (inst "sk=i_0_0"))
                           (rule "impRight" (formula "97"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "99"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "34") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "57") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "34") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                           (rule "polySimp_elimOne" (formula "57") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                           (rule "polySimp_elimOne" (formula "48") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                           (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "nnf_imp2or" (formula "52") (term "0"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "nnf_imp2or" (formula "55") (term "0"))
                           (rule "nnf_imp2or" (formula "42") (term "0"))
                           (rule "nnf_imp2or" (formula "34") (term "1,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "19") (term "0"))
                           (rule "nnf_imp2or" (formula "46") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_imp2or" (formula "43") (term "0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "nnf_imp2or" (formula "34") (term "0"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                           (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                           (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "55") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "55") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "46") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                           (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "34") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                           (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "42") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,1,1,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "43") (term "1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch "result_101.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "commute_or_2" (formula "22") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "ifthenelse_split" (formula "50") (term "0"))
                              (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                 (rule "hideAuxiliaryEq" (formula "51"))
                                 (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "52") (term "0,1,1,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "51"))
                                 (rule "hideAuxiliaryEq" (formula "51"))
                                 (rule "ifthenelse_split" (formula "41") (term "0"))
                                 (branch "self_103.inputCols.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "ifthenelse_split" (formula "46") (term "0"))
                                    (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "47"))
                                       (rule "hideAuxiliaryEq" (formula "47"))
                                       (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEqReverse" (formula "48") (term "0,1,1,0") (ifseqformula "47"))
                                       (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "47"))
                                       (rule "applyEqReverse" (formula "48") (term "0,0,0,1,0,0") (ifseqformula "47"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "47"))
                                       (rule "hideAuxiliaryEq" (formula "47"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "commute_or" (formula "26") (term "0,0"))
                                       (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "27") (term "0,0,1,0"))
                                       (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                       (rule "commute_or_2" (formula "21") (term "0"))
                                       (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                       (rule "castedGetAny" (formula "25") (term "0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                       (rule "castedGetAny" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "commute_or" (formula "27") (term "0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0"))
                                       (rule "lenNonNegative" (formula "24") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "24"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or" (formula "22") (term "0,0"))
                                       (rule "commute_or" (formula "50") (term "0,0"))
                                       (rule "lenNonNegative" (formula "19") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19"))
                                       (rule "commute_or" (formula "49") (term "0,0"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "commute_or" (formula "22") (term "0,0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "commute_or" (formula "14") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "15") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                       (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                       (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "14")))
                                       (rule "true_left" (formula "39"))
                                       (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "15")))
                                       (rule "true_left" (formula "39"))
                                       (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                       (rule "ex_pull_out3" (formula "26") (term "0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "27") (term "0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "46") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                       (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "46") (term "0,0,1"))
                                       (rule "leq_literals" (formula "46") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "inEqSimp_contradInEq1" (formula "46") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "46") (term "0"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "closeFalse" (formula "46"))
                                    )
                                    (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "80"))
                                       (rule "close" (formula "53") (ifseqformula "6"))
                                    )
                                 )
                                 (branch "self_103.inputCols.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "79"))
                                    (rule "close" (formula "54") (ifseqformula "6"))
                                 )
                              )
                              (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "81"))
                                 (rule "close" (formula "55") (ifseqformula "6"))
                              )
                           )
                           (branch "result_101.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "55"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "commute_or_2" (formula "21") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "ifthenelse_split" (formula "50") (term "0"))
                              (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                 (rule "hideAuxiliaryEq" (formula "51"))
                                 (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "52") (term "0,1,1,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "51"))
                                 (rule "hideAuxiliaryEq" (formula "51"))
                                 (rule "ifthenelse_split" (formula "47") (term "0"))
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                                    (rule "hideAuxiliaryEq" (formula "48"))
                                    (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "applyEqReverse" (formula "49") (term "0,1,1,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "48"))
                                    (rule "hideAuxiliaryEq" (formula "48"))
                                    (rule "ifthenelse_split" (formula "41") (term "0"))
                                    (branch "self_103.inputCols.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or" (formula "25") (term "0,0"))
                                       (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                       (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                       (rule "castedGetAny" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                       (rule "castedGetAny" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "commute_or" (formula "26") (term "0,0"))
                                       (rule "commute_or" (formula "31") (term "0,0"))
                                       (rule "lenNonNegative" (formula "23") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "13") (term "0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "commute_or" (formula "50") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or" (formula "48") (term "0,0"))
                                       (rule "lenNonNegative" (formula "18") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or_2" (formula "21") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "13") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0,0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "commute_or" (formula "13") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "13") (term "0,0"))
                                       (rule "commute_or_2" (formula "13") (term "0"))
                                       (rule "commute_or" (formula "14") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_and_2" (formula "25") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                       (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                       (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "13")))
                                       (rule "true_left" (formula "39"))
                                       (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "14")))
                                       (rule "true_left" (formula "39"))
                                       (rule "commute_and" (formula "31") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                       (rule "ex_pull_out3" (formula "25") (term "0"))
                                       (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                       (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "26") (term "0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "46") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                       (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "46") (term "0,0,1"))
                                       (rule "leq_literals" (formula "46") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "inEqSimp_contradInEq1" (formula "46") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "46") (term "0"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "closeFalse" (formula "46"))
                                    )
                                    (branch "self_103.inputCols.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "79"))
                                       (rule "close" (formula "53") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "82"))
                                    (rule "close" (formula "54") (ifseqformula "5"))
                                 )
                              )
                              (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "82"))
                                 (rule "close" (formula "55") (ifseqformula "5"))
                              )
                           )
                        )
                     )
                     (branch
                        (rule "replaceKnownSelect_taclet00_25" (formula "97") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_26" (formula "97") (term "1,1,0"))
                        (rule "replaceKnownSelect_taclet00_12" (formula "97") (term "0,1,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_12" (formula "97") (term "0,0,0,1,0"))
                        (rule "castedGetAny" (formula "97") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "54"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "54") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "97") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0"))
                        (rule "applyEq" (formula "97") (term "1,1,0") (ifseqformula "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                        (rule "polySimp_elimOne" (formula "54") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "97") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "97") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "97") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "97") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "97") (term "1,1,1,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                        (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                        (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "nnf_imp2or" (formula "40") (term "0"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "52") (term "0"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_ex2all" (formula "97"))
                        (rule "nnf_imp2or" (formula "32") (term "0"))
                        (rule "nnf_imp2or" (formula "40") (term "0"))
                        (rule "nnf_imp2or" (formula "44") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_imp2or" (formula "50") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "53") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                        (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                        (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "32") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                        (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "32") (term "1,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0"))
                        (rule "nnf_notAnd" (formula "44") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                        (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "50") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                        (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,1,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,1,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                        (rule "ifthenelse_split" (formula "5") (term "0"))
                        (branch "result_101.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "commute_or_2" (formula "50") (term "0"))
                           (rule "commute_or" (formula "24") (term "0,0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "ifthenelse_split" (formula "45") (term "0"))
                           (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "46"))
                              (rule "hideAuxiliaryEq" (formula "46"))
                              (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "45"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "46"))
                              (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0") (ifseqformula "46"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "46"))
                              (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "46"))
                              (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "46"))
                              (rule "applyEqReverse" (formula "47") (term "0,1,1,0,0") (ifseqformula "46"))
                              (rule "hideAuxiliaryEq" (formula "46"))
                              (rule "ifthenelse_split" (formula "47") (term "0"))
                              (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                                 (rule "hideAuxiliaryEq" (formula "48"))
                                 (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                 (rule "applyEqReverse" (formula "49") (term "0,1,1,0") (ifseqformula "48"))
                                 (rule "hideAuxiliaryEq" (formula "48"))
                                 (rule "ifthenelse_split" (formula "39") (term "0"))
                                 (branch "self_103.inputCols.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "0,1,1,0,0") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "commute_or" (formula "30") (term "0,0"))
                                    (rule "commute_and" (formula "24") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or" (formula "25") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                    (rule "castedGetAny" (formula "23") (term "0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "38") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "lenNonNegative" (formula "17") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17"))
                                    (rule "lenNonNegative" (formula "23") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23"))
                                    (rule "commute_or_2" (formula "13") (term "0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_or" (formula "21") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or" (formula "46") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or" (formula "12") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_or" (formula "13") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0"))
                                    (rule "commute_and_2" (formula "25") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                    (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "13")))
                                    (rule "true_left" (formula "39"))
                                    (rule "commute_or" (formula "38") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "38") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "12")))
                                    (rule "true_left" (formula "38"))
                                    (rule "commute_and" (formula "31") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "25") (term "0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "26") (term "0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "31") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "31") (term "0,1,0"))
                                    (rule "commute_or" (formula "31") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "31") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "31") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "allLeft" (formula "2") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "47"))
                                    (rule "qeq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "1"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0"))
                                    (rule "add_literals" (formula "25") (term "0"))
                                    (rule "leq_literals" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                                 (branch "self_103.inputCols.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "76"))
                                    (rule "close" (formula "51") (ifseqformula "4"))
                                 )
                              )
                              (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "78"))
                                 (rule "close" (formula "52") (ifseqformula "4"))
                              )
                           )
                           (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "80"))
                              (rule "close" (formula "53") (ifseqformula "4"))
                           )
                        )
                        (branch "result_101.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "55"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "54"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "53"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "commute_or_2" (formula "50") (term "0"))
                           (rule "commute_or" (formula "23") (term "0,0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "ifthenelse_split" (formula "39") (term "0"))
                           (branch "self_103.inputCols.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                              (rule "hideAuxiliaryEq" (formula "40"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "applyEqReverse" (formula "41") (term "0,1,1,0,0") (ifseqformula "40"))
                              (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "40"))
                              (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                              (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                              (rule "hideAuxiliaryEq" (formula "40"))
                              (rule "ifthenelse_split" (formula "47") (term "0"))
                              (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                                 (rule "hideAuxiliaryEq" (formula "48"))
                                 (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "applyEqReverse" (formula "49") (term "0,1,1,0") (ifseqformula "48"))
                                 (rule "applyEqReverse" (formula "49") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                 (rule "hideAuxiliaryEq" (formula "48"))
                                 (rule "ifthenelse_split" (formula "44") (term "0"))
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "45"))
                                    (rule "hideAuxiliaryEq" (formula "45"))
                                    (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0,0,1,0") (ifseqformula "45"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "45"))
                                    (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "45"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "45"))
                                    (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0") (ifseqformula "45"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "45"))
                                    (rule "hideAuxiliaryEq" (formula "45"))
                                    (rule "commute_or" (formula "29") (term "0,0"))
                                    (rule "commute_and" (formula "23") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_and" (formula "24") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "commute_or" (formula "24") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                    (rule "castedGetAny" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "commute_and_2" (formula "29") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "38") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "11") (term "0"))
                                    (rule "lenNonNegative" (formula "16") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "lenNonNegative" (formula "22") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "commute_or" (formula "19") (term "0,0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "11") (term "0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or" (formula "45") (term "0,0"))
                                    (rule "commute_or" (formula "11") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "11") (term "0,0"))
                                    (rule "commute_or_2" (formula "11") (term "0"))
                                    (rule "commute_or" (formula "12") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_and_2" (formula "24") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "25") (term "0,1,0"))
                                    (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "39") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "12")))
                                    (rule "true_left" (formula "39"))
                                    (rule "commute_or" (formula "38") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "38") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "11")))
                                    (rule "true_left" (formula "38"))
                                    (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "24") (term "0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "25") (term "0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "30") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                                    (rule "commute_or" (formula "30") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "allLeft" (formula "2") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "47"))
                                    (rule "qeq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "closeFalse" (formula "22"))
                                 )
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "79"))
                                    (rule "close" (formula "51") (ifseqformula "3"))
                                 )
                              )
                              (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "79"))
                                 (rule "close" (formula "52") (ifseqformula "3"))
                              )
                           )
                           (branch "self_103.inputCols.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "79"))
                              (rule "close" (formula "53") (ifseqformula "3"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "97") (inst "sk=j_0") (userinteraction))
                     (rule "instAll" (formula "97") (term "1,0,0") (ifseqformula "26") (userinteraction))
                     (rule "impRight" (formula "98") (userinteraction))
                     (rule "impLeft" (formula "2") (userinteraction))
                     (branch "Case 1"
                        (rule "replaceKnownSelect_taclet00_12" (formula "1") (term "0,1,1"))
                        (rule "replaceKnownSelect_taclet00_8" (formula "99") (term "0,1,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_8" (formula "99") (term "0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet00_12" (formula "99") (term "0,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "99") (term "0,1,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "99") (term "0,0,0,1,0"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "100") (term "1,1,0"))
                        (rule "castedGetAny" (formula "100") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "33") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "47"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "47") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "56"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "56") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "100") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "57"))
                        (rule "inEqSimp_leqRight" (formula "57"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                        (rule "polySimp_elimOne" (formula "48") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                        (rule "polySimp_elimOne" (formula "57") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "100") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "100") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "100") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "100") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "100") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "100") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1"))
                        (rule "mul_literals" (formula "26") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                        (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                        (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                        (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "nnf_imp2or" (formula "47") (term "0"))
                        (rule "nnf_imp2or" (formula "43") (term "0"))
                        (rule "nnf_imp2or" (formula "19") (term "0"))
                        (rule "nnf_imp2or" (formula "56") (term "0"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "nnf_ex2all" (formula "101"))
                        (rule "nnf_imp2or" (formula "30") (term "0"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "nnf_imp2or" (formula "36") (term "1,0"))
                        (rule "nnf_imp2or" (formula "31") (term "0"))
                        (rule "nnf_imp2or" (formula "45") (term "0"))
                        (rule "nnf_imp2or" (formula "54") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_imp2or" (formula "36") (term "0"))
                        (rule "nnf_notAnd" (formula "48") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
                        (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                        (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "44") (term "0,0"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "57") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "57") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "57") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                        (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0"))
                        (rule "nnf_notAnd" (formula "54") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "54") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "54") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "36") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "44") (term "1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "44") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "44") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                        (rule "ifthenelse_split" (formula "6") (term "0"))
                        (branch "result_101.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "ifthenelse_split" (formula "52") (term "0"))
                           (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                              (rule "hideAuxiliaryEq" (formula "53"))
                              (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "52"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0") (ifseqformula "53"))
                              (rule "applyEqReverse" (formula "54") (term "0,1,1,0,0") (ifseqformula "53"))
                              (rule "hideAuxiliaryEq" (formula "53"))
                              (rule "ifthenelse_split" (formula "43") (term "0"))
                              (branch "self_103.inputCols.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "45") (term "1,0") (ifseqformula "44"))
                                 (rule "hideAuxiliaryEq" (formula "44"))
                                 (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "applyEqReverse" (formula "45") (term "0,0,0,1,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "44"))
                                 (rule "hideAuxiliaryEq" (formula "44"))
                                 (rule "ifthenelse_split" (formula "48") (term "0"))
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "50") (term "0,1,1,0,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "82"))
                                    (rule "close" (formula "55") (ifseqformula "7"))
                                 )
                              )
                              (branch "self_103.inputCols.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "81"))
                                 (rule "close" (formula "56") (ifseqformula "7"))
                              )
                           )
                           (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "83"))
                              (rule "close" (formula "57") (ifseqformula "7"))
                           )
                        )
                        (branch "result_101.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "ifthenelse_split" (formula "43") (term "0"))
                           (branch "self_103.inputCols.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "45") (term "1,0") (ifseqformula "44"))
                              (rule "hideAuxiliaryEq" (formula "44"))
                              (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "43"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "44"))
                              (rule "applyEqReverse" (formula "45") (term "0,0,0,1,0") (ifseqformula "44"))
                              (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0") (ifseqformula "44"))
                              (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "44"))
                              (rule "hideAuxiliaryEq" (formula "44"))
                              (rule "ifthenelse_split" (formula "51") (term "0"))
                              (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                 (rule "hideAuxiliaryEq" (formula "52"))
                                 (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0") (ifseqformula "52"))
                                 (rule "applyEqReverse" (formula "53") (term "0,1,1,0,0") (ifseqformula "52"))
                                 (rule "hideAuxiliaryEq" (formula "52"))
                                 (rule "ifthenelse_split" (formula "48") (term "0"))
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEqReverse" (formula "50") (term "0,1,1,0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "50") (term "0,0,0,1,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "83"))
                                    (rule "close" (formula "55") (ifseqformula "6"))
                                 )
                              )
                              (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "83"))
                                 (rule "close" (formula "56") (ifseqformula "6"))
                              )
                           )
                           (branch "self_103.inputCols.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "83"))
                              (rule "close" (formula "57") (ifseqformula "6"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "exLeft" (formula "2") (inst "sk=i_3") (userinteraction))
                        (rule "instEx" (formula "2") (term "0,0,0") (ifseqformula "99") (userinteraction))
                        (rule "replaceKnownSelect_taclet00_12" (formula "1") (term "0,1,1"))
                        (rule "replaceKnownSelect_taclet00_8" (formula "57") (term "0,0,0,1"))
                        (rule "replaceKnownSelect_taclet00_8" (formula "57") (term "0,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_12" (formula "57") (term "0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "57") (term "0,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "57") (term "0,1,1,0"))
                        (rule "replaceKnownSelect_taclet00_8" (formula "100") (term "0,1,1,0,0"))
                        (rule "replaceKnownSelect_taclet00_8" (formula "100") (term "0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet00_12" (formula "100") (term "0,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "100") (term "0,1,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "100") (term "0,0,0,1,0"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "3"))
                        (rule "replace_known_left" (formula "60") (term "1,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "castedGetAny" (formula "103") (term "1,1,0"))
                        (rule "castedGetAny" (formula "103") (term "0,1,0"))
                        (rule "castedGetAny" (formula "60") (term "1,1"))
                        (rule "castedGetAny" (formula "60") (term "0,1"))
                        (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "50"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "50") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "59"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "59") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "103") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "103") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "60") (term "0"))
                        (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                        (rule "polySimp_elimOne" (formula "50") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "103") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "103") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "103") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "103") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "103") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_and_subsumption3" (formula "19") (term "0,0,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
                        (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "30") (term "0"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_imp2or" (formula "48") (term "0"))
                        (rule "nnf_imp2or" (formula "36") (term "1,0"))
                        (rule "nnf_ex2all" (formula "103"))
                        (rule "nnf_imp2or" (formula "55") (term "0"))
                        (rule "nnf_imp2or" (formula "32") (term "0"))
                        (rule "nnf_imp2or" (formula "45") (term "0"))
                        (rule "nnf_imp2or" (formula "46") (term "0"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_imp2or" (formula "58") (term "0"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "nnf_imp2or" (formula "19") (term "0"))
                        (rule "nnf_imp2or" (formula "37") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0"))
                        (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "55") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "55") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "32") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                        (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "58") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "58") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "19") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "46") (term "1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,1,0,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,0"))
                        (rule "ifthenelse_split" (formula "8") (term "0"))
                        (branch "result_101.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "9"))
                           (rule "hideAuxiliaryEq" (formula "9"))
                           (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "9"))
                           (rule "hideAuxiliaryEq" (formula "9"))
                           (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "9"))
                           (rule "hideAuxiliaryEq" (formula "9"))
                           (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "commute_or_2" (formula "24") (term "0"))
                           (rule "ifthenelse_split" (formula "53") (term "0"))
                           (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "54"))
                              (rule "hideAuxiliaryEq" (formula "54"))
                              (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "53"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0") (ifseqformula "54"))
                              (rule "applyEqReverse" (formula "55") (term "0,1,1,0,0") (ifseqformula "54"))
                              (rule "hideAuxiliaryEq" (formula "54"))
                              (rule "ifthenelse_split" (formula "50") (term "0"))
                              (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                 (rule "hideAuxiliaryEq" (formula "51"))
                                 (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "52") (term "0,1,1,0,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "51"))
                                 (rule "applyEqReverse" (formula "57") (term "0,1") (ifseqformula "51"))
                                 (rule "hideAuxiliaryEq" (formula "51"))
                                 (rule "eqSymm" (formula "56"))
                                 (rule "close" (formula "56") (ifseqformula "5"))
                              )
                              (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "85"))
                                 (rule "close" (formula "57") (ifseqformula "9"))
                              )
                           )
                           (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "58") (ifseqformula "85"))
                              (rule "close" (formula "58") (ifseqformula "9"))
                           )
                        )
                        (branch "result_101.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "commute_or_2" (formula "23") (term "0"))
                           (rule "ifthenelse_split" (formula "53") (term "0"))
                           (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "54"))
                              (rule "hideAuxiliaryEq" (formula "54"))
                              (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "53"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "applyEqReverse" (formula "55") (term "0,1,1,0,0") (ifseqformula "54"))
                              (rule "applyEqReverse" (formula "55") (term "0,0,0,1,0") (ifseqformula "54"))
                              (rule "hideAuxiliaryEq" (formula "54"))
                              (rule "ifthenelse_split" (formula "44") (term "0"))
                              (branch "self_103.inputCols.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "45"))
                                 (rule "hideAuxiliaryEq" (formula "45"))
                                 (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "45"))
                                 (rule "applyEqReverse" (formula "46") (term "0,0,0,1,0") (ifseqformula "45"))
                                 (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "45"))
                                 (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0") (ifseqformula "45"))
                                 (rule "hideAuxiliaryEq" (formula "45"))
                                 (rule "ifthenelse_split" (formula "49") (term "0"))
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "0,1,1,0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "57") (term "0,1") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "close" (formula "56") (ifseqformula "5"))
                                 )
                                 (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "85"))
                                    (rule "close" (formula "56") (ifseqformula "8"))
                                 )
                              )
                              (branch "self_103.inputCols.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "84"))
                                 (rule "close" (formula "57") (ifseqformula "8"))
                              )
                           )
                           (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "58") (ifseqformula "86"))
                              (rule "close" (formula "58") (ifseqformula "8"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch
            (rule "andRight" (formula "97"))
            (branch
               (rule "andRight" (formula "97"))
               (branch
                  (rule "wellFormedAnonEQ" (formula "97") (ifseqformula "37"))
                  (rule "wellFormedAnonEQ" (formula "97") (term "0") (ifseqformula "33"))
                  (rule "replace_known_left" (formula "97") (term "1,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "5")) (ifInst ""  (formula "36")))
                  (rule "closeTrue" (formula "97"))
               )
               (branch
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (ifseqformula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0") (ifseqformula "33"))
                  (rule "orRight" (formula "97"))
                  (rule "orRight" (formula "97"))
                  (rule "close" (formula "97") (ifseqformula "8"))
               )
            )
            (branch
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (ifseqformula "37"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0") (ifseqformula "33"))
               (rule "orRight" (formula "97"))
               (rule "close" (formula "97") (ifseqformula "35"))
            )
         )
      )
   )
   (branch "Exceptional Post (initDistVals)"
       (builtin "One Step Simplification" (formula "36"))
       (builtin "One Step Simplification" (formula "75"))
      (rule "andLeft" (formula "36"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "36"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0") (ifseqformula "32"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "39"))
      (rule "notLeft" (formula "37"))
      (rule "close" (formula "40") (ifseqformula "39"))
   )
   (branch "Pre (initDistVals)"
       (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")) (ifInst ""  (formula "39")) (ifInst ""  (formula "71")) (ifInst ""  (formula "39")))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "73") (term "0,0") (inst "i=i") (inst "i_0=i_0") (userinteraction))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "73") (term "0,1,1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "73") (term "0,1,0") (userinteraction))
      (rule "andRight" (formula "73"))
      (branch "Case 1"
         (rule "andRight" (formula "73"))
         (branch
            (rule "andRight" (formula "73"))
            (branch
               (rule "andRight" (formula "73"))
               (branch
                  (rule "eqSymm" (formula "73"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                  (rule "pullOutSelect" (formula "73") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "8")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                  (rule "applyEqReverse" (formula "74") (term "0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "73") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "8")))
                  (rule "eqSymm" (formula "74"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                  (rule "applyEqReverse" (formula "74") (term "0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "73"))
                  (rule "close" (formula "73") (ifseqformula "11"))
               )
               (branch
                  (rule "expand_inInt" (formula "73") (term "1,0,0"))
                  (rule "replace_int_MIN" (formula "73") (term "0,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "73") (term "1,0,1,0,0"))
                  (rule "allRight" (formula "73") (inst "sk=i_0_0"))
                  (rule "impRight" (formula "73"))
                  (rule "notRight" (formula "74"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "4"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "35") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "12")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                  (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_imp2or" (formula "28") (term "0"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "23") (term "0"))
                  (rule "nnf_imp2or" (formula "29") (term "0"))
                  (rule "nnf_imp2or" (formula "24") (term "0"))
                  (rule "nnf_imp2or" (formula "34") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_notAnd" (formula "28") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                  (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "24") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                  (rule "nnf_imp2or" (formula "34") (term "1,0"))
                  (rule "nnf_notAnd" (formula "34") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                  (rule "commute_or_2" (formula "19") (term "0"))
                  (rule "commute_or" (formula "28") (term "0,0"))
                  (rule "commute_or_2" (formula "23") (term "0"))
                  (rule "ifthenelse_split" (formula "5") (term "0"))
                  (branch "result_101.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "true_left" (formula "36"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "commute_or" (formula "27") (term "0,0"))
                     (rule "commute_and" (formula "26") (term "0,0,1,0"))
                     (rule "commute_and" (formula "27") (term "0,0,1,0"))
                     (rule "commute_or" (formula "32") (term "0,0"))
                     (rule "commute_or_2" (formula "15") (term "0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or" (formula "17") (term "0,0"))
                     (rule "commute_or" (formula "21") (term "0,0"))
                     (rule "commute_or_2" (formula "17") (term "0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or" (formula "22") (term "0,0"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "seqGetAlphaCast" (formula "20") (term "0"))
                     (rule "castedGetAny" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "seqGetAlphaCast" (formula "25") (term "0"))
                     (rule "castedGetAny" (formula "25") (term "0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "commute_or_2" (formula "15") (term "0,0"))
                     (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0"))
                     (rule "commute_or_2" (formula "15") (term "0"))
                     (rule "commute_or" (formula "14") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "lenNonNegative" (formula "19") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "19"))
                     (rule "commute_and_2" (formula "27") (term "0,1,0"))
                     (rule "commute_and_2" (formula "28") (term "0,1,0"))
                     (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                     (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                     (rule "lenNonNegative" (formula "25") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "25"))
                     (rule "seqGetAlphaCast" (formula "1") (term "0"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ex_pull_out3" (formula "28") (term "0"))
                     (rule "cnf_rightDist" (formula "28") (term "0,0"))
                     (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                     (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                     (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "29") (term "0"))
                     (rule "cnf_rightDist" (formula "29") (term "0,0"))
                     (rule "shift_paren_or" (formula "29") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                     (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "29") (term "1,0,0,0"))
                     (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "34") (term "1,0"))
                     (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                     (rule "commute_or" (formula "34") (term "1,0,1,0"))
                     (rule "cnf_rightDist" (formula "34") (term "0,0,1,0"))
                     (rule "commute_or" (formula "34") (term "1,0,0,1,0"))
                     (rule "ex_pull_out3" (formula "34") (term "0"))
                     (rule "cnf_rightDist" (formula "34") (term "0,0"))
                     (rule "commute_or_2" (formula "34") (term "1,0,0"))
                     (rule "shift_paren_or" (formula "34") (term "0,1,0,0"))
                     (rule "cnf_rightDist" (formula "34") (term "0,0,0"))
                     (rule "commute_or_2" (formula "34") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "34") (term "0,1,0,0,0"))
                     (rule "commute_or" (formula "34") (term "0,0,0,0,0,0"))
                     (rule "allLeft" (formula "14") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "14") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "14") (term "0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "14"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "result_101.<created> = TRUE FALSE"
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or" (formula "26") (term "0,0"))
                     (rule "commute_and" (formula "25") (term "0,0,1,0"))
                     (rule "commute_and" (formula "26") (term "0,0,1,0"))
                     (rule "commute_or" (formula "31") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or" (formula "16") (term "0,0"))
                     (rule "commute_or" (formula "20") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "commute_or" (formula "21") (term "0,0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "seqGetAlphaCast" (formula "19") (term "0"))
                     (rule "castedGetAny" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "seqGetAlphaCast" (formula "24") (term "0"))
                     (rule "castedGetAny" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                     (rule "commute_or" (formula "14") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or" (formula "13") (term "0,0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "lenNonNegative" (formula "18") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "commute_and_2" (formula "26") (term "0,1,0"))
                     (rule "commute_and_2" (formula "27") (term "0,1,0"))
                     (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                     (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                     (rule "lenNonNegative" (formula "24") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "24"))
                     (rule "seqGetAlphaCast" (formula "1") (term "0"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ex_pull_out3" (formula "27") (term "0"))
                     (rule "cnf_rightDist" (formula "27") (term "0,0"))
                     (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                     (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "28") (term "0"))
                     (rule "cnf_rightDist" (formula "28") (term "0,0"))
                     (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                     (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                     (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "33") (term "1,0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                     (rule "commute_or" (formula "33") (term "1,0,1,0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                     (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                     (rule "ex_pull_out3" (formula "33") (term "0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,0"))
                     (rule "commute_or_2" (formula "33") (term "1,0,0"))
                     (rule "shift_paren_or" (formula "33") (term "0,1,0,0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,0,0"))
                     (rule "commute_or_2" (formula "33") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "33") (term "0,1,0,0,0"))
                     (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                     (rule "allLeft" (formula "13") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "13") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "13") (term "0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "13"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
            )
            (branch
               (rule "expand_inInt" (formula "73") (term "1,0,0"))
               (rule "replace_int_MIN" (formula "73") (term "0,1,1,0,0"))
               (rule "replace_int_MAX" (formula "73") (term "1,0,1,0,0"))
               (rule "allRight" (formula "73") (inst "sk=i_2"))
               (rule "impRight" (formula "73"))
               (rule "notRight" (formula "74"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "4"))
               (rule "castedGetAny" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "27"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "35") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_commuteLeq" (formula "5"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
               (rule "polySimp_elimOne" (formula "22") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
               (rule "polySimp_elimOne" (formula "27") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "35") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "12")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
               (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
               (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
               (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
               (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_imp2or" (formula "19") (term "0"))
               (rule "nnf_imp2or" (formula "23") (term "0"))
               (rule "nnf_imp2or" (formula "29") (term "0"))
               (rule "nnf_imp2or" (formula "24") (term "0"))
               (rule "nnf_imp2or" (formula "34") (term "0"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
               (rule "mul_literals" (formula "28") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
               (rule "mul_literals" (formula "19") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "23") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
               (rule "mul_literals" (formula "23") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "29") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
               (rule "mul_literals" (formula "29") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "24") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
               (rule "mul_literals" (formula "24") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "34") (term "1,0"))
               (rule "nnf_notAnd" (formula "34") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
               (rule "mul_literals" (formula "34") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
               (rule "commute_or_2" (formula "19") (term "0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "commute_or_2" (formula "23") (term "0"))
               (rule "ifthenelse_split" (formula "5") (term "0"))
               (branch "result_101.<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "7"))
                  (rule "hideAuxiliaryEq" (formula "7"))
                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "commute_or" (formula "27") (term "0,0"))
                  (rule "commute_and" (formula "26") (term "0,0,1,0"))
                  (rule "commute_and" (formula "27") (term "0,0,1,0"))
                  (rule "commute_or" (formula "32") (term "0,0"))
                  (rule "commute_or_2" (formula "15") (term "0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "commute_or" (formula "17") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "commute_or_2" (formula "17") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "seqGetAlphaCast" (formula "20") (term "0"))
                  (rule "castedGetAny" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "seqGetAlphaCast" (formula "25") (term "0"))
                  (rule "castedGetAny" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "commute_or_2" (formula "15") (term "0,0"))
                  (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "14") (term "0,0"))
                  (rule "commute_or" (formula "15") (term "0,0,0"))
                  (rule "commute_or_2" (formula "15") (term "0,0"))
                  (rule "commute_or_2" (formula "15") (term "0"))
                  (rule "commute_or" (formula "14") (term "0,0,0"))
                  (rule "commute_or_2" (formula "14") (term "0,0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "lenNonNegative" (formula "19") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "19"))
                  (rule "commute_and_2" (formula "27") (term "0,1,0"))
                  (rule "commute_and_2" (formula "28") (term "0,1,0"))
                  (rule "lenNonNegative" (formula "25") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "commute_and" (formula "34") (term "0,0,1,1,0"))
                  (rule "commute_and_2" (formula "34") (term "0,1,1,0"))
                  (rule "seqGetAlphaCast" (formula "1") (term "0"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ex_pull_out3" (formula "28") (term "0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                  (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                  (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "29") (term "0"))
                  (rule "cnf_rightDist" (formula "29") (term "0,0"))
                  (rule "shift_paren_or" (formula "29") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                  (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "29") (term "1,0,0,0"))
                  (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "34") (term "1,0"))
                  (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                  (rule "commute_or" (formula "34") (term "1,0,1,0"))
                  (rule "cnf_rightDist" (formula "34") (term "0,0,1,0"))
                  (rule "commute_or" (formula "34") (term "1,0,0,1,0"))
                  (rule "ex_pull_out3" (formula "34") (term "0"))
                  (rule "cnf_rightDist" (formula "34") (term "0,0"))
                  (rule "commute_or_2" (formula "34") (term "1,0,0"))
                  (rule "shift_paren_or" (formula "34") (term "0,1,0,0"))
                  (rule "cnf_rightDist" (formula "34") (term "0,0,0"))
                  (rule "commute_or_2" (formula "34") (term "1,0,0,0"))
                  (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "34") (term "0,1,0,0,0"))
                  (rule "commute_or" (formula "34") (term "0,0,0,0,0,0"))
                  (rule "allLeft" (formula "15") (inst "t=i_2"))
                  (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "15") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1"))
                  (rule "leq_literals" (formula "15") (term "0,1"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "15"))
                  (rule "leq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "14"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "result_101.<created> = TRUE FALSE"
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "commute_or" (formula "26") (term "0,0"))
                  (rule "commute_and" (formula "25") (term "0,0,1,0"))
                  (rule "commute_and" (formula "26") (term "0,0,1,0"))
                  (rule "commute_or" (formula "31") (term "0,0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "commute_or" (formula "16") (term "0,0"))
                  (rule "commute_or" (formula "20") (term "0,0"))
                  (rule "commute_or_2" (formula "16") (term "0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "seqGetAlphaCast" (formula "24") (term "0"))
                  (rule "castedGetAny" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "seqGetAlphaCast" (formula "19") (term "0"))
                  (rule "castedGetAny" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "commute_or_2" (formula "14") (term "0,0"))
                  (rule "commute_or_2" (formula "13") (term "0,0"))
                  (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                  (rule "commute_or" (formula "14") (term "0,0,0"))
                  (rule "commute_or_2" (formula "14") (term "0,0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "commute_or" (formula "13") (term "0,0,0"))
                  (rule "commute_or_2" (formula "13") (term "0,0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "lenNonNegative" (formula "18") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "18"))
                  (rule "commute_and_2" (formula "26") (term "0,1,0"))
                  (rule "commute_and_2" (formula "27") (term "0,1,0"))
                  (rule "lenNonNegative" (formula "24") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                  (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                  (rule "seqGetAlphaCast" (formula "1") (term "0"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ex_pull_out3" (formula "27") (term "0"))
                  (rule "cnf_rightDist" (formula "27") (term "0,0"))
                  (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                  (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "28") (term "0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                  (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                  (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "33") (term "1,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                  (rule "commute_or" (formula "33") (term "1,0,1,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                  (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                  (rule "ex_pull_out3" (formula "33") (term "0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0"))
                  (rule "commute_or_2" (formula "33") (term "1,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,1,0,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0,0"))
                  (rule "commute_or_2" (formula "33") (term "1,0,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,1,0,0,0"))
                  (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                  (rule "allLeft" (formula "14") (inst "t=i_2"))
                  (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "14") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "14"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
         (branch "Case 2"
            (rule "andRight" (formula "73"))
            (branch
               (rule "andRight" (formula "73"))
               (branch
                  (rule "andRight" (formula "73"))
                  (branch
                     (rule "replaceKnownSelect_taclet0_3" (formula "73") (term "0,0"))
                     (rule "notRight" (formula "73"))
                     (rule "close" (formula "37") (ifseqformula "1"))
                  )
                  (branch
                     (rule "replaceKnownSelect_taclet0_4" (formula "73") (term "0,0"))
                     (rule "notRight" (formula "73"))
                     (rule "close" (formula "36") (ifseqformula "1"))
                  )
               )
               (branch
                  (rule "replaceKnownSelect_taclet0_2" (formula "73") (term "0,0"))
                  (rule "notRight" (formula "73"))
                  (rule "close" (formula "38") (ifseqformula "1"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "73"))
               (branch
                  (rule "andRight" (formula "73"))
                  (branch
                     (rule "andRight" (formula "73"))
                     (branch
                        (rule "andRight" (formula "73"))
                        (branch
                           (rule "andRight" (formula "73"))
                           (branch
                              (rule "andRight" (formula "73"))
                              (branch
                                 (rule "andRight" (formula "73"))
                                 (branch
                                    (rule "andRight" (formula "73"))
                                    (branch
                                       (rule "andRight" (formula "73"))
                                       (branch
                                          (rule "andRight" (formula "73"))
                                          (branch
                                             (rule "andRight" (formula "73"))
                                             (branch
                                                (rule "andRight" (formula "73"))
                                                (branch
                                                   (rule "andRight" (formula "73"))
                                                   (branch
                                                      (rule "andRight" (formula "73"))
                                                      (branch
                                                         (rule "andRight" (formula "73"))
                                                         (branch
                                                            (rule "andRight" (formula "73"))
                                                            (branch
                                                               (rule "andRight" (formula "73"))
                                                               (branch
                                                                  (rule "andRight" (formula "73"))
                                                                  (branch
                                                                     (rule "andRight" (formula "73"))
                                                                     (branch
                                                                        (rule "andRight" (formula "73"))
                                                                        (branch
                                                                           (rule "andRight" (formula "73"))
                                                                           (branch
                                                                              (rule "andRight" (formula "73"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "73"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "73"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "73"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "73"))
                                                                                          (branch
                                                                                             (rule "andRight" (formula "73"))
                                                                                             (branch
                                                                                                (rule "notRight" (formula "73"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                                (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
                                                                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                (rule "close" (formula "46") (ifseqformula "2"))
                                                                                             )
                                                                                             (branch
                                                                                                (rule "notRight" (formula "73"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                                (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                                                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                (rule "close" (formula "45") (ifseqformula "2"))
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (rule "replaceKnownSelect_taclet0_0" (formula "73") (term "0,0"))
                                                                                             (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "73") (term "0,0"))
                                                                                             (rule "notRight" (formula "73"))
                                                                                             (rule "close" (formula "39") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "insert_constant_string_value" (formula "73") (term "0,0") (ifseqformula "4"))
                                                                                           (builtin "One Step Simplification" (formula "73"))
                                                                                          (rule "castDel" (formula "73") (term "0,0,0"))
                                                                                          (rule "notRight" (formula "73"))
                                                                                          (rule "close" (formula "47") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "insert_constant_string_value" (formula "73") (term "0,0") (ifseqformula "4"))
                                                                                        (builtin "One Step Simplification" (formula "73"))
                                                                                       (rule "castDel" (formula "73") (term "0,0,0"))
                                                                                       (rule "notRight" (formula "73"))
                                                                                       (rule "close" (formula "48") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "insert_constant_string_value" (formula "73") (term "0,0") (ifseqformula "4"))
                                                                                     (builtin "One Step Simplification" (formula "73"))
                                                                                    (rule "castDel" (formula "73") (term "0,0,0"))
                                                                                    (rule "notRight" (formula "73"))
                                                                                    (rule "close" (formula "49") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "notRight" (formula "73"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                 (rule "hideAuxiliaryEq" (formula "1"))
                                                                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                                                                                 (rule "eqSymm" (formula "15"))
                                                                                 (rule "close" (formula "50") (ifseqformula "15"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "notRight" (formula "73"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                              (rule "close" (formula "52") (ifseqformula "2"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "notRight" (formula "73"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                           (rule "close" (formula "53") (ifseqformula "2"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "notRight" (formula "73"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                        (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "close" (formula "54") (ifseqformula "2"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "notRight" (formula "73"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "close" (formula "55") (ifseqformula "2"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "73"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                  (rule "close" (formula "56") (ifseqformula "2"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "notRight" (formula "73"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "close" (formula "57") (ifseqformula "2"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "notRight" (formula "73"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "2"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "73"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "59") (ifseqformula "2"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "73"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "60") (ifseqformula "2"))
                                                   )
                                                )
                                                (branch
                                                   (rule "notRight" (formula "73"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "61") (ifseqformula "2"))
                                                )
                                             )
                                             (branch
                                                (rule "notRight" (formula "73"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "62") (ifseqformula "2"))
                                             )
                                          )
                                          (branch
                                             (rule "notRight" (formula "73"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_vals_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "close" (formula "63") (ifseqformula "2"))
                                          )
                                       )
                                       (branch
                                          (rule "notRight" (formula "73"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_cols_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "close" (formula "64") (ifseqformula "2"))
                                       )
                                    )
                                    (branch
                                       (rule "notRight" (formula "73"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_record_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "close" (formula "65") (ifseqformula "2"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "73"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                                    (rule "pullOutSelect" (formula "73") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "close" (formula "73") (ifseqformula "14"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "73") (inst "sk=i_3_0"))
                                 (rule "impRight" (formula "73"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "75"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "33") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "10")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                                 (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "nnf_imp2or" (formula "23") (term "0"))
                                 (rule "nnf_imp2or" (formula "29") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "34") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "34") (term "0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or" (formula "29") (term "0,0"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "result_101.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "commute_and" (formula "27") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "26") (term "0,0"))
                                    (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "32") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "21") (term "0,0"))
                                    (rule "commute_or" (formula "17") (term "0,0"))
                                    (rule "commute_or" (formula "22") (term "0,0"))
                                    (rule "commute_or_2" (formula "21") (term "0"))
                                    (rule "commute_or_2" (formula "17") (term "0"))
                                    (rule "commute_or_2" (formula "22") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                    (rule "castedGetAny" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                    (rule "castedGetAny" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "commute_or_2" (formula "14") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0,0"))
                                    (rule "commute_or" (formula "14") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "14") (term "0,0"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "lenNonNegative" (formula "19") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19"))
                                    (rule "commute_and_2" (formula "28") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "25") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "self_103.inputCols.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "34") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "34") (term "0,1,1,0"))
                                       (rule "ex_pull_out3" (formula "29") (term "0"))
                                       (rule "cnf_rightDist" (formula "29") (term "0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "28") (term "0"))
                                       (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "34") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                                       (rule "commute_or" (formula "34") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "34") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "17") (inst "t=i_3_0"))
                                       (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "self_103.inputCols.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "59"))
                                       (rule "close" (formula "38") (ifseqformula "6"))
                                    )
                                 )
                                 (branch "result_101.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "commute_and" (formula "26") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "25") (term "0,0"))
                                    (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "13") (term "0"))
                                    (rule "commute_or" (formula "31") (term "0,0"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or" (formula "16") (term "0,0"))
                                    (rule "commute_or" (formula "21") (term "0,0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "commute_or_2" (formula "16") (term "0"))
                                    (rule "commute_or_2" (formula "21") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                    (rule "castedGetAny" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "commute_or_2" (formula "13") (term "0,0"))
                                    (rule "commute_or_2" (formula "14") (term "0,0"))
                                    (rule "commute_or" (formula "13") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0"))
                                    (rule "commute_or" (formula "14") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "14") (term "0,0"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "lenNonNegative" (formula "18") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                    (rule "commute_and_2" (formula "27") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "24") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "self_103.inputCols.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                                       (rule "ex_pull_out3" (formula "28") (term "0"))
                                       (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "27") (term "0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "33") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                                       (rule "commute_or" (formula "33") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "16") (inst "t=i_3_0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                       (rule "leq_literals" (formula "16") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                    (branch "self_103.inputCols.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "60"))
                                       (rule "close" (formula "38") (ifseqformula "5"))
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "castedGetAny" (formula "73") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "73") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                              (rule "pullOutSelect" (formula "73") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "6")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                              (rule "applyEqReverse" (formula "74") (term "1,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "73") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                              (rule "applyEq" (formula "74") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "6")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                              (rule "applyEqReverse" (formula "74") (term "1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "74") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "73") (term "0,0,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "applyEq" (formula "74") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                              (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                              (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_ex2all" (formula "74"))
                              (rule "nnf_imp2or" (formula "32") (term "0"))
                              (rule "nnf_imp2or" (formula "21") (term "0"))
                              (rule "nnf_imp2or" (formula "27") (term "0"))
                              (rule "nnf_imp2or" (formula "22") (term "0"))
                              (rule "nnf_imp2or" (formula "26") (term "0"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "32") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                              (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                              (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                              (rule "nnf_imp2or" (formula "32") (term "1,0"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "27") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "26") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0"))
                              (rule "commute_or_2" (formula "21") (term "0"))
                              (rule "commute_or" (formula "32") (term "0,0"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch "result_101.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "commute_or_2" (formula "20") (term "0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "24") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                 (rule "castedGetAny" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castedGetAny" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "commute_or" (formula "19") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or_2" (formula "20") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0"))
                                 (rule "lenNonNegative" (formula "17") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17"))
                                 (rule "commute_or" (formula "12") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "commute_or" (formula "13") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "self_103.inputCols.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and_2" (formula "26") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "25") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "23") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23"))
                                    (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "27") (term "0"))
                                    (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                    (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "26") (term "0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "32") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                                    (rule "commute_or" (formula "32") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "32") (term "0"))
                                    (rule "cnf_rightDist" (formula "32") (term "0,0"))
                                    (rule "commute_or_2" (formula "32") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "32") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "32") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "32") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "32") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "32") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "32") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "self_103.inputCols.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "56"))
                                    (rule "close" (formula "35") (ifseqformula "4"))
                                 )
                              )
                              (branch "result_101.<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "commute_and" (formula "24") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "23") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "23") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_and_2" (formula "29") (term "0,1,1,0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "commute_or" (formula "14") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                 (rule "castedGetAny" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "commute_or" (formula "18") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castedGetAny" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "commute_or_2" (formula "14") (term "0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_or" (formula "19") (term "0,0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0"))
                                 (rule "lenNonNegative" (formula "16") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "commute_or" (formula "11") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "commute_or" (formula "12") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "self_103.inputCols.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and_2" (formula "25") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "24") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "22") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22"))
                                    (rule "commute_and" (formula "31") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "26") (term "0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "25") (term "0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "31") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "31") (term "0,1,0"))
                                    (rule "commute_or" (formula "31") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "31") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "31") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "31") (term "0"))
                                    (rule "cnf_rightDist" (formula "31") (term "0,0"))
                                    (rule "commute_or_2" (formula "31") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "31") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "31") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "31") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "31") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "31") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                                 (branch "self_103.inputCols.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "57"))
                                    (rule "close" (formula "35") (ifseqformula "3"))
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "allRight" (formula "73") (inst "sk=i_1_0"))
                           (rule "impRight" (formula "73"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "75"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "33") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "9")))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                           (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                           (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_imp2or" (formula "19") (term "0"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "nnf_imp2or" (formula "34") (term "1,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "nnf_imp2or" (formula "34") (term "0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "34") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                           (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "23") (term "0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "commute_or" (formula "29") (term "0,0"))
                           (rule "commute_or_2" (formula "24") (term "0"))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch "result_101.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "commute_and" (formula "27") (term "0,0,1,0"))
                              (rule "commute_or" (formula "26") (term "0,0"))
                              (rule "commute_and" (formula "26") (term "0,0,1,0"))
                              (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or" (formula "32") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or" (formula "21") (term "0,0"))
                              (rule "commute_or" (formula "17") (term "0,0"))
                              (rule "commute_or" (formula "22") (term "0,0"))
                              (rule "commute_or_2" (formula "21") (term "0"))
                              (rule "commute_or_2" (formula "17") (term "0"))
                              (rule "commute_or_2" (formula "22") (term "0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "20") (term "0"))
                              (rule "castedGetAny" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "seqGetAlphaCast" (formula "25") (term "0"))
                              (rule "castedGetAny" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or" (formula "14") (term "0,0,0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or" (formula "15") (term "0,0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_and_2" (formula "27") (term "0,1,0"))
                              (rule "lenNonNegative" (formula "19") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "19"))
                              (rule "commute_and_2" (formula "27") (term "0,1,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "lenNonNegative" (formula "25") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "commute_and" (formula "34") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "34") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "29") (term "0"))
                                 (rule "cnf_rightDist" (formula "29") (term "0,0"))
                                 (rule "shift_paren_or" (formula "29") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "29") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "28") (term "0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "34") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                                 (rule "commute_or" (formula "34") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "34") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "34") (term "1,0,0,1,0"))
                                 (rule "allLeft" (formula "22") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "4"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_literals" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                              (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "60"))
                                 (rule "close" (formula "37") (ifseqformula "6"))
                              )
                           )
                           (branch "result_101.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "36"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "commute_and" (formula "26") (term "0,0,1,0"))
                              (rule "commute_or" (formula "25") (term "0,0"))
                              (rule "commute_and" (formula "25") (term "0,0,1,0"))
                              (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                              (rule "commute_or_2" (formula "13") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or" (formula "20") (term "0,0"))
                              (rule "commute_or" (formula "16") (term "0,0"))
                              (rule "commute_or" (formula "21") (term "0,0"))
                              (rule "commute_or_2" (formula "20") (term "0"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "commute_or_2" (formula "21") (term "0"))
                              (rule "commute_or_2" (formula "13") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "24") (term "0"))
                              (rule "castedGetAny" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "seqGetAlphaCast" (formula "19") (term "0"))
                              (rule "castedGetAny" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "commute_or" (formula "13") (term "0,0,0"))
                              (rule "commute_or_2" (formula "13") (term "0,0"))
                              (rule "commute_or_2" (formula "13") (term "0"))
                              (rule "commute_or" (formula "14") (term "0,0,0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_and_2" (formula "26") (term "0,1,0"))
                              (rule "lenNonNegative" (formula "18") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "commute_and_2" (formula "26") (term "0,1,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "lenNonNegative" (formula "24") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "24"))
                                 (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "28") (term "0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "27") (term "0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "33") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                                 (rule "commute_or" (formula "33") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                                 (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "21"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "61"))
                                 (rule "close" (formula "37") (ifseqformula "5"))
                              )
                           )
                        )
                     )
                     (branch
                        (rule "allRight" (formula "73") (inst "sk=i_0_0"))
                        (rule "impRight" (formula "73"))
                        (rule "andLeft" (formula "1"))
                        (rule "notRight" (formula "75"))
                        (rule "castedGetAny" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "33") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "10")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                        (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                        (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_imp2or" (formula "19") (term "0"))
                        (rule "nnf_imp2or" (formula "34") (term "1,0"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "34") (term "0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "19") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "34") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                        (rule "commute_or_2" (formula "23") (term "0"))
                        (rule "commute_or_2" (formula "19") (term "0"))
                        (rule "commute_or" (formula "29") (term "0,0"))
                        (rule "commute_or_2" (formula "24") (term "0"))
                        (rule "ifthenelse_split" (formula "6") (term "0"))
                        (branch "result_101.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "commute_and" (formula "27") (term "0,0,1,0"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_and" (formula "26") (term "0,0,1,0"))
                           (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or" (formula "32") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or" (formula "21") (term "0,0"))
                           (rule "commute_or" (formula "17") (term "0,0"))
                           (rule "commute_or" (formula "22") (term "0,0"))
                           (rule "commute_or_2" (formula "21") (term "0"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "commute_or_2" (formula "22") (term "0"))
                           (rule "seqGetAlphaCast" (formula "25") (term "0"))
                           (rule "castedGetAny" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "seqGetAlphaCast" (formula "20") (term "0"))
                           (rule "castedGetAny" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0,0"))
                           (rule "commute_or" (formula "14") (term "0,0,0"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or" (formula "15") (term "0,0,0"))
                           (rule "commute_or_2" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "lenNonNegative" (formula "19") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "19"))
                           (rule "commute_and_2" (formula "28") (term "0,1,0"))
                           (rule "commute_and_2" (formula "27") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "25") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "25"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_and" (formula "34") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "34") (term "0,1,1,0"))
                              (rule "ex_pull_out3" (formula "29") (term "0"))
                              (rule "cnf_rightDist" (formula "29") (term "0,0"))
                              (rule "shift_paren_or" (formula "29") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "29") (term "1,0,0,0"))
                              (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "34") (term "1,0"))
                              (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                              (rule "commute_or" (formula "34") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "34") (term "0,0,1,0"))
                              (rule "commute_or" (formula "34") (term "1,0,0,1,0"))
                              (rule "allLeft" (formula "23") (inst "t=i_0_0"))
                              (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1"))
                              (rule "leq_literals" (formula "23") (term "0,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "60"))
                              (rule "close" (formula "38") (ifseqformula "6"))
                           )
                        )
                        (branch "result_101.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "37"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "commute_and" (formula "26") (term "0,0,1,0"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "commute_and" (formula "25") (term "0,0,1,0"))
                           (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or" (formula "31") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "commute_or" (formula "21") (term "0,0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "commute_or_2" (formula "21") (term "0"))
                           (rule "seqGetAlphaCast" (formula "19") (term "0"))
                           (rule "castedGetAny" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "seqGetAlphaCast" (formula "24") (term "0"))
                           (rule "castedGetAny" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "commute_or_2" (formula "13") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "commute_or" (formula "13") (term "0,0,0"))
                           (rule "commute_or_2" (formula "13") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or" (formula "14") (term "0,0,0"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "lenNonNegative" (formula "18") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "commute_and_2" (formula "27") (term "0,1,0"))
                           (rule "commute_and_2" (formula "26") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "24") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                              (rule "ex_pull_out3" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "27") (term "0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                              (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "33") (term "1,0"))
                              (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                              (rule "commute_or" (formula "33") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                              (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                              (rule "allLeft" (formula "22") (inst "t=i_0_0"))
                              (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1"))
                              (rule "leq_literals" (formula "22") (term "0,1"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                           (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "61"))
                              (rule "close" (formula "38") (ifseqformula "5"))
                           )
                        )
                     )
                  )
                  (branch
                     (rule "castedGetAny" (formula "73") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "73") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "73") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "6")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                     (rule "applyEqReverse" (formula "74") (term "1,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "73") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                     (rule "applyEq" (formula "74") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "6")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                     (rule "applyEqReverse" (formula "74") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "73") (term "0,0,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                     (rule "applyEq" (formula "74") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "nnf_imp2or" (formula "31") (term "0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_ex2all" (formula "74"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "27") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "32") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "32") (term "1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "27") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                     (rule "commute_or_2" (formula "17") (term "0"))
                     (rule "commute_or" (formula "32") (term "0,0"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "result_101.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "commute_and" (formula "25") (term "0,0,1,0"))
                        (rule "commute_or" (formula "25") (term "0,0"))
                        (rule "commute_and" (formula "24") (term "0,0,1,0"))
                        (rule "commute_or" (formula "24") (term "0,0"))
                        (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "23") (term "0"))
                        (rule "castedGetAny" (formula "23") (term "0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "seqGetAlphaCast" (formula "18") (term "0"))
                        (rule "castedGetAny" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "commute_or" (formula "20") (term "0,0"))
                        (rule "commute_or" (formula "19") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "20") (term "0"))
                        (rule "commute_or_2" (formula "19") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "12") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "lenNonNegative" (formula "17") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "17"))
                        (rule "commute_or" (formula "12") (term "0,0,0"))
                        (rule "commute_or_2" (formula "12") (term "0,0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or" (formula "13") (term "0,0,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "commute_and_2" (formula "26") (term "0,1,0"))
                           (rule "commute_and_2" (formula "25") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "23") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "23"))
                           (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                           (rule "ex_pull_out3" (formula "27") (term "0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "26") (term "0"))
                           (rule "cnf_rightDist" (formula "26") (term "0,0"))
                           (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                           (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                           (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "32") (term "1,0"))
                           (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                           (rule "commute_or" (formula "32") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                           (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "32") (term "0"))
                           (rule "cnf_rightDist" (formula "32") (term "0,0"))
                           (rule "commute_or_2" (formula "32") (term "1,0,0"))
                           (rule "shift_paren_or" (formula "32") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
                           (rule "commute_or_2" (formula "32") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "32") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "32") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "32") (term "0,1,0,0,0"))
                           (rule "commute_or" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "1"))
                           (rule "andLeft" (formula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "25"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "1,1,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0"))
                           (rule "add_zero_right" (formula "25") (term "0"))
                           (rule "leq_literals" (formula "25"))
                           (rule "closeFalse" (formula "25"))
                        )
                        (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "58"))
                           (rule "close" (formula "35") (ifseqformula "4"))
                        )
                     )
                     (branch "result_101.<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "commute_and" (formula "24") (term "0,0,1,0"))
                        (rule "commute_or" (formula "24") (term "0,0"))
                        (rule "commute_and" (formula "23") (term "0,0,1,0"))
                        (rule "commute_or" (formula "23") (term "0,0"))
                        (rule "commute_and_2" (formula "29") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or" (formula "14") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "17") (term "0"))
                        (rule "castedGetAny" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "seqGetAlphaCast" (formula "22") (term "0"))
                        (rule "castedGetAny" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "commute_or" (formula "19") (term "0,0"))
                        (rule "commute_or" (formula "18") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "19") (term "0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "11") (term "0,0"))
                        (rule "commute_or_2" (formula "12") (term "0,0"))
                        (rule "lenNonNegative" (formula "16") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "commute_or" (formula "11") (term "0,0,0"))
                        (rule "commute_or_2" (formula "11") (term "0,0"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "commute_or" (formula "12") (term "0,0,0"))
                        (rule "commute_or_2" (formula "12") (term "0,0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "self_103.inputColsForPolyas.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "commute_and_2" (formula "25") (term "0,1,0"))
                           (rule "commute_and_2" (formula "24") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "22") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "commute_and" (formula "31") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                           (rule "ex_pull_out3" (formula "26") (term "0"))
                           (rule "cnf_rightDist" (formula "26") (term "0,0"))
                           (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                           (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                           (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "25") (term "0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                           (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                           (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "31") (term "1,0"))
                           (rule "cnf_rightDist" (formula "31") (term "0,1,0"))
                           (rule "commute_or" (formula "31") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "31") (term "0,0,1,0"))
                           (rule "commute_or" (formula "31") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "31") (term "0"))
                           (rule "cnf_rightDist" (formula "31") (term "0,0"))
                           (rule "commute_or_2" (formula "31") (term "1,0,0"))
                           (rule "shift_paren_or" (formula "31") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "31") (term "0,0,0"))
                           (rule "commute_or_2" (formula "31") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "31") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "31") (term "0,1,0,0,0"))
                           (rule "commute_or" (formula "31") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "self_103.inputColsForPolyas.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "59"))
                           (rule "close" (formula "35") (ifseqformula "3"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "73") (inst "sk=j_0") (userinteraction))
                  (rule "instAll" (formula "73") (term "1,0,0") (ifseqformula "24") (userinteraction))
                  (rule "impRight" (formula "74") (userinteraction))
                  (rule "impLeft" (formula "2") (userinteraction))
                  (branch "Case 1"
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "76") (term "1,1,0"))
                     (rule "castedGetAny" (formula "76") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "32") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_leqRight" (formula "37"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "76") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "76") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                     (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "77") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
                     (rule "applyEq" (formula "78") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "12")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                     (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "78") (term "0,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "10")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                     (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
                     (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                     (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "nnf_ex2all" (formula "77"))
                     (rule "nnf_imp2or" (formula "29") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "35") (term "0"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "35") (term "1,0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                     (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "25") (term "0"))
                     (rule "ifthenelse_split" (formula "6") (term "0"))
                     (branch "result_101.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "commute_or" (formula "27") (term "0,0"))
                        (rule "commute_or" (formula "33") (term "0,0"))
                        (rule "commute_or_2" (formula "22") (term "0"))
                        (rule "commute_or" (formula "28") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_and" (formula "27") (term "0,0,1,0"))
                        (rule "commute_and" (formula "28") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "seqGetAlphaCast" (formula "26") (term "0"))
                        (rule "castedGetAny" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "seqGetAlphaCast" (formula "21") (term "0"))
                        (rule "castedGetAny" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or" (formula "23") (term "0,0"))
                        (rule "commute_or_2" (formula "23") (term "0"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "commute_or_2" (formula "22") (term "0"))
                        (rule "commute_or" (formula "18") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0,0"))
                        (rule "lenNonNegative" (formula "20") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "20"))
                        (rule "commute_or" (formula "16") (term "0,0,0"))
                        (rule "commute_or_2" (formula "16") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0,0"))
                        (rule "commute_or_2" (formula "15") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_literals" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "60"))
                           (rule "close" (formula "38") (ifseqformula "7"))
                        )
                     )
                     (branch "result_101.<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "commute_or" (formula "26") (term "0,0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "commute_or" (formula "27") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_and" (formula "26") (term "0,0,1,0"))
                        (rule "commute_and" (formula "27") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "seqGetAlphaCast" (formula "20") (term "0"))
                        (rule "castedGetAny" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "seqGetAlphaCast" (formula "25") (term "0"))
                        (rule "castedGetAny" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "commute_or_2" (formula "22") (term "0"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "lenNonNegative" (formula "19") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "19"))
                        (rule "commute_or" (formula "15") (term "0,0,0"))
                        (rule "commute_or_2" (formula "15") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or" (formula "14") (term "0,0,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "61"))
                           (rule "close" (formula "38") (ifseqformula "6"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "exLeft" (formula "2") (inst "sk=i_2") (userinteraction))
                     (rule "instEx" (formula "2") (term "0,0,0") (ifseqformula "75") (userinteraction))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "3"))
                     (rule "eqSymm" (formula "40") (term "1"))
                     (rule "castedGetAny" (formula "79") (term "0,1,0"))
                     (rule "castedGetAny" (formula "79") (term "1,1,0"))
                     (rule "castedGetAny" (formula "40") (term "0,1"))
                     (rule "eqSymm" (formula "40") (term "1"))
                     (rule "castedGetAny" (formula "40") (term "0,1"))
                     (rule "eqSymm" (formula "40") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "35") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0"))
                     (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0,0"))
                     (rule "pullOutSelect" (formula "79") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
                     (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "80") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "41") (term "0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "13")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                     (rule "applyEqReverse" (formula "41") (term "0,1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "80") (term "0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "80") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "pullOutSelect" (formula "79") (term "1,0,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                     (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "41") (term "1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "11")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                     (rule "applyEqReverse" (formula "41") (term "1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "80") (term "1,0,1,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "40") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                     (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "80") (term "0,1,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                     (rule "eqSymm" (formula "41"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
                     (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_and_subsumption3" (formula "19") (term "0,0,0"))
                     (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "31") (term "0"))
                     (rule "nnf_ex2all" (formula "80"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "31") (term "0"))
                     (rule "nnf_imp2or" (formula "37") (term "0"))
                     (rule "nnf_imp2or" (formula "19") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "27") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "32") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "37") (term "1,0"))
                     (rule "nnf_notAnd" (formula "37") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0"))
                     (rule "ifthenelse_split" (formula "9") (term "0"))
                     (branch "result_101.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "10"))
                        (rule "hideAuxiliaryEq" (formula "10"))
                        (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "10"))
                        (rule "hideAuxiliaryEq" (formula "10"))
                        (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "commute_or_2" (formula "20") (term "0"))
                        (rule "commute_or_2" (formula "24") (term "0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_and" (formula "30") (term "0,0,1,0"))
                        (rule "commute_or" (formula "29") (term "0,0"))
                        (rule "commute_and" (formula "29") (term "0,0,1,0"))
                        (rule "commute_or" (formula "35") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "seqGetAlphaCast" (formula "28") (term "0"))
                        (rule "castedGetAny" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "seqGetAlphaCast" (formula "23") (term "0"))
                        (rule "castedGetAny" (formula "23") (term "0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "seqGetAlphaCast" (formula "6") (term "0"))
                        (rule "castedGetAny" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "seqGetAlphaCast" (formula "6") (term "1"))
                        (rule "castedGetAny" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_or" (formula "25") (term "0,0"))
                        (rule "commute_and_2" (formula "35") (term "0,1,1,0"))
                        (rule "commute_or" (formula "20") (term "0,0"))
                        (rule "commute_or" (formula "24") (term "0,0"))
                        (rule "commute_or_2" (formula "25") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "20") (term "0"))
                        (rule "commute_or_2" (formula "24") (term "0"))
                        (rule "lenNonNegative" (formula "22") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "commute_or_2" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0,0"))
                        (rule "lenNonNegative" (formula "28") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "28"))
                        (rule "commute_or" (formula "17") (term "0,0,0"))
                        (rule "commute_or_2" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "41"))
                           (rule "close" (formula "41") (ifseqformula "6"))
                        )
                        (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "64"))
                           (rule "close" (formula "41") (ifseqformula "9"))
                        )
                     )
                     (branch "result_101.<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "40"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "commute_or_2" (formula "19") (term "0"))
                        (rule "commute_or_2" (formula "23") (term "0"))
                        (rule "commute_or" (formula "29") (term "0,0"))
                        (rule "commute_and" (formula "29") (term "0,0,1,0"))
                        (rule "commute_or" (formula "28") (term "0,0"))
                        (rule "commute_and" (formula "28") (term "0,0,1,0"))
                        (rule "commute_or" (formula "34") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "seqGetAlphaCast" (formula "27") (term "0"))
                        (rule "castedGetAny" (formula "27") (term "0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "seqGetAlphaCast" (formula "22") (term "0"))
                        (rule "castedGetAny" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "seqGetAlphaCast" (formula "6") (term "0"))
                        (rule "castedGetAny" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "seqGetAlphaCast" (formula "6") (term "1"))
                        (rule "castedGetAny" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "24") (term "0,0"))
                        (rule "commute_and_2" (formula "34") (term "0,1,1,0"))
                        (rule "commute_or" (formula "19") (term "0,0"))
                        (rule "commute_or" (formula "23") (term "0,0"))
                        (rule "commute_or_2" (formula "24") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "19") (term "0"))
                        (rule "commute_or_2" (formula "23") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0,0"))
                        (rule "lenNonNegative" (formula "21") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "21"))
                        (rule "commute_or_2" (formula "17") (term "0,0"))
                        (rule "lenNonNegative" (formula "27") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "27"))
                        (rule "commute_or" (formula "16") (term "0,0,0"))
                        (rule "commute_or_2" (formula "16") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0,0"))
                        (rule "commute_or_2" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "self_103.inputColsForDist.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "43") (term "0,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "42"))
                           (rule "close" (formula "42") (ifseqformula "6"))
                        )
                        (branch "self_103.inputColsForDist.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "65"))
                           (rule "close" (formula "41") (ifseqformula "8"))
                        )
                     )
                  )
               )
            )
         )
      )
      (branch
         (rule "andRight" (formula "73"))
         (branch
            (rule "andRight" (formula "73"))
            (branch
               (rule "wellFormedAnonEQ" (formula "73") (ifseqformula "32"))
               (rule "replace_known_left" (formula "73") (term "1") (ifseqformula "31"))
                (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "4")))
               (rule "closeTrue" (formula "73"))
            )
            (branch
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (ifseqformula "32"))
               (rule "orRight" (formula "73"))
               (rule "close" (formula "73") (ifseqformula "7"))
            )
         )
         (branch
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (ifseqformula "32"))
            (rule "close" (formula "73") (ifseqformula "34"))
         )
      )
   )
)
(branch "Exceptional Post (generateDataForVoter)"
    (builtin "One Step Simplification" (formula "63"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "andLeft" (formula "29"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,0") (ifseqformula "29"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "30"))
   (rule "close" (formula "33") (ifseqformula "32"))
)
(branch "Pre (generateDataForVoter)"
    (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")) (ifInst ""  (formula "1")) (ifInst ""  (formula "59")) (ifInst ""  (formula "4")) (ifInst ""  (formula "58")) (ifInst ""  (formula "5")))
   (rule "andRight" (formula "61"))
   (branch
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "14"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "25"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "25") (term "0"))
      (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "19"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "polySimp_elimOne" (formula "14") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
      (rule "polySimp_elimOne" (formula "25") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
      (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_imp2or" (formula "21") (term "0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "22") (term "0"))
      (rule "nnf_imp2or" (formula "27") (term "1,0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_imp2or" (formula "27") (term "0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "27") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
      (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
      (rule "mul_literals" (formula "27") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
      (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "61"))
      (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "7")))
      (rule "closeTrue" (formula "61"))
   )
   (branch
      (rule "andRight" (formula "61"))
      (branch
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
         (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
         (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "21") (term "0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "22") (term "0"))
         (rule "nnf_imp2or" (formula "27") (term "1,0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_imp2or" (formula "27") (term "0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "21") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "mul_literals" (formula "12") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
         (rule "mul_literals" (formula "22") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
         (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "61"))
         (rule "replace_known_right" (formula "61") (term "0,0,0,0") (ifseqformula "56"))
          (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "55")))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "commute_or" (formula "21") (term "0,0"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_and" (formula "21") (term "0,0,1,0"))
         (rule "commute_or" (formula "22") (term "0,0"))
         (rule "commute_and" (formula "22") (term "0,0,1,0"))
         (rule "commute_and_2" (formula "27") (term "0,1,1,0"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "61") (term "0"))
         (rule "replace_known_right" (formula "61") (term "0,1,0,0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "29")))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or" (formula "27") (term "0,0"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "61") (term "1,0"))
         (rule "replace_known_right" (formula "61") (term "0,0,1,0") (ifseqformula "28"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "61") (term "1,0"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "61") (term "1"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "61"))
         (rule "closeTrue" (formula "61"))
      )
      (branch
         (rule "andRight" (formula "61"))
         (branch
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "polySimp_elimOne" (formula "25") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "polySimp_elimOne" (formula "19") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
            (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
            (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "21") (term "0"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "1,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "mul_literals" (formula "27") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
            (rule "mul_literals" (formula "10") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "61"))
            (rule "insert_constant_string_value" (formula "61") (term "0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
            (rule "castDel" (formula "61") (term "0,0,0"))
            (rule "notRight" (formula "61"))
            (rule "close" (formula "53") (ifseqformula "1"))
         )
         (branch
            (rule "andRight" (formula "61"))
            (branch
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
               (rule "polySimp_elimOne" (formula "19") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polySimp_elimOne" (formula "14") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
               (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
               (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
               (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_imp2or" (formula "22") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_imp2or" (formula "21") (term "0"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "22") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "1,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
               (rule "mul_literals" (formula "21") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "61") (inst "i=i") (inst "i_0=i_0"))
               (rule "expand_inInt" (formula "61") (term "1,0,0,1,0"))
               (rule "expand_inInt" (formula "61") (term "1,0,0,1"))
               (rule "replace_int_MIN" (formula "61") (term "0,1,1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "61") (term "1,0,1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "61") (term "1,0,1,0,0,1"))
               (rule "replace_int_MIN" (formula "61") (term "0,1,1,0,0,1"))
               (rule "eqSymm" (formula "61") (term "0,0"))
               (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "61"))
               (rule "castedGetAny" (formula "61") (term "0,0,1,0,1"))
               (rule "castedGetAny" (formula "61") (term "0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "61") (term "1,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "61") (term "1,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1"))
               (rule "applyEq" (formula "61") (term "0,1,0,0,1,0,0,0,1") (ifseqformula "8"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1"))
               (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1"))
               (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
               (rule "nnf_imp2or" (formula "61") (term "0,0"))
               (rule "nnf_imp2or" (formula "61") (term "0,1"))
               (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "61") (term "0,0,1"))
               (rule "nnf_notAnd" (formula "61") (term "0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "61") (term "1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "61") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "61") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "61") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "61") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "61") (term "1,0,0,1,1,0,0,0"))
               (rule "add_literals" (formula "61") (term "0,0,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "61") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "61") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "61") (term "1,0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "61") (term "1,0,1,0,0,0"))
               (rule "nnf_notAnd" (formula "61") (term "0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,0,1"))
               (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,0,1"))
               (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0,1"))
               (rule "add_zero_left" (formula "61") (term "0,0,1,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0,0,1"))
               (rule "mul_literals" (formula "61") (term "1,0,0,0,0,0,0,1"))
               (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,1"))
               (rule "mul_literals" (formula "61") (term "1,0,0,0,0,1"))
               (rule "nnf_notAnd" (formula "61") (term "1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "61") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "61") (term "1,0,0,1,1,0,0,1"))
               (rule "add_literals" (formula "61") (term "0,0,1,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "61") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "61") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "61") (term "1,0,0,0,1,0,0,1"))
               (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "61") (term "1,0,1,0,0,1"))
               (rule "commute_or_2" (formula "16") (term "0"))
               (rule "commute_or" (formula "22") (term "0,0"))
               (rule "commute_or_2" (formula "12") (term "0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_and" (formula "22") (term "0,0,1,0"))
               (rule "commute_or" (formula "21") (term "0,0"))
               (rule "commute_and" (formula "21") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_and_2" (formula "27") (term "0,1,1,0"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castedGetAny" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "seqGetAlphaCast" (formula "15") (term "0"))
               (rule "castedGetAny" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "lenNonNegative" (formula "8") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "8"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
               (rule "commute_or" (formula "16") (term "0,0"))
               (rule "commute_or_2" (formula "16") (term "0"))
               (rule "commute_or" (formula "12") (term "0,0"))
               (rule "commute_or" (formula "17") (term "0,0"))
               (rule "commute_or_2" (formula "12") (term "0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or_2" (formula "9") (term "0,0"))
               (rule "commute_or_2" (formula "10") (term "0,0"))
               (rule "andRight" (formula "61"))
               (branch
                  (rule "allRight" (formula "61") (inst "sk=i_0_0"))
                  (rule "orRight" (formula "61"))
                  (rule "orRight" (formula "61"))
                  (rule "notRight" (formula "63"))
                  (rule "orRight" (formula "62"))
                  (rule "orRight" (formula "64"))
                  (rule "inEqSimp_leqRight" (formula "62"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "63"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "65"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "65"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "lenNonNegative" (formula "23") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "23"))
                  (rule "commute_or" (formula "13") (term "0,0,0"))
                  (rule "commute_or" (formula "14") (term "0,0,0"))
                  (rule "lenNonNegative" (formula "18") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "18"))
                  (rule "commute_or_2" (formula "13") (term "0,0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "commute_or_2" (formula "14") (term "0,0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "commute_and_2" (formula "28") (term "0,1,0"))
                  (rule "commute_and_2" (formula "27") (term "0,1,0"))
                  (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                  (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                  (rule "ex_pull_out3" (formula "28") (term "0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                  (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                  (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "27") (term "0"))
                  (rule "cnf_rightDist" (formula "27") (term "0,0"))
                  (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                  (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "33") (term "1,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                  (rule "commute_or" (formula "33") (term "1,0,1,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                  (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                  (rule "ex_pull_out3" (formula "33") (term "0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0"))
                  (rule "commute_or_2" (formula "33") (term "1,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,1,0,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0,0"))
                  (rule "commute_or_2" (formula "33") (term "1,0,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,1,0,0,0"))
                  (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                  (rule "allLeft" (formula "13") (inst "t=i_0_0"))
                  (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1"))
                  (rule "leq_literals" (formula "13") (term "0,1"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "closeFalse" (formula "13"))
               )
               (branch
                  (rule "allRight" (formula "61") (inst "sk=i_2"))
                  (rule "orRight" (formula "61"))
                  (rule "orRight" (formula "61"))
                  (rule "notRight" (formula "63"))
                  (rule "orRight" (formula "62"))
                  (rule "orRight" (formula "64"))
                  (rule "inEqSimp_leqRight" (formula "62"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "63"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "65"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "65"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "lenNonNegative" (formula "23") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "23"))
                  (rule "commute_or" (formula "13") (term "0,0,0"))
                  (rule "commute_or" (formula "14") (term "0,0,0"))
                  (rule "lenNonNegative" (formula "18") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "18"))
                  (rule "commute_or_2" (formula "13") (term "0,0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "commute_or_2" (formula "14") (term "0,0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "commute_and_2" (formula "28") (term "0,1,0"))
                  (rule "commute_and_2" (formula "27") (term "0,1,0"))
                  (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                  (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                  (rule "ex_pull_out3" (formula "28") (term "0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                  (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                  (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "27") (term "0"))
                  (rule "cnf_rightDist" (formula "27") (term "0,0"))
                  (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                  (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                  (rule "ex_pull_out3" (formula "33") (term "1,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                  (rule "commute_or" (formula "33") (term "1,0,1,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                  (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                  (rule "ex_pull_out3" (formula "33") (term "0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0"))
                  (rule "commute_or_2" (formula "33") (term "1,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,1,0,0"))
                  (rule "cnf_rightDist" (formula "33") (term "0,0,0"))
                  (rule "commute_or_2" (formula "33") (term "1,0,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,1,0,0,0"))
                  (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                  (rule "allLeft" (formula "14") (inst "t=i_2"))
                  (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "leq_literals" (formula "14") (term "0,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "closeFalse" (formula "14"))
               )
            )
            (branch
               (rule "andRight" (formula "61"))
               (branch
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                  (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_imp2or" (formula "22") (term "0"))
                  (rule "nnf_imp2or" (formula "27") (term "0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                  (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                  (rule "nnf_imp2or" (formula "27") (term "1,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "61") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")) (ifInst ""  (formula "33")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                  (rule "insert_constant_string_value" (formula "61") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "insert_constant_string_value" (formula "61") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "insert_constant_string_value" (formula "61") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "castDel" (formula "61") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "castDel" (formula "61") (term "0,0,0,1,0,0,0,0,0,0,0"))
                  (rule "castDel" (formula "61") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "61") (term "0,1,0,0,0,0,0,0") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                  (rule "castedGetAny" (formula "61") (term "0,0,1,0,1,0,0,0,0"))
                  (rule "castedGetAny" (formula "61") (term "0,0,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "61") (term "0,1,0,1"))
                  (rule "castedGetAny" (formula "61") (term "0,0,1,0,1,0"))
                  (rule "castedGetAny" (formula "61") (term "0,1,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,1,0,0"))
                  (rule "applyEq" (formula "61") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "replace_known_right" (formula "61") (term "0,0,0,0,0,0") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "61") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "61") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "61") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "61") (term "0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "61") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "61") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "61") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "61") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "61") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "61") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "61") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "61") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "61") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "61") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "61") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "61") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "16") (term "0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or" (formula "27") (term "0,0"))
                  (rule "commute_or_2" (formula "17") (term "0"))
                  (rule "commute_and" (formula "22") (term "0,0,1,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "commute_and" (formula "21") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "9") (term "0"))
                  (rule "commute_and_2" (formula "27") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "10") (term "0"))
                  (rule "seqGetAlphaCast" (formula "20") (term "0"))
                  (rule "castedGetAny" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "lenNonNegative" (formula "8") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "8"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                  (rule "seqGetAlphaCast" (formula "15") (term "0"))
                  (rule "castedGetAny" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "commute_or" (formula "16") (term "0,0"))
                  (rule "commute_or_2" (formula "16") (term "0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "commute_or" (formula "17") (term "0,0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or_2" (formula "17") (term "0"))
                  (rule "commute_or_2" (formula "9") (term "0,0"))
                  (rule "commute_or_2" (formula "10") (term "0,0"))
                  (rule "lenNonNegative" (formula "19") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "19"))
                  (rule "lenNonNegative" (formula "14") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "commute_or" (formula "9") (term "0,0,0"))
                  (rule "commute_or_2" (formula "9") (term "0,0"))
                  (rule "commute_or_2" (formula "9") (term "0"))
                  (rule "commute_or" (formula "10") (term "0,0,0"))
                  (rule "commute_or_2" (formula "10") (term "0,0"))
                  (rule "commute_or_2" (formula "10") (term "0"))
                  (rule "andRight" (formula "63"))
                  (branch
                     (rule "commute_and_2" (formula "24") (term "0,1,0"))
                     (rule "commute_and_2" (formula "23") (term "0,1,0"))
                     (rule "andRight" (formula "63"))
                     (branch
                        (rule "andRight" (formula "63"))
                        (branch
                           (rule "andRight" (formula "63"))
                           (branch
                              (rule "allRight" (formula "63") (inst "sk=i_3_0"))
                              (rule "orRight" (formula "63"))
                              (rule "notRight" (formula "64"))
                              (rule "orRight" (formula "64"))
                              (rule "inEqSimp_geqRight" (formula "65"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "65"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                              (rule "ex_pull_out3" (formula "27") (term "0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                              (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "26") (term "0"))
                              (rule "cnf_rightDist" (formula "26") (term "0,0"))
                              (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                              (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                              (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "32") (term "1,0"))
                              (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                              (rule "commute_or" (formula "32") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                              (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                              (rule "allLeft" (formula "15") (inst "t=i_3_0"))
                              (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "2"))
                              (rule "andLeft" (formula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0"))
                              (rule "add_zero_right" (formula "15") (term "0"))
                              (rule "leq_literals" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                           (branch
                              (rule "nnf_ex2all" (formula "63"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                              (rule "ex_pull_out3" (formula "25") (term "0"))
                              (rule "cnf_rightDist" (formula "25") (term "0,0"))
                              (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                              (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                              (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "24") (term "0"))
                              (rule "cnf_rightDist" (formula "24") (term "0,0"))
                              (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                              (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                              (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "30") (term "1,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                              (rule "commute_or" (formula "30") (term "1,0,1,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                              (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                              (rule "ex_pull_out3" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0,0"))
                              (rule "commute_or_2" (formula "30") (term "1,0,0"))
                              (rule "shift_paren_or" (formula "30") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0"))
                              (rule "commute_or" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "leq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "63") (inst "sk=i_1_0"))
                           (rule "orRight" (formula "63"))
                           (rule "notRight" (formula "64"))
                           (rule "orRight" (formula "64"))
                           (rule "inEqSimp_geqRight" (formula "65"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "65"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                           (rule "ex_pull_out3" (formula "27") (term "0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "26") (term "0"))
                           (rule "cnf_rightDist" (formula "26") (term "0,0"))
                           (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                           (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                           (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "32") (term "1,0"))
                           (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                           (rule "commute_or" (formula "32") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                           (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1"))
                           (rule "leq_literals" (formula "20") (term "0,1"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "20"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "63") (inst "sk=i_0_0"))
                        (rule "orRight" (formula "63"))
                        (rule "orRight" (formula "63"))
                        (rule "notRight" (formula "65"))
                        (rule "inEqSimp_geqRight" (formula "65"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "65"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                        (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                        (rule "ex_pull_out3" (formula "27") (term "0"))
                        (rule "cnf_rightDist" (formula "27") (term "0,0"))
                        (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                        (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                        (rule "ex_pull_out3" (formula "26") (term "0"))
                        (rule "cnf_rightDist" (formula "26") (term "0,0"))
                        (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                        (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                        (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                        (rule "ex_pull_out3" (formula "32") (term "1,0"))
                        (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                        (rule "commute_or" (formula "32") (term "1,0,1,0"))
                        (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                        (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                        (rule "allLeft" (formula "21") (inst "t=i_0_0"))
                        (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "21") (term "0,0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "2"))
                        (rule "andLeft" (formula "21"))
                        (rule "inEqSimp_homoInEq1" (formula "21"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "1,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0"))
                        (rule "add_zero_right" (formula "21") (term "0"))
                        (rule "leq_literals" (formula "21"))
                        (rule "closeFalse" (formula "21"))
                     )
                  )
                  (branch
                     (rule "nnf_ex2all" (formula "63"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "commute_and_2" (formula "25") (term "0,1,0"))
                     (rule "commute_and_2" (formula "24") (term "0,1,0"))
                     (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                     (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                     (rule "ex_pull_out3" (formula "25") (term "0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0"))
                     (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                     (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                     (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "24") (term "0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                     (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                     (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "30") (term "1,0"))
                     (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                     (rule "commute_or" (formula "30") (term "1,0,1,0"))
                     (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                     (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                     (rule "ex_pull_out3" (formula "30") (term "0"))
                     (rule "cnf_rightDist" (formula "30") (term "0,0"))
                     (rule "commute_or_2" (formula "30") (term "1,0,0"))
                     (rule "shift_paren_or" (formula "30") (term "0,1,0,0"))
                     (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
                     (rule "commute_or_2" (formula "30") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0"))
                     (rule "commute_or" (formula "30") (term "0,0,0,0,0,0"))
                     (rule "allLeft" (formula "1") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "leq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "closeFalse" (formula "21"))
                  )
               )
               (branch
                  (rule "andRight" (formula "61"))
                  (branch
                     (rule "castedGetAny" (formula "61") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "61") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                     (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                     (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "nnf_ex2all" (formula "61"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_imp2or" (formula "28") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "28") (term "1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                     (rule "commute_or_2" (formula "17") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "18") (term "0"))
                     (rule "commute_or" (formula "23") (term "0,0"))
                     (rule "commute_and" (formula "23") (term "0,0,1,0"))
                     (rule "commute_or" (formula "22") (term "0,0"))
                     (rule "commute_and" (formula "22") (term "0,0,1,0"))
                     (rule "commute_or" (formula "28") (term "0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or_2" (formula "10") (term "0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "commute_or" (formula "17") (term "0,0"))
                     (rule "commute_or_2" (formula "17") (term "0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or" (formula "18") (term "0,0"))
                     (rule "commute_or_2" (formula "18") (term "0"))
                     (rule "commute_and_2" (formula "28") (term "0,1,1,0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0"))
                     (rule "seqGetAlphaCast" (formula "16") (term "0"))
                     (rule "castedGetAny" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "lenNonNegative" (formula "9") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                     (rule "seqGetAlphaCast" (formula "21") (term "0"))
                     (rule "castedGetAny" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "commute_or" (formula "10") (term "0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,0"))
                     (rule "commute_or_2" (formula "10") (term "0"))
                     (rule "commute_or" (formula "11") (term "0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "commute_and_2" (formula "23") (term "0,1,0"))
                     (rule "commute_and_2" (formula "22") (term "0,1,0"))
                     (rule "lenNonNegative" (formula "15") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "commute_and" (formula "29") (term "0,0,1,1,0"))
                     (rule "commute_and_2" (formula "29") (term "0,1,1,0"))
                     (rule "lenNonNegative" (formula "21") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "21"))
                     (rule "ex_pull_out3" (formula "25") (term "0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0"))
                     (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                     (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                     (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "24") (term "0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                     (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                     (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "30") (term "1,0"))
                     (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                     (rule "commute_or" (formula "30") (term "1,0,1,0"))
                     (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                     (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                     (rule "allLeft" (formula "1") (inst "t=i_0"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "27"))
                     (rule "qeq_literals" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "1"))
                     (rule "andLeft" (formula "29"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                     (rule "add_literals" (formula "29") (term "1,1,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0"))
                     (rule "add_zero_right" (formula "29") (term "0"))
                     (rule "leq_literals" (formula "29"))
                     (rule "closeFalse" (formula "29"))
                  )
                  (branch
                     (rule "allRight" (formula "61") (inst "sk=i_2"))
                     (rule "impRight" (formula "61"))
                     (rule "impRight" (formula "62"))
                     (rule "andLeft" (formula "2"))
                     (rule "castedGetAny" (formula "64") (term "0,0,0,0,1,0"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                     (rule "castedGetAny" (formula "64") (term "0,0,1,1,0,0"))
                     (rule "castedGetAny" (formula "64") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "64") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "64") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "64") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "64") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0"))
                     (rule "mul_literals" (formula "64") (term "0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0"))
                     (rule "inEqSimp_and_subsumption3" (formula "12") (term "0,0,0"))
                     (rule "leq_literals" (formula "12") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_ex2all" (formula "64"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "31") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "31") (term "1,0"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "16") (term "0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or" (formula "31") (term "0,0"))
                     (rule "commute_and" (formula "25") (term "0,0,1,0"))
                     (rule "commute_and" (formula "26") (term "0,0,1,0"))
                     (rule "commute_or" (formula "26") (term "0,0"))
                     (rule "charLiteral_to_int" (formula "1") (term "1,1,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "seqGetAlphaCast" (formula "24") (term "0"))
                     (rule "castedGetAny" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "lenNonNegative" (formula "12") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "12"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                     (rule "seqGetAlphaCast" (formula "19") (term "0"))
                     (rule "castedGetAny" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "seqGetAlphaCast" (formula "2") (term "0"))
                     (rule "castedGetAny" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "commute_or" (formula "16") (term "0,0"))
                     (rule "commute_or" (formula "20") (term "0,0"))
                     (rule "commute_or" (formula "21") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or" (formula "13") (term "0,0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or" (formula "14") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_and_2" (formula "25") (term "0,1,0"))
                     (rule "commute_and_2" (formula "26") (term "0,1,0"))
                     (rule "lenNonNegative" (formula "18") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                     (rule "lenNonNegative" (formula "24") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "24"))
                     (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                     (rule "seqGetAlphaCast" (formula "1") (term "0,0,0,1,0"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ex_pull_out3" (formula "27") (term "0"))
                     (rule "cnf_rightDist" (formula "27") (term "0,0"))
                     (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                     (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "28") (term "0"))
                     (rule "cnf_rightDist" (formula "28") (term "0,0"))
                     (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                     (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                     (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                     (rule "ex_pull_out3" (formula "33") (term "1,0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                     (rule "commute_or" (formula "33") (term "1,0,1,0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                     (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                     (rule "ex_pull_out3" (formula "33") (term "0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,0"))
                     (rule "commute_or_2" (formula "33") (term "1,0,0"))
                     (rule "shift_paren_or" (formula "33") (term "0,1,0,0"))
                     (rule "cnf_rightDist" (formula "33") (term "0,0,0"))
                     (rule "commute_or_2" (formula "33") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "33") (term "0,1,0,0,0"))
                     (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                     (rule "commute_and" (formula "27") (term "0,0,0"))
                     (rule "lenNonNegative" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "commute_and_2" (formula "34") (term "0,0"))
                     (rule "commute_and_2" (formula "28") (term "0,0"))
                     (rule "commute_and" (formula "29") (term "0,0,0"))
                     (rule "commute_and_2" (formula "29") (term "0,0"))
                     (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                     (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "22"))
                     (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "49"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "allLeft" (formula "22") (inst "t=i_1"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                     (rule "applyEq" (formula "22") (term "0,0,0,0") (ifseqformula "28"))
                     (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "49"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "allLeft" (formula "29") (inst "t=i_1"))
                     (rule "exLeft" (formula "29") (inst "sk=i_3"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                     (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "27"))
                     (rule "eqSymm" (formula "31") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "24"))
                     (rule "qeq_literals" (formula "30") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "26"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                     (rule "add_literals" (formula "31") (term "0,0,1"))
                     (rule "leq_literals" (formula "31") (term "0,1"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "26"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_literals" (formula "29") (term "0,0,1"))
                     (rule "leq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "26"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "30") (term "0,0,1"))
                     (rule "leq_literals" (formula "30") (term "0,1"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "24"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "24"))
                     (rule "qeq_literals" (formula "31") (term "0,1"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "allLeft" (formula "37") (inst "t=i_0"))
                     (rule "exLeft" (formula "37") (inst "sk=j_0"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "37"))
                     (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                     (rule "mul_literals" (formula "39") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "33"))
                     (rule "qeq_literals" (formula "38") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "35"))
                     (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "37") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "35"))
                     (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "39") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "35"))
                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0"))
                     (rule "leq_literals" (formula "38") (term "0,0"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "33"))
                     (rule "qeq_literals" (formula "39") (term "0,0"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "33"))
                     (rule "qeq_literals" (formula "37") (term "0,0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "allLeft" (formula "40") (inst "t=i_2"))
                     (rule "exLeft" (formula "40") (inst "sk=j_1"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "40"))
                     (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "42") (term "1"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                     (rule "mul_literals" (formula "42") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "42") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "40") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                     (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "41") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                     (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0,0"))
                     (rule "leq_literals" (formula "42") (term "0,0"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                     (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,0,0"))
                     (rule "leq_literals" (formula "40") (term "0,0"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "41") (term "0,0"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "7"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "8"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1") (ifseqformula "9"))
                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "61"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "1,0") (ifseqformula "9"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "10"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "11"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "12"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "82"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "63"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "13"))
                     (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                     (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "26"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "14"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "15"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "1,0") (ifseqformula "16"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,0,0") (ifseqformula "17"))
                     (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "76"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "17"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "18"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "19"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "20"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "21"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "22"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "23"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "24"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "25"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "26"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "27"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "lenNonNegative" (formula "48") (term "1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "48"))
                     (rule "allLeft" (formula "24") (inst "t=j_1"))
                     (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "68"))
                     (rule "qeq_literals" (formula "24") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "70"))
                     (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0"))
                     (rule "leq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "69"))
                     (rule "qeq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "closeFalse" (formula "24"))
                  )
               )
            )
         )
      )
   )
)
)
}
