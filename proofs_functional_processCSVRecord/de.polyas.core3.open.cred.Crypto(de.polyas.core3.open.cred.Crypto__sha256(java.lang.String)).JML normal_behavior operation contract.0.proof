\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Nov 14 17:02:03 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Nov 14 17:02:03 CET 2019
contract=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:sha256(java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:sha256(java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "409")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "input_8,result_423,exc_511,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "4"))
(rule "insert_constant_string_value" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castDel" (formula "4") (term "0,0,0,0,0"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_sha256,savedHeapBefore_sha256"))
 (builtin "One Step Simplification" (formula "8"))
(rule "returnUnfold" (formula "8") (term "1") (inst "#v0=s"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "s"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "8") (term "1"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "var"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "8") (term "1") (inst "#v0=m"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "m"))
(rule "activeUseStaticFieldReadAccess" (formula "8") (term "1"))
(rule "assignment_read_static_attribute" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "8") (term "1"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "var_1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "var_2"))
 (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_getBytes,result_424,exc_512,heapAfter_getBytes,anon_heap_getBytes") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
(branch "Post (getBytes)"
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "8"))
   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "assignment" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "Class_invariant_axiom_for_java_lang_String" (formula "7"))
   (rule "true_left" (formula "7"))
    (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_digest,result_425,exc_513,heapAfter_digest,anon_heap_digest") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
   (branch "Post (digest)"
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0") (ifseqformula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,1,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "12"))
      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "blockEmpty" (formula "19") (term "1"))
      (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "commute_or_2" (formula "10"))
       (builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_asHexString,result_426,exc_514,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
      (branch "Post (asHexString)"
          (builtin "One Step Simplification" (formula "13"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "andLeft" (formula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,1,0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,1,1,0") (ifseqformula "5"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "assignment" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "blockEmpty" (formula "23") (term "1"))
         (rule "commute_or_2" (formula "15"))
         (rule "commute_or_2" (formula "15") (term "0"))
         (rule "commute_or_2" (formula "15"))
         (rule "methodCallReturn" (formula "23") (term "1"))
         (rule "assignment" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "methodCallEmpty" (formula "23") (term "1"))
         (rule "tryEmpty" (formula "23") (term "1"))
         (rule "emptyModality" (formula "23") (term "1"))
         (rule "andRight" (formula "23"))
         (branch
            (rule "andRight" (formula "23"))
            (branch
               (rule "andRight" (formula "23"))
               (branch
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "23"))
                  (rule "insert_constant_string_value" (formula "23") (term "0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                  (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "pullOutSelect" (formula "23") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "notRight" (formula "23"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "23") (ifseqformula "2"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "16")))
                  (rule "closeTrue" (formula "23"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "23"))
               (rule "closeTrue" (formula "23"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "23"))
            (rule "allRight" (formula "23") (inst "sk=f_0"))
            (rule "allRight" (formula "23") (inst "sk=o_0"))
            (rule "orRight" (formula "23"))
            (rule "eqSymm" (formula "24"))
            (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
            (rule "eqSymm" (formula "25"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "7"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
            (rule "ifthenelse_split" (formula "1") (term "0"))
            (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getBytes«anonHeapFunction» = TRUE) TRUE"
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "orRight" (formula "18"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
               (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
               (rule "closeTrue" (formula "27"))
            )
            (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getBytes«anonHeapFunction» = TRUE) FALSE"
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_digest«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_getBytes«anonHeapFunction» = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "29"))
                  (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "16")))
                  (rule "closeTrue" (formula "28"))
               )
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_digest«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_getBytes«anonHeapFunction» = TRUE) FALSE"
                  (rule "close" (formula "27") (ifseqformula "1"))
               )
            )
         )
      )
      (branch "Exceptional Post (asHexString)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,1,0") (ifseqformula "5"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "14"))
         (rule "close" (formula "17") (ifseqformula "16"))
      )
      (branch "Pre (asHexString)"
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
         (rule "wellFormedAnonEQ" (formula "18") (term "0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1") (ifseqformula "5"))
         (rule "wellFormedAnonEQ" (formula "18") (term "0,0") (ifseqformula "5"))
         (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
         (rule "orRight" (formula "18"))
         (rule "orRight" (formula "18"))
         (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "20")) (ifInst ""  (formula "19")))
         (rule "closeFalse" (formula "10"))
      )
   )
   (branch "Exceptional Post (digest)"
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "10"))
      (rule "close" (formula "13") (ifseqformula "12"))
   )
   (branch "Pre (digest)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1") (ifseqformula "5"))
      (rule "wellFormedAnonEQ" (formula "13") (term "0,1") (ifseqformula "5"))
      (rule "replace_known_left" (formula "13") (term "1,1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
      (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "13"))
      (rule "closeTrue" (formula "13"))
   )
   (branch "Null reference (var_1 = null)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
      (rule "closeTrue" (formula "13"))
   )
)
(branch "Exceptional Post (getBytes)"
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "10") (ifseqformula "9"))
)
(branch "Pre (getBytes)"
    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_java_lang_String" (formula "8"))
   (rule "closeTrue" (formula "8"))
)
(branch "Null reference (_input_8 = null)"
    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
   (rule "closeTrue" (formula "8"))
)
)
}
