\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Feb 09 15:04:49 CET 2020
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../../../home/flo/git/polyas-core3-open-cred/boot";

\javaSource "../../../../../../home/flo/git/polyas-core3-open-cred/src";

\proofObligation "#Proof Obligation Settings
#Sun Feb 09 15:04:49 CET 2020
contract=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:loginPasswordFromMasterPIN(de.polyas.core3.open.crypto.groups.ECGroup,java.lang.String,java.lang.String)].Non-interference contract.0
name=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:loginPasswordFromMasterPIN(de.polyas.core3.open.crypto.groups.ECGroup,java.lang.String,java.lang.String)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))

(autoModeTime "26525")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "23"))
(rule "notLeft" (formula "22"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "eqSymm" (formula "20") (term "1,0,0,1"))
(rule "eqSymm" (formula "20") (term "0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1"))
(rule "eqSymm" (formula "10") (term "0,0,0,1"))
(rule "replace_known_right" (formula "12") (term "0") (ifseqformula "26"))
 (builtin "One Step Simplification" (formula "12"))
(rule "replace_known_right" (formula "13") (term "0") (ifseqformula "23"))
 (builtin "One Step Simplification" (formula "13"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "21"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "25"))
 (builtin "One Step Simplification" (formula "2"))
(rule "replace_known_right" (formula "14") (term "0") (ifseqformula "24"))
 (builtin "One Step Simplification" (formula "14"))
(rule "inEqSimp_ltToLeq" (formula "19"))
(rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "19") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "9"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "9") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "18"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "inEqSimp_sepNegMonomial0" (formula "19"))
(rule "polySimp_mulLiterals" (formula "19") (term "0"))
(rule "polySimp_elimOne" (formula "19") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "9"))
(rule "polySimp_mulLiterals" (formula "9") (term "0"))
(rule "polySimp_elimOne" (formula "9") (term "0"))
(rule "definitionOfNewObjectsIsomorphic" (formula "27"))
(branch "New on Heap 1"
   (rule "boxToDiamond" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "boxToDiamond" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "15"))
   (rule "notLeft" (formula "15"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "18"))
   (rule "nonNull" (formula "18") (inst "i=i"))
   (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "greater_literals" (formula "18") (term "0,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "8"))
   (rule "nonNull" (formula "8") (inst "i=i"))
   (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "greater_literals" (formula "8") (term "0,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "17"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "commute_or_2" (formula "6") (term "0"))
   (rule "commute_or" (formula "14") (term "0,0"))
   (rule "commute_or" (formula "6") (term "0,0"))
   (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN,savedHeapBefore_loginPasswordFromMasterPIN"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "variableDeclarationFinalAssign" (formula "28") (term "1"))
   (rule "variableDeclarationFinal" (formula "28") (term "1") (newnames "skPrime"))
   (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN_0,savedHeapBefore_loginPasswordFromMasterPIN_0"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "variableDeclarationFinalAssign" (formula "27") (term "1"))
   (rule "variableDeclarationFinal" (formula "27") (term "1") (newnames "skPrime_1"))
   (rule "definitionOfNewOnHeap" (formula "35") (inst "i=i"))
    (builtin "One Step Simplification" (formula "35"))
   (rule "allRight" (formula "35") (inst "sk=i_0"))
   (rule "impRight" (formula "35"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,1,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,0,0,1,0"))
   (rule "castDel" (formula "37") (term "1,1,0,0,1,0"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0,0,1"))
   (rule "castDel" (formula "37") (term "2,0,0,0,1"))
   (rule "castDel" (formula "37") (term "1,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0,0,0"))
   (rule "castDel" (formula "37") (term "2,0,0,0,0"))
   (rule "castDel" (formula "37") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "38") (term "0,1,1,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "notRight" (formula "38"))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
   (rule "leq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "arrayLengthNotNegative" (formula "18") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
   (rule "expand_inInt" (formula "19"))
   (rule "replace_int_MAX" (formula "19") (term "1,0"))
   (rule "replace_int_MIN" (formula "19") (term "0,1"))
   (rule "andLeft" (formula "19"))
   (rule "inEqSimp_commuteLeq" (formula "20"))
   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
   (rule "leq_literals" (formula "20") (term "0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "true_left" (formula "20"))
   (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
   (rule "polySimp_rightDist" (formula "20") (term "0,0"))
   (rule "mul_literals" (formula "20") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "20") (term "0"))
   (rule "add_literals" (formula "20") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "20"))
   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
   (rule "polySimp_elimOne" (formula "20") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "10") (term "0"))
   (rule "expand_inInt" (formula "10"))
   (rule "replace_int_MAX" (formula "10") (term "1,0"))
   (rule "replace_int_MIN" (formula "10") (term "0,1"))
   (rule "andLeft" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
   (rule "polySimp_rightDist" (formula "12") (term "0,0"))
   (rule "mul_literals" (formula "12") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0"))
   (rule "add_literals" (formula "12") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
   (rule "polySimp_elimOne" (formula "12") (term "0"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
   (rule "leq_literals" (formula "11") (term "0"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "36") (term "1"))
   (rule "variableDeclarationAssign" (formula "36") (term "1"))
   (rule "variableDeclaration" (formula "36") (term "1") (newnames "var"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "35") (term "1"))
   (rule "variableDeclarationAssign" (formula "35") (term "1"))
   (rule "variableDeclaration" (formula "35") (term "1") (newnames "var_1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,0") (ifseqformula "14"))
   (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "3"))
   (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "3"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "36"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "16"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "17"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "18"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "6"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1,0") (ifseqformula "7"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "8"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "22"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "methodCallWithAssignment" (formula "46") (term "1") (inst "#v0=b"))
   (branch "Normal Execution (_group_35_B != null)"
       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
      (rule "false_right" (formula "46"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "b_19"))
      (rule "methodBodyExpand" (formula "46") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "returnUnfold" (formula "46") (term "1") (inst "#v0=b_20"))
      (rule "variableDeclarationAssign" (formula "46") (term "1"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "b_20"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "46") (term "1") (inst "#v0=s"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "s"))
      (rule "assignment_read_attribute_this" (formula "46") (term "1"))
       (builtin "One Step Simplification" (formula "46"))
       (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_getOrder,result_856,exc_1128,heapAfter_getOrder,anon_heap_getOrder") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
      (branch "Post (getOrder)"
          (builtin "One Step Simplification" (formula "36"))
          (builtin "One Step Simplification" (formula "37"))
          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "23")))
          (builtin "One Step Simplification" (formula "50"))
         (rule "andLeft" (formula "36"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1,0") (ifseqformula "36"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "39"))
         (rule "andLeft" (formula "40"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "42"))
         (rule "andLeft" (formula "39"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "39"))
         (rule "notLeft" (formula "39"))
         (rule "eqSymm" (formula "38"))
         (rule "replace_known_right" (formula "37") (term "0,1") (ifseqformula "45"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "46")))
         (rule "assignment" (formula "58") (term "1"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "applyEq" (formula "43") (term "4") (ifseqformula "42"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_0"))
         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "55")) (ifInst ""  (formula "5")))
         (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
         (rule "hideAuxiliaryEq" (formula "38"))
         (rule "eqSymm" (formula "38"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_math_BigInteger_value_0"))
         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "47")) (ifInst ""  (formula "46")))
         (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
         (rule "hideAuxiliaryEq" (formula "38"))
         (rule "eqSymm" (formula "38"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "44"))
         (rule "true_left" (formula "44"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "41"))
         (rule "true_left" (formula "41"))
         (rule "methodCallReturn" (formula "56") (term "1"))
         (rule "assignment" (formula "56") (term "1"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "methodCallEmpty" (formula "56") (term "1"))
         (rule "blockEmpty" (formula "56") (term "1"))
         (rule "assignment" (formula "56") (term "1"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "variableDeclarationAssign" (formula "56") (term "1"))
         (rule "variableDeclaration" (formula "56") (term "1") (newnames "var_2"))
         (rule "stringAssignment" (formula "56") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "58"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (ifseqformula "38"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "58") (term "1"))
         (rule "variableDeclaration" (formula "58") (term "1") (newnames "var_3"))
         (rule "assignment" (formula "58") (term "1"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "variableDeclarationAssign" (formula "58") (term "1"))
         (rule "variableDeclaration" (formula "58") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "58") (term "1"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "commute_or" (formula "1"))
          (builtin "Use Operation Contract" (formula "58") (newnames "heapBefore_uniformHash,result_857,exc_1129,heapAfter_uniformHash,anon_heap_uniformHash") (contract "de.polyas.core3.open.crypto.basic.Hashes[de.polyas.core3.open.crypto.basic.Hashes::uniformHash(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (uniformHash)"
             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "48")) (ifInst ""  (formula "66")) (ifInst ""  (formula "65")))
             (builtin "One Step Simplification" (formula "62"))
             (builtin "One Step Simplification" (formula "46"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0,0,1") (ifseqformula "37"))
            (rule "andLeft" (formula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,1,0") (ifseqformula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,1,0") (ifseqformula "37"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "49"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "56"))
            (rule "notLeft" (formula "49"))
            (rule "translateJavaAddInt" (formula "47") (term "1"))
            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "38")))
            (rule "true_left" (formula "56"))
            (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "inEqSimp_ltToLeq" (formula "53"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "53") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "52"))
            (rule "assignment" (formula "72") (term "1"))
             (builtin "One Step Simplification" (formula "72"))
            (rule "blockEmpty" (formula "72") (term "1"))
            (rule "variableDeclarationFinalAssign" (formula "72") (term "1"))
            (rule "variableDeclarationFinal" (formula "72") (term "1") (newnames "dk"))
            (rule "applyEq" (formula "50") (term "6") (ifseqformula "49"))
            (rule "inEqSimp_sepNegMonomial0" (formula "53"))
            (rule "polySimp_mulLiterals" (formula "53") (term "0"))
            (rule "polySimp_elimOne" (formula "53") (term "0"))
            (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "eqSymm" (formula "48"))
            (rule "elementOfSingleton" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "47"))
            (rule "hideAuxiliaryEq" (formula "47"))
            (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_1"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "52"))
            (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "52"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "52"))
            (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "52"))
            (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "pullOutSelect" (formula "52") (term "0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "expand_addJint" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
            (rule "expand_moduloInteger" (formula "47") (term "0"))
            (rule "replace_int_HALFRANGE" (formula "47") (term "0,0,1,0"))
            (rule "replace_int_MIN" (formula "47") (term "0,0"))
            (rule "replace_int_RANGE" (formula "47") (term "1,1,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
            (rule "mod_axiom" (formula "47") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
            (rule "mul_literals" (formula "47") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1"))
            (rule "polySimp_rightDist" (formula "47") (term "1"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
            (rule "polySimp_elimOne" (formula "47") (term "1,1"))
            (rule "polySimp_rightDist" (formula "47") (term "0,1"))
            (rule "mul_literals" (formula "47") (term "0,0,1"))
            (rule "polyDiv_pullOut" (formula "47") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
            (rule "equal_literals" (formula "47") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "0"))
            (rule "mul_literals" (formula "47") (term "0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "47"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "newSym_eq" (formula "47") (inst "l=l_0") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(int::select(anon_heap_uniformHash<<anonHeapFunction>>,
                        null,
                        de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
            Z(0(#)))),
    mul(int::select(heapAtPre_B<<anonHeapFunction>>,
                    null,
                    de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
        Z(0(#))))"))
            (rule "times_zero_1" (formula "47") (term "1,0,1,1"))
            (rule "times_zero_1" (formula "47") (term "1,1,1"))
            (rule "add_literals" (formula "47") (term "0,1,1"))
            (rule "add_zero_right" (formula "47") (term "1,1"))
            (rule "polySimp_addComm0" (formula "47") (term "1"))
            (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "47"))
            (rule "polySimp_homoEq" (formula "48"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0"))
            (rule "mul_literals" (formula "48") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "48") (term "0"))
            (rule "polySimp_addComm1" (formula "48") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
            (rule "add_literals" (formula "48") (term "0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "48"))
            (rule "polySimp_mulComm0" (formula "48") (term "1"))
            (rule "polySimp_rightDist" (formula "48") (term "1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
            (rule "polySimp_elimOne" (formula "48") (term "1,1"))
            (rule "polySimp_rightDist" (formula "48") (term "0,1"))
            (rule "mul_literals" (formula "48") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
            (rule "applyEq" (formula "30") (term "0") (ifseqformula "48"))
            (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "48"))
            (rule "inEqSimp_homoInEq0" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0"))
            (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "48"))
            (rule "polySimp_addAssoc" (formula "35") (term "1"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
            (rule "add_literals" (formula "35") (term "0,0,1"))
            (rule "add_zero_left" (formula "35") (term "0,1"))
            (rule "applyEqRigid" (formula "47") (term "1,0,0") (ifseqformula "48"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1"))
            (rule "polySimp_rightDist" (formula "30") (term "1"))
            (rule "mul_literals" (formula "30") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=l_0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,0"))
            (rule "equal_literals" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,1,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,1,1,1,0"))
            (rule "add_literals" (formula "47") (term "1,1,0,0,1,1,1,0"))
            (rule "times_zero_1" (formula "47") (term "1,0,0,1,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
            (rule "add_literals" (formula "47") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "47") (term "1,0,0"))
            (rule "add_zero_right" (formula "47") (term "0,0"))
            (rule "polySimp_sepNegMonomial" (formula "47"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "polySimp_elimOne" (formula "47") (term "0"))
            (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,2,0"))
            (rule "equal_literals" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "mul_literals" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "add_literals" (formula "47") (term "0,0"))
            (rule "add_zero_left" (formula "47") (term "0"))
            (rule "polySimp_invertEq" (formula "47"))
            (rule "mul_literals" (formula "47") (term "1"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "polySimp_elimOne" (formula "47") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "32"))
            (rule "polySimp_rightDist" (formula "35") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "35") (term "0"))
            (rule "polySimp_addComm0" (formula "35") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "35"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0"))
            (rule "polySimp_elimOne" (formula "35") (term "0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "52"))
            (rule "andLeft" (formula "52"))
            (rule "notLeft" (formula "52"))
            (rule "pullOutSelect" (formula "52") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "57") (term "0") (ifseqformula "52"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "70")) (ifInst ""  (formula "8")))
            (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "52"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "52") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "52") (term "1"))
            (rule "nonNull" (formula "52") (inst "i=i"))
            (rule "sub_literals" (formula "52") (term "2,1,0,1,1"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "62")))
            (rule "greater_literals" (formula "52") (term "0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "narrowSelectArrayType" (formula "52") (term "0,0,1,0") (ifseqformula "53") (ifseqformula "62"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
            (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
            (rule "commute_or" (formula "54"))
            (rule "nnf_imp2or" (formula "52") (term "0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "49"))
            (rule "nonNull" (formula "49") (inst "i=i"))
            (rule "greater_literals" (formula "49") (term "0,1"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "andLeft" (formula "49"))
            (rule "notLeft" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_1"))
            (rule "applyEq" (formula "55") (term "0") (ifseqformula "49"))
            (rule "applyEq" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "49") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "49") (term "2,0"))
            (rule "elementOfSingleton" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0") (ifseqformula "49"))
            (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "49"))
            (rule "hideAuxiliaryEq" (formula "49"))
            (rule "nnf_notAnd" (formula "52") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
            (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
            (rule "mul_literals" (formula "52") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "49") (term "0"))
            (rule "commute_or" (formula "46") (term "0"))
            (rule "nnf_notAnd" (formula "49") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "69") (term "1"))
            (rule "variableDeclarationAssign" (formula "69") (term "1"))
            (rule "variableDeclaration" (formula "69") (term "1") (newnames "var_5"))
            (rule "assignment" (formula "69") (term "1"))
             (builtin "One Step Simplification" (formula "69"))
            (rule "variableDeclarationAssign" (formula "69") (term "1"))
            (rule "variableDeclaration" (formula "69") (term "1") (newnames "var_6"))
            (rule "commute_or_2" (formula "46"))
            (rule "commute_or_2" (formula "52") (term "0"))
            (rule "commute_or_2" (formula "49") (term "0"))
            (rule "commute_or" (formula "52") (term "0,0"))
            (rule "commute_or" (formula "49") (term "0,0"))
            (rule "div_axiom" (formula "47") (term "0") (inst "quotient=quotient_0"))
            (rule "mul_literals" (formula "47") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "47") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "equal_literals" (formula "47") (term "0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "47"))
            (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
            (rule "add_literals" (formula "49") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "49") (term "1"))
            (rule "add_literals" (formula "49") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "48"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
            (rule "polySimp_addComm1" (formula "48") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
            (rule "polySimp_addComm1" (formula "49") (term "0"))
            (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "50"))
            (rule "eqSymm" (formula "47"))
            (rule "applyEqRigid" (formula "49") (term "0,1,0,0") (ifseqformula "47"))
            (rule "times_zero_2" (formula "49") (term "1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "applyEqRigid" (formula "48") (term "0,1,0,0") (ifseqformula "47"))
            (rule "times_zero_2" (formula "48") (term "1,0,0"))
            (rule "add_zero_right" (formula "48") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49"))
            (rule "mul_literals" (formula "49") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48"))
            (rule "mul_literals" (formula "48") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "49"))
            (rule "polySimp_rightDist" (formula "30") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "mul_literals" (formula "30") (term "1"))
            (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "leq_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "leq_literals" (formula "30") (term "0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "34"))
            (rule "mul_literals" (formula "49") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "49") (term "0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
            (rule "elimGcdLeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "neg_literal" (formula "49") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
            (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "49") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
            (rule "add_literals" (formula "49") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "49") (term "1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "qeq_literals" (formula "49") (term "0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "49"))
            (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "30"))
            (rule "times_zero_2" (formula "35") (term "1,1"))
            (rule "add_literals" (formula "35") (term "1"))
            (rule "applyEq" (formula "49") (term "0") (ifseqformula "30"))
            (rule "leq_literals" (formula "49"))
            (rule "true_left" (formula "49"))
            (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
            (rule "qeq_literals" (formula "31"))
            (rule "true_left" (formula "31"))
            (rule "applyEqRigid" (formula "31") (term "0,1,1") (ifseqformula "30"))
            (rule "mul_literals" (formula "31") (term "1,1"))
            (rule "add_zero_right" (formula "31") (term "1"))
            (rule "applyEq" (formula "35") (term "0,0,1") (ifseqformula "30"))
            (rule "mul_literals" (formula "35") (term "0,1"))
            (rule "add_zero_left" (formula "35") (term "1"))
            (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "30"))
            (rule "times_zero_2" (formula "51") (term "1,0,1"))
            (rule "add_zero_right" (formula "51") (term "0,1"))
            (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "31"))
            (rule "leq_literals" (formula "48") (term "0"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "true_left" (formula "48"))
            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "33"))
            (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
            (rule "polySimp_addComm0" (formula "35") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "35"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0"))
            (rule "polySimp_elimOne" (formula "35") (term "0"))
            (rule "methodCallWithAssignment" (formula "70") (term "1") (inst "#v0=b"))
            (branch "Normal Execution (_group_35_A != null)"
                (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "77")))
               (rule "false_right" (formula "70"))
               (rule "variableDeclaration" (formula "70") (term "1") (newnames "b_21"))
               (rule "methodBodyExpand" (formula "70") (term "1") (newnames "heapBefore_order_0,savedHeapBefore_order_0"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "returnUnfold" (formula "70") (term "1") (inst "#v0=b_22"))
               (rule "variableDeclarationAssign" (formula "70") (term "1"))
               (rule "variableDeclaration" (formula "70") (term "1") (newnames "b_22"))
               (rule "methodCallWithAssignmentUnfoldTarget" (formula "70") (term "1") (inst "#v0=s"))
               (rule "variableDeclaration" (formula "70") (term "1") (newnames "s_1"))
               (rule "assignment_read_attribute_this" (formula "70") (term "1"))
                (builtin "One Step Simplification" (formula "70"))
                (builtin "Use Operation Contract" (formula "70") (newnames "heapBefore_getOrder_0,result_858,exc_1130,heapAfter_getOrder_0,anon_heap_getOrder_0") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
               (branch "Post (getOrder)"
                   (builtin "One Step Simplification" (formula "57"))
                   (builtin "One Step Simplification" (formula "74"))
                   (builtin "One Step Simplification" (formula "58"))
                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "11")))
                  (rule "andLeft" (formula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1,0") (ifseqformula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "60"))
                  (rule "andLeft" (formula "60"))
                  (rule "andLeft" (formula "61"))
                  (rule "andLeft" (formula "62"))
                  (rule "andLeft" (formula "61"))
                  (rule "notLeft" (formula "64"))
                  (rule "andLeft" (formula "61"))
                  (rule "andLeft" (formula "61"))
                  (rule "notLeft" (formula "61"))
                  (rule "notLeft" (formula "61"))
                  (rule "eqSymm" (formula "60"))
                  (rule "replace_known_right" (formula "59") (term "0,1") (ifseqformula "66"))
                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "67")))
                  (rule "assignment" (formula "82") (term "1"))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "applyEq" (formula "64") (term "4") (ifseqformula "58"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "77")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "60"))
                  (rule "hideAuxiliaryEq" (formula "60"))
                  (rule "eqSymm" (formula "60"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=java_math_BigInteger_value_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                  (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "60"))
                  (rule "hideAuxiliaryEq" (formula "60"))
                  (rule "eqSymm" (formula "60"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "65"))
                  (rule "true_left" (formula "65"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "63"))
                  (rule "true_left" (formula "63"))
                  (rule "methodCallReturn" (formula "80") (term "1"))
                  (rule "assignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "methodCallEmpty" (formula "80") (term "1"))
                  (rule "blockEmpty" (formula "80") (term "1"))
                  (rule "assignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "variableDeclarationAssign" (formula "80") (term "1"))
                  (rule "variableDeclaration" (formula "80") (term "1") (newnames "var_7"))
                  (rule "stringAssignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "82"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (ifseqformula "58"))
                  (rule "variableDeclarationAssign" (formula "81") (term "1"))
                  (rule "variableDeclaration" (formula "81") (term "1") (newnames "var_8"))
                  (rule "assignment" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "variableDeclarationAssign" (formula "81") (term "1"))
                  (rule "variableDeclaration" (formula "81") (term "1") (newnames "var_9"))
                  (rule "assignment" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "commute_or" (formula "1"))
                   (builtin "Use Operation Contract" (formula "81") (newnames "heapBefore_uniformHash_0,result_859,exc_1131,heapAfter_uniformHash_0,anon_heap_uniformHash_0") (contract "de.polyas.core3.open.crypto.basic.Hashes[de.polyas.core3.open.crypto.basic.Hashes::uniformHash(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
                  (branch "Post (uniformHash)"
                      (builtin "One Step Simplification" (formula "85"))
                      (builtin "One Step Simplification" (formula "66"))
                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "72")) (ifInst ""  (formula "88")) (ifInst ""  (formula "87")))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,0,0,1") (ifseqformula "58"))
                     (rule "andLeft" (formula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1,0") (ifseqformula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1,0") (ifseqformula "58"))
                     (rule "andLeft" (formula "69"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "70"))
                     (rule "andLeft" (formula "72"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "72"))
                     (rule "andLeft" (formula "74"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "73"))
                     (rule "andLeft" (formula "76"))
                     (rule "andLeft" (formula "69"))
                     (rule "andLeft" (formula "77"))
                     (rule "notLeft" (formula "70"))
                     (rule "translateJavaAddInt" (formula "68") (term "1"))
                     (rule "replace_known_left" (formula "80") (term "0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "true_left" (formula "80"))
                     (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "true_left" (formula "79"))
                     (rule "replace_known_left" (formula "77") (term "1") (ifseqformula "60"))
                      (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "80")))
                     (rule "true_left" (formula "77"))
                     (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "78"))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "74"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "74") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "73"))
                     (rule "assignment" (formula "95") (term "1"))
                      (builtin "One Step Simplification" (formula "95"))
                     (rule "blockEmpty" (formula "95") (term "1"))
                     (rule "variableDeclarationFinalAssign" (formula "95") (term "1"))
                     (rule "variableDeclarationFinal" (formula "95") (term "1") (newnames "dk_1"))
                     (rule "applyEq" (formula "71") (term "6") (ifseqformula "70"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                     (rule "polySimp_elimOne" (formula "74") (term "0"))
                     (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "eqSymm" (formula "69"))
                     (rule "elementOfSingleton" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "68"))
                     (rule "hideAuxiliaryEq" (formula "68"))
                     (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_3"))
                     (rule "applyEq" (formula "68") (term "0,0") (ifseqformula "73"))
                     (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "73"))
                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "73"))
                     (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "73"))
                     (rule "applyEqReverse" (formula "74") (term "1,1") (ifseqformula "73"))
                     (rule "hideAuxiliaryEq" (formula "73"))
                     (rule "pullOutSelect" (formula "73") (term "0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "applyEqReverse" (formula "74") (term "0,0") (ifseqformula "73"))
                     (rule "hideAuxiliaryEq" (formula "73"))
                     (rule "expand_addJint" (formula "68") (term "0"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                     (rule "expand_moduloInteger" (formula "68") (term "0"))
                     (rule "replace_int_RANGE" (formula "68") (term "1,1,0"))
                     (rule "replace_int_MIN" (formula "68") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "68") (term "0,0,1,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                     (rule "mod_axiom" (formula "68") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "0,1,0"))
                     (rule "mul_literals" (formula "68") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1"))
                     (rule "polySimp_rightDist" (formula "68") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "68") (term "0,1"))
                     (rule "mul_literals" (formula "68") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,2,0,0"))
                     (rule "equal_literals" (formula "68") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "0"))
                     (rule "mul_literals" (formula "68") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "newSym_eq" (formula "68") (inst "l=l_1") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(int::select(anon_heap_uniformHash_0<<anonHeapFunction>>,
                        null,
                        de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
            Z(0(#)))),
    mul(int::select(heapAtPre_A<<anonHeapFunction>>,
                    null,
                    de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
        Z(0(#))))"))
                     (rule "times_zero_1" (formula "68") (term "1,1,1"))
                     (rule "times_zero_1" (formula "68") (term "1,0,1,1"))
                     (rule "polySimp_addLiterals" (formula "68") (term "1,1"))
                     (rule "add_literals" (formula "68") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "1"))
                     (rule "applyEqRigid" (formula "69") (term "0,0") (ifseqformula "68"))
                     (rule "polySimp_homoEq" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                     (rule "mul_literals" (formula "69") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "69"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1"))
                     (rule "polySimp_rightDist" (formula "69") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "69") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "69") (term "0,1"))
                     (rule "mul_literals" (formula "69") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1"))
                     (rule "applyEq" (formula "68") (term "1,0,0") (ifseqformula "69"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "69"))
                     (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "69"))
                     (rule "inEqSimp_homoInEq0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "69"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                     (rule "add_literals" (formula "24") (term "0,0,1"))
                     (rule "add_zero_left" (formula "24") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0") (inst "polyDivCoeff=l_1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,1,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "68") (term "1,1,0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "68") (term "1,0,0,1,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                     (rule "add_literals" (formula "68") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "68") (term "1,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,1,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "add_literals" (formula "68") (term "0,0"))
                     (rule "add_zero_left" (formula "68") (term "0"))
                     (rule "polySimp_invertEq" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "73"))
                     (rule "andLeft" (formula "73"))
                     (rule "notLeft" (formula "73"))
                     (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "78")))
                     (rule "ifthenelse_negated" (formula "73") (term "0"))
                     (rule "applyEq" (formula "73") (term "1") (ifseqformula "74"))
                     (rule "ifEqualsInteger" (formula "73"))
                     (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "74") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "74") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "74") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "74") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "73") (term "0,0,1") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                     (rule "true_left" (formula "73"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "74"))
                     (rule "replaceKnownSelect_taclet0000000_28" (formula "74") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000000_29" (formula "74") (term "1"))
                     (rule "nonNull" (formula "74") (inst "i=i"))
                     (rule "sub_literals" (formula "74") (term "2,1,0,1,1"))
                      (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "86")))
                     (rule "greater_literals" (formula "74") (term "0"))
                      (builtin "One Step Simplification" (formula "74"))
                     (rule "narrowSelectArrayType" (formula "74") (term "0,0,1,0") (ifseqformula "75") (ifseqformula "86"))
                     (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "74") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0"))
                     (rule "commute_or" (formula "76"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "70"))
                     (rule "nonNull" (formula "70") (inst "i=i"))
                     (rule "greater_literals" (formula "70") (term "0,1"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "sub_literals" (formula "70") (term "2,1,0,1"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "andLeft" (formula "70"))
                     (rule "notLeft" (formula "70"))
                     (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "70") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "70") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_3"))
                     (rule "applyEq" (formula "77") (term "0") (ifseqformula "70"))
                     (rule "applyEq" (formula "71") (term "0,1,1,1,0,0") (ifseqformula "70"))
                     (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "replaceKnownSelect_taclet0000000_28" (formula "70") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000000_29" (formula "70") (term "2,0"))
                     (rule "elementOfSingleton" (formula "70") (term "0,0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "applyEqReverse" (formula "71") (term "0,1,1,1,0,0") (ifseqformula "70"))
                     (rule "applyEqReverse" (formula "71") (term "1,0,0,1,0") (ifseqformula "70"))
                     (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "70"))
                     (rule "hideAuxiliaryEq" (formula "70"))
                     (rule "nnf_imp2or" (formula "74") (term "0"))
                     (rule "commute_or" (formula "67") (term "0"))
                     (rule "nnf_imp2or" (formula "70") (term "0"))
                     (rule "nnf_notAnd" (formula "74") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0"))
                     (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                     (rule "mul_literals" (formula "74") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "74") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "74") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "70") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "70") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0"))
                     (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                     (rule "mul_literals" (formula "70") (term "1,0,0,0"))
                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "93") (term "1"))
                     (rule "variableDeclarationAssign" (formula "93") (term "1"))
                     (rule "variableDeclaration" (formula "93") (term "1") (newnames "var_10"))
                     (rule "assignment" (formula "93") (term "1"))
                      (builtin "One Step Simplification" (formula "93"))
                     (rule "variableDeclarationAssign" (formula "93") (term "1"))
                     (rule "variableDeclaration" (formula "93") (term "1") (newnames "var_11"))
                     (rule "commute_or_2" (formula "67"))
                     (rule "commute_or_2" (formula "74") (term "0"))
                     (rule "commute_or_2" (formula "70") (term "0"))
                     (rule "commute_or" (formula "74") (term "0,0"))
                     (rule "commute_or" (formula "70") (term "0,0"))
                     (rule "div_axiom" (formula "68") (term "0") (inst "quotient=quotient_1"))
                     (rule "equal_literals" (formula "68") (term "0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,1,1,1"))
                     (rule "qeq_literals" (formula "68") (term "0,1"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "68"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0,1"))
                     (rule "add_literals" (formula "70") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "70") (term "1"))
                     (rule "add_literals" (formula "70") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "70"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "70") (term "0"))
                     (rule "applyEq" (formula "68") (term "0") (ifseqformula "71"))
                     (rule "eqSymm" (formula "68"))
                     (rule "applyEq" (formula "70") (term "0,1,0,0") (ifseqformula "68"))
                     (rule "mul_literals" (formula "70") (term "1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0"))
                     (rule "applyEqRigid" (formula "69") (term "0,1,0,0") (ifseqformula "68"))
                     (rule "mul_literals" (formula "69") (term "1,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70"))
                     (rule "mul_literals" (formula "70") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                     (rule "mul_literals" (formula "69") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "70"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                     (rule "mul_literals" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "19") (term "0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "22"))
                     (rule "mul_literals" (formula "70") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0"))
                     (rule "add_literals" (formula "70") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "70") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "70") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "70") (term "0,0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "70") (term "0,0,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                     (rule "add_literals" (formula "70") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "70") (term "1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0"))
                     (rule "qeq_literals" (formula "70") (term "0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "70"))
                     (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "19"))
                     (rule "mul_literals" (formula "21") (term "1,1"))
                     (rule "add_literals" (formula "21") (term "1"))
                     (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                     (rule "qeq_literals" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "applyEqRigid" (formula "70") (term "0") (ifseqformula "19"))
                     (rule "leq_literals" (formula "70"))
                     (rule "true_left" (formula "70"))
                     (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "19"))
                     (rule "mul_literals" (formula "22") (term "1,1"))
                     (rule "add_literals" (formula "22") (term "1"))
                     (rule "applyEq" (formula "24") (term "0,0,1") (ifseqformula "19"))
                     (rule "times_zero_2" (formula "24") (term "0,1"))
                     (rule "add_zero_left" (formula "24") (term "1"))
                     (rule "applyEq" (formula "72") (term "0,1,0,1") (ifseqformula "19"))
                     (rule "mul_literals" (formula "72") (term "1,0,1"))
                     (rule "add_literals" (formula "72") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "20"))
                     (rule "leq_literals" (formula "69") (term "0"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "true_left" (formula "69"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "methodCallWithAssignment" (formula "96") (term "1") (inst "#v0=e"))
                     (branch "Normal Execution (_group_35_B != null)"
                         (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "103")))
                        (rule "false_right" (formula "96"))
                        (rule "variableDeclaration" (formula "96") (term "1") (newnames "e_19"))
                        (rule "methodBodyExpand" (formula "96") (term "1") (newnames "heapBefore_generator,savedHeapBefore_generator"))
                         (builtin "One Step Simplification" (formula "96"))
                        (rule "returnUnfold" (formula "96") (term "1") (inst "#v0=e_20"))
                        (rule "variableDeclarationAssign" (formula "96") (term "1"))
                        (rule "variableDeclaration" (formula "96") (term "1") (newnames "e_20"))
                        (rule "methodCallWithAssignmentUnfoldTarget" (formula "96") (term "1") (inst "#v0=e_21"))
                        (rule "variableDeclaration" (formula "96") (term "1") (newnames "e_21"))
                        (rule "assignment_read_attribute_this" (formula "96") (term "1"))
                         (builtin "One Step Simplification" (formula "96"))
                        (rule "pullOutSelect" (formula "96") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")) (ifInst ""  (formula "27")))
                        (rule "applyEqReverse" (formula "97") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                         (builtin "Use Operation Contract" (formula "96") (newnames "heapBefore_getG,result_860,exc_1132") (contract "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec[org.bouncycastle.jce.spec.ECParameterSpec::getG()].JML normal_behavior operation contract.0"))
                        (branch "Post (getG)"
                            (builtin "One Step Simplification" (formula "81"))
                            (builtin "One Step Simplification" (formula "80"))
                            (builtin "One Step Simplification" (formula "79"))
                            (builtin "One Step Simplification" (formula "100"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,1,0") (ifseqformula "46"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1,1,0") (ifseqformula "38"))
                           (rule "andLeft" (formula "81"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "81"))
                           (rule "notLeft" (formula "81"))
                           (rule "eqSymm" (formula "80"))
                           (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "85"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "narrowSelectArrayType" (formula "52") (term "0,0,0,0,0") (ifseqformula "84") (ifseqformula "96"))
                           (rule "assignment" (formula "104") (term "1"))
                            (builtin "One Step Simplification" (formula "104"))
                           (rule "applyEq" (formula "82") (term "4") (ifseqformula "81"))
                           (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "100")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,1,0,0") (ifseqformula "38"))
                           (rule "eqSymm" (formula "81"))
                           (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "81"))
                           (rule "hideAuxiliaryEq" (formula "81"))
                           (rule "replace_known_left" (formula "80") (term "0,0,1,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "elementOfSingleton" (formula "80") (term "0,0"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "99")))
                           (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "100")) (ifInst ""  (formula "8")))
                           (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "80"))
                           (rule "hideAuxiliaryEq" (formula "80"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "80"))
                           (rule "replace_known_left" (formula "79") (term "0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "true_left" (formula "79"))
                           (rule "applyEq" (formula "93") (term "0") (ifseqformula "79"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "82"))
                           (rule "replaceKnownSelect_taclet000000000_39" (formula "82") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000000_40" (formula "82") (term "1,1"))
                           (rule "replaceKnownSelect_taclet000000000_39" (formula "82") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000000_40" (formula "82") (term "0,0,0"))
                           (rule "andLeft" (formula "82"))
                           (rule "notLeft" (formula "82"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "82"))
                           (rule "true_left" (formula "82"))
                           (rule "methodCallReturn" (formula "101") (term "1"))
                           (rule "assignment" (formula "101") (term "1"))
                            (builtin "One Step Simplification" (formula "101"))
                           (rule "methodCallEmpty" (formula "101") (term "1"))
                           (rule "blockEmpty" (formula "101") (term "1"))
                           (rule "assignment" (formula "101") (term "1"))
                            (builtin "One Step Simplification" (formula "101"))
                           (rule "variableDeclarationAssign" (formula "101") (term "1"))
                           (rule "variableDeclaration" (formula "101") (term "1") (newnames "var_12"))
                           (rule "assignment" (formula "101") (term "1"))
                            (builtin "One Step Simplification" (formula "101"))
                            (builtin "Use Operation Contract" (formula "101") (newnames "heapBefore_pow,result_861,exc_1133,heapAfter_pow,anon_heap_pow") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0"))
                           (branch "Post (pow)"
                               (builtin "One Step Simplification" (formula "85"))
                               (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "87")) (ifInst ""  (formula "91")) (ifInst ""  (formula "82")) (ifInst ""  (formula "87")) (ifInst ""  (formula "91")))
                               (builtin "One Step Simplification" (formula "105"))
                               (builtin "One Step Simplification" (formula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,1") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1,1") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                              (rule "andLeft" (formula "86"))
                              (rule "andLeft" (formula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,1,0") (ifseqformula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,1,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,1,1,0") (ifseqformula "38"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "91"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "87"))
                              (rule "notLeft" (formula "90"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "87"))
                              (rule "notLeft" (formula "87"))
                              (rule "notLeft" (formula "87"))
                              (rule "orRight" (formula "97"))
                              (rule "orRight" (formula "97"))
                              (rule "replace_known_left" (formula "95") (term "0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "95"))
                              (rule "true_left" (formula "95"))
                              (rule "replace_known_right" (formula "86") (term "1,0,0,1") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "99")) (ifInst ""  (formula "96")) (ifInst ""  (formula "98")))
                              (rule "assignment" (formula "118") (term "1"))
                               (builtin "One Step Simplification" (formula "118"))
                              (rule "blockEmpty" (formula "118") (term "1"))
                              (rule "applyEq" (formula "90") (term "6") (ifseqformula "85"))
                              (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "91"))
                              (rule "andLeft" (formula "91"))
                              (rule "notLeft" (formula "91"))
                              (rule "pullOutSelect" (formula "91") (term "0") (inst "selectSK=java_math_BigInteger_value_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "97")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "38"))
                              (rule "elementOfSingleton" (formula "91") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "97")))
                              (rule "ifthenelse_negated" (formula "91") (term "0"))
                              (rule "applyEqRigid" (formula "91") (term "1") (ifseqformula "92"))
                              (rule "ifEqualsInteger" (formula "91"))
                              (rule "pullOutSelect" (formula "97") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                              (rule "applyEq" (formula "92") (term "1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,0,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0000_12" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "1") (term "2,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "replaceKnownSelect_taclet0000_14" (formula "92") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "92") (term "0,1,0"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "91") (term "1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                              (rule "true_left" (formula "91"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "92"))
                              (rule "true_left" (formula "92"))
                              (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "92"))
                              (rule "replaceKnownSelect_taclet0000000000_44" (formula "92") (term "0,1"))
                              (rule "replaceKnownSelect_taclet0000000000_45" (formula "92") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000000_46" (formula "92") (term "0,0,0"))
                              (rule "andLeft" (formula "92"))
                              (rule "notLeft" (formula "92"))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "92"))
                              (rule "replaceKnownSelect_taclet00000000_35" (formula "92") (term "1,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_37" (formula "92") (term "1,1,1"))
                              (rule "replaceKnownSelect_taclet00000000_35" (formula "92") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_37" (formula "92") (term "0,0,1,0"))
                              (rule "andLeft" (formula "92"))
                              (rule "andLeft" (formula "92"))
                              (rule "andLeft" (formula "94"))
                              (rule "notLeft" (formula "93"))
                              (rule "notLeft" (formula "92"))
                              (rule "pullOutSelect" (formula "92") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                              (rule "applyEq" (formula "96") (term "0") (ifseqformula "92"))
                              (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "125")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "92") (term "0,0,1,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "92"))
                              (rule "elementOfSingleton" (formula "92") (term "0,0"))
                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "125")))
                              (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "125")) (ifInst ""  (formula "26")))
                              (rule "applyEqReverse" (formula "96") (term "0") (ifseqformula "92"))
                              (rule "applyEqReverse" (formula "93") (term "1") (ifseqformula "92"))
                              (rule "hideAuxiliaryEq" (formula "92"))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "89"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "91"))
                              (rule "notLeft" (formula "89"))
                              (rule "notLeft" (formula "89"))
                              (rule "pullOutSelect" (formula "89") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_1"))
                              (rule "applyEq" (formula "98") (term "0") (ifseqformula "89"))
                              (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "127")))
                              (rule "replaceKnownSelect_taclet0000000000_47" (formula "89") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000000_49" (formula "89") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "89") (term "0,0,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "89"))
                              (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "89"))
                              (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "89"))
                              (rule "hideAuxiliaryEq" (formula "89"))
                              (rule "pullOutSelect" (formula "90") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_1"))
                              (rule "applyEq" (formula "97") (term "0") (ifseqformula "90"))
                              (rule "simplifySelectOfAnonEQ" (formula "90") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "126")))
                              (rule "replaceKnownSelect_taclet00000000_35" (formula "90") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_37" (formula "90") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "90") (term "0,0,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "90"))
                              (rule "applyEqReverse" (formula "91") (term "1") (ifseqformula "90"))
                              (rule "hideAuxiliaryEq" (formula "90"))
                              (rule "commute_or" (formula "95") (term "0"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "94"))
                              (rule "replaceKnownSelect_taclet000000000_39" (formula "94") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_40" (formula "94") (term "1,1"))
                              (rule "replaceKnownSelect_taclet000000000_39" (formula "94") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_40" (formula "94") (term "0,0,0"))
                              (rule "andLeft" (formula "94"))
                              (rule "notLeft" (formula "94"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "93"))
                              (rule "true_left" (formula "93"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "89"))
                              (rule "true_left" (formula "89"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "89"))
                              (rule "andLeft" (formula "89"))
                              (rule "notLeft" (formula "89"))
                              (rule "pullOutSelect" (formula "89") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                              (rule "applyEq" (formula "95") (term "0") (ifseqformula "89"))
                              (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "113")))
                              (rule "replaceKnownSelect_taclet000000000_39" (formula "89") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_40" (formula "89") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "89") (term "0,0,0,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "89"))
                              (rule "applyEqReverse" (formula "95") (term "0") (ifseqformula "89"))
                              (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "89"))
                              (rule "hideAuxiliaryEq" (formula "89"))
                              (rule "commute_or_2" (formula "93"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "92"))
                              (rule "true_left" (formula "92"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                              (rule "true_left" (formula "89"))
                              (rule "returnUnfold" (formula "113") (term "1") (inst "#v0=s"))
                              (rule "variableDeclarationAssign" (formula "113") (term "1"))
                              (rule "variableDeclaration" (formula "113") (term "1") (newnames "s_2"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "113") (term "1"))
                              (rule "variableDeclarationAssign" (formula "113") (term "1"))
                              (rule "variableDeclaration" (formula "113") (term "1") (newnames "var_13"))
                               (builtin "Use Operation Contract" (formula "113") (newnames "heapBefore_asBytes,result_862,exc_1134,heapAfter_asBytes,anon_heap_asBytes") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::asBytes(org.bouncycastle.math.ec.ECPoint)].JML normal_behavior operation contract.0"))
                              (branch "Post (asBytes)"
                                  (builtin "One Step Simplification" (formula "93"))
                                  (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "98")) (ifInst ""  (formula "98")))
                                  (builtin "One Step Simplification" (formula "92"))
                                  (builtin "One Step Simplification" (formula "117"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "1,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,0,1,1") (ifseqformula "38"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,1,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,1,0") (ifseqformula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,1,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,1,1,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,0,1,1,0") (ifseqformula "38"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "notLeft" (formula "97"))
                                 (rule "notLeft" (formula "94"))
                                 (rule "orRight" (formula "101"))
                                 (rule "orRight" (formula "101"))
                                 (rule "orRight" (formula "101"))
                                 (rule "replace_known_right" (formula "100") (term "0,0,0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "86")))
                                 (rule "true_left" (formula "100"))
                                 (rule "replace_known_right" (formula "93") (term "1,0,1") (ifseqformula "103"))
                                  (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "104")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
                                 (rule "assignment" (formula "127") (term "1"))
                                  (builtin "One Step Simplification" (formula "127"))
                                 (rule "applyEq" (formula "97") (term "5") (ifseqformula "96"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "98"))
                                 (rule "replaceKnownSelect_taclet0000000000_52" (formula "98") (term "1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000000000_50" (formula "98") (term "1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_53" (formula "98") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_51" (formula "98") (term "1,0,1"))
                                 (rule "replaceKnownSelect_taclet0000000000_50" (formula "98") (term "0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet0000000000_52" (formula "98") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_51" (formula "98") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_53" (formula "98") (term "0,0,1,0"))
                                 (rule "andLeft" (formula "98"))
                                 (rule "andLeft" (formula "99"))
                                 (rule "andLeft" (formula "98"))
                                 (rule "notLeft" (formula "98"))
                                 (rule "notLeft" (formula "98"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "95"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "notLeft" (formula "96"))
                                 (rule "notLeft" (formula "95"))
                                 (rule "pullOutSelect" (formula "96") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
                                 (rule "applyEq" (formula "104") (term "0") (ifseqformula "96"))
                                 (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "138")))
                                 (rule "replaceKnownSelect_taclet0000000000_52" (formula "96") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_53" (formula "96") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0,0") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "96") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "pullOutSelect" (formula "95") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
                                 (rule "applyEq" (formula "103") (term "0") (ifseqformula "95"))
                                 (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "137")))
                                 (rule "replaceKnownSelect_taclet0000000000_50" (formula "95") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_51" (formula "95") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0,0") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "95") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "95"))
                                 (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "95"))
                                 (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "95"))
                                 (rule "hideAuxiliaryEq" (formula "95"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "99"))
                                 (rule "true_left" (formula "99"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
                                 (rule "replaceKnownSelect_taclet0000000000_54" (formula "99") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_55" (formula "99") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet0000000000_54" (formula "99") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_55" (formula "99") (term "0,0,0"))
                                 (rule "andLeft" (formula "99"))
                                 (rule "notLeft" (formula "99"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "96"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "notLeft" (formula "96"))
                                 (rule "pullOutSelect" (formula "96") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_3"))
                                 (rule "applyEq" (formula "102") (term "0") (ifseqformula "96"))
                                 (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "125")))
                                 (rule "replaceKnownSelect_taclet0000000000_54" (formula "96") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_55" (formula "96") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0,0") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "96") (term "0,0,0,0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "95"))
                                 (rule "true_left" (formula "95"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "98"))
                                 (rule "true_left" (formula "98"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                                 (rule "true_left" (formula "95"))
                                  (builtin "Use Operation Contract" (formula "125") (newnames "heapBefore_asHexString,result_863,exc_1135,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
                                 (branch "Post (asHexString)"
                                     (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "106")) (ifInst ""  (formula "106")))
                                     (builtin "One Step Simplification" (formula "100"))
                                     (builtin "One Step Simplification" (formula "99"))
                                     (builtin "One Step Simplification" (formula "129"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,1") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,0,1") (ifseqformula "38"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,1,1") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,1,1") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                    (rule "andLeft" (formula "101"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "1,1,0") (ifseqformula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,1,0") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1,1,0") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,1,1,0") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,0,1,1,0") (ifseqformula "38"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "notLeft" (formula "103"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "notLeft" (formula "103"))
                                    (rule "notLeft" (formula "102"))
                                    (rule "orRight" (formula "106"))
                                    (rule "orRight" (formula "106"))
                                    (rule "orRight" (formula "106"))
                                    (rule "orRight" (formula "106"))
                                    (rule "replace_known_right" (formula "105") (term "0,0,0,0") (ifseqformula "112"))
                                     (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "115")) (ifInst ""  (formula "93")))
                                    (rule "true_left" (formula "105"))
                                    (rule "replace_known_right" (formula "101") (term "1,0,0,0,1") (ifseqformula "107"))
                                     (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "110")) (ifInst ""  (formula "105")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                    (rule "assignment" (formula "138") (term "1"))
                                     (builtin "One Step Simplification" (formula "138"))
                                    (rule "blockEmpty" (formula "138") (term "1"))
                                    (rule "applyEq" (formula "103") (term "3") (ifseqformula "100"))
                                    (rule "methodCallReturn" (formula "138") (term "1"))
                                    (rule "assignment" (formula "138") (term "1"))
                                     (builtin "One Step Simplification" (formula "138"))
                                    (rule "methodCallEmpty" (formula "138") (term "1"))
                                    (rule "tryEmpty" (formula "138") (term "1"))
                                    (rule "emptyModality" (formula "138") (term "1"))
                                     (builtin "One Step Simplification" (formula "138"))
                                    (rule "notRight" (formula "138"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "applyEq" (formula "109") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "110") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "108") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "105") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "104") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "112") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "113") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "111") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "106") (term "2") (ifseqformula "1"))
                                    (rule "methodCallWithAssignment" (formula "140") (term "1") (inst "#v0=e"))
                                    (branch "Normal Execution (_group_35_A != null)"
                                        (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "146")))
                                       (rule "false_right" (formula "140"))
                                       (rule "variableDeclaration" (formula "140") (term "1") (newnames "e_22"))
                                       (rule "methodBodyExpand" (formula "140") (term "1") (newnames "heapBefore_generator_0,savedHeapBefore_generator_0"))
                                        (builtin "One Step Simplification" (formula "140"))
                                       (rule "returnUnfold" (formula "140") (term "1") (inst "#v0=e_23"))
                                       (rule "variableDeclarationAssign" (formula "140") (term "1"))
                                       (rule "variableDeclaration" (formula "140") (term "1") (newnames "e_23"))
                                       (rule "methodCallWithAssignmentUnfoldTarget" (formula "140") (term "1") (inst "#v0=e_24"))
                                       (rule "variableDeclaration" (formula "140") (term "1") (newnames "e_24"))
                                       (rule "assignment_read_attribute_this" (formula "140") (term "1"))
                                        (builtin "One Step Simplification" (formula "140"))
                                       (rule "pullOutSelect" (formula "140") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "62"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")) (ifInst ""  (formula "17")))
                                       (rule "applyEqReverse" (formula "141") (term "0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                        (builtin "Use Operation Contract" (formula "140") (newnames "heapBefore_getG_0,result_864,exc_1136") (contract "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec[org.bouncycastle.jce.spec.ECParameterSpec::getG()].JML normal_behavior operation contract.0"))
                                       (branch "Post (getG)"
                                           (builtin "One Step Simplification" (formula "108"))
                                           (builtin "One Step Simplification" (formula "110"))
                                           (builtin "One Step Simplification" (formula "143"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "108") (term "1,1,0") (ifseqformula "69"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "108") (term "0,1,1,0") (ifseqformula "61"))
                                          (rule "andLeft" (formula "110"))
                                          (rule "andLeft" (formula "108"))
                                          (rule "andLeft" (formula "108"))
                                          (rule "andLeft" (formula "110"))
                                          (rule "andLeft" (formula "110"))
                                          (rule "andLeft" (formula "111"))
                                          (rule "notLeft" (formula "111"))
                                          (rule "eqSymm" (formula "110"))
                                          (rule "replace_known_right" (formula "109") (term "0") (ifseqformula "114"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "narrowSelectArrayType" (formula "75") (term "0,0,0,0,0") (ifseqformula "113") (ifseqformula "139"))
                                          (rule "assignment" (formula "147") (term "1"))
                                           (builtin "One Step Simplification" (formula "147"))
                                          (rule "applyEq" (formula "111") (term "4") (ifseqformula "108"))
                                          (rule "pullOutSelect" (formula "110") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_4"))
                                          (rule "simplifySelectOfAnonEQ" (formula "110") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "143")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,1,0,0") (ifseqformula "61"))
                                          (rule "eqSymm" (formula "111"))
                                          (rule "applyEqReverse" (formula "110") (term "1") (ifseqformula "111"))
                                          (rule "hideAuxiliaryEq" (formula "111"))
                                          (rule "replace_known_left" (formula "110") (term "0,0,1,0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "elementOfSingleton" (formula "110") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "142")))
                                          (rule "pullOutSelect" (formula "110") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_5"))
                                          (rule "simplifySelectOfAnonEQ" (formula "110") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "143")) (ifInst ""  (formula "8")))
                                          (rule "applyEqReverse" (formula "111") (term "0") (ifseqformula "110"))
                                          (rule "hideAuxiliaryEq" (formula "110"))
                                          (rule "applyEq" (formula "138") (term "0") (ifseqformula "110"))
                                          (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "110"))
                                          (rule "replace_known_left" (formula "109") (term "0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "true_left" (formula "109"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "111"))
                                          (rule "replaceKnownSelect_taclet00000000000000_68" (formula "111") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000000000_69" (formula "111") (term "1,1"))
                                          (rule "replaceKnownSelect_taclet00000000000000_68" (formula "111") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000000000_69" (formula "111") (term "0,0,0"))
                                          (rule "andLeft" (formula "111"))
                                          (rule "notLeft" (formula "111"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "111"))
                                          (rule "true_left" (formula "111"))
                                          (rule "methodCallReturn" (formula "144") (term "1"))
                                          (rule "assignment" (formula "144") (term "1"))
                                           (builtin "One Step Simplification" (formula "144"))
                                          (rule "methodCallEmpty" (formula "144") (term "1"))
                                          (rule "blockEmpty" (formula "144") (term "1"))
                                          (rule "assignment" (formula "144") (term "1"))
                                           (builtin "One Step Simplification" (formula "144"))
                                          (rule "variableDeclarationAssign" (formula "144") (term "1"))
                                          (rule "variableDeclaration" (formula "144") (term "1") (newnames "var_14"))
                                          (rule "assignment" (formula "144") (term "1"))
                                           (builtin "One Step Simplification" (formula "144"))
                                           (builtin "Use Operation Contract" (formula "144") (newnames "heapBefore_pow_0,result_865,exc_1137,heapAfter_pow_0,anon_heap_pow_0") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0"))
                                          (branch "Post (pow)"
                                              (builtin "One Step Simplification" (formula "148"))
                                              (builtin "One Step Simplification" (formula "114"))
                                              (builtin "One Step Simplification" (formula "113"))
                                              (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "116")) (ifInst ""  (formula "133")) (ifInst ""  (formula "111")) (ifInst ""  (formula "116")) (ifInst ""  (formula "133")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "1,1") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,1") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,1") (ifseqformula "61"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,1,1") (ifseqformula "61"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,0,0,0,0,1,1") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "61"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "andLeft" (formula "113"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,1,0") (ifseqformula "113"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,1,0") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,0,1,1,0") (ifseqformula "61"))
                                             (rule "andLeft" (formula "117"))
                                             (rule "andLeft" (formula "116"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "118"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "andLeft" (formula "116"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "notLeft" (formula "118"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "notLeft" (formula "115"))
                                             (rule "notLeft" (formula "115"))
                                             (rule "orRight" (formula "126"))
                                             (rule "orRight" (formula "126"))
                                             (rule "replace_known_left" (formula "124") (term "0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "124"))
                                             (rule "true_left" (formula "124"))
                                             (rule "replace_known_right" (formula "114") (term "0") (ifseqformula "128"))
                                              (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "125")) (ifInst ""  (formula "126")) (ifInst ""  (formula "127")))
                                             (rule "assignment" (formula "161") (term "1"))
                                              (builtin "One Step Simplification" (formula "161"))
                                             (rule "blockEmpty" (formula "161") (term "1"))
                                             (rule "applyEq" (formula "119") (term "6") (ifseqformula "118"))
                                             (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "120"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "notLeft" (formula "120"))
                                             (rule "pullOutSelect" (formula "120") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_3"))
                                             (rule "applyEq" (formula "126") (term "0") (ifseqformula "120"))
                                             (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "120"))
                                             (rule "replaceKnownSelect_taclet0000000_31" (formula "120") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_32" (formula "120") (term "2,0"))
                                             (rule "elementOfSingleton" (formula "120") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "120"))
                                             (rule "applyEqReverse" (formula "126") (term "0") (ifseqformula "120"))
                                             (rule "applyEqReverse" (formula "121") (term "1,0") (ifseqformula "120"))
                                             (rule "hideAuxiliaryEq" (formula "120"))
                                             (rule "pullOutSelect" (formula "120") (term "0") (inst "selectSK=java_math_BigInteger_value_5"))
                                             (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "160")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,1,0,0") (ifseqformula "61"))
                                             (rule "replace_known_left" (formula "120") (term "0,0,1,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "120"))
                                             (rule "elementOfSingleton" (formula "120") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "160")))
                                             (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "160")) (ifInst ""  (formula "19")))
                                             (rule "applyEqReverse" (formula "121") (term "0") (ifseqformula "120"))
                                             (rule "hideAuxiliaryEq" (formula "120"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "120"))
                                             (rule "true_left" (formula "120"))
                                             (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "120"))
                                             (rule "replaceKnownSelect_taclet000000000000000_73" (formula "120") (term "0,0,0"))
                                             (rule "replaceKnownSelect_taclet000000000000000_73" (formula "120") (term "1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_74" (formula "120") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_74" (formula "120") (term "1,0,1"))
                                             (rule "replaceKnownSelect_taclet000000000000000_75" (formula "120") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_77" (formula "120") (term "0,1"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "notLeft" (formula "120"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "120"))
                                             (rule "replaceKnownSelect_taclet0000000000000_64" (formula "120") (term "1,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000000_66" (formula "120") (term "1,1,1"))
                                             (rule "replaceKnownSelect_taclet0000000000000_64" (formula "120") (term "0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000000_66" (formula "120") (term "0,0,1,0"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "andLeft" (formula "122"))
                                             (rule "notLeft" (formula "120"))
                                             (rule "notLeft" (formula "120"))
                                             (rule "pullOutSelect" (formula "120") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_3"))
                                             (rule "applyEq" (formula "124") (term "0") (ifseqformula "120"))
                                             (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "166")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,1,0,0") (ifseqformula "61"))
                                             (rule "replace_known_left" (formula "120") (term "0,0,1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "120"))
                                             (rule "elementOfSingleton" (formula "120") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "166")))
                                             (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "166")) (ifInst ""  (formula "16")))
                                             (rule "applyEqReverse" (formula "124") (term "0") (ifseqformula "120"))
                                             (rule "applyEqReverse" (formula "121") (term "1") (ifseqformula "120"))
                                             (rule "hideAuxiliaryEq" (formula "120"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "117"))
                                             (rule "andLeft" (formula "117"))
                                             (rule "andLeft" (formula "117"))
                                             (rule "andLeft" (formula "119"))
                                             (rule "notLeft" (formula "118"))
                                             (rule "notLeft" (formula "117"))
                                             (rule "pullOutSelect" (formula "118") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_4"))
                                             (rule "applyEq" (formula "126") (term "0") (ifseqformula "118"))
                                             (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "113"))
                                              (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "168")))
                                             (rule "replaceKnownSelect_taclet0000000000000_64" (formula "118") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000000_66" (formula "118") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0,0") (ifseqformula "61"))
                                             (rule "replace_known_left" (formula "118") (term "0,0,0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "118"))
                                             (rule "applyEqReverse" (formula "126") (term "0") (ifseqformula "118"))
                                             (rule "applyEqReverse" (formula "119") (term "1") (ifseqformula "118"))
                                             (rule "hideAuxiliaryEq" (formula "118"))
                                             (rule "pullOutSelect" (formula "117") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_4"))
                                             (rule "applyEq" (formula "125") (term "0") (ifseqformula "117"))
                                             (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "113"))
                                              (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "167")))
                                             (rule "replaceKnownSelect_taclet000000000000000_78" (formula "117") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_80" (formula "117") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0,0") (ifseqformula "61"))
                                             (rule "replace_known_left" (formula "117") (term "0,0,0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "117"))
                                             (rule "applyEqReverse" (formula "118") (term "1") (ifseqformula "117"))
                                             (rule "applyEqReverse" (formula "125") (term "0") (ifseqformula "117"))
                                             (rule "hideAuxiliaryEq" (formula "117"))
                                             (rule "commute_or" (formula "123") (term "0"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "122"))
                                             (rule "replaceKnownSelect_taclet00000000000000_68" (formula "122") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000000_69" (formula "122") (term "1,1"))
                                             (rule "replaceKnownSelect_taclet00000000000000_68" (formula "122") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000000_69" (formula "122") (term "0,0,0"))
                                             (rule "andLeft" (formula "122"))
                                             (rule "notLeft" (formula "122"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "121"))
                                             (rule "true_left" (formula "121"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "118"))
                                             (rule "andLeft" (formula "118"))
                                             (rule "notLeft" (formula "118"))
                                             (rule "pullOutSelect" (formula "118") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_6"))
                                             (rule "applyEq" (formula "124") (term "0") (ifseqformula "118"))
                                             (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "113"))
                                              (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "156")))
                                             (rule "replaceKnownSelect_taclet00000000000000_68" (formula "118") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000000_69" (formula "118") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0,0") (ifseqformula "61"))
                                             (rule "replace_known_left" (formula "118") (term "0,0,0,0,0") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "118"))
                                             (rule "applyEqReverse" (formula "124") (term "0") (ifseqformula "118"))
                                             (rule "applyEqReverse" (formula "119") (term "1") (ifseqformula "118"))
                                             (rule "hideAuxiliaryEq" (formula "118"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "117"))
                                             (rule "true_left" (formula "117"))
                                             (rule "commute_or_2" (formula "121"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "120"))
                                             (rule "true_left" (formula "120"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "117"))
                                             (rule "true_left" (formula "117"))
                                             (rule "returnUnfold" (formula "155") (term "1") (inst "#v0=s"))
                                             (rule "variableDeclarationAssign" (formula "155") (term "1"))
                                             (rule "variableDeclaration" (formula "155") (term "1") (newnames "s_3"))
                                             (rule "methodCallWithAssignmentUnfoldArguments" (formula "155") (term "1"))
                                             (rule "variableDeclarationAssign" (formula "155") (term "1"))
                                             (rule "variableDeclaration" (formula "155") (term "1") (newnames "var_15"))
                                              (builtin "Use Operation Contract" (formula "155") (newnames "heapBefore_asBytes_0,result_866,exc_1138,heapAfter_asBytes_0,anon_heap_asBytes_0") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::asBytes(org.bouncycastle.math.ec.ECPoint)].JML normal_behavior operation contract.0"))
                                             (branch "Post (asBytes)"
                                                 (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "126")) (ifInst ""  (formula "126")))
                                                 (builtin "One Step Simplification" (formula "121"))
                                                 (builtin "One Step Simplification" (formula "159"))
                                                 (builtin "One Step Simplification" (formula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "1,1") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,1,1") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,1,1") (ifseqformula "61"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,1,1") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,1,1") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "61"))
                                                (rule "andLeft" (formula "122"))
                                                (rule "andLeft" (formula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "1,1,0") (ifseqformula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,1,1,0") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,1,1,0") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,0,1,1,0") (ifseqformula "61"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "notLeft" (formula "126"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "notLeft" (formula "123"))
                                                (rule "notLeft" (formula "123"))
                                                (rule "orRight" (formula "129"))
                                                (rule "orRight" (formula "129"))
                                                (rule "orRight" (formula "129"))
                                                (rule "replace_known_right" (formula "128") (term "1,0") (ifseqformula "136"))
                                                 (builtin "One Step Simplification" (formula "128") (ifInst ""  (formula "134")) (ifInst ""  (formula "135")) (ifInst ""  (formula "114")))
                                                (rule "true_left" (formula "128"))
                                                (rule "replace_known_right" (formula "122") (term "1,0,0,1") (ifseqformula "130"))
                                                 (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "132")) (ifInst ""  (formula "128")) (ifInst ""  (formula "129")) (ifInst ""  (formula "131")))
                                                (rule "assignment" (formula "169") (term "1"))
                                                 (builtin "One Step Simplification" (formula "169"))
                                                (rule "applyEq" (formula "125") (term "5") (ifseqformula "121"))
                                                (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "126"))
                                                (rule "replaceKnownSelect_taclet000000000000000_83" (formula "126") (term "1,0,1"))
                                                (rule "replaceKnownSelect_taclet000000000000000_81" (formula "126") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_84" (formula "126") (term "1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_82" (formula "126") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000000_81" (formula "126") (term "0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet000000000000000_83" (formula "126") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_82" (formula "126") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_84" (formula "126") (term "0,0,0,0"))
                                                (rule "andLeft" (formula "126"))
                                                (rule "andLeft" (formula "126"))
                                                (rule "andLeft" (formula "128"))
                                                (rule "notLeft" (formula "127"))
                                                (rule "notLeft" (formula "126"))
                                                (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "124"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "andLeft" (formula "125"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "notLeft" (formula "125"))
                                                (rule "notLeft" (formula "124"))
                                                (rule "pullOutSelect" (formula "124") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_5"))
                                                (rule "applyEq" (formula "131") (term "0") (ifseqformula "124"))
                                                (rule "simplifySelectOfAnonEQ" (formula "124") (ifseqformula "120"))
                                                 (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "179")))
                                                (rule "replaceKnownSelect_taclet000000000000000_83" (formula "124") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_84" (formula "124") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0,0") (ifseqformula "61"))
                                                (rule "replace_known_left" (formula "124") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "124"))
                                                (rule "applyEqReverse" (formula "131") (term "0") (ifseqformula "124"))
                                                (rule "applyEqReverse" (formula "125") (term "1") (ifseqformula "124"))
                                                (rule "hideAuxiliaryEq" (formula "124"))
                                                (rule "pullOutSelect" (formula "125") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_5"))
                                                (rule "applyEq" (formula "131") (term "0") (ifseqformula "125"))
                                                (rule "simplifySelectOfAnonEQ" (formula "125") (ifseqformula "120"))
                                                 (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "178")))
                                                (rule "replaceKnownSelect_taclet000000000000000_81" (formula "125") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_82" (formula "125") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,0") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,0,0") (ifseqformula "61"))
                                                (rule "replace_known_left" (formula "125") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "125"))
                                                (rule "applyEqReverse" (formula "131") (term "0") (ifseqformula "125"))
                                                (rule "applyEqReverse" (formula "126") (term "1") (ifseqformula "125"))
                                                (rule "hideAuxiliaryEq" (formula "125"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "127"))
                                                (rule "true_left" (formula "127"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "127"))
                                                (rule "replaceKnownSelect_taclet000000000000000_85" (formula "127") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_86" (formula "127") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000000_85" (formula "127") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_86" (formula "127") (term "0,0,0"))
                                                (rule "andLeft" (formula "127"))
                                                (rule "notLeft" (formula "127"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "124"))
                                                (rule "true_left" (formula "124"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "124"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "notLeft" (formula "124"))
                                                (rule "pullOutSelect" (formula "124") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_7"))
                                                (rule "applyEq" (formula "129") (term "0") (ifseqformula "124"))
                                                (rule "simplifySelectOfAnonEQ" (formula "124") (ifseqformula "120"))
                                                 (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "166")))
                                                (rule "replaceKnownSelect_taclet000000000000000_85" (formula "124") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_86" (formula "124") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0,0") (ifseqformula "61"))
                                                (rule "replace_known_left" (formula "124") (term "0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "124"))
                                                (rule "applyEqReverse" (formula "129") (term "0") (ifseqformula "124"))
                                                (rule "applyEqReverse" (formula "125") (term "1") (ifseqformula "124"))
                                                (rule "hideAuxiliaryEq" (formula "124"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "126"))
                                                (rule "true_left" (formula "126"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "124"))
                                                (rule "true_left" (formula "124"))
                                                 (builtin "Use Operation Contract" (formula "167") (newnames "heapBefore_asHexString_0,result_867,exc_1139,heapAfter_asHexString_0,anon_heap_asHexString_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
                                                (branch "Post (asHexString)"
                                                    (builtin "One Step Simplification" (formula "128"))
                                                    (builtin "One Step Simplification" (formula "127"))
                                                    (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "134")) (ifInst ""  (formula "134")))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "1") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "0,1") (ifseqformula "113"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "0,0,1") (ifseqformula "69"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "0,0,0,1") (ifseqformula "61"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,1,1") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,1,1") (ifseqformula "113"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "69"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "61"))
                                                   (rule "andLeft" (formula "129"))
                                                   (rule "andLeft" (formula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "1,1,0") (ifseqformula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,1,1,0") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,1,1,0") (ifseqformula "113"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,1,1,0") (ifseqformula "69"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,0,1,1,0") (ifseqformula "61"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "130"))
                                                   (rule "andLeft" (formula "130"))
                                                   (rule "andLeft" (formula "130"))
                                                   (rule "notLeft" (formula "132"))
                                                   (rule "andLeft" (formula "130"))
                                                   (rule "notLeft" (formula "131"))
                                                   (rule "notLeft" (formula "130"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "replace_known_right" (formula "133") (term "1,0,0,0") (ifseqformula "141"))
                                                    (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "140")) (ifInst ""  (formula "142")) (ifInst ""  (formula "143")) (ifInst ""  (formula "122")))
                                                   (rule "true_left" (formula "133"))
                                                   (rule "replace_known_right" (formula "129") (term "1,0,0,0,0,1") (ifseqformula "134"))
                                                    (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "138")) (ifInst ""  (formula "133")) (ifInst ""  (formula "135")) (ifInst ""  (formula "136")) (ifInst ""  (formula "137")))
                                                   (rule "assignment" (formula "180") (term "1"))
                                                    (builtin "One Step Simplification" (formula "180"))
                                                   (rule "blockEmpty" (formula "180") (term "1"))
                                                   (rule "applyEq" (formula "131") (term "3") (ifseqformula "128"))
                                                   (rule "methodCallReturn" (formula "180") (term "1"))
                                                   (rule "assignment" (formula "180") (term "1"))
                                                    (builtin "One Step Simplification" (formula "180"))
                                                   (rule "methodCallEmpty" (formula "180") (term "1"))
                                                   (rule "tryEmpty" (formula "180") (term "1"))
                                                   (rule "emptyModality" (formula "180") (term "1"))
                                                    (builtin "One Step Simplification" (formula "180"))
                                                   (rule "notRight" (formula "180"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "141") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "136") (ifseqformula "16"))
                                                )
                                                (branch "Exceptional Post (asHexString)"
                                                    (builtin "One Step Simplification" (formula "169"))
                                                    (builtin "One Step Simplification" (formula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,1,1") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,1,1") (ifseqformula "113"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "69"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "61"))
                                                   (rule "andLeft" (formula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "1,0") (ifseqformula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,1,0") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,1,0") (ifseqformula "113"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,1,0") (ifseqformula "69"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,0,1,0") (ifseqformula "61"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "130"))
                                                   (rule "notLeft" (formula "128"))
                                                   (rule "close" (formula "131") (ifseqformula "130"))
                                                )
                                                (branch "Pre (asHexString)"
                                                    (builtin "One Step Simplification" (formula "167") (ifInst ""  (formula "130")) (ifInst ""  (formula "130")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "1") (ifseqformula "120"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0") (ifseqformula "120"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0,0") (ifseqformula "113"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "0,1") (ifseqformula "113"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0,0,0") (ifseqformula "69"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "0,0,1") (ifseqformula "69"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "0,0,0,1") (ifseqformula "61"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0,0,0,0") (ifseqformula "61"))
                                                   (rule "replace_known_left" (formula "167") (term "1,0") (ifseqformula "119"))
                                                    (builtin "One Step Simplification" (formula "167") (ifInst ""  (formula "15")) (ifInst ""  (formula "60")) (ifInst ""  (formula "68")) (ifInst ""  (formula "112")) (ifInst ""  (formula "126")) (ifInst ""  (formula "127")) (ifInst ""  (formula "128")) (ifInst ""  (formula "129")) (ifInst ""  (formula "122")))
                                                   (rule "closeTrue" (formula "167"))
                                                )
                                             )
                                             (branch "Exceptional Post (asBytes)"
                                                 (builtin "One Step Simplification" (formula "157"))
                                                 (builtin "One Step Simplification" (formula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,1,1") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,1,1") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "61"))
                                                (rule "andLeft" (formula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "1,0") (ifseqformula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,1,0") (ifseqformula "113"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,1,0") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,0,1,0") (ifseqformula "61"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "notLeft" (formula "121"))
                                                (rule "close" (formula "124") (ifseqformula "123"))
                                             )
                                             (branch "Pre (asBytes)"
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "122")) (ifInst ""  (formula "122")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "1,1") (ifseqformula "113"))
                                                (rule "wellFormedAnonEQ" (formula "155") (term "0,1") (ifseqformula "113"))
                                                (rule "wellFormedAnonEQ" (formula "155") (term "0,0,1") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "0,1,1") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "0,0,1,1") (ifseqformula "61"))
                                                (rule "wellFormedAnonEQ" (formula "155") (term "0,0,0,1") (ifseqformula "61"))
                                                (rule "replace_known_left" (formula "155") (term "1,0,0,1") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "15")) (ifInst ""  (formula "60")) (ifInst ""  (formula "112")) (ifInst ""  (formula "119")) (ifInst ""  (formula "120")) (ifInst ""  (formula "121")) (ifInst ""  (formula "114")))
                                                (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "155"))
                                                (rule "replaceKnownSelect_taclet000000000000000_81" (formula "155") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000000_83" (formula "155") (term "1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_82" (formula "155") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_84" (formula "155") (term "1,0,1"))
                                                (rule "replaceKnownSelect_taclet000000000000000_81" (formula "155") (term "0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet000000000000000_83" (formula "155") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_82" (formula "155") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_84" (formula "155") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "155") (term "0,0,0") (ifseqformula "149"))
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "150")))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "155") (term "1"))
                                                (rule "replaceKnownSelect_taclet000000000000000_85" (formula "155") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_86" (formula "155") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000000_85" (formula "155") (term "0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000000_86" (formula "155") (term "0,0,0,1"))
                                                (rule "replace_known_right" (formula "155") (term "0,0,1") (ifseqformula "123"))
                                                 (builtin "One Step Simplification" (formula "155"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "155") (term "1"))
                                                 (builtin "One Step Simplification" (formula "155"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "155"))
                                                (rule "closeTrue" (formula "155"))
                                             )
                                             (branch "Null reference (_group_35_A = null)"
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "160")))
                                                (rule "closeTrue" (formula "155"))
                                             )
                                          )
                                          (branch "Exceptional Post (pow)"
                                              (builtin "One Step Simplification" (formula "113"))
                                              (builtin "One Step Simplification" (formula "146"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,0,0,0,0,1,1") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "61"))
                                             (rule "andLeft" (formula "113"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,0") (ifseqformula "113"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,0") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,0,1,0") (ifseqformula "61"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "116"))
                                             (rule "notLeft" (formula "114"))
                                             (rule "close" (formula "118") (ifseqformula "117"))
                                          )
                                          (branch "Pre (pow)"
                                              (builtin "One Step Simplification" (formula "144") (ifInst ""  (formula "112")) (ifInst ""  (formula "129")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "129")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "1,1") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "0,1") (ifseqformula "69"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "0,0,1") (ifseqformula "61"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "0,1,1") (ifseqformula "61"))
                                             (rule "replace_known_left" (formula "144") (term "0,0,0,1") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "144") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "144") (term "0,1,0"))
                                             (rule "pullOutSelect" (formula "144") (term "1,0,1,0,1,0") (inst "selectSK=java_math_BigInteger_ZERO_3"))
                                             (rule "applyEq" (formula "145") (term "0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet0000000_31" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_32" (formula "1") (term "2,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "145") (term "0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "145") (term "1,0,1,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "144") (term "0,0,0,1,0") (ifseqformula "142"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "pullOutSelect" (formula "144") (term "0,0,1,0") (inst "selectSK=java_math_BigInteger_value_5"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "62"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "145") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "144") (term "0,1,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "144") (term "1,0"))
                                             (rule "replaceKnownSelect_taclet0000000000000_64" (formula "144") (term "1,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000000_66" (formula "144") (term "1,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet0000000000000_64" (formula "144") (term "0,0,1,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000000_66" (formula "144") (term "0,0,1,0,1,0"))
                                             (rule "replace_known_right" (formula "144") (term "0,1,0,1,0") (ifseqformula "139"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "pullOutSelect" (formula "144") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_3"))
                                             (rule "applyEq" (formula "145") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "62"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")) (ifInst ""  (formula "17")))
                                             (rule "applyEqReverse" (formula "145") (term "0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "145") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "144") (term "0,0,1,0") (ifseqformula "138"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "144") (term "0,0"))
                                             (rule "replaceKnownSelect_taclet200000000000000_72" (formula "144") (term "1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet200000000000000_72" (formula "144") (term "0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet200000000000000_73" (formula "144") (term "1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet200000000000000_74" (formula "144") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet200000000000000_76" (formula "144") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet200000000000000_73" (formula "144") (term "0,0,0,0,0"))
                                             (rule "replace_known_right" (formula "144") (term "0,0,0,0") (ifseqformula "142"))
                                              (builtin "One Step Simplification" (formula "144") (ifInst ""  (formula "20")))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "144") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "144") (term "0"))
                                             (rule "replaceKnownSelect_taclet00000000000000_68" (formula "144") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000000_69" (formula "144") (term "1,1,0"))
                                             (rule "replaceKnownSelect_taclet00000000000000_68" (formula "144") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000000_69" (formula "144") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "144") (term "0,0,0") (ifseqformula "112"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "144") (term "0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "orRight" (formula "144"))
                                             (rule "orRight" (formula "144"))
                                             (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "145"))
                                              (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "146")) (ifInst ""  (formula "144")))
                                             (rule "closeFalse" (formula "70"))
                                          )
                                          (branch "Null reference (var_10 = null)"
                                              (builtin "One Step Simplification" (formula "144") (ifInst ""  (formula "149")))
                                             (rule "closeTrue" (formula "144"))
                                          )
                                       )
                                       (branch "Exceptional Post (getG)"
                                           (builtin "One Step Simplification" (formula "108"))
                                           (builtin "One Step Simplification" (formula "141"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "108") (term "1,0") (ifseqformula "69"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "108") (term "0,1,0") (ifseqformula "61"))
                                          (rule "andLeft" (formula "108"))
                                          (rule "andLeft" (formula "108"))
                                          (rule "andLeft" (formula "110"))
                                          (rule "notLeft" (formula "108"))
                                          (rule "close" (formula "111") (ifseqformula "110"))
                                       )
                                       (branch "Pre (getG)"
                                           (builtin "One Step Simplification" (formula "140"))
                                          (rule "wellFormedAnonEQ" (formula "140") (term "1") (ifseqformula "69"))
                                          (rule "wellFormedAnonEQ" (formula "140") (term "0,1") (ifseqformula "61"))
                                          (rule "replace_known_left" (formula "140") (term "1,1") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "15")) (ifInst ""  (formula "60")))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "140"))
                                          (rule "pullOutSelect" (formula "140") (term "1,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_4"))
                                          (rule "applyEq" (formula "141") (term "0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "136")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "62"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "136")))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "136")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "141") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "141") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "140") (term "0,0") (ifseqformula "131"))
                                           (builtin "One Step Simplification" (formula "140"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "140"))
                                          (rule "closeTrue" (formula "140"))
                                       )
                                       (branch "Null reference (e_24 = null)"
                                           (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "135")))
                                          (rule "closeTrue" (formula "140"))
                                       )
                                    )
                                    (branch "Null Reference (_group_35_A = null)"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Exceptional Post (asHexString)"
                                     (builtin "One Step Simplification" (formula "99"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,1,1") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,1,1") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "1,0") (ifseqformula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,0") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1,0") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,1,0") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,0,1,0") (ifseqformula "38"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "notLeft" (formula "100"))
                                    (rule "close" (formula "103") (ifseqformula "102"))
                                 )
                                 (branch "Pre (asHexString)"
                                     (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "102")) (ifInst ""  (formula "102")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "1") (ifseqformula "92"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,1") (ifseqformula "84"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0,0") (ifseqformula "84"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0,0,0") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,1") (ifseqformula "46"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0,0,0,0") (ifseqformula "38"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,1") (ifseqformula "38"))
                                    (rule "replace_known_left" (formula "125") (term "1,0,0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "25")) (ifInst ""  (formula "37")) (ifInst ""  (formula "45")) (ifInst ""  (formula "91")) (ifInst ""  (formula "98")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "93")))
                                    (rule "closeTrue" (formula "125"))
                                 )
                              )
                              (branch "Exceptional Post (asBytes)"
                                  (builtin "One Step Simplification" (formula "115"))
                                  (builtin "One Step Simplification" (formula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,1,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,0") (ifseqformula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,1,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,0,1,0") (ifseqformula "38"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "notLeft" (formula "93"))
                                 (rule "close" (formula "96") (ifseqformula "95"))
                              )
                              (branch "Pre (asBytes)"
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "94")) (ifInst ""  (formula "94")))
                                 (rule "wellFormedAnonEQ" (formula "113") (term "0,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1,1") (ifseqformula "84"))
                                 (rule "wellFormedAnonEQ" (formula "113") (term "0,0,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,1,1") (ifseqformula "38"))
                                 (rule "wellFormedAnonEQ" (formula "113") (term "0,0,0,1") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "113") (term "1,1,1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "25")) (ifInst ""  (formula "37")) (ifInst ""  (formula "45")) (ifInst ""  (formula "83")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "93")))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "113"))
                                 (rule "replaceKnownSelect_taclet0000000000_52" (formula "113") (term "1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000000000_50" (formula "113") (term "1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_53" (formula "113") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_51" (formula "113") (term "1,0,1"))
                                 (rule "replaceKnownSelect_taclet0000000000_52" (formula "113") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000000000_50" (formula "113") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_53" (formula "113") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_51" (formula "113") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "113") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "108")))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "113") (term "0"))
                                  (builtin "One Step Simplification" (formula "113"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "113"))
                                 (rule "replaceKnownSelect_taclet0000000000_54" (formula "113") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_55" (formula "113") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet0000000000_54" (formula "113") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000000_55" (formula "113") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "113") (term "0,0") (ifseqformula "95"))
                                  (builtin "One Step Simplification" (formula "113"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "113"))
                                 (rule "closeTrue" (formula "113"))
                              )
                              (branch "Null reference (_group_35_B = null)"
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "119")))
                                 (rule "closeTrue" (formula "113"))
                              )
                           )
                           (branch "Exceptional Post (pow)"
                               (builtin "One Step Simplification" (formula "84"))
                               (builtin "One Step Simplification" (formula "103"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                              (rule "andLeft" (formula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,0") (ifseqformula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,1,0") (ifseqformula "38"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "87"))
                              (rule "notLeft" (formula "85"))
                              (rule "close" (formula "88") (ifseqformula "87"))
                           )
                           (branch "Pre (pow)"
                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "83")) (ifInst ""  (formula "87")) (ifInst ""  (formula "82")) (ifInst ""  (formula "83")) (ifInst ""  (formula "87")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1,1") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,1") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "101") (term "0,0,0,1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "101") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "101") (term "0,1,0"))
                              (rule "pullOutSelect" (formula "101") (term "0,0,0,0,1,0") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                              (rule "applyEq" (formula "102") (term "1,0,1,0,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0000_12" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "1") (term "2,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "102") (term "1,0,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "102") (term "0,0,0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "101") (term "0,0,0,1,0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "pullOutSelect" (formula "101") (term "0,0,1,0") (inst "selectSK=java_math_BigInteger_value_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                              (rule "replaceKnownSelect_taclet0000_14" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                              (rule "applyEqReverse" (formula "102") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "101") (term "0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "101") (term "0,0"))
                              (rule "replaceKnownSelect_taclet2000000000_43" (formula "101") (term "1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet2000000000_43" (formula "101") (term "0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000000_44" (formula "101") (term "1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet2000000000_45" (formula "101") (term "0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000000_46" (formula "101") (term "0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000000_44" (formula "101") (term "0,0,0,0,0"))
                              (rule "replace_known_left" (formula "101") (term "1,0,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "99")))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "101") (term "0"))
                              (rule "replaceKnownSelect_taclet00000000_35" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_37" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownSelect_taclet00000000_35" (formula "101") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_37" (formula "101") (term "0,0,1,0,0"))
                              (rule "replace_known_right" (formula "101") (term "0,1,0,0") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "pullOutSelect" (formula "101") (term "0,0,0,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                              (rule "applyEq" (formula "102") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")) (ifInst ""  (formula "27")))
                              (rule "applyEqReverse" (formula "102") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "102") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "101") (term "0,0,0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "101") (term "1,0"))
                              (rule "replaceKnownSelect_taclet000000000_39" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_40" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownSelect_taclet000000000_39" (formula "101") (term "0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_40" (formula "101") (term "0,0,0,1,0"))
                              (rule "replace_known_right" (formula "101") (term "0,0,1,0") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "101") (term "0,0"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "101") (term "0"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "orRight" (formula "101"))
                              (rule "orRight" (formula "101"))
                              (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "102")) (ifInst ""  (formula "103")))
                              (rule "closeFalse" (formula "47"))
                           )
                           (branch "Null reference (var_5 = null)"
                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "107")))
                              (rule "closeTrue" (formula "101"))
                           )
                        )
                        (branch "Exceptional Post (getG)"
                            (builtin "One Step Simplification" (formula "98"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,0") (ifseqformula "46"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1,0") (ifseqformula "38"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "81"))
                           (rule "notLeft" (formula "79"))
                           (rule "close" (formula "83") (ifseqformula "82"))
                        )
                        (branch "Pre (getG)"
                            (builtin "One Step Simplification" (formula "96"))
                           (rule "wellFormedAnonEQ" (formula "96") (term "1") (ifseqformula "46"))
                           (rule "wellFormedAnonEQ" (formula "96") (term "0,1") (ifseqformula "38"))
                           (rule "replace_known_left" (formula "96") (term "0,0,1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "37")) (ifInst ""  (formula "45")))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "96"))
                           (rule "pullOutSelect" (formula "96") (term "1,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                           (rule "applyEq" (formula "97") (term "0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "9")))
                           (rule "applyEqReverse" (formula "97") (term "0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "97") (term "1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "96") (term "0,0") (ifseqformula "86"))
                            (builtin "One Step Simplification" (formula "96"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "96"))
                           (rule "closeTrue" (formula "96"))
                        )
                        (branch "Null reference (e_21 = null)"
                            (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "91")))
                           (rule "closeTrue" (formula "96"))
                        )
                     )
                     (branch "Null Reference (_group_35_B = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Exceptional Post (uniformHash)"
                      (builtin "One Step Simplification" (formula "66"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "andLeft" (formula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0") (ifseqformula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,0") (ifseqformula "58"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "69"))
                     (rule "notLeft" (formula "67"))
                     (rule "close" (formula "71") (ifseqformula "70"))
                  )
                  (branch "Pre (uniformHash)"
                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "68")) (ifInst ""  (formula "84")) (ifInst ""  (formula "83")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0,0,1") (ifseqformula "58"))
                     (rule "wellFormedAnonEQ" (formula "81") (term "0,0,0,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0,0,0,1") (ifseqformula "58"))
                     (rule "replace_known_left" (formula "81") (term "1,0,0,0,0,1") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "12")) (ifInst ""  (formula "65")) (ifInst ""  (formula "60")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                     (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "81") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "81") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "81") (term "0,1,0,1,0"))
                     (rule "pullOutSelect" (formula "81") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_2"))
                     (rule "applyEq" (formula "82") (term "1,1,1,0,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "82") (term "1,1,1,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "81") (term "0,0,1,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "pullOutSelect" (formula "81") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "81") (term "0,1,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "81") (term "1,0"))
                     (rule "replaceKnownSelect_taclet2000000_25" (formula "81") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "81") (term "1,1,0"))
                     (rule "nonNull" (formula "81") (term "1,0") (inst "i=i"))
                     (rule "greater_literals" (formula "81") (term "0,1,1,0"))
                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "73")))
                     (rule "sub_literals" (formula "81") (term "2,1,0,1,0"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_imp2or" (formula "81") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "81") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "1,0,0,0,1,0"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "81") (term "0,0"))
                     (rule "pullOutSelect" (formula "81") (term "1,0,1,0,0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "82") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "82") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "81") (term "0,0,0,0") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "pullOutSelect" (formula "81") (term "0,0,0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")) (ifInst ""  (formula "17")))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "commute_or" (formula "81") (term "1"))
                     (rule "replace_known_left" (formula "81") (term "1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "allRight" (formula "81") (inst "sk=i_1"))
                     (rule "orRight" (formula "81"))
                     (rule "orRight" (formula "81"))
                     (rule "notRight" (formula "83"))
                     (rule "inEqSimp_geqRight" (formula "83"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "83"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")) (ifInst ""  (formula "27")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "76"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "allLeft" (formula "22") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "22") (term "0,0,1"))
                     (rule "leq_literals" (formula "22") (term "0,1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Exceptional Post (getOrder)"
                   (builtin "One Step Simplification" (formula "72"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "andLeft" (formula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0") (ifseqformula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "60"))
                  (rule "notLeft" (formula "58"))
                  (rule "close" (formula "61") (ifseqformula "60"))
               )
               (branch "Pre (getOrder)"
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "11")))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "70"))
                  (rule "closeTrue" (formula "70"))
               )
               (branch "Null reference (s_1 = null)"
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "64")))
                  (rule "closeTrue" (formula "70"))
               )
            )
            (branch "Null Reference (_group_35_A = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (uniformHash)"
             (builtin "One Step Simplification" (formula "60"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "andLeft" (formula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0") (ifseqformula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0") (ifseqformula "37"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "48"))
            (rule "notLeft" (formula "46"))
            (rule "close" (formula "49") (ifseqformula "48"))
         )
         (branch "Pre (uniformHash)"
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "44")) (ifInst ""  (formula "62")) (ifInst ""  (formula "61")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,0,1") (ifseqformula "37"))
            (rule "wellFormedAnonEQ" (formula "58") (term "0,0,0,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,0,0,1") (ifseqformula "37"))
            (rule "replace_known_left" (formula "58") (term "0,1,1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "24")) (ifInst ""  (formula "36")) (ifInst ""  (formula "45")) (ifInst ""  (formula "38")) (ifInst ""  (formula "27")))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "58") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "58") (term "0,1,0,1,0"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
            (rule "applyEq" (formula "59") (term "1,1,1,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,1,1,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "58") (term "0,0,1,0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "58") (term "1,0"))
            (rule "replaceKnownSelect_taclet2000_7" (formula "58") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_8" (formula "58") (term "1,1,0"))
            (rule "nonNull" (formula "58") (term "1,0") (inst "i=i"))
            (rule "sub_literals" (formula "58") (term "2,1,0,1,1,1,0"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "50")))
            (rule "greater_literals" (formula "58") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,1,0"))
            (rule "nnf_imp2or" (formula "58") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "58") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "58") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "1,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,1,0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "58") (term "0,0"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "58") (term "0,0,0,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")))
            (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "commute_or" (formula "58") (term "1"))
            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "allRight" (formula "58") (inst "sk=i_1"))
            (rule "orRight" (formula "58"))
            (rule "orRight" (formula "58"))
            (rule "notRight" (formula "60"))
            (rule "inEqSimp_geqRight" (formula "60"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "60"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "38")))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "27") (ifseqformula "53"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "35"))
            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
            (rule "mul_literals" (formula "2") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "allLeft" (formula "33") (inst "t=i_1"))
            (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
            (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
            (rule "add_literals" (formula "33") (term "0,0,1"))
            (rule "leq_literals" (formula "33") (term "0,1"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "33"))
            (rule "leq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
            (rule "qeq_literals" (formula "32") (term "0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "closeFalse" (formula "32"))
         )
      )
      (branch "Exceptional Post (getOrder)"
          (builtin "One Step Simplification" (formula "36"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "andLeft" (formula "36"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "36"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "37"))
         (rule "close" (formula "41") (ifseqformula "40"))
      )
      (branch "Pre (getOrder)"
          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "23")))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "46"))
         (rule "closeTrue" (formula "46"))
      )
      (branch "Null reference (s = null)"
          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "42")))
         (rule "closeTrue" (formula "46"))
      )
   )
   (branch "Null Reference (_group_35_B = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "New on Heap 2"
   (rule "boxToDiamond" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "boxToDiamond" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "15"))
   (rule "notLeft" (formula "15"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "18"))
   (rule "nonNull" (formula "18") (inst "i=i"))
   (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "greater_literals" (formula "18") (term "0,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "8"))
   (rule "nonNull" (formula "8") (inst "i=i"))
   (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "greater_literals" (formula "8") (term "0,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "17"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "commute_or_2" (formula "6") (term "0"))
   (rule "commute_or" (formula "14") (term "0,0"))
   (rule "commute_or" (formula "6") (term "0,0"))
   (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN,savedHeapBefore_loginPasswordFromMasterPIN"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "variableDeclarationFinalAssign" (formula "28") (term "1"))
   (rule "variableDeclarationFinal" (formula "28") (term "1") (newnames "skPrime"))
   (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN_0,savedHeapBefore_loginPasswordFromMasterPIN_0"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "variableDeclarationFinalAssign" (formula "27") (term "1"))
   (rule "variableDeclarationFinal" (formula "27") (term "1") (newnames "skPrime_1"))
   (rule "definitionOfNewOnHeap" (formula "35") (inst "i=i"))
    (builtin "One Step Simplification" (formula "35"))
   (rule "allRight" (formula "35") (inst "sk=i_0"))
   (rule "impRight" (formula "35"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,1,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,0,0,1,0"))
   (rule "castDel" (formula "37") (term "1,1,0,0,1,0"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0,0,1"))
   (rule "castDel" (formula "37") (term "2,0,0,0,1"))
   (rule "castDel" (formula "37") (term "1,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0,0,0"))
   (rule "castDel" (formula "37") (term "2,0,0,0,0"))
   (rule "castDel" (formula "37") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "38") (term "0,1,1,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "notRight" (formula "38"))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
   (rule "leq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "arrayLengthNotNegative" (formula "18") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
   (rule "expand_inInt" (formula "19"))
   (rule "replace_int_MAX" (formula "19") (term "1,0"))
   (rule "replace_int_MIN" (formula "19") (term "0,1"))
   (rule "andLeft" (formula "19"))
   (rule "inEqSimp_commuteLeq" (formula "20"))
   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
   (rule "leq_literals" (formula "20") (term "0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "true_left" (formula "20"))
   (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
   (rule "polySimp_rightDist" (formula "20") (term "0,0"))
   (rule "mul_literals" (formula "20") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "20") (term "0"))
   (rule "add_literals" (formula "20") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "20"))
   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
   (rule "polySimp_elimOne" (formula "20") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "10") (term "0"))
   (rule "expand_inInt" (formula "10"))
   (rule "replace_int_MAX" (formula "10") (term "1,0"))
   (rule "replace_int_MIN" (formula "10") (term "0,1"))
   (rule "andLeft" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
   (rule "polySimp_rightDist" (formula "12") (term "0,0"))
   (rule "mul_literals" (formula "12") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0"))
   (rule "add_literals" (formula "12") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
   (rule "polySimp_elimOne" (formula "12") (term "0"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
   (rule "leq_literals" (formula "11") (term "0"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "36") (term "1"))
   (rule "variableDeclarationAssign" (formula "36") (term "1"))
   (rule "variableDeclaration" (formula "36") (term "1") (newnames "var"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "35") (term "1"))
   (rule "variableDeclarationAssign" (formula "35") (term "1"))
   (rule "variableDeclaration" (formula "35") (term "1") (newnames "var_1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,0") (ifseqformula "14"))
   (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "3"))
   (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "3"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "36"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "16"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "17"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "18"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "6"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1,0") (ifseqformula "7"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "8"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "22"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "methodCallWithAssignment" (formula "46") (term "1") (inst "#v0=b"))
   (branch "Normal Execution (_group_35_B != null)"
       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
      (rule "false_right" (formula "46"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "b_19"))
      (rule "methodBodyExpand" (formula "46") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "returnUnfold" (formula "46") (term "1") (inst "#v0=b_20"))
      (rule "variableDeclarationAssign" (formula "46") (term "1"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "b_20"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "46") (term "1") (inst "#v0=s"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "s"))
      (rule "assignment_read_attribute_this" (formula "46") (term "1"))
       (builtin "One Step Simplification" (formula "46"))
       (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_getOrder,result_856,exc_1128,heapAfter_getOrder,anon_heap_getOrder") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
      (branch "Post (getOrder)"
          (builtin "One Step Simplification" (formula "36"))
          (builtin "One Step Simplification" (formula "37"))
          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "23")))
          (builtin "One Step Simplification" (formula "50"))
         (rule "andLeft" (formula "36"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1,0") (ifseqformula "36"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "39"))
         (rule "andLeft" (formula "40"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "42"))
         (rule "andLeft" (formula "39"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "39"))
         (rule "notLeft" (formula "39"))
         (rule "eqSymm" (formula "38"))
         (rule "replace_known_right" (formula "37") (term "0,1") (ifseqformula "45"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "46")))
         (rule "assignment" (formula "58") (term "1"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "applyEq" (formula "43") (term "4") (ifseqformula "42"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_0"))
         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "55")) (ifInst ""  (formula "5")))
         (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
         (rule "hideAuxiliaryEq" (formula "38"))
         (rule "eqSymm" (formula "38"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_math_BigInteger_value_0"))
         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "47")) (ifInst ""  (formula "46")))
         (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
         (rule "hideAuxiliaryEq" (formula "38"))
         (rule "eqSymm" (formula "38"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "44"))
         (rule "true_left" (formula "44"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "41"))
         (rule "true_left" (formula "41"))
         (rule "methodCallReturn" (formula "56") (term "1"))
         (rule "assignment" (formula "56") (term "1"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "methodCallEmpty" (formula "56") (term "1"))
         (rule "blockEmpty" (formula "56") (term "1"))
         (rule "assignment" (formula "56") (term "1"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "variableDeclarationAssign" (formula "56") (term "1"))
         (rule "variableDeclaration" (formula "56") (term "1") (newnames "var_2"))
         (rule "stringAssignment" (formula "56") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "58"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (ifseqformula "38"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "58") (term "1"))
         (rule "variableDeclaration" (formula "58") (term "1") (newnames "var_3"))
         (rule "assignment" (formula "58") (term "1"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "variableDeclarationAssign" (formula "58") (term "1"))
         (rule "variableDeclaration" (formula "58") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "58") (term "1"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "commute_or" (formula "1"))
          (builtin "Use Operation Contract" (formula "58") (newnames "heapBefore_uniformHash,result_857,exc_1129,heapAfter_uniformHash,anon_heap_uniformHash") (contract "de.polyas.core3.open.crypto.basic.Hashes[de.polyas.core3.open.crypto.basic.Hashes::uniformHash(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (uniformHash)"
             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "48")) (ifInst ""  (formula "66")) (ifInst ""  (formula "65")))
             (builtin "One Step Simplification" (formula "62"))
             (builtin "One Step Simplification" (formula "46"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0,0,0,1") (ifseqformula "37"))
            (rule "andLeft" (formula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,1,0") (ifseqformula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,1,0") (ifseqformula "37"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "49"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "56"))
            (rule "notLeft" (formula "49"))
            (rule "translateJavaAddInt" (formula "47") (term "1"))
            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "38")))
            (rule "true_left" (formula "56"))
            (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "inEqSimp_ltToLeq" (formula "53"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "53") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "52"))
            (rule "assignment" (formula "72") (term "1"))
             (builtin "One Step Simplification" (formula "72"))
            (rule "blockEmpty" (formula "72") (term "1"))
            (rule "variableDeclarationFinalAssign" (formula "72") (term "1"))
            (rule "variableDeclarationFinal" (formula "72") (term "1") (newnames "dk"))
            (rule "applyEq" (formula "50") (term "6") (ifseqformula "49"))
            (rule "inEqSimp_sepNegMonomial0" (formula "53"))
            (rule "polySimp_mulLiterals" (formula "53") (term "0"))
            (rule "polySimp_elimOne" (formula "53") (term "0"))
            (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "eqSymm" (formula "48"))
            (rule "elementOfSingleton" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "47"))
            (rule "hideAuxiliaryEq" (formula "47"))
            (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_1"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "52"))
            (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "52"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "52"))
            (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "52"))
            (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "pullOutSelect" (formula "52") (term "0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "expand_addJint" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
            (rule "expand_moduloInteger" (formula "47") (term "0"))
            (rule "replace_int_HALFRANGE" (formula "47") (term "0,0,1,0"))
            (rule "replace_int_MIN" (formula "47") (term "0,0"))
            (rule "replace_int_RANGE" (formula "47") (term "1,1,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
            (rule "mod_axiom" (formula "47") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
            (rule "mul_literals" (formula "47") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1"))
            (rule "polySimp_rightDist" (formula "47") (term "1"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
            (rule "polySimp_elimOne" (formula "47") (term "1,1"))
            (rule "polySimp_rightDist" (formula "47") (term "0,1"))
            (rule "mul_literals" (formula "47") (term "0,0,1"))
            (rule "polyDiv_pullOut" (formula "47") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
            (rule "equal_literals" (formula "47") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "0"))
            (rule "mul_literals" (formula "47") (term "0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "47"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "newSym_eq" (formula "47") (inst "l=l_0") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(int::select(anon_heap_uniformHash<<anonHeapFunction>>,
                        null,
                        de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
            Z(0(#)))),
    mul(int::select(heapAtPre_B<<anonHeapFunction>>,
                    null,
                    de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
        Z(0(#))))"))
            (rule "times_zero_1" (formula "47") (term "1,0,1,1"))
            (rule "times_zero_1" (formula "47") (term "1,1,1"))
            (rule "add_literals" (formula "47") (term "0,1,1"))
            (rule "add_zero_right" (formula "47") (term "1,1"))
            (rule "polySimp_addComm0" (formula "47") (term "1"))
            (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "47"))
            (rule "polySimp_homoEq" (formula "48"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0"))
            (rule "mul_literals" (formula "48") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "48") (term "0"))
            (rule "polySimp_addComm1" (formula "48") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
            (rule "add_literals" (formula "48") (term "0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "48"))
            (rule "polySimp_mulComm0" (formula "48") (term "1"))
            (rule "polySimp_rightDist" (formula "48") (term "1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
            (rule "polySimp_elimOne" (formula "48") (term "1,1"))
            (rule "polySimp_rightDist" (formula "48") (term "0,1"))
            (rule "mul_literals" (formula "48") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
            (rule "applyEq" (formula "30") (term "0") (ifseqformula "48"))
            (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "48"))
            (rule "inEqSimp_homoInEq0" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0"))
            (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "48"))
            (rule "polySimp_addAssoc" (formula "35") (term "1"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
            (rule "add_literals" (formula "35") (term "0,0,1"))
            (rule "add_zero_left" (formula "35") (term "0,1"))
            (rule "applyEqRigid" (formula "47") (term "1,0,0") (ifseqformula "48"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1"))
            (rule "polySimp_rightDist" (formula "30") (term "1"))
            (rule "mul_literals" (formula "30") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=l_0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,0"))
            (rule "equal_literals" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,1,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,1,1,1,0"))
            (rule "add_literals" (formula "47") (term "1,1,0,0,1,1,1,0"))
            (rule "times_zero_1" (formula "47") (term "1,0,0,1,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
            (rule "add_literals" (formula "47") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "47") (term "1,0,0"))
            (rule "add_zero_right" (formula "47") (term "0,0"))
            (rule "polySimp_sepNegMonomial" (formula "47"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "polySimp_elimOne" (formula "47") (term "0"))
            (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,2,0"))
            (rule "equal_literals" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "mul_literals" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "add_literals" (formula "47") (term "0,0"))
            (rule "add_zero_left" (formula "47") (term "0"))
            (rule "polySimp_invertEq" (formula "47"))
            (rule "mul_literals" (formula "47") (term "1"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "polySimp_elimOne" (formula "47") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "32"))
            (rule "polySimp_rightDist" (formula "35") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "35") (term "0"))
            (rule "polySimp_addComm0" (formula "35") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "35"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0"))
            (rule "polySimp_elimOne" (formula "35") (term "0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "52"))
            (rule "andLeft" (formula "52"))
            (rule "notLeft" (formula "52"))
            (rule "pullOutSelect" (formula "52") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "57") (term "0") (ifseqformula "52"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
            (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "70")) (ifInst ""  (formula "8")))
            (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "52"))
            (rule "hideAuxiliaryEq" (formula "52"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "52"))
            (rule "replaceKnownSelect_taclet0001_10" (formula "52") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0001_11" (formula "52") (term "1"))
            (rule "nonNull" (formula "52") (inst "i=i"))
            (rule "sub_literals" (formula "52") (term "2,1,0,1,1"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "62")))
            (rule "greater_literals" (formula "52") (term "0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "narrowSelectArrayType" (formula "52") (term "0,0,1,0") (ifseqformula "53") (ifseqformula "62"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
            (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
            (rule "commute_or" (formula "54"))
            (rule "nnf_imp2or" (formula "52") (term "0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "49"))
            (rule "nonNull" (formula "49") (inst "i=i"))
            (rule "greater_literals" (formula "49") (term "0,1"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "andLeft" (formula "49"))
            (rule "notLeft" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_1"))
            (rule "applyEq" (formula "55") (term "0") (ifseqformula "49"))
            (rule "applyEq" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replaceKnownSelect_taclet0001_10" (formula "49") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0001_11" (formula "49") (term "2,0"))
            (rule "elementOfSingleton" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0") (ifseqformula "49"))
            (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "49"))
            (rule "hideAuxiliaryEq" (formula "49"))
            (rule "nnf_notAnd" (formula "52") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
            (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
            (rule "mul_literals" (formula "52") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "49") (term "0"))
            (rule "commute_or" (formula "46") (term "0"))
            (rule "nnf_notAnd" (formula "49") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "69") (term "1"))
            (rule "variableDeclarationAssign" (formula "69") (term "1"))
            (rule "variableDeclaration" (formula "69") (term "1") (newnames "var_5"))
            (rule "assignment" (formula "69") (term "1"))
             (builtin "One Step Simplification" (formula "69"))
            (rule "variableDeclarationAssign" (formula "69") (term "1"))
            (rule "variableDeclaration" (formula "69") (term "1") (newnames "var_6"))
            (rule "commute_or_2" (formula "46"))
            (rule "commute_or_2" (formula "52") (term "0"))
            (rule "commute_or_2" (formula "49") (term "0"))
            (rule "commute_or" (formula "52") (term "0,0"))
            (rule "commute_or" (formula "49") (term "0,0"))
            (rule "div_axiom" (formula "47") (term "0") (inst "quotient=quotient_0"))
            (rule "mul_literals" (formula "47") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "47") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "equal_literals" (formula "47") (term "0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "47"))
            (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
            (rule "add_literals" (formula "49") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "49") (term "1"))
            (rule "add_literals" (formula "49") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "48"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
            (rule "polySimp_addComm1" (formula "48") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
            (rule "polySimp_addComm1" (formula "49") (term "0"))
            (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "50"))
            (rule "eqSymm" (formula "47"))
            (rule "applyEqRigid" (formula "49") (term "0,1,0,0") (ifseqformula "47"))
            (rule "times_zero_2" (formula "49") (term "1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "applyEqRigid" (formula "48") (term "0,1,0,0") (ifseqformula "47"))
            (rule "times_zero_2" (formula "48") (term "1,0,0"))
            (rule "add_zero_right" (formula "48") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49"))
            (rule "mul_literals" (formula "49") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48"))
            (rule "mul_literals" (formula "48") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "49"))
            (rule "polySimp_rightDist" (formula "30") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "mul_literals" (formula "30") (term "1"))
            (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "leq_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "leq_literals" (formula "30") (term "0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "34"))
            (rule "mul_literals" (formula "49") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "49") (term "0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
            (rule "elimGcdLeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "neg_literal" (formula "49") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
            (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "49") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
            (rule "add_literals" (formula "49") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "49") (term "1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "qeq_literals" (formula "49") (term "0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "49"))
            (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "30"))
            (rule "times_zero_2" (formula "35") (term "1,1"))
            (rule "add_literals" (formula "35") (term "1"))
            (rule "applyEq" (formula "49") (term "0") (ifseqformula "30"))
            (rule "leq_literals" (formula "49"))
            (rule "true_left" (formula "49"))
            (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
            (rule "qeq_literals" (formula "31"))
            (rule "true_left" (formula "31"))
            (rule "applyEqRigid" (formula "31") (term "0,1,1") (ifseqformula "30"))
            (rule "mul_literals" (formula "31") (term "1,1"))
            (rule "add_zero_right" (formula "31") (term "1"))
            (rule "applyEq" (formula "35") (term "0,0,1") (ifseqformula "30"))
            (rule "mul_literals" (formula "35") (term "0,1"))
            (rule "add_zero_left" (formula "35") (term "1"))
            (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "30"))
            (rule "times_zero_2" (formula "51") (term "1,0,1"))
            (rule "add_zero_right" (formula "51") (term "0,1"))
            (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "31"))
            (rule "leq_literals" (formula "48") (term "0"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "true_left" (formula "48"))
            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "33"))
            (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
            (rule "polySimp_addComm0" (formula "35") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "35"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0"))
            (rule "polySimp_elimOne" (formula "35") (term "0"))
            (rule "methodCallWithAssignment" (formula "70") (term "1") (inst "#v0=b"))
            (branch "Normal Execution (_group_35_A != null)"
                (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "77")))
               (rule "false_right" (formula "70"))
               (rule "variableDeclaration" (formula "70") (term "1") (newnames "b_21"))
               (rule "methodBodyExpand" (formula "70") (term "1") (newnames "heapBefore_order_0,savedHeapBefore_order_0"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "returnUnfold" (formula "70") (term "1") (inst "#v0=b_22"))
               (rule "variableDeclarationAssign" (formula "70") (term "1"))
               (rule "variableDeclaration" (formula "70") (term "1") (newnames "b_22"))
               (rule "methodCallWithAssignmentUnfoldTarget" (formula "70") (term "1") (inst "#v0=s"))
               (rule "variableDeclaration" (formula "70") (term "1") (newnames "s_1"))
               (rule "assignment_read_attribute_this" (formula "70") (term "1"))
                (builtin "One Step Simplification" (formula "70"))
                (builtin "Use Operation Contract" (formula "70") (newnames "heapBefore_getOrder_0,result_858,exc_1130,heapAfter_getOrder_0,anon_heap_getOrder_0") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
               (branch "Post (getOrder)"
                   (builtin "One Step Simplification" (formula "57"))
                   (builtin "One Step Simplification" (formula "74"))
                   (builtin "One Step Simplification" (formula "58"))
                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "11")))
                  (rule "andLeft" (formula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1,0") (ifseqformula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "60"))
                  (rule "andLeft" (formula "60"))
                  (rule "andLeft" (formula "61"))
                  (rule "andLeft" (formula "62"))
                  (rule "andLeft" (formula "61"))
                  (rule "notLeft" (formula "64"))
                  (rule "andLeft" (formula "61"))
                  (rule "andLeft" (formula "61"))
                  (rule "notLeft" (formula "61"))
                  (rule "notLeft" (formula "61"))
                  (rule "eqSymm" (formula "60"))
                  (rule "replace_known_right" (formula "59") (term "0,1") (ifseqformula "66"))
                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "67")))
                  (rule "assignment" (formula "82") (term "1"))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "applyEq" (formula "64") (term "4") (ifseqformula "58"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "77")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "60"))
                  (rule "hideAuxiliaryEq" (formula "60"))
                  (rule "eqSymm" (formula "60"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=java_math_BigInteger_value_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                  (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "60"))
                  (rule "hideAuxiliaryEq" (formula "60"))
                  (rule "eqSymm" (formula "60"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "65"))
                  (rule "true_left" (formula "65"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "63"))
                  (rule "true_left" (formula "63"))
                  (rule "methodCallReturn" (formula "80") (term "1"))
                  (rule "assignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "methodCallEmpty" (formula "80") (term "1"))
                  (rule "blockEmpty" (formula "80") (term "1"))
                  (rule "assignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "variableDeclarationAssign" (formula "80") (term "1"))
                  (rule "variableDeclaration" (formula "80") (term "1") (newnames "var_7"))
                  (rule "stringAssignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "82"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (ifseqformula "58"))
                  (rule "variableDeclarationAssign" (formula "81") (term "1"))
                  (rule "variableDeclaration" (formula "81") (term "1") (newnames "var_8"))
                  (rule "assignment" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "variableDeclarationAssign" (formula "81") (term "1"))
                  (rule "variableDeclaration" (formula "81") (term "1") (newnames "var_9"))
                  (rule "assignment" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "commute_or" (formula "1"))
                   (builtin "Use Operation Contract" (formula "81") (newnames "heapBefore_uniformHash_0,result_859,exc_1131,heapAfter_uniformHash_0,anon_heap_uniformHash_0") (contract "de.polyas.core3.open.crypto.basic.Hashes[de.polyas.core3.open.crypto.basic.Hashes::uniformHash(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
                  (branch "Post (uniformHash)"
                      (builtin "One Step Simplification" (formula "85"))
                      (builtin "One Step Simplification" (formula "66"))
                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "72")) (ifInst ""  (formula "88")) (ifInst ""  (formula "87")))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0,0,0,1") (ifseqformula "58"))
                     (rule "andLeft" (formula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1,0") (ifseqformula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1,0") (ifseqformula "58"))
                     (rule "andLeft" (formula "69"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "70"))
                     (rule "andLeft" (formula "72"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "72"))
                     (rule "andLeft" (formula "74"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "73"))
                     (rule "andLeft" (formula "76"))
                     (rule "andLeft" (formula "69"))
                     (rule "andLeft" (formula "77"))
                     (rule "notLeft" (formula "70"))
                     (rule "translateJavaAddInt" (formula "68") (term "1"))
                     (rule "replace_known_left" (formula "80") (term "0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "true_left" (formula "80"))
                     (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "true_left" (formula "79"))
                     (rule "replace_known_left" (formula "77") (term "1") (ifseqformula "60"))
                      (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "80")))
                     (rule "true_left" (formula "77"))
                     (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "78"))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "74"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "74") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "73"))
                     (rule "assignment" (formula "95") (term "1"))
                      (builtin "One Step Simplification" (formula "95"))
                     (rule "blockEmpty" (formula "95") (term "1"))
                     (rule "variableDeclarationFinalAssign" (formula "95") (term "1"))
                     (rule "variableDeclarationFinal" (formula "95") (term "1") (newnames "dk_1"))
                     (rule "applyEq" (formula "71") (term "6") (ifseqformula "70"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                     (rule "polySimp_elimOne" (formula "74") (term "0"))
                     (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "eqSymm" (formula "69"))
                     (rule "elementOfSingleton" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "68"))
                     (rule "hideAuxiliaryEq" (formula "68"))
                     (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_3"))
                     (rule "applyEq" (formula "68") (term "0,0") (ifseqformula "73"))
                     (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "73"))
                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "73"))
                     (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "73"))
                     (rule "applyEqReverse" (formula "74") (term "1,1") (ifseqformula "73"))
                     (rule "hideAuxiliaryEq" (formula "73"))
                     (rule "pullOutSelect" (formula "73") (term "0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "applyEqReverse" (formula "74") (term "0,0") (ifseqformula "73"))
                     (rule "hideAuxiliaryEq" (formula "73"))
                     (rule "expand_addJint" (formula "68") (term "0"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                     (rule "expand_moduloInteger" (formula "68") (term "0"))
                     (rule "replace_int_RANGE" (formula "68") (term "1,1,0"))
                     (rule "replace_int_MIN" (formula "68") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "68") (term "0,0,1,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                     (rule "mod_axiom" (formula "68") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "0,1,0"))
                     (rule "mul_literals" (formula "68") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1"))
                     (rule "polySimp_rightDist" (formula "68") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "68") (term "0,1"))
                     (rule "mul_literals" (formula "68") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,2,0,0"))
                     (rule "equal_literals" (formula "68") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "0"))
                     (rule "mul_literals" (formula "68") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "newSym_eq" (formula "68") (inst "l=l_1") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(int::select(anon_heap_uniformHash_0<<anonHeapFunction>>,
                        null,
                        de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
            Z(0(#)))),
    mul(int::select(heapAtPre_A<<anonHeapFunction>>,
                    null,
                    de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
        Z(0(#))))"))
                     (rule "times_zero_1" (formula "68") (term "1,1,1"))
                     (rule "times_zero_1" (formula "68") (term "1,0,1,1"))
                     (rule "polySimp_addLiterals" (formula "68") (term "1,1"))
                     (rule "add_literals" (formula "68") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "1"))
                     (rule "applyEqRigid" (formula "69") (term "0,0") (ifseqformula "68"))
                     (rule "polySimp_homoEq" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                     (rule "mul_literals" (formula "69") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "69"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1"))
                     (rule "polySimp_rightDist" (formula "69") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "69") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "69") (term "0,1"))
                     (rule "mul_literals" (formula "69") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1"))
                     (rule "applyEq" (formula "68") (term "1,0,0") (ifseqformula "69"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "69"))
                     (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "69"))
                     (rule "inEqSimp_homoInEq0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "69"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                     (rule "add_literals" (formula "24") (term "0,0,1"))
                     (rule "add_zero_left" (formula "24") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0") (inst "polyDivCoeff=l_1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,1,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "68") (term "1,1,0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "68") (term "1,0,0,1,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                     (rule "add_literals" (formula "68") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "68") (term "1,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,1,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "add_literals" (formula "68") (term "0,0"))
                     (rule "add_zero_left" (formula "68") (term "0"))
                     (rule "polySimp_invertEq" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "73"))
                     (rule "andLeft" (formula "73"))
                     (rule "notLeft" (formula "73"))
                     (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "78")))
                     (rule "ifthenelse_negated" (formula "73") (term "0"))
                     (rule "applyEq" (formula "73") (term "1") (ifseqformula "74"))
                     (rule "ifEqualsInteger" (formula "73"))
                     (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "74") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "74") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "74") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "74") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "74") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "73") (term "0,0,1") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                     (rule "true_left" (formula "73"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "74"))
                     (rule "replaceKnownSelect_taclet0000001_28" (formula "74") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000001_29" (formula "74") (term "1"))
                     (rule "nonNull" (formula "74") (inst "i=i"))
                     (rule "sub_literals" (formula "74") (term "2,1,0,1,1"))
                      (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "86")))
                     (rule "greater_literals" (formula "74") (term "0"))
                      (builtin "One Step Simplification" (formula "74"))
                     (rule "narrowSelectArrayType" (formula "74") (term "0,0,1,0") (ifseqformula "75") (ifseqformula "86"))
                     (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "74") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0"))
                     (rule "commute_or" (formula "76"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "70"))
                     (rule "nonNull" (formula "70") (inst "i=i"))
                     (rule "greater_literals" (formula "70") (term "0,1"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "sub_literals" (formula "70") (term "2,1,0,1"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "andLeft" (formula "70"))
                     (rule "notLeft" (formula "70"))
                     (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "70") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "70") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_3"))
                     (rule "applyEq" (formula "77") (term "0") (ifseqformula "70"))
                     (rule "applyEq" (formula "71") (term "0,1,1,1,0,0") (ifseqformula "70"))
                     (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "replaceKnownSelect_taclet0000001_28" (formula "70") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000001_29" (formula "70") (term "2,0"))
                     (rule "elementOfSingleton" (formula "70") (term "0,0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "applyEqReverse" (formula "71") (term "0,1,1,1,0,0") (ifseqformula "70"))
                     (rule "applyEqReverse" (formula "71") (term "1,0,0,1,0") (ifseqformula "70"))
                     (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "70"))
                     (rule "hideAuxiliaryEq" (formula "70"))
                     (rule "nnf_imp2or" (formula "74") (term "0"))
                     (rule "commute_or" (formula "67") (term "0"))
                     (rule "nnf_imp2or" (formula "70") (term "0"))
                     (rule "nnf_notAnd" (formula "74") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0"))
                     (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                     (rule "mul_literals" (formula "74") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "74") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "74") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "70") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "70") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0"))
                     (rule "times_zero_1" (formula "70") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                     (rule "mul_literals" (formula "70") (term "1,0,0,0"))
                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "93") (term "1"))
                     (rule "variableDeclarationAssign" (formula "93") (term "1"))
                     (rule "variableDeclaration" (formula "93") (term "1") (newnames "var_10"))
                     (rule "assignment" (formula "93") (term "1"))
                      (builtin "One Step Simplification" (formula "93"))
                     (rule "variableDeclarationAssign" (formula "93") (term "1"))
                     (rule "variableDeclaration" (formula "93") (term "1") (newnames "var_11"))
                     (rule "commute_or_2" (formula "67"))
                     (rule "commute_or_2" (formula "74") (term "0"))
                     (rule "commute_or_2" (formula "70") (term "0"))
                     (rule "commute_or" (formula "74") (term "0,0"))
                     (rule "commute_or" (formula "70") (term "0,0"))
                     (rule "div_axiom" (formula "68") (term "0") (inst "quotient=quotient_1"))
                     (rule "equal_literals" (formula "68") (term "0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,1,1,1"))
                     (rule "qeq_literals" (formula "68") (term "0,1"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "68"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0,1"))
                     (rule "add_literals" (formula "70") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "70") (term "1"))
                     (rule "add_literals" (formula "70") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "70"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "70") (term "0"))
                     (rule "applyEq" (formula "68") (term "0") (ifseqformula "71"))
                     (rule "eqSymm" (formula "68"))
                     (rule "applyEq" (formula "70") (term "0,1,0,0") (ifseqformula "68"))
                     (rule "mul_literals" (formula "70") (term "1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0"))
                     (rule "applyEqRigid" (formula "69") (term "0,1,0,0") (ifseqformula "68"))
                     (rule "mul_literals" (formula "69") (term "1,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70"))
                     (rule "mul_literals" (formula "70") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                     (rule "mul_literals" (formula "69") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "70"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                     (rule "mul_literals" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "19") (term "0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "22"))
                     (rule "mul_literals" (formula "70") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0"))
                     (rule "add_literals" (formula "70") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "70") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "70") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "70") (term "0,0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "70") (term "0,0,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
                     (rule "add_literals" (formula "70") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "70") (term "1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0"))
                     (rule "qeq_literals" (formula "70") (term "0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "70"))
                     (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "19"))
                     (rule "mul_literals" (formula "21") (term "1,1"))
                     (rule "add_literals" (formula "21") (term "1"))
                     (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                     (rule "qeq_literals" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "applyEqRigid" (formula "70") (term "0") (ifseqformula "19"))
                     (rule "leq_literals" (formula "70"))
                     (rule "true_left" (formula "70"))
                     (rule "applyEq" (formula "22") (term "0,1,1") (ifseqformula "19"))
                     (rule "mul_literals" (formula "22") (term "1,1"))
                     (rule "add_literals" (formula "22") (term "1"))
                     (rule "applyEq" (formula "24") (term "0,0,1") (ifseqformula "19"))
                     (rule "times_zero_2" (formula "24") (term "0,1"))
                     (rule "add_zero_left" (formula "24") (term "1"))
                     (rule "applyEq" (formula "72") (term "0,1,0,1") (ifseqformula "19"))
                     (rule "mul_literals" (formula "72") (term "1,0,1"))
                     (rule "add_literals" (formula "72") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "20"))
                     (rule "leq_literals" (formula "69") (term "0"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "true_left" (formula "69"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "21"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "methodCallWithAssignment" (formula "96") (term "1") (inst "#v0=e"))
                     (branch "Normal Execution (_group_35_B != null)"
                         (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "103")))
                        (rule "false_right" (formula "96"))
                        (rule "variableDeclaration" (formula "96") (term "1") (newnames "e_19"))
                        (rule "methodBodyExpand" (formula "96") (term "1") (newnames "heapBefore_generator,savedHeapBefore_generator"))
                         (builtin "One Step Simplification" (formula "96"))
                        (rule "returnUnfold" (formula "96") (term "1") (inst "#v0=e_20"))
                        (rule "variableDeclarationAssign" (formula "96") (term "1"))
                        (rule "variableDeclaration" (formula "96") (term "1") (newnames "e_20"))
                        (rule "methodCallWithAssignmentUnfoldTarget" (formula "96") (term "1") (inst "#v0=e_21"))
                        (rule "variableDeclaration" (formula "96") (term "1") (newnames "e_21"))
                        (rule "assignment_read_attribute_this" (formula "96") (term "1"))
                         (builtin "One Step Simplification" (formula "96"))
                        (rule "pullOutSelect" (formula "96") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")) (ifInst ""  (formula "27")))
                        (rule "applyEqReverse" (formula "97") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                         (builtin "Use Operation Contract" (formula "96") (newnames "heapBefore_getG,result_860,exc_1132") (contract "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec[org.bouncycastle.jce.spec.ECParameterSpec::getG()].JML normal_behavior operation contract.0"))
                        (branch "Post (getG)"
                            (builtin "One Step Simplification" (formula "81"))
                            (builtin "One Step Simplification" (formula "80"))
                            (builtin "One Step Simplification" (formula "79"))
                            (builtin "One Step Simplification" (formula "100"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,1,0") (ifseqformula "46"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1,1,0") (ifseqformula "38"))
                           (rule "andLeft" (formula "81"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "81"))
                           (rule "notLeft" (formula "81"))
                           (rule "eqSymm" (formula "80"))
                           (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "85"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "narrowSelectArrayType" (formula "52") (term "0,0,0,0,0") (ifseqformula "84") (ifseqformula "96"))
                           (rule "assignment" (formula "104") (term "1"))
                            (builtin "One Step Simplification" (formula "104"))
                           (rule "applyEq" (formula "82") (term "4") (ifseqformula "81"))
                           (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "100")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,1,0,0") (ifseqformula "38"))
                           (rule "eqSymm" (formula "81"))
                           (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "81"))
                           (rule "hideAuxiliaryEq" (formula "81"))
                           (rule "replace_known_left" (formula "80") (term "0,0,1,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "elementOfSingleton" (formula "80") (term "0,0"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "99")))
                           (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "100")) (ifInst ""  (formula "8")))
                           (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "80"))
                           (rule "hideAuxiliaryEq" (formula "80"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "80"))
                           (rule "replace_known_left" (formula "79") (term "0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "true_left" (formula "79"))
                           (rule "applyEq" (formula "93") (term "0") (ifseqformula "79"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "82"))
                           (rule "replaceKnownSelect_taclet000000001_39" (formula "82") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000001_40" (formula "82") (term "1,1"))
                           (rule "replaceKnownSelect_taclet000000001_39" (formula "82") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000001_40" (formula "82") (term "0,0,0"))
                           (rule "andLeft" (formula "82"))
                           (rule "notLeft" (formula "82"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "82"))
                           (rule "true_left" (formula "82"))
                           (rule "methodCallReturn" (formula "101") (term "1"))
                           (rule "assignment" (formula "101") (term "1"))
                            (builtin "One Step Simplification" (formula "101"))
                           (rule "methodCallEmpty" (formula "101") (term "1"))
                           (rule "blockEmpty" (formula "101") (term "1"))
                           (rule "assignment" (formula "101") (term "1"))
                            (builtin "One Step Simplification" (formula "101"))
                           (rule "variableDeclarationAssign" (formula "101") (term "1"))
                           (rule "variableDeclaration" (formula "101") (term "1") (newnames "var_12"))
                           (rule "assignment" (formula "101") (term "1"))
                            (builtin "One Step Simplification" (formula "101"))
                            (builtin "Use Operation Contract" (formula "101") (newnames "heapBefore_pow,result_861,exc_1133,heapAfter_pow,anon_heap_pow") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0"))
                           (branch "Post (pow)"
                               (builtin "One Step Simplification" (formula "85"))
                               (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "87")) (ifInst ""  (formula "91")) (ifInst ""  (formula "82")) (ifInst ""  (formula "87")) (ifInst ""  (formula "91")))
                               (builtin "One Step Simplification" (formula "105"))
                               (builtin "One Step Simplification" (formula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,1") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1,1") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                              (rule "andLeft" (formula "86"))
                              (rule "andLeft" (formula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,1,0") (ifseqformula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,1,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,1,1,0") (ifseqformula "38"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "91"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "87"))
                              (rule "notLeft" (formula "90"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "87"))
                              (rule "notLeft" (formula "87"))
                              (rule "notLeft" (formula "87"))
                              (rule "orRight" (formula "97"))
                              (rule "orRight" (formula "97"))
                              (rule "replace_known_left" (formula "95") (term "0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "95"))
                              (rule "true_left" (formula "95"))
                              (rule "replace_known_right" (formula "86") (term "1,0,0,1") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "99")) (ifInst ""  (formula "96")) (ifInst ""  (formula "98")))
                              (rule "assignment" (formula "118") (term "1"))
                               (builtin "One Step Simplification" (formula "118"))
                              (rule "blockEmpty" (formula "118") (term "1"))
                              (rule "applyEq" (formula "90") (term "6") (ifseqformula "85"))
                              (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "91"))
                              (rule "andLeft" (formula "91"))
                              (rule "notLeft" (formula "91"))
                              (rule "pullOutSelect" (formula "91") (term "0") (inst "selectSK=java_math_BigInteger_value_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "97")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "38"))
                              (rule "elementOfSingleton" (formula "91") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "97")))
                              (rule "ifthenelse_negated" (formula "91") (term "0"))
                              (rule "applyEqRigid" (formula "91") (term "1") (ifseqformula "92"))
                              (rule "ifEqualsInteger" (formula "91"))
                              (rule "pullOutSelect" (formula "97") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                              (rule "applyEq" (formula "92") (term "1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "1,0,1,0,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0001_12" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0001_13" (formula "1") (term "2,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "replaceKnownSelect_taclet0001_14" (formula "92") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0001_15" (formula "92") (term "0,1,0"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "92") (term "1,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "91") (term "1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                              (rule "true_left" (formula "91"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "92"))
                              (rule "true_left" (formula "92"))
                              (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "92"))
                              (rule "replaceKnownSelect_taclet0000000001_44" (formula "92") (term "0,1"))
                              (rule "replaceKnownSelect_taclet0000000001_45" (formula "92") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000001_46" (formula "92") (term "0,0,0"))
                              (rule "andLeft" (formula "92"))
                              (rule "notLeft" (formula "92"))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "92"))
                              (rule "replaceKnownSelect_taclet00000001_35" (formula "92") (term "1,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000001_37" (formula "92") (term "1,1,1"))
                              (rule "replaceKnownSelect_taclet00000001_35" (formula "92") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000001_37" (formula "92") (term "0,0,1,0"))
                              (rule "andLeft" (formula "92"))
                              (rule "andLeft" (formula "92"))
                              (rule "andLeft" (formula "94"))
                              (rule "notLeft" (formula "93"))
                              (rule "notLeft" (formula "92"))
                              (rule "pullOutSelect" (formula "92") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                              (rule "applyEq" (formula "96") (term "0") (ifseqformula "92"))
                              (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "125")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "92") (term "0,0,1,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "92"))
                              (rule "elementOfSingleton" (formula "92") (term "0,0"))
                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "125")))
                              (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "125")) (ifInst ""  (formula "26")))
                              (rule "applyEqReverse" (formula "96") (term "0") (ifseqformula "92"))
                              (rule "applyEqReverse" (formula "93") (term "1") (ifseqformula "92"))
                              (rule "hideAuxiliaryEq" (formula "92"))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "89"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "91"))
                              (rule "notLeft" (formula "89"))
                              (rule "notLeft" (formula "89"))
                              (rule "pullOutSelect" (formula "89") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_1"))
                              (rule "applyEq" (formula "98") (term "0") (ifseqformula "89"))
                              (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "127")))
                              (rule "replaceKnownSelect_taclet0000000001_47" (formula "89") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000001_49" (formula "89") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "89") (term "0,0,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "89"))
                              (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "89"))
                              (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "89"))
                              (rule "hideAuxiliaryEq" (formula "89"))
                              (rule "pullOutSelect" (formula "90") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_1"))
                              (rule "applyEq" (formula "97") (term "0") (ifseqformula "90"))
                              (rule "simplifySelectOfAnonEQ" (formula "90") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "126")))
                              (rule "replaceKnownSelect_taclet00000001_35" (formula "90") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000001_37" (formula "90") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "90") (term "0,0,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "90"))
                              (rule "applyEqReverse" (formula "91") (term "1") (ifseqformula "90"))
                              (rule "hideAuxiliaryEq" (formula "90"))
                              (rule "commute_or" (formula "95") (term "0"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "94"))
                              (rule "replaceKnownSelect_taclet000000001_39" (formula "94") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000001_40" (formula "94") (term "1,1"))
                              (rule "replaceKnownSelect_taclet000000001_39" (formula "94") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000001_40" (formula "94") (term "0,0,0"))
                              (rule "andLeft" (formula "94"))
                              (rule "notLeft" (formula "94"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "93"))
                              (rule "true_left" (formula "93"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "89"))
                              (rule "true_left" (formula "89"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "89"))
                              (rule "andLeft" (formula "89"))
                              (rule "notLeft" (formula "89"))
                              (rule "pullOutSelect" (formula "89") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                              (rule "applyEq" (formula "95") (term "0") (ifseqformula "89"))
                              (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "113")))
                              (rule "replaceKnownSelect_taclet000000001_39" (formula "89") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000001_40" (formula "89") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "89") (term "0,0,0,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "89"))
                              (rule "applyEqReverse" (formula "95") (term "0") (ifseqformula "89"))
                              (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "89"))
                              (rule "hideAuxiliaryEq" (formula "89"))
                              (rule "commute_or_2" (formula "93"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "92"))
                              (rule "true_left" (formula "92"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                              (rule "true_left" (formula "89"))
                              (rule "returnUnfold" (formula "113") (term "1") (inst "#v0=s"))
                              (rule "variableDeclarationAssign" (formula "113") (term "1"))
                              (rule "variableDeclaration" (formula "113") (term "1") (newnames "s_2"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "113") (term "1"))
                              (rule "variableDeclarationAssign" (formula "113") (term "1"))
                              (rule "variableDeclaration" (formula "113") (term "1") (newnames "var_13"))
                               (builtin "Use Operation Contract" (formula "113") (newnames "heapBefore_asBytes,result_862,exc_1134,heapAfter_asBytes,anon_heap_asBytes") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::asBytes(org.bouncycastle.math.ec.ECPoint)].JML normal_behavior operation contract.0"))
                              (branch "Post (asBytes)"
                                  (builtin "One Step Simplification" (formula "93"))
                                  (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "98")) (ifInst ""  (formula "98")))
                                  (builtin "One Step Simplification" (formula "92"))
                                  (builtin "One Step Simplification" (formula "117"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "1,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,0,1,1") (ifseqformula "38"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,1,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,1,0") (ifseqformula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,1,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,1,1,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,0,1,1,0") (ifseqformula "38"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "notLeft" (formula "97"))
                                 (rule "notLeft" (formula "94"))
                                 (rule "orRight" (formula "101"))
                                 (rule "orRight" (formula "101"))
                                 (rule "orRight" (formula "101"))
                                 (rule "replace_known_right" (formula "100") (term "0,0,0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "86")))
                                 (rule "true_left" (formula "100"))
                                 (rule "replace_known_right" (formula "93") (term "1,0,1") (ifseqformula "103"))
                                  (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "104")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
                                 (rule "assignment" (formula "127") (term "1"))
                                  (builtin "One Step Simplification" (formula "127"))
                                 (rule "applyEq" (formula "97") (term "5") (ifseqformula "96"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "98"))
                                 (rule "replaceKnownSelect_taclet0000000001_52" (formula "98") (term "1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000000001_50" (formula "98") (term "1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_53" (formula "98") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_51" (formula "98") (term "1,0,1"))
                                 (rule "replaceKnownSelect_taclet0000000001_50" (formula "98") (term "0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet0000000001_52" (formula "98") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_51" (formula "98") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_53" (formula "98") (term "0,0,1,0"))
                                 (rule "andLeft" (formula "98"))
                                 (rule "andLeft" (formula "99"))
                                 (rule "andLeft" (formula "98"))
                                 (rule "notLeft" (formula "98"))
                                 (rule "notLeft" (formula "98"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "95"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "notLeft" (formula "96"))
                                 (rule "notLeft" (formula "95"))
                                 (rule "pullOutSelect" (formula "96") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
                                 (rule "applyEq" (formula "104") (term "0") (ifseqformula "96"))
                                 (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "138")))
                                 (rule "replaceKnownSelect_taclet0000000001_52" (formula "96") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_53" (formula "96") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0,0") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "96") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "pullOutSelect" (formula "95") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
                                 (rule "applyEq" (formula "103") (term "0") (ifseqformula "95"))
                                 (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "137")))
                                 (rule "replaceKnownSelect_taclet0000000001_50" (formula "95") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_51" (formula "95") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0,0") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "95") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "95"))
                                 (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "95"))
                                 (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "95"))
                                 (rule "hideAuxiliaryEq" (formula "95"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "99"))
                                 (rule "true_left" (formula "99"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
                                 (rule "replaceKnownSelect_taclet0000000001_54" (formula "99") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_55" (formula "99") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet0000000001_54" (formula "99") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_55" (formula "99") (term "0,0,0"))
                                 (rule "andLeft" (formula "99"))
                                 (rule "notLeft" (formula "99"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "96"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "notLeft" (formula "96"))
                                 (rule "pullOutSelect" (formula "96") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_3"))
                                 (rule "applyEq" (formula "102") (term "0") (ifseqformula "96"))
                                 (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "125")))
                                 (rule "replaceKnownSelect_taclet0000000001_54" (formula "96") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_55" (formula "96") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0,0") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "96") (term "0,0,0,0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "95"))
                                 (rule "true_left" (formula "95"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "98"))
                                 (rule "true_left" (formula "98"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                                 (rule "true_left" (formula "95"))
                                  (builtin "Use Operation Contract" (formula "125") (newnames "heapBefore_asHexString,result_863,exc_1135,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
                                 (branch "Post (asHexString)"
                                     (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "106")) (ifInst ""  (formula "106")))
                                     (builtin "One Step Simplification" (formula "100"))
                                     (builtin "One Step Simplification" (formula "99"))
                                     (builtin "One Step Simplification" (formula "129"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,1") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,0,1") (ifseqformula "38"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,1,1") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,1,1") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                    (rule "andLeft" (formula "101"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "1,1,0") (ifseqformula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,1,0") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1,1,0") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,1,1,0") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,0,1,1,0") (ifseqformula "38"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "notLeft" (formula "103"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "notLeft" (formula "103"))
                                    (rule "notLeft" (formula "102"))
                                    (rule "orRight" (formula "106"))
                                    (rule "orRight" (formula "106"))
                                    (rule "orRight" (formula "106"))
                                    (rule "orRight" (formula "106"))
                                    (rule "replace_known_right" (formula "105") (term "0,0,0,0") (ifseqformula "112"))
                                     (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "115")) (ifInst ""  (formula "93")))
                                    (rule "true_left" (formula "105"))
                                    (rule "replace_known_right" (formula "101") (term "1,0,0,0,1") (ifseqformula "107"))
                                     (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "110")) (ifInst ""  (formula "105")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                    (rule "assignment" (formula "138") (term "1"))
                                     (builtin "One Step Simplification" (formula "138"))
                                    (rule "blockEmpty" (formula "138") (term "1"))
                                    (rule "applyEq" (formula "103") (term "3") (ifseqformula "100"))
                                    (rule "methodCallReturn" (formula "138") (term "1"))
                                    (rule "assignment" (formula "138") (term "1"))
                                     (builtin "One Step Simplification" (formula "138"))
                                    (rule "methodCallEmpty" (formula "138") (term "1"))
                                    (rule "tryEmpty" (formula "138") (term "1"))
                                    (rule "emptyModality" (formula "138") (term "1"))
                                     (builtin "One Step Simplification" (formula "138"))
                                    (rule "notRight" (formula "138"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "applyEq" (formula "109") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "110") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "108") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "108") (ifseqformula "13"))
                                 )
                                 (branch "Exceptional Post (asHexString)"
                                     (builtin "One Step Simplification" (formula "99"))
                                     (builtin "One Step Simplification" (formula "127"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,1,1") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,1,1") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "1,0") (ifseqformula "99"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,0") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1,0") (ifseqformula "84"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,1,0") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,0,1,0") (ifseqformula "38"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "102"))
                                    (rule "notLeft" (formula "100"))
                                    (rule "close" (formula "103") (ifseqformula "102"))
                                 )
                                 (branch "Pre (asHexString)"
                                     (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "102")) (ifInst ""  (formula "102")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "1") (ifseqformula "92"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0") (ifseqformula "92"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,1") (ifseqformula "84"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0,0") (ifseqformula "84"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0,0,0") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,1") (ifseqformula "46"))
                                    (rule "wellFormedAnonEQ" (formula "125") (term "0,0,0,0") (ifseqformula "38"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "125") (term "0,0,0,1") (ifseqformula "38"))
                                    (rule "replace_known_left" (formula "125") (term "1,0,0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "125") (ifInst ""  (formula "25")) (ifInst ""  (formula "37")) (ifInst ""  (formula "45")) (ifInst ""  (formula "91")) (ifInst ""  (formula "98")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "93")))
                                    (rule "closeTrue" (formula "125"))
                                 )
                              )
                              (branch "Exceptional Post (asBytes)"
                                  (builtin "One Step Simplification" (formula "115"))
                                  (builtin "One Step Simplification" (formula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,1,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,0") (ifseqformula "92"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,0") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,1,0") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,0,1,0") (ifseqformula "38"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "notLeft" (formula "93"))
                                 (rule "close" (formula "96") (ifseqformula "95"))
                              )
                              (branch "Pre (asBytes)"
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "94")) (ifInst ""  (formula "94")))
                                 (rule "wellFormedAnonEQ" (formula "113") (term "0,1") (ifseqformula "84"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1,1") (ifseqformula "84"))
                                 (rule "wellFormedAnonEQ" (formula "113") (term "0,0,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,1") (ifseqformula "46"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,1,1") (ifseqformula "38"))
                                 (rule "wellFormedAnonEQ" (formula "113") (term "0,0,0,1") (ifseqformula "38"))
                                 (rule "replace_known_left" (formula "113") (term "1,1,1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "25")) (ifInst ""  (formula "37")) (ifInst ""  (formula "45")) (ifInst ""  (formula "83")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "93")))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "113"))
                                 (rule "replaceKnownSelect_taclet0000000001_52" (formula "113") (term "1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000000001_50" (formula "113") (term "1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_53" (formula "113") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_51" (formula "113") (term "1,0,1"))
                                 (rule "replaceKnownSelect_taclet0000000001_52" (formula "113") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000000001_50" (formula "113") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_53" (formula "113") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_51" (formula "113") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "113") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "108")))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "113") (term "0"))
                                  (builtin "One Step Simplification" (formula "113"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "113"))
                                 (rule "replaceKnownSelect_taclet0000000001_54" (formula "113") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_55" (formula "113") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet0000000001_54" (formula "113") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000001_55" (formula "113") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "113") (term "0,0") (ifseqformula "95"))
                                  (builtin "One Step Simplification" (formula "113"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "113"))
                                 (rule "closeTrue" (formula "113"))
                              )
                              (branch "Null reference (_group_35_B = null)"
                                  (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "119")))
                                 (rule "closeTrue" (formula "113"))
                              )
                           )
                           (branch "Exceptional Post (pow)"
                               (builtin "One Step Simplification" (formula "84"))
                               (builtin "One Step Simplification" (formula "103"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "38"))
                              (rule "andLeft" (formula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,0") (ifseqformula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,0") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,1,0") (ifseqformula "38"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "87"))
                              (rule "notLeft" (formula "85"))
                              (rule "close" (formula "88") (ifseqformula "87"))
                           )
                           (branch "Pre (pow)"
                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "83")) (ifInst ""  (formula "87")) (ifInst ""  (formula "82")) (ifInst ""  (formula "83")) (ifInst ""  (formula "87")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,1") (ifseqformula "46"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1,1") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,1") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "101") (term "0,0,0,1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "101") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "101") (term "0,1,0"))
                              (rule "pullOutSelect" (formula "101") (term "0,0,0,0,1,0") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                              (rule "applyEq" (formula "102") (term "1,0,1,0,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0001_12" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0001_13" (formula "1") (term "2,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "102") (term "1,0,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "102") (term "0,0,0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "101") (term "0,0,0,1,0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "pullOutSelect" (formula "101") (term "0,0,1,0") (inst "selectSK=java_math_BigInteger_value_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                              (rule "replaceKnownSelect_taclet0001_14" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0001_15" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                              (rule "applyEqReverse" (formula "102") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "101") (term "0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "101") (term "0,0"))
                              (rule "replaceKnownSelect_taclet2000000001_43" (formula "101") (term "1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet2000000001_43" (formula "101") (term "0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000001_44" (formula "101") (term "1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet2000000001_45" (formula "101") (term "0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000001_46" (formula "101") (term "0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000001_44" (formula "101") (term "0,0,0,0,0"))
                              (rule "replace_known_left" (formula "101") (term "1,0,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "99")))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "101") (term "0"))
                              (rule "replaceKnownSelect_taclet00000001_35" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000001_37" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownSelect_taclet00000001_35" (formula "101") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000001_37" (formula "101") (term "0,0,1,0,0"))
                              (rule "replace_known_right" (formula "101") (term "0,1,0,0") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "pullOutSelect" (formula "101") (term "0,0,0,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                              (rule "applyEq" (formula "102") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")) (ifInst ""  (formula "27")))
                              (rule "applyEqReverse" (formula "102") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "102") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "101") (term "0,0,0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "101") (term "1,0"))
                              (rule "replaceKnownSelect_taclet000000001_39" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000001_40" (formula "101") (term "1,1,1,0"))
                              (rule "replaceKnownSelect_taclet000000001_39" (formula "101") (term "0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000001_40" (formula "101") (term "0,0,0,1,0"))
                              (rule "replace_known_right" (formula "101") (term "0,0,1,0") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "101") (term "0,0"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "101") (term "0"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "orRight" (formula "101"))
                              (rule "orRight" (formula "101"))
                              (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "102")) (ifInst ""  (formula "103")))
                              (rule "closeFalse" (formula "47"))
                           )
                           (branch "Null reference (var_5 = null)"
                               (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "107")))
                              (rule "closeTrue" (formula "101"))
                           )
                        )
                        (branch "Exceptional Post (getG)"
                            (builtin "One Step Simplification" (formula "98"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,0") (ifseqformula "46"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1,0") (ifseqformula "38"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "81"))
                           (rule "notLeft" (formula "79"))
                           (rule "close" (formula "83") (ifseqformula "82"))
                        )
                        (branch "Pre (getG)"
                            (builtin "One Step Simplification" (formula "96"))
                           (rule "wellFormedAnonEQ" (formula "96") (term "1") (ifseqformula "46"))
                           (rule "wellFormedAnonEQ" (formula "96") (term "0,1") (ifseqformula "38"))
                           (rule "replace_known_left" (formula "96") (term "0,0,1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "37")) (ifInst ""  (formula "45")))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "96"))
                           (rule "pullOutSelect" (formula "96") (term "1,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                           (rule "applyEq" (formula "97") (term "0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "9")))
                           (rule "applyEqReverse" (formula "97") (term "0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "97") (term "1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "96") (term "0,0") (ifseqformula "86"))
                            (builtin "One Step Simplification" (formula "96"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "96"))
                           (rule "closeTrue" (formula "96"))
                        )
                        (branch "Null reference (e_21 = null)"
                            (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "91")))
                           (rule "closeTrue" (formula "96"))
                        )
                     )
                     (branch "Null Reference (_group_35_B = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Exceptional Post (uniformHash)"
                      (builtin "One Step Simplification" (formula "66"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "andLeft" (formula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0") (ifseqformula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,0") (ifseqformula "58"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "67"))
                     (rule "andLeft" (formula "69"))
                     (rule "notLeft" (formula "67"))
                     (rule "close" (formula "71") (ifseqformula "70"))
                  )
                  (branch "Pre (uniformHash)"
                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "68")) (ifInst ""  (formula "84")) (ifInst ""  (formula "83")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0,0,1") (ifseqformula "58"))
                     (rule "wellFormedAnonEQ" (formula "81") (term "0,0,0,0,1") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,0,0,0,1") (ifseqformula "58"))
                     (rule "replace_known_left" (formula "81") (term "1,0,0,0,0,1") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "12")) (ifInst ""  (formula "65")) (ifInst ""  (formula "60")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                     (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "81") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "81") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "81") (term "0,1,0,1,0"))
                     (rule "pullOutSelect" (formula "81") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_2"))
                     (rule "applyEq" (formula "82") (term "1,1,1,0,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "82") (term "1,1,1,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "81") (term "0,0,1,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "pullOutSelect" (formula "81") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "81") (term "0,1,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "81") (term "1,0"))
                     (rule "replaceKnownSelect_taclet2000001_25" (formula "81") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000001_26" (formula "81") (term "1,1,0"))
                     (rule "nonNull" (formula "81") (term "1,0") (inst "i=i"))
                     (rule "greater_literals" (formula "81") (term "0,1,1,0"))
                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "73")))
                     (rule "sub_literals" (formula "81") (term "2,1,0,1,0"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_imp2or" (formula "81") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "81") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "81") (term "1,0,0,0,1,0"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "81") (term "0,0"))
                     (rule "pullOutSelect" (formula "81") (term "1,0,1,0,0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "82") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "82") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "81") (term "0,0,0,0") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "pullOutSelect" (formula "81") (term "0,0,0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")) (ifInst ""  (formula "17")))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "commute_or" (formula "81") (term "1"))
                     (rule "replace_known_left" (formula "81") (term "1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "allRight" (formula "81") (inst "sk=i_1"))
                     (rule "orRight" (formula "81"))
                     (rule "orRight" (formula "81"))
                     (rule "notRight" (formula "83"))
                     (rule "inEqSimp_geqRight" (formula "83"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "83"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")) (ifInst ""  (formula "27")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "15") (ifseqformula "76"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "allLeft" (formula "22") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "22") (term "0,0,1"))
                     (rule "leq_literals" (formula "22") (term "0,1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Exceptional Post (getOrder)"
                   (builtin "One Step Simplification" (formula "72"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "andLeft" (formula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0") (ifseqformula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "60"))
                  (rule "notLeft" (formula "58"))
                  (rule "close" (formula "61") (ifseqformula "60"))
               )
               (branch "Pre (getOrder)"
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "11")))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "70"))
                  (rule "closeTrue" (formula "70"))
               )
               (branch "Null reference (s_1 = null)"
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "64")))
                  (rule "closeTrue" (formula "70"))
               )
            )
            (branch "Null Reference (_group_35_A = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (uniformHash)"
             (builtin "One Step Simplification" (formula "60"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "andLeft" (formula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0") (ifseqformula "45"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0") (ifseqformula "37"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "48"))
            (rule "notLeft" (formula "46"))
            (rule "close" (formula "49") (ifseqformula "48"))
         )
         (branch "Pre (uniformHash)"
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "44")) (ifInst ""  (formula "62")) (ifInst ""  (formula "61")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,0,1") (ifseqformula "37"))
            (rule "wellFormedAnonEQ" (formula "58") (term "0,0,0,0,1") (ifseqformula "37"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,0,0,1") (ifseqformula "37"))
            (rule "replace_known_left" (formula "58") (term "0,1,1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "24")) (ifInst ""  (formula "36")) (ifInst ""  (formula "45")) (ifInst ""  (formula "38")) (ifInst ""  (formula "27")))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "58") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "58") (term "0,1,0,1,0"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
            (rule "applyEq" (formula "59") (term "1,1,1,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,1,1,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "58") (term "0,0,1,0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "58") (term "1,0"))
            (rule "replaceKnownSelect_taclet2001_7" (formula "58") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2001_8" (formula "58") (term "1,1,0"))
            (rule "nonNull" (formula "58") (term "1,0") (inst "i=i"))
            (rule "sub_literals" (formula "58") (term "2,1,0,1,1,1,0"))
             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "50")))
            (rule "greater_literals" (formula "58") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,1,0"))
            (rule "nnf_imp2or" (formula "58") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "58") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "58") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "1,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,1,0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "58") (term "0,0"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "58") (term "0,0,0,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")))
            (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "commute_or" (formula "58") (term "1"))
            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "allRight" (formula "58") (inst "sk=i_1"))
            (rule "orRight" (formula "58"))
            (rule "orRight" (formula "58"))
            (rule "notRight" (formula "60"))
            (rule "inEqSimp_geqRight" (formula "60"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "60"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "38")))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "27") (ifseqformula "53"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "35"))
            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
            (rule "mul_literals" (formula "2") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "allLeft" (formula "33") (inst "t=i_1"))
            (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
            (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
            (rule "add_literals" (formula "33") (term "0,0,1"))
            (rule "leq_literals" (formula "33") (term "0,1"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "33"))
            (rule "leq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
            (rule "qeq_literals" (formula "32") (term "0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "closeFalse" (formula "32"))
         )
      )
      (branch "Exceptional Post (getOrder)"
          (builtin "One Step Simplification" (formula "36"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "andLeft" (formula "36"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "36"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "37"))
         (rule "close" (formula "41") (ifseqformula "40"))
      )
      (branch "Pre (getOrder)"
          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "23")))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "46"))
         (rule "closeTrue" (formula "46"))
      )
      (branch "Null reference (s = null)"
          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "42")))
         (rule "closeTrue" (formula "46"))
      )
   )
   (branch "Null Reference (_group_35_B = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Same Types"
   (rule "boxToDiamond" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "boxToDiamond" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "16"))
   (rule "notLeft" (formula "15"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "18"))
   (rule "nonNull" (formula "18") (inst "i=i"))
   (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "greater_literals" (formula "18") (term "0,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "8"))
   (rule "nonNull" (formula "8") (inst "i=i"))
   (rule "greater_literals" (formula "8") (term "0,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "sub_literals" (formula "8") (term "2,1,0,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "17"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "commute_or_2" (formula "6") (term "0"))
   (rule "commute_or" (formula "14") (term "0,0"))
   (rule "commute_or" (formula "6") (term "0,0"))
   (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN,savedHeapBefore_loginPasswordFromMasterPIN"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "variableDeclarationFinalAssign" (formula "28") (term "1"))
   (rule "variableDeclarationFinal" (formula "28") (term "1") (newnames "skPrime"))
   (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN_0,savedHeapBefore_loginPasswordFromMasterPIN_0"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "variableDeclarationFinalAssign" (formula "27") (term "1"))
   (rule "variableDeclarationFinal" (formula "27") (term "1") (newnames "skPrime_1"))
   (rule "definitionOfSameTypes" (formula "35") (inst "i=i"))
    (builtin "One Step Simplification" (formula "35"))
   (rule "allRight" (formula "35") (inst "sk=i_0"))
   (rule "impRight" (formula "35"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,0"))
   (rule "castDel" (formula "37") (term "2,1,0"))
   (rule "castDel" (formula "37") (term "1,1,0"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0"))
   (rule "castDel" (formula "37") (term "1,0,0"))
   (rule "castDel" (formula "37") (term "2,0,0"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,1,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,1,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0,0,1"))
   (rule "castDel" (formula "37") (term "2,0,0,0,1"))
   (rule "castDel" (formula "37") (term "1,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "38") (term "0,1,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
   (rule "leq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "arrayLengthNotNegative" (formula "17") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "18") (term "0"))
   (rule "expand_inInt" (formula "18"))
   (rule "replace_int_MIN" (formula "18") (term "0,1"))
   (rule "replace_int_MAX" (formula "18") (term "1,0"))
   (rule "andLeft" (formula "18"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
   (rule "leq_literals" (formula "19") (term "0"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "true_left" (formula "19"))
   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "18"))
   (rule "polySimp_rightDist" (formula "19") (term "0,0"))
   (rule "mul_literals" (formula "19") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "19") (term "0"))
   (rule "add_literals" (formula "19") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "19"))
   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
   (rule "polySimp_elimOne" (formula "19") (term "0"))
   (rule "arrayLengthNotNegative" (formula "9") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "10") (term "0"))
   (rule "expand_inInt" (formula "10"))
   (rule "replace_int_MIN" (formula "10") (term "0,1"))
   (rule "replace_int_MAX" (formula "10") (term "1,0"))
   (rule "andLeft" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
   (rule "leq_literals" (formula "11") (term "0"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
   (rule "polySimp_rightDist" (formula "11") (term "0,0"))
   (rule "mul_literals" (formula "11") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "11") (term "0"))
   (rule "add_literals" (formula "11") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
   (rule "polySimp_elimOne" (formula "11") (term "0"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "35") (term "1"))
   (rule "variableDeclarationAssign" (formula "35") (term "1"))
   (rule "variableDeclaration" (formula "35") (term "1") (newnames "var"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "34") (term "1"))
   (rule "variableDeclarationAssign" (formula "34") (term "1"))
   (rule "variableDeclaration" (formula "34") (term "1") (newnames "var_1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "13"))
   (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0") (ifseqformula "15"))
   (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "37"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "15"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "16"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "4"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "5"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "6"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "20"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "methodCallWithAssignment" (formula "45") (term "1") (inst "#v0=b"))
   (branch "Normal Execution (_group_35_B != null)"
       (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "52")))
      (rule "false_right" (formula "45"))
      (rule "variableDeclaration" (formula "45") (term "1") (newnames "b_19"))
      (rule "methodBodyExpand" (formula "45") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
       (builtin "One Step Simplification" (formula "45"))
      (rule "returnUnfold" (formula "45") (term "1") (inst "#v0=b_20"))
      (rule "variableDeclarationAssign" (formula "45") (term "1"))
      (rule "variableDeclaration" (formula "45") (term "1") (newnames "b_20"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "45") (term "1") (inst "#v0=s"))
      (rule "variableDeclaration" (formula "45") (term "1") (newnames "s"))
      (rule "assignment_read_attribute_this" (formula "45") (term "1"))
       (builtin "One Step Simplification" (formula "45"))
       (builtin "Use Operation Contract" (formula "45") (newnames "heapBefore_getOrder,result_856,exc_1128,heapAfter_getOrder,anon_heap_getOrder") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
      (branch "Post (getOrder)"
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "21")))
          (builtin "One Step Simplification" (formula "36"))
          (builtin "One Step Simplification" (formula "49"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "andLeft" (formula "35"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,1,0") (ifseqformula "35"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "39"))
         (rule "andLeft" (formula "40"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "42"))
         (rule "andLeft" (formula "39"))
         (rule "andLeft" (formula "39"))
         (rule "notLeft" (formula "39"))
         (rule "notLeft" (formula "39"))
         (rule "eqSymm" (formula "38"))
         (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "45"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
         (rule "assignment" (formula "57") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "applyEq" (formula "42") (term "4") (ifseqformula "36"))
         (rule "pullOutSelect" (formula "38") (term "1") (inst "selectSK=java_math_BigInteger_value_0"))
         (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "35"))
          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "35"))
          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "46")) (ifInst ""  (formula "45")))
         (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
         (rule "hideAuxiliaryEq" (formula "39"))
         (rule "eqSymm" (formula "38"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "43"))
         (rule "true_left" (formula "43"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "41"))
         (rule "true_left" (formula "41"))
         (rule "methodCallReturn" (formula "55") (term "1"))
         (rule "assignment" (formula "55") (term "1"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "methodCallEmpty" (formula "55") (term "1"))
         (rule "blockEmpty" (formula "55") (term "1"))
         (rule "assignment" (formula "55") (term "1"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "variableDeclarationAssign" (formula "55") (term "1"))
         (rule "variableDeclaration" (formula "55") (term "1") (newnames "var_2"))
         (rule "stringAssignment" (formula "55") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
          (builtin "One Step Simplification" (formula "2"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (ifseqformula "37"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "57") (term "1"))
         (rule "variableDeclaration" (formula "57") (term "1") (newnames "var_3"))
         (rule "assignment" (formula "57") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "variableDeclarationAssign" (formula "57") (term "1"))
         (rule "variableDeclaration" (formula "57") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "57") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "commute_or" (formula "1"))
          (builtin "Use Operation Contract" (formula "57") (newnames "heapBefore_uniformHash,result_857,exc_1129,heapAfter_uniformHash,anon_heap_uniformHash") (contract "de.polyas.core3.open.crypto.basic.Hashes[de.polyas.core3.open.crypto.basic.Hashes::uniformHash(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (uniformHash)"
             (builtin "One Step Simplification" (formula "45"))
             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "47")) (ifInst ""  (formula "65")) (ifInst ""  (formula "64")))
             (builtin "One Step Simplification" (formula "44"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,1") (ifseqformula "36"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0,1") (ifseqformula "36"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0,0,1") (ifseqformula "36"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,0,0,0,1") (ifseqformula "36"))
            (rule "andLeft" (formula "44"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1,1,0") (ifseqformula "44"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1,1,0") (ifseqformula "36"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "55"))
            (rule "notLeft" (formula "49"))
            (rule "translateJavaAddInt" (formula "47") (term "1"))
            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "24"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "true_left" (formula "57"))
            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "59")))
            (rule "true_left" (formula "55"))
            (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "inEqSimp_ltToLeq" (formula "52"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "52") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "51"))
            (rule "assignment" (formula "71") (term "1"))
             (builtin "One Step Simplification" (formula "71"))
            (rule "blockEmpty" (formula "71") (term "1"))
            (rule "variableDeclarationFinalAssign" (formula "71") (term "1"))
            (rule "variableDeclarationFinal" (formula "71") (term "1") (newnames "dk"))
            (rule "applyEq" (formula "49") (term "6") (ifseqformula "45"))
            (rule "inEqSimp_sepNegMonomial0" (formula "52"))
            (rule "polySimp_mulLiterals" (formula "52") (term "0"))
            (rule "polySimp_elimOne" (formula "52") (term "0"))
            (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "eqSymm" (formula "48"))
            (rule "elementOfSingleton" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "47"))
            (rule "hideAuxiliaryEq" (formula "47"))
            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_1"))
            (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "51"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "51"))
            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "51"))
            (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "51"))
            (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "51"))
            (rule "hideAuxiliaryEq" (formula "51"))
            (rule "pullOutSelect" (formula "51") (term "0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
            (rule "hideAuxiliaryEq" (formula "51"))
            (rule "expand_addJint" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
            (rule "expand_moduloInteger" (formula "47") (term "0"))
            (rule "replace_int_RANGE" (formula "47") (term "1,1,0"))
            (rule "replace_int_HALFRANGE" (formula "47") (term "0,0,1,0"))
            (rule "replace_int_MIN" (formula "47") (term "0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
            (rule "mod_axiom" (formula "47") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
            (rule "mul_literals" (formula "47") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1"))
            (rule "polySimp_rightDist" (formula "47") (term "1"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
            (rule "polySimp_elimOne" (formula "47") (term "1,1"))
            (rule "polySimp_rightDist" (formula "47") (term "0,1"))
            (rule "mul_literals" (formula "47") (term "0,0,1"))
            (rule "polyDiv_pullOut" (formula "47") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
            (rule "equal_literals" (formula "47") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "0"))
            (rule "mul_literals" (formula "47") (term "0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "47"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "newSym_eq" (formula "47") (inst "l=l_0") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(int::select(anon_heap_uniformHash<<anonHeapFunction>>,
                        null,
                        de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
            Z(0(#)))),
    mul(int::select(heapAtPre_B<<anonHeapFunction>>,
                    null,
                    de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
        Z(0(#))))"))
            (rule "times_zero_1" (formula "47") (term "1,0,1,1"))
            (rule "times_zero_1" (formula "47") (term "1,1,1"))
            (rule "add_literals" (formula "47") (term "0,1,1"))
            (rule "add_literals" (formula "47") (term "1,1"))
            (rule "polySimp_addComm0" (formula "47") (term "1"))
            (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "47"))
            (rule "polySimp_homoEq" (formula "48"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0"))
            (rule "mul_literals" (formula "48") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "48") (term "0"))
            (rule "polySimp_addComm1" (formula "48") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
            (rule "add_literals" (formula "48") (term "0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "48"))
            (rule "polySimp_mulComm0" (formula "48") (term "1"))
            (rule "polySimp_rightDist" (formula "48") (term "1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
            (rule "polySimp_elimOne" (formula "48") (term "1,1"))
            (rule "polySimp_rightDist" (formula "48") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
            (rule "mul_literals" (formula "48") (term "0,0,1"))
            (rule "applyEq" (formula "32") (term "0") (ifseqformula "48"))
            (rule "inEqSimp_homoInEq0" (formula "32"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0"))
            (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
            (rule "mul_literals" (formula "32") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0"))
            (rule "applyEqRigid" (formula "47") (term "1,0,0") (ifseqformula "48"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,0"))
            (rule "applyEq" (formula "29") (term "0") (ifseqformula "48"))
            (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "48"))
            (rule "polySimp_addAssoc" (formula "34") (term "1"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
            (rule "add_literals" (formula "34") (term "0,0,1"))
            (rule "add_zero_left" (formula "34") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "32"))
            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
            (rule "polySimp_elimOne" (formula "32") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29"))
            (rule "polySimp_mulComm0" (formula "29") (term "1"))
            (rule "polySimp_rightDist" (formula "29") (term "1"))
            (rule "mul_literals" (formula "29") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
            (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=l_0"))
            (rule "equal_literals" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "1,1,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "47") (term "1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
            (rule "add_literals" (formula "47") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "47") (term "1,0,0"))
            (rule "add_literals" (formula "47") (term "0,0"))
            (rule "polySimp_sepNegMonomial" (formula "47"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "polySimp_elimOne" (formula "47") (term "0"))
            (rule "polyDiv_pullOut" (formula "47") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,0"))
            (rule "equal_literals" (formula "47") (term "0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "mul_literals" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "47") (term "0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "add_literals" (formula "47") (term "0,0"))
            (rule "add_zero_left" (formula "47") (term "0"))
            (rule "polySimp_invertEq" (formula "47"))
            (rule "mul_literals" (formula "47") (term "1"))
            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
            (rule "polySimp_elimOne" (formula "47") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "31"))
            (rule "polySimp_rightDist" (formula "34") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0"))
            (rule "polySimp_addComm0" (formula "34") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
            (rule "polySimp_elimOne" (formula "34") (term "0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "notLeft" (formula "51"))
            (rule "pullOutSelect" (formula "51") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "56") (term "0") (ifseqformula "51"))
            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
            (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "51"))
            (rule "hideAuxiliaryEq" (formula "51"))
            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "69")) (ifInst ""  (formula "26")))
            (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "51"))
            (rule "hideAuxiliaryEq" (formula "51"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "51"))
            (rule "replaceKnownSelect_taclet0002_9" (formula "51") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0002_10" (formula "51") (term "1"))
            (rule "nonNull" (formula "51") (inst "i=i"))
            (rule "sub_literals" (formula "51") (term "2,1,0,1,1"))
             (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "61")))
            (rule "greater_literals" (formula "51") (term "0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "narrowSelectArrayType" (formula "51") (term "0,0,1,0") (ifseqformula "52") (ifseqformula "61"))
            (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "51") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0"))
            (rule "commute_or" (formula "53"))
            (rule "nnf_imp2or" (formula "51") (term "0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "49"))
            (rule "nonNull" (formula "49") (inst "i=i"))
            (rule "greater_literals" (formula "49") (term "0,1"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "sub_literals" (formula "49") (term "2,1,0,1"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "andLeft" (formula "49"))
            (rule "notLeft" (formula "49"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_1"))
            (rule "applyEq" (formula "54") (term "0") (ifseqformula "49"))
            (rule "applyEq" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replaceKnownSelect_taclet0002_9" (formula "49") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0002_10" (formula "49") (term "2,0"))
            (rule "elementOfSingleton" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
            (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "49"))
            (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0") (ifseqformula "49"))
            (rule "hideAuxiliaryEq" (formula "49"))
            (rule "nnf_notAnd" (formula "51") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
            (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
            (rule "mul_literals" (formula "51") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "49") (term "0"))
            (rule "commute_or" (formula "46") (term "0"))
            (rule "nnf_notAnd" (formula "49") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "68") (term "1"))
            (rule "variableDeclarationAssign" (formula "68") (term "1"))
            (rule "variableDeclaration" (formula "68") (term "1") (newnames "var_5"))
            (rule "assignment" (formula "68") (term "1"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "variableDeclarationAssign" (formula "68") (term "1"))
            (rule "variableDeclaration" (formula "68") (term "1") (newnames "var_6"))
            (rule "commute_or_2" (formula "46"))
            (rule "commute_or_2" (formula "51") (term "0"))
            (rule "commute_or_2" (formula "49") (term "0"))
            (rule "commute_or" (formula "51") (term "0,0"))
            (rule "commute_or" (formula "49") (term "0,0"))
            (rule "div_axiom" (formula "47") (term "0") (inst "quotient=quotient_0"))
            (rule "equal_literals" (formula "47") (term "0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "qeq_literals" (formula "47") (term "0,1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "mul_literals" (formula "47") (term "1,1,1"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "47"))
            (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
            (rule "add_literals" (formula "49") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "49") (term "1"))
            (rule "add_literals" (formula "49") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "48"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
            (rule "polySimp_addComm1" (formula "48") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
            (rule "polySimp_addComm1" (formula "49") (term "0"))
            (rule "applyEq" (formula "47") (term "0") (ifseqformula "50"))
            (rule "eqSymm" (formula "47"))
            (rule "applyEq" (formula "49") (term "0,1,0,0") (ifseqformula "47"))
            (rule "mul_literals" (formula "49") (term "1,0,0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "applyEq" (formula "48") (term "0,1,0,0") (ifseqformula "47"))
            (rule "mul_literals" (formula "48") (term "1,0,0"))
            (rule "add_literals" (formula "48") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49"))
            (rule "mul_literals" (formula "49") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48"))
            (rule "mul_literals" (formula "48") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "49"))
            (rule "polySimp_rightDist" (formula "29") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0"))
            (rule "add_literals" (formula "29") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29"))
            (rule "mul_literals" (formula "29") (term "1"))
            (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
            (rule "leq_literals" (formula "29") (term "0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
            (rule "add_literals" (formula "29") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0"))
            (rule "leq_literals" (formula "29") (term "0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "33"))
            (rule "mul_literals" (formula "49") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "49") (term "0"))
            (rule "add_literals" (formula "49") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "49"))
            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
            (rule "elimGcdLeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "polySimp_addLiterals" (formula "49") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
            (rule "neg_literal" (formula "49") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "49") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
            (rule "add_literals" (formula "49") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "49") (term "1,0,0"))
            (rule "add_zero_right" (formula "49") (term "0,0"))
            (rule "qeq_literals" (formula "49") (term "0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "49"))
            (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "29"))
            (rule "mul_literals" (formula "31") (term "1,1"))
            (rule "add_zero_right" (formula "31") (term "1"))
            (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "29"))
            (rule "times_zero_2" (formula "34") (term "1,1"))
            (rule "add_zero_right" (formula "34") (term "1"))
            (rule "applyEq" (formula "49") (term "0") (ifseqformula "29"))
            (rule "leq_literals" (formula "49"))
            (rule "true_left" (formula "49"))
            (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "29"))
            (rule "qeq_literals" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "applyEqRigid" (formula "34") (term "0,0,1") (ifseqformula "29"))
            (rule "mul_literals" (formula "34") (term "0,1"))
            (rule "add_zero_left" (formula "34") (term "1"))
            (rule "applyEqRigid" (formula "51") (term "0,1,0,1") (ifseqformula "29"))
            (rule "mul_literals" (formula "51") (term "1,0,1"))
            (rule "add_zero_right" (formula "51") (term "0,1"))
            (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "30"))
            (rule "leq_literals" (formula "48") (term "0"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "true_left" (formula "48"))
            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "32"))
            (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
            (rule "polySimp_addComm0" (formula "34") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
            (rule "polySimp_elimOne" (formula "34") (term "0"))
            (rule "methodCallWithAssignment" (formula "69") (term "1") (inst "#v0=b"))
            (branch "Normal Execution (_group_35_A != null)"
                (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "76")))
               (rule "false_right" (formula "69"))
               (rule "variableDeclaration" (formula "69") (term "1") (newnames "b_21"))
               (rule "methodBodyExpand" (formula "69") (term "1") (newnames "heapBefore_order_0,savedHeapBefore_order_0"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "returnUnfold" (formula "69") (term "1") (inst "#v0=b_22"))
               (rule "variableDeclarationAssign" (formula "69") (term "1"))
               (rule "variableDeclaration" (formula "69") (term "1") (newnames "b_22"))
               (rule "methodCallWithAssignmentUnfoldTarget" (formula "69") (term "1") (inst "#v0=s"))
               (rule "variableDeclaration" (formula "69") (term "1") (newnames "s_1"))
               (rule "assignment_read_attribute_this" (formula "69") (term "1"))
                (builtin "One Step Simplification" (formula "69"))
                (builtin "Use Operation Contract" (formula "69") (newnames "heapBefore_getOrder_0,result_858,exc_1130,heapAfter_getOrder_0,anon_heap_getOrder_0") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
               (branch "Post (getOrder)"
                   (builtin "One Step Simplification" (formula "73"))
                   (builtin "One Step Simplification" (formula "56"))
                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "9")))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "andLeft" (formula "56"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,1,0") (ifseqformula "56"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "59"))
                  (rule "andLeft" (formula "59"))
                  (rule "andLeft" (formula "61"))
                  (rule "andLeft" (formula "59"))
                  (rule "notLeft" (formula "63"))
                  (rule "andLeft" (formula "59"))
                  (rule "notLeft" (formula "59"))
                  (rule "notLeft" (formula "59"))
                  (rule "eqSymm" (formula "58"))
                  (rule "replace_known_right" (formula "57") (term "0,1") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "66")))
                  (rule "assignment" (formula "81") (term "1"))
                   (builtin "One Step Simplification" (formula "81"))
                  (rule "applyEq" (formula "63") (term "4") (ifseqformula "62"))
                  (rule "pullOutSelect" (formula "58") (term "1") (inst "selectSK=java_math_BigInteger_value_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "67")) (ifInst ""  (formula "66")))
                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "76")) (ifInst ""  (formula "5")))
                  (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "58"))
                  (rule "hideAuxiliaryEq" (formula "58"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "64"))
                  (rule "true_left" (formula "64"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "61"))
                  (rule "true_left" (formula "61"))
                  (rule "methodCallReturn" (formula "79") (term "1"))
                  (rule "assignment" (formula "79") (term "1"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "methodCallEmpty" (formula "79") (term "1"))
                  (rule "blockEmpty" (formula "79") (term "1"))
                  (rule "assignment" (formula "79") (term "1"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "variableDeclarationAssign" (formula "79") (term "1"))
                  (rule "variableDeclaration" (formula "79") (term "1") (newnames "var_7"))
                  (rule "stringAssignment" (formula "79") (term "1"))
                   (builtin "One Step Simplification" (formula "81"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (ifseqformula "57"))
                  (rule "variableDeclarationAssign" (formula "80") (term "1"))
                  (rule "variableDeclaration" (formula "80") (term "1") (newnames "var_8"))
                  (rule "assignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "variableDeclarationAssign" (formula "80") (term "1"))
                  (rule "variableDeclaration" (formula "80") (term "1") (newnames "var_9"))
                  (rule "assignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "commute_or" (formula "1"))
                   (builtin "Use Operation Contract" (formula "80") (newnames "heapBefore_uniformHash_0,result_859,exc_1131,heapAfter_uniformHash_0,anon_heap_uniformHash_0") (contract "de.polyas.core3.open.crypto.basic.Hashes[de.polyas.core3.open.crypto.basic.Hashes::uniformHash(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
                  (branch "Post (uniformHash)"
                      (builtin "One Step Simplification" (formula "84"))
                      (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")) (ifInst ""  (formula "71")) (ifInst ""  (formula "87")) (ifInst ""  (formula "86")))
                      (builtin "One Step Simplification" (formula "66"))
                      (builtin "One Step Simplification" (formula "65"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0,1") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0,0,1") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0,0,0,1") (ifseqformula "57"))
                     (rule "andLeft" (formula "65"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "1,1,0") (ifseqformula "65"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,1,1,0") (ifseqformula "57"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "66"))
                     (rule "andLeft" (formula "69"))
                     (rule "andLeft" (formula "71"))
                     (rule "andLeft" (formula "66"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "71"))
                     (rule "andLeft" (formula "73"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "72"))
                     (rule "andLeft" (formula "75"))
                     (rule "andLeft" (formula "69"))
                     (rule "andLeft" (formula "76"))
                     (rule "notLeft" (formula "70"))
                     (rule "translateJavaAddInt" (formula "68") (term "1"))
                     (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "true_left" (formula "79"))
                     (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "80")))
                     (rule "true_left" (formula "76"))
                     (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "77"))
                     (rule "true_left" (formula "77"))
                     (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "77"))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "inEqSimp_ltToLeq" (formula "73"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "73") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "72"))
                     (rule "assignment" (formula "94") (term "1"))
                      (builtin "One Step Simplification" (formula "94"))
                     (rule "blockEmpty" (formula "94") (term "1"))
                     (rule "variableDeclarationFinalAssign" (formula "94") (term "1"))
                     (rule "variableDeclarationFinal" (formula "94") (term "1") (newnames "dk_1"))
                     (rule "applyEq" (formula "70") (term "6") (ifseqformula "66"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                     (rule "polySimp_elimOne" (formula "73") (term "0"))
                     (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "65"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "eqSymm" (formula "69"))
                     (rule "elementOfSingleton" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "68"))
                     (rule "hideAuxiliaryEq" (formula "68"))
                     (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_3"))
                     (rule "applyEq" (formula "74") (term "1,1") (ifseqformula "72"))
                     (rule "applyEq" (formula "68") (term "0,0") (ifseqformula "72"))
                     (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "72"))
                     (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "72"))
                     (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "72"))
                     (rule "hideAuxiliaryEq" (formula "72"))
                     (rule "pullOutSelect" (formula "72") (term "0,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "applyEqReverse" (formula "73") (term "0,0") (ifseqformula "72"))
                     (rule "hideAuxiliaryEq" (formula "72"))
                     (rule "expand_addJint" (formula "68") (term "0"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                     (rule "expand_moduloInteger" (formula "68") (term "0"))
                     (rule "replace_int_MIN" (formula "68") (term "0,0"))
                     (rule "replace_int_HALFRANGE" (formula "68") (term "0,0,1,0"))
                     (rule "replace_int_RANGE" (formula "68") (term "1,1,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                     (rule "mod_axiom" (formula "68") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "0,1,0"))
                     (rule "mul_literals" (formula "68") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1"))
                     (rule "polySimp_rightDist" (formula "68") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "68") (term "0,1"))
                     (rule "mul_literals" (formula "68") (term "0,0,1"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "mul_literals" (formula "68") (term "0,1,0,0,2,0,0"))
                     (rule "equal_literals" (formula "68") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "0"))
                     (rule "mul_literals" (formula "68") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "newSym_eq" (formula "68") (inst "l=l_1") (inst "newSymDef=add(add(Z(neglit(1(#))),
        mul(int::select(anon_heap_uniformHash_0<<anonHeapFunction>>,
                        null,
                        de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
            Z(0(#)))),
    mul(int::select(heapAtPre_A<<anonHeapFunction>>,
                    null,
                    de.polyas.core3.open.crypto.basic.Hashes::$currentIndex),
        Z(0(#))))"))
                     (rule "times_zero_1" (formula "68") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "68") (term "1,1,1"))
                     (rule "add_literals" (formula "68") (term "0,1,1"))
                     (rule "add_literals" (formula "68") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "68") (term "1"))
                     (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "68"))
                     (rule "polySimp_homoEq" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                     (rule "mul_literals" (formula "69") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "69"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1"))
                     (rule "polySimp_rightDist" (formula "69") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "69") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "69") (term "0,1"))
                     (rule "mul_literals" (formula "69") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1"))
                     (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "69"))
                     (rule "polySimp_addAssoc" (formula "22") (term "1"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                     (rule "add_literals" (formula "22") (term "0,0,1"))
                     (rule "add_zero_left" (formula "22") (term "0,1"))
                     (rule "applyEqRigid" (formula "68") (term "1,0,0") (ifseqformula "69"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,0"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "69"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "69"))
                     (rule "inEqSimp_homoInEq0" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1"))
                     (rule "polySimp_rightDist" (formula "17") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                     (rule "mul_literals" (formula "17") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0") (inst "polyDivCoeff=l_1"))
                     (rule "equal_literals" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,1,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "68") (term "1,1,0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "68") (term "1,0,0,1,1,1,0"))
                     (rule "add_zero_right" (formula "68") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                     (rule "add_literals" (formula "68") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "68") (term "1,0,0"))
                     (rule "add_zero_right" (formula "68") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "polyDiv_pullOut" (formula "68") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                     (rule "mul_literals" (formula "68") (term "0,1,0,0,2,0"))
                     (rule "equal_literals" (formula "68") (term "0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "68") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "68") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0"))
                     (rule "add_literals" (formula "68") (term "0,0"))
                     (rule "add_zero_left" (formula "68") (term "0"))
                     (rule "polySimp_invertEq" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "19"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "72"))
                     (rule "andLeft" (formula "72"))
                     (rule "notLeft" (formula "72"))
                     (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "77")))
                     (rule "ifthenelse_negated" (formula "72") (term "0"))
                     (rule "applyEqRigid" (formula "72") (term "1") (ifseqformula "73"))
                     (rule "ifEqualsInteger" (formula "72"))
                     (rule "pullOutSelect" (formula "77") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "73") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "73") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "73") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "73") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "73") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "73") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "73") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "73") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                     (rule "true_left" (formula "72"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "73"))
                     (rule "replaceKnownSelect_taclet0000002_26" (formula "73") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000002_27" (formula "73") (term "1"))
                     (rule "nonNull" (formula "73") (inst "i=i"))
                     (rule "sub_literals" (formula "73") (term "2,1,0,1,1"))
                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "85")))
                     (rule "greater_literals" (formula "73") (term "0"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "narrowSelectArrayType" (formula "73") (term "0,0,1,0") (ifseqformula "74") (ifseqformula "85"))
                     (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "73") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0"))
                     (rule "commute_or" (formula "75"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "70"))
                     (rule "nonNull" (formula "70") (inst "i=i"))
                     (rule "greater_literals" (formula "70") (term "0,1"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "sub_literals" (formula "70") (term "2,1,0,1"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "andLeft" (formula "70"))
                     (rule "notLeft" (formula "70"))
                     (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "70") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "70") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_3"))
                     (rule "applyEq" (formula "76") (term "0") (ifseqformula "70"))
                     (rule "applyEq" (formula "71") (term "0,1,1,1,0,0") (ifseqformula "70"))
                     (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "65"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "replaceKnownSelect_taclet0000002_26" (formula "70") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000002_27" (formula "70") (term "2,0"))
                     (rule "elementOfSingleton" (formula "70") (term "0,0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "applyEqReverse" (formula "71") (term "0,1,1,1,0,0") (ifseqformula "70"))
                     (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "70"))
                     (rule "applyEqReverse" (formula "71") (term "1,0,0,1,0") (ifseqformula "70"))
                     (rule "hideAuxiliaryEq" (formula "70"))
                     (rule "nnf_imp2or" (formula "73") (term "0"))
                     (rule "commute_or" (formula "67") (term "0"))
                     (rule "nnf_imp2or" (formula "70") (term "0"))
                     (rule "nnf_notAnd" (formula "73") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "73") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "73") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0"))
                     (rule "times_zero_1" (formula "73") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "73") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                     (rule "mul_literals" (formula "73") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "70") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "70") (term "0,0,0"))
                     (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                     (rule "mul_literals" (formula "70") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "70") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0"))
                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "92") (term "1"))
                     (rule "variableDeclarationAssign" (formula "92") (term "1"))
                     (rule "variableDeclaration" (formula "92") (term "1") (newnames "var_10"))
                     (rule "assignment" (formula "92") (term "1"))
                      (builtin "One Step Simplification" (formula "92"))
                     (rule "variableDeclarationAssign" (formula "92") (term "1"))
                     (rule "variableDeclaration" (formula "92") (term "1") (newnames "var_11"))
                     (rule "commute_or_2" (formula "67"))
                     (rule "commute_or_2" (formula "73") (term "0"))
                     (rule "commute_or_2" (formula "70") (term "0"))
                     (rule "commute_or" (formula "73") (term "0,0"))
                     (rule "commute_or" (formula "70") (term "0,0"))
                     (rule "div_axiom" (formula "68") (term "0") (inst "quotient=quotient_1"))
                     (rule "qeq_literals" (formula "68") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "equal_literals" (formula "68") (term "0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "mul_literals" (formula "68") (term "1,1,1"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "68"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0,1"))
                     (rule "add_literals" (formula "70") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "70") (term "1"))
                     (rule "add_literals" (formula "70") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "70"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "70") (term "0"))
                     (rule "applyEq" (formula "68") (term "0") (ifseqformula "71"))
                     (rule "eqSymm" (formula "68"))
                     (rule "applyEq" (formula "70") (term "0,1,0,0") (ifseqformula "68"))
                     (rule "times_zero_2" (formula "70") (term "1,0,0"))
                     (rule "add_literals" (formula "70") (term "0,0"))
                     (rule "applyEq" (formula "69") (term "0,1,0,0") (ifseqformula "68"))
                     (rule "mul_literals" (formula "69") (term "1,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "70"))
                     (rule "mul_literals" (formula "70") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                     (rule "mul_literals" (formula "69") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "20"))
                     (rule "mul_literals" (formula "69") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "69") (term "0"))
                     (rule "add_literals" (formula "69") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "69") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "leq_literals" (formula "69") (term "0,0"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0"))
                     (rule "neg_literal" (formula "69") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0"))
                     (rule "polySimp_addLiterals" (formula "69") (term "0,0,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
                     (rule "add_literals" (formula "69") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "69") (term "1,0,0"))
                     (rule "add_literals" (formula "69") (term "0,0"))
                     (rule "qeq_literals" (formula "69") (term "0"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "71"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "70"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                     (rule "qeq_literals" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "applyEq" (formula "70") (term "0") (ifseqformula "17"))
                     (rule "leq_literals" (formula "70"))
                     (rule "true_left" (formula "70"))
                     (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "17"))
                     (rule "mul_literals" (formula "18") (term "1,1"))
                     (rule "add_literals" (formula "18") (term "1"))
                     (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "17"))
                     (rule "mul_literals" (formula "21") (term "1,1"))
                     (rule "add_literals" (formula "21") (term "1"))
                     (rule "applyEqRigid" (formula "22") (term "0,0,1") (ifseqformula "17"))
                     (rule "times_zero_2" (formula "22") (term "0,1"))
                     (rule "add_zero_left" (formula "22") (term "1"))
                     (rule "applyEqRigid" (formula "72") (term "0,1,0,1") (ifseqformula "17"))
                     (rule "mul_literals" (formula "72") (term "1,0,1"))
                     (rule "add_literals" (formula "72") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "18"))
                     (rule "leq_literals" (formula "69") (term "0"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "true_left" (formula "69"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "methodCallWithAssignment" (formula "95") (term "1") (inst "#v0=e"))
                     (branch "Normal Execution (_group_35_B != null)"
                         (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "102")))
                        (rule "false_right" (formula "95"))
                        (rule "variableDeclaration" (formula "95") (term "1") (newnames "e_19"))
                        (rule "methodBodyExpand" (formula "95") (term "1") (newnames "heapBefore_generator,savedHeapBefore_generator"))
                         (builtin "One Step Simplification" (formula "95"))
                        (rule "returnUnfold" (formula "95") (term "1") (inst "#v0=e_20"))
                        (rule "variableDeclarationAssign" (formula "95") (term "1"))
                        (rule "variableDeclaration" (formula "95") (term "1") (newnames "e_20"))
                        (rule "methodCallWithAssignmentUnfoldTarget" (formula "95") (term "1") (inst "#v0=e_21"))
                        (rule "variableDeclaration" (formula "95") (term "1") (newnames "e_21"))
                        (rule "assignment_read_attribute_this" (formula "95") (term "1"))
                         (builtin "One Step Simplification" (formula "95"))
                        (rule "pullOutSelect" (formula "95") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "102")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "102")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "102")) (ifInst ""  (formula "25")))
                        (rule "applyEqReverse" (formula "96") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                         (builtin "Use Operation Contract" (formula "95") (newnames "heapBefore_getG,result_860,exc_1132") (contract "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec[org.bouncycastle.jce.spec.ECParameterSpec::getG()].JML normal_behavior operation contract.0"))
                        (branch "Post (getG)"
                            (builtin "One Step Simplification" (formula "99"))
                            (builtin "One Step Simplification" (formula "79"))
                            (builtin "One Step Simplification" (formula "78"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "1,1,0") (ifseqformula "45"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,1,1,0") (ifseqformula "37"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "78"))
                           (rule "andLeft" (formula "78"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "81"))
                           (rule "notLeft" (formula "81"))
                           (rule "eqSymm" (formula "80"))
                           (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "84"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "narrowSelectArrayType" (formula "52") (term "0,0,0,0,0") (ifseqformula "83") (ifseqformula "95"))
                           (rule "assignment" (formula "103") (term "1"))
                            (builtin "One Step Simplification" (formula "103"))
                           (rule "applyEq" (formula "81") (term "4") (ifseqformula "78"))
                           (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "100")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,1,0,0") (ifseqformula "37"))
                           (rule "eqSymm" (formula "81"))
                           (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "81"))
                           (rule "hideAuxiliaryEq" (formula "81"))
                           (rule "replace_known_left" (formula "80") (term "0,0,1,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "elementOfSingleton" (formula "80") (term "0,0"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "99")))
                           (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "37"))
                            (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "100")) (ifInst ""  (formula "7")))
                           (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "80"))
                           (rule "hideAuxiliaryEq" (formula "80"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "80"))
                           (rule "replace_known_left" (formula "79") (term "0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "true_left" (formula "79"))
                           (rule "applyEq" (formula "92") (term "0") (ifseqformula "79"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "81"))
                           (rule "replaceKnownSelect_taclet000000002_37" (formula "81") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000002_38" (formula "81") (term "1,1"))
                           (rule "replaceKnownSelect_taclet000000002_37" (formula "81") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000002_38" (formula "81") (term "0,0,0"))
                           (rule "andLeft" (formula "81"))
                           (rule "notLeft" (formula "81"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "81"))
                           (rule "true_left" (formula "81"))
                           (rule "methodCallReturn" (formula "100") (term "1"))
                           (rule "assignment" (formula "100") (term "1"))
                            (builtin "One Step Simplification" (formula "100"))
                           (rule "methodCallEmpty" (formula "100") (term "1"))
                           (rule "blockEmpty" (formula "100") (term "1"))
                           (rule "assignment" (formula "100") (term "1"))
                            (builtin "One Step Simplification" (formula "100"))
                           (rule "variableDeclarationAssign" (formula "100") (term "1"))
                           (rule "variableDeclaration" (formula "100") (term "1") (newnames "var_12"))
                           (rule "assignment" (formula "100") (term "1"))
                            (builtin "One Step Simplification" (formula "100"))
                            (builtin "Use Operation Contract" (formula "100") (newnames "heapBefore_pow,result_861,exc_1133,heapAfter_pow,anon_heap_pow") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0"))
                           (branch "Post (pow)"
                               (builtin "One Step Simplification" (formula "104"))
                               (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "86")) (ifInst ""  (formula "90")) (ifInst ""  (formula "81")) (ifInst ""  (formula "86")) (ifInst ""  (formula "90")))
                               (builtin "One Step Simplification" (formula "84"))
                               (builtin "One Step Simplification" (formula "83"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,1") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,1") (ifseqformula "37"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,1") (ifseqformula "37"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0,0,0,0,1,1") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "37"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "83"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,1,0") (ifseqformula "83"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1,1,0") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,1,1,0") (ifseqformula "37"))
                              (rule "andLeft" (formula "86"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "84"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "84"))
                              (rule "andLeft" (formula "90"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "85"))
                              (rule "notLeft" (formula "89"))
                              (rule "andLeft" (formula "85"))
                              (rule "notLeft" (formula "86"))
                              (rule "notLeft" (formula "85"))
                              (rule "orRight" (formula "96"))
                              (rule "orRight" (formula "96"))
                              (rule "replace_known_left" (formula "94") (term "0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "94"))
                              (rule "true_left" (formula "94"))
                              (rule "replace_known_right" (formula "84") (term "0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "95")) (ifInst ""  (formula "96")) (ifInst ""  (formula "97")))
                              (rule "assignment" (formula "117") (term "1"))
                               (builtin "One Step Simplification" (formula "117"))
                              (rule "blockEmpty" (formula "117") (term "1"))
                              (rule "applyEq" (formula "89") (term "6") (ifseqformula "88"))
                              (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "90"))
                              (rule "andLeft" (formula "90"))
                              (rule "notLeft" (formula "90"))
                              (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=java_math_BigInteger_value_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "90") (ifseqformula "45"))
                               (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "96")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,1,0,0") (ifseqformula "37"))
                              (rule "elementOfSingleton" (formula "90") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "96")))
                              (rule "ifthenelse_negated" (formula "90") (term "0"))
                              (rule "applyEq" (formula "90") (term "1") (ifseqformula "91"))
                              (rule "ifEqualsInteger" (formula "90"))
                              (rule "pullOutSelect" (formula "96") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                              (rule "applyEq" (formula "91") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "91") (term "1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "91") (term "1,0,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "91") (term "1,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "91") (term "1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "91") (term "1,0,1,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0002_11" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0002_12" (formula "1") (term "2,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "91") (term "1,0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "91") (term "1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "91") (term "1,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "91") (term "1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "91") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "replaceKnownSelect_taclet0002_13" (formula "91") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0002_14" (formula "91") (term "0,1,0"))
                              (rule "applyEqReverse" (formula "91") (term "1,0,1,0,0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "90") (term "0,0,0,1") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                              (rule "true_left" (formula "90"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "91"))
                              (rule "true_left" (formula "91"))
                              (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "91"))
                              (rule "replaceKnownSelect_taclet0000000002_42" (formula "91") (term "0,1"))
                              (rule "replaceKnownSelect_taclet0000000002_43" (formula "91") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000002_44" (formula "91") (term "0,0,0"))
                              (rule "andLeft" (formula "91"))
                              (rule "notLeft" (formula "91"))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "91"))
                              (rule "replaceKnownSelect_taclet00000002_33" (formula "91") (term "1,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000002_35" (formula "91") (term "1,1,1"))
                              (rule "replaceKnownSelect_taclet00000002_33" (formula "91") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000002_35" (formula "91") (term "0,0,1,0"))
                              (rule "andLeft" (formula "91"))
                              (rule "andLeft" (formula "91"))
                              (rule "andLeft" (formula "93"))
                              (rule "notLeft" (formula "91"))
                              (rule "notLeft" (formula "91"))
                              (rule "pullOutSelect" (formula "91") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                              (rule "applyEq" (formula "95") (term "0") (ifseqformula "91"))
                              (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "45"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "124")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "91") (term "0,0,1,0,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "91"))
                              (rule "elementOfSingleton" (formula "91") (term "0,0"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "124")))
                              (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "124")) (ifInst ""  (formula "24")))
                              (rule "applyEqReverse" (formula "92") (term "1") (ifseqformula "91"))
                              (rule "applyEqReverse" (formula "95") (term "0") (ifseqformula "91"))
                              (rule "hideAuxiliaryEq" (formula "91"))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "87"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "87"))
                              (rule "notLeft" (formula "88"))
                              (rule "notLeft" (formula "87"))
                              (rule "pullOutSelect" (formula "88") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_1"))
                              (rule "applyEq" (formula "97") (term "0") (ifseqformula "88"))
                              (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "126")))
                              (rule "replaceKnownSelect_taclet00000002_33" (formula "88") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000002_35" (formula "88") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,0") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,0,0") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "88") (term "0,0,0,0,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "88"))
                              (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "88"))
                              (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "88"))
                              (rule "hideAuxiliaryEq" (formula "88"))
                              (rule "pullOutSelect" (formula "87") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_1"))
                              (rule "applyEq" (formula "96") (term "0") (ifseqformula "87"))
                              (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "125")))
                              (rule "replaceKnownSelect_taclet0000000002_45" (formula "87") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000002_47" (formula "87") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,0") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,0,0") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "87") (term "0,0,0,0,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "87"))
                              (rule "applyEqReverse" (formula "96") (term "0") (ifseqformula "87"))
                              (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "87"))
                              (rule "hideAuxiliaryEq" (formula "87"))
                              (rule "commute_or" (formula "94") (term "0"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "93"))
                              (rule "replaceKnownSelect_taclet000000002_37" (formula "93") (term "1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000002_38" (formula "93") (term "1,1"))
                              (rule "replaceKnownSelect_taclet000000002_37" (formula "93") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000002_38" (formula "93") (term "0,0,0"))
                              (rule "andLeft" (formula "93"))
                              (rule "notLeft" (formula "93"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "92"))
                              (rule "true_left" (formula "92"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "88"))
                              (rule "andLeft" (formula "88"))
                              (rule "notLeft" (formula "88"))
                              (rule "pullOutSelect" (formula "88") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                              (rule "applyEq" (formula "95") (term "0") (ifseqformula "88"))
                              (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "114")))
                              (rule "replaceKnownSelect_taclet000000002_37" (formula "88") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000002_38" (formula "88") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,0") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,0,0") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "88") (term "0,0,0,0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "88"))
                              (rule "applyEqReverse" (formula "95") (term "0") (ifseqformula "88"))
                              (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "88"))
                              (rule "hideAuxiliaryEq" (formula "88"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "87"))
                              (rule "true_left" (formula "87"))
                              (rule "commute_or_2" (formula "92"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "91"))
                              (rule "true_left" (formula "91"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "87"))
                              (rule "true_left" (formula "87"))
                              (rule "returnUnfold" (formula "112") (term "1") (inst "#v0=s"))
                              (rule "variableDeclarationAssign" (formula "112") (term "1"))
                              (rule "variableDeclaration" (formula "112") (term "1") (newnames "s_2"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "112") (term "1"))
                              (rule "variableDeclarationAssign" (formula "112") (term "1"))
                              (rule "variableDeclaration" (formula "112") (term "1") (newnames "var_13"))
                               (builtin "Use Operation Contract" (formula "112") (newnames "heapBefore_asBytes,result_862,exc_1134,heapAfter_asBytes,anon_heap_asBytes") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::asBytes(org.bouncycastle.math.ec.ECPoint)].JML normal_behavior operation contract.0"))
                              (branch "Post (asBytes)"
                                  (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "97")) (ifInst ""  (formula "97")))
                                  (builtin "One Step Simplification" (formula "116"))
                                  (builtin "One Step Simplification" (formula "92"))
                                  (builtin "One Step Simplification" (formula "91"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,1") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,1") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,1,1") (ifseqformula "37"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,0,0,0,1,1") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,0,0,0,0,1,1") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "37"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "91"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "1,1,0") (ifseqformula "91"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,1,0") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,1,1,0") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,1,1,0") (ifseqformula "37"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "notLeft" (formula "96"))
                                 (rule "notLeft" (formula "93"))
                                 (rule "orRight" (formula "100"))
                                 (rule "orRight" (formula "100"))
                                 (rule "orRight" (formula "100"))
                                 (rule "replace_known_right" (formula "99") (term "1,0") (ifseqformula "107"))
                                  (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "105")) (ifInst ""  (formula "106")) (ifInst ""  (formula "84")))
                                 (rule "true_left" (formula "99"))
                                 (rule "replace_known_right" (formula "92") (term "0") (ifseqformula "103"))
                                  (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
                                 (rule "assignment" (formula "126") (term "1"))
                                  (builtin "One Step Simplification" (formula "126"))
                                 (rule "applyEq" (formula "96") (term "5") (ifseqformula "95"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "97"))
                                 (rule "replaceKnownSelect_taclet0000000002_50" (formula "97") (term "1,0,1"))
                                 (rule "replaceKnownSelect_taclet0000000002_48" (formula "97") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_51" (formula "97") (term "1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_49" (formula "97") (term "1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000000002_50" (formula "97") (term "0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet0000000002_48" (formula "97") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_51" (formula "97") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_49" (formula "97") (term "0,0,1,0"))
                                 (rule "andLeft" (formula "97"))
                                 (rule "andLeft" (formula "98"))
                                 (rule "andLeft" (formula "97"))
                                 (rule "notLeft" (formula "98"))
                                 (rule "notLeft" (formula "97"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "94"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "andLeft" (formula "96"))
                                 (rule "notLeft" (formula "94"))
                                 (rule "notLeft" (formula "94"))
                                 (rule "pullOutSelect" (formula "95") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
                                 (rule "applyEq" (formula "102") (term "0") (ifseqformula "95"))
                                 (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "137")))
                                 (rule "replaceKnownSelect_taclet0000000002_48" (formula "95") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_49" (formula "95") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0,0") (ifseqformula "37"))
                                 (rule "replace_known_left" (formula "95") (term "0,0,0,0,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "95"))
                                 (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "95"))
                                 (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "95"))
                                 (rule "hideAuxiliaryEq" (formula "95"))
                                 (rule "pullOutSelect" (formula "94") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
                                 (rule "applyEq" (formula "102") (term "0") (ifseqformula "94"))
                                 (rule "simplifySelectOfAnonEQ" (formula "94") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "136")))
                                 (rule "replaceKnownSelect_taclet0000000002_50" (formula "94") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_51" (formula "94") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,0,0") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,0,0,0") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,0,0,0,0") (ifseqformula "37"))
                                 (rule "replace_known_left" (formula "94") (term "0,0,0,0,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "94"))
                                 (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "94"))
                                 (rule "applyEqReverse" (formula "95") (term "1") (ifseqformula "94"))
                                 (rule "hideAuxiliaryEq" (formula "94"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "99"))
                                 (rule "replaceKnownSelect_taclet0000000002_52" (formula "99") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_53" (formula "99") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet0000000002_52" (formula "99") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_53" (formula "99") (term "0,0,0"))
                                 (rule "andLeft" (formula "99"))
                                 (rule "notLeft" (formula "99"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "98"))
                                 (rule "true_left" (formula "98"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "95"))
                                 (rule "andLeft" (formula "95"))
                                 (rule "notLeft" (formula "95"))
                                 (rule "pullOutSelect" (formula "95") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_3"))
                                 (rule "applyEq" (formula "101") (term "0") (ifseqformula "95"))
                                 (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "125")))
                                 (rule "replaceKnownSelect_taclet0000000002_52" (formula "95") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_53" (formula "95") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,0,0,0,0") (ifseqformula "37"))
                                 (rule "replace_known_left" (formula "95") (term "0,0,0,0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "95"))
                                 (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "95"))
                                 (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "95"))
                                 (rule "hideAuxiliaryEq" (formula "95"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "94"))
                                 (rule "true_left" (formula "94"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "97"))
                                 (rule "true_left" (formula "97"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "94"))
                                 (rule "true_left" (formula "94"))
                                  (builtin "Use Operation Contract" (formula "124") (newnames "heapBefore_asHexString,result_863,exc_1135,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
                                 (branch "Post (asHexString)"
                                     (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "105")) (ifInst ""  (formula "105")))
                                     (builtin "One Step Simplification" (formula "98"))
                                     (builtin "One Step Simplification" (formula "99"))
                                     (builtin "One Step Simplification" (formula "128"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "1") (ifseqformula "91"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1") (ifseqformula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1") (ifseqformula "45"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,1") (ifseqformula "37"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,1,1") (ifseqformula "91"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,0,1,1") (ifseqformula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "45"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "37"))
                                    (rule "andLeft" (formula "100"))
                                    (rule "andLeft" (formula "98"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "1,1,0") (ifseqformula "98"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,1,0") (ifseqformula "91"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,1,1,0") (ifseqformula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,1,1,0") (ifseqformula "45"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,1,1,0") (ifseqformula "37"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "andLeft" (formula "101"))
                                    (rule "andLeft" (formula "101"))
                                    (rule "notLeft" (formula "102"))
                                    (rule "andLeft" (formula "101"))
                                    (rule "andLeft" (formula "101"))
                                    (rule "notLeft" (formula "102"))
                                    (rule "notLeft" (formula "101"))
                                    (rule "orRight" (formula "105"))
                                    (rule "orRight" (formula "105"))
                                    (rule "orRight" (formula "105"))
                                    (rule "orRight" (formula "105"))
                                    (rule "replace_known_right" (formula "104") (term "0,0,0,0") (ifseqformula "111"))
                                     (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "92")))
                                    (rule "true_left" (formula "104"))
                                    (rule "replace_known_right" (formula "100") (term "1,0,0,0,0,1") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "109")) (ifInst ""  (formula "104")) (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                    (rule "assignment" (formula "137") (term "1"))
                                     (builtin "One Step Simplification" (formula "137"))
                                    (rule "blockEmpty" (formula "137") (term "1"))
                                    (rule "applyEq" (formula "102") (term "3") (ifseqformula "99"))
                                    (rule "methodCallReturn" (formula "137") (term "1"))
                                    (rule "assignment" (formula "137") (term "1"))
                                     (builtin "One Step Simplification" (formula "137"))
                                    (rule "methodCallEmpty" (formula "137") (term "1"))
                                    (rule "tryEmpty" (formula "137") (term "1"))
                                    (rule "emptyModality" (formula "137") (term "1"))
                                     (builtin "One Step Simplification" (formula "137"))
                                    (rule "notRight" (formula "137"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "applyEq" (formula "104") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "107") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "111") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "105") (term "2") (ifseqformula "1"))
                                    (rule "applyEq" (formula "110") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "103") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "109") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "112") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "108") (term "1,0") (ifseqformula "1"))
                                    (rule "methodCallWithAssignment" (formula "139") (term "1") (inst "#v0=e"))
                                    (branch "Normal Execution (_group_35_A != null)"
                                        (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "145")))
                                       (rule "false_right" (formula "139"))
                                       (rule "variableDeclaration" (formula "139") (term "1") (newnames "e_22"))
                                       (rule "methodBodyExpand" (formula "139") (term "1") (newnames "heapBefore_generator_0,savedHeapBefore_generator_0"))
                                        (builtin "One Step Simplification" (formula "139"))
                                       (rule "returnUnfold" (formula "139") (term "1") (inst "#v0=e_23"))
                                       (rule "variableDeclarationAssign" (formula "139") (term "1"))
                                       (rule "variableDeclaration" (formula "139") (term "1") (newnames "e_23"))
                                       (rule "methodCallWithAssignmentUnfoldTarget" (formula "139") (term "1") (inst "#v0=e_24"))
                                       (rule "variableDeclaration" (formula "139") (term "1") (newnames "e_24"))
                                       (rule "assignment_read_attribute_this" (formula "139") (term "1"))
                                        (builtin "One Step Simplification" (formula "139"))
                                       (rule "pullOutSelect" (formula "139") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "61"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")) (ifInst ""  (formula "15")))
                                       (rule "applyEqReverse" (formula "140") (term "0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                        (builtin "Use Operation Contract" (formula "139") (newnames "heapBefore_getG_0,result_864,exc_1136") (contract "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec[org.bouncycastle.jce.spec.ECParameterSpec::getG()].JML normal_behavior operation contract.0"))
                                       (branch "Post (getG)"
                                           (builtin "One Step Simplification" (formula "107"))
                                           (builtin "One Step Simplification" (formula "109"))
                                           (builtin "One Step Simplification" (formula "108"))
                                           (builtin "One Step Simplification" (formula "142"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "1,1,0") (ifseqformula "68"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "0,1,1,0") (ifseqformula "60"))
                                          (rule "andLeft" (formula "109"))
                                          (rule "andLeft" (formula "107"))
                                          (rule "andLeft" (formula "107"))
                                          (rule "andLeft" (formula "109"))
                                          (rule "andLeft" (formula "109"))
                                          (rule "andLeft" (formula "110"))
                                          (rule "notLeft" (formula "110"))
                                          (rule "eqSymm" (formula "109"))
                                          (rule "replace_known_right" (formula "108") (term "0") (ifseqformula "113"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "narrowSelectArrayType" (formula "75") (term "0,0,0,0,0") (ifseqformula "112") (ifseqformula "138"))
                                          (rule "assignment" (formula "146") (term "1"))
                                           (builtin "One Step Simplification" (formula "146"))
                                          (rule "applyEq" (formula "110") (term "4") (ifseqformula "107"))
                                          (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_4"))
                                          (rule "simplifySelectOfAnonEQ" (formula "109") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "142")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (term "0,1,0,0") (ifseqformula "60"))
                                          (rule "eqSymm" (formula "110"))
                                          (rule "applyEqReverse" (formula "109") (term "1") (ifseqformula "110"))
                                          (rule "hideAuxiliaryEq" (formula "110"))
                                          (rule "replace_known_left" (formula "109") (term "0,0,1,0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "elementOfSingleton" (formula "109") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "141")))
                                          (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_5"))
                                          (rule "simplifySelectOfAnonEQ" (formula "109") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "142")) (ifInst ""  (formula "8")))
                                          (rule "applyEqReverse" (formula "110") (term "0") (ifseqformula "109"))
                                          (rule "hideAuxiliaryEq" (formula "109"))
                                          (rule "applyEq" (formula "137") (term "0") (ifseqformula "109"))
                                          (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "109"))
                                          (rule "replace_known_left" (formula "108") (term "0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "true_left" (formula "108"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "110"))
                                          (rule "replaceKnownSelect_taclet00000000000002_66" (formula "110") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000000002_67" (formula "110") (term "1,1"))
                                          (rule "replaceKnownSelect_taclet00000000000002_66" (formula "110") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000000002_67" (formula "110") (term "0,0,0"))
                                          (rule "andLeft" (formula "110"))
                                          (rule "notLeft" (formula "110"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "110"))
                                          (rule "true_left" (formula "110"))
                                          (rule "methodCallReturn" (formula "143") (term "1"))
                                          (rule "assignment" (formula "143") (term "1"))
                                           (builtin "One Step Simplification" (formula "143"))
                                          (rule "methodCallEmpty" (formula "143") (term "1"))
                                          (rule "blockEmpty" (formula "143") (term "1"))
                                          (rule "assignment" (formula "143") (term "1"))
                                           (builtin "One Step Simplification" (formula "143"))
                                          (rule "variableDeclarationAssign" (formula "143") (term "1"))
                                          (rule "variableDeclaration" (formula "143") (term "1") (newnames "var_14"))
                                          (rule "assignment" (formula "143") (term "1"))
                                           (builtin "One Step Simplification" (formula "143"))
                                           (builtin "Use Operation Contract" (formula "143") (newnames "heapBefore_pow_0,result_865,exc_1137,heapAfter_pow_0,anon_heap_pow_0") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].JML normal_behavior operation contract.0"))
                                          (branch "Post (pow)"
                                              (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "115")) (ifInst ""  (formula "132")) (ifInst ""  (formula "110")) (ifInst ""  (formula "115")) (ifInst ""  (formula "132")))
                                              (builtin "One Step Simplification" (formula "147"))
                                              (builtin "One Step Simplification" (formula "113"))
                                              (builtin "One Step Simplification" (formula "112"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,1") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,0,1") (ifseqformula "60"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,1") (ifseqformula "60"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,0,0,0,1,1") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "60"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "112"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1,1,0") (ifseqformula "112"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,1,0") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,1,1,0") (ifseqformula "60"))
                                             (rule "andLeft" (formula "116"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "andLeft" (formula "113"))
                                             (rule "andLeft" (formula "117"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "113"))
                                             (rule "andLeft" (formula "119"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "andLeft" (formula "116"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "notLeft" (formula "118"))
                                             (rule "andLeft" (formula "114"))
                                             (rule "notLeft" (formula "114"))
                                             (rule "notLeft" (formula "114"))
                                             (rule "orRight" (formula "125"))
                                             (rule "orRight" (formula "125"))
                                             (rule "replace_known_left" (formula "123") (term "0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "123"))
                                             (rule "true_left" (formula "123"))
                                             (rule "replace_known_right" (formula "113") (term "1,0,0,1") (ifseqformula "125"))
                                              (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "127")) (ifInst ""  (formula "124")) (ifInst ""  (formula "126")))
                                             (rule "assignment" (formula "160") (term "1"))
                                              (builtin "One Step Simplification" (formula "160"))
                                             (rule "blockEmpty" (formula "160") (term "1"))
                                             (rule "applyEq" (formula "118") (term "6") (ifseqformula "117"))
                                             (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "119"))
                                             (rule "andLeft" (formula "119"))
                                             (rule "notLeft" (formula "119"))
                                             (rule "pullOutSelect" (formula "119") (term "0") (inst "selectSK=java_math_BigInteger_value_5"))
                                             (rule "simplifySelectOfAnonEQ" (formula "119") (ifseqformula "68"))
                                              (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "125")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0,1,0,0") (ifseqformula "60"))
                                             (rule "elementOfSingleton" (formula "119") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "125")))
                                             (rule "ifthenelse_negated" (formula "119") (term "0"))
                                             (rule "applyEq" (formula "119") (term "1") (ifseqformula "120"))
                                             (rule "ifEqualsInteger" (formula "119"))
                                             (rule "pullOutSelect" (formula "125") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_3"))
                                             (rule "applyEq" (formula "120") (term "1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "120") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "120") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "120") (term "1,0,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "120") (term "1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "120") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet0000002_29" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000002_30" (formula "1") (term "2,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "126") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "120") (term "1,0,1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "120") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "120") (term "1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "120") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "120") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "120") (term "1,0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "119") (term "0,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "17")))
                                             (rule "pullOutSelect" (formula "119") (term "0") (inst "selectSK=java_math_BigInteger_value_6"))
                                             (rule "simplifySelectOfAnonEQ" (formula "119") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "160")) (ifInst ""  (formula "17")))
                                             (rule "applyEqReverse" (formula "120") (term "0") (ifseqformula "119"))
                                             (rule "hideAuxiliaryEq" (formula "119"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "120"))
                                             (rule "true_left" (formula "120"))
                                             (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "120"))
                                             (rule "replaceKnownSelect_taclet000000000000002_71" (formula "120") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet000000000000002_72" (formula "120") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_73" (formula "120") (term "0,0,0"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "notLeft" (formula "120"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "120"))
                                             (rule "replaceKnownSelect_taclet0000000000002_62" (formula "120") (term "1,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000002_64" (formula "120") (term "1,1,1"))
                                             (rule "replaceKnownSelect_taclet0000000000002_62" (formula "120") (term "0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000002_64" (formula "120") (term "0,0,1,0"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "andLeft" (formula "120"))
                                             (rule "andLeft" (formula "122"))
                                             (rule "notLeft" (formula "121"))
                                             (rule "notLeft" (formula "120"))
                                             (rule "pullOutSelect" (formula "120") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_3"))
                                             (rule "applyEq" (formula "124") (term "0") (ifseqformula "120"))
                                             (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "68"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "166")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,1,0,0") (ifseqformula "60"))
                                             (rule "replace_known_left" (formula "120") (term "0,0,1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "120"))
                                             (rule "elementOfSingleton" (formula "120") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "166")))
                                             (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "166")) (ifInst ""  (formula "14")))
                                             (rule "applyEqReverse" (formula "121") (term "1") (ifseqformula "120"))
                                             (rule "applyEqReverse" (formula "124") (term "0") (ifseqformula "120"))
                                             (rule "hideAuxiliaryEq" (formula "120"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "116"))
                                             (rule "andLeft" (formula "116"))
                                             (rule "andLeft" (formula "116"))
                                             (rule "andLeft" (formula "118"))
                                             (rule "notLeft" (formula "117"))
                                             (rule "notLeft" (formula "116"))
                                             (rule "pullOutSelect" (formula "117") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_4"))
                                             (rule "applyEq" (formula "126") (term "0") (ifseqformula "117"))
                                             (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "112"))
                                              (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "168")))
                                             (rule "replaceKnownSelect_taclet0000000000002_62" (formula "117") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000002_64" (formula "117") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0,0") (ifseqformula "60"))
                                             (rule "replace_known_left" (formula "117") (term "0,0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "117"))
                                             (rule "applyEqReverse" (formula "118") (term "1") (ifseqformula "117"))
                                             (rule "applyEqReverse" (formula "126") (term "0") (ifseqformula "117"))
                                             (rule "hideAuxiliaryEq" (formula "117"))
                                             (rule "pullOutSelect" (formula "116") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_4"))
                                             (rule "applyEq" (formula "125") (term "0") (ifseqformula "116"))
                                             (rule "simplifySelectOfAnonEQ" (formula "116") (ifseqformula "112"))
                                              (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "167")))
                                             (rule "replaceKnownSelect_taclet000000000000002_76" (formula "116") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_78" (formula "116") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "0,0,0") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "0,0,0,0") (ifseqformula "60"))
                                             (rule "replace_known_left" (formula "116") (term "0,0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "116"))
                                             (rule "applyEqReverse" (formula "125") (term "0") (ifseqformula "116"))
                                             (rule "applyEqReverse" (formula "117") (term "1") (ifseqformula "116"))
                                             (rule "hideAuxiliaryEq" (formula "116"))
                                             (rule "commute_or" (formula "123") (term "0"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "122"))
                                             (rule "replaceKnownSelect_taclet00000000000002_66" (formula "122") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000002_67" (formula "122") (term "1,1"))
                                             (rule "replaceKnownSelect_taclet00000000000002_66" (formula "122") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000002_67" (formula "122") (term "0,0,0"))
                                             (rule "andLeft" (formula "122"))
                                             (rule "notLeft" (formula "122"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "121"))
                                             (rule "true_left" (formula "121"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "117"))
                                             (rule "andLeft" (formula "117"))
                                             (rule "notLeft" (formula "117"))
                                             (rule "pullOutSelect" (formula "117") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_6"))
                                             (rule "applyEq" (formula "124") (term "0") (ifseqformula "117"))
                                             (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "112"))
                                              (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "156")))
                                             (rule "replaceKnownSelect_taclet00000000000002_66" (formula "117") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000002_67" (formula "117") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0,0") (ifseqformula "60"))
                                             (rule "replace_known_left" (formula "117") (term "0,0,0,0,0") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "117"))
                                             (rule "applyEqReverse" (formula "118") (term "1") (ifseqformula "117"))
                                             (rule "applyEqReverse" (formula "124") (term "0") (ifseqformula "117"))
                                             (rule "hideAuxiliaryEq" (formula "117"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "116"))
                                             (rule "true_left" (formula "116"))
                                             (rule "commute_or_2" (formula "121"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "120"))
                                             (rule "true_left" (formula "120"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "116"))
                                             (rule "true_left" (formula "116"))
                                             (rule "returnUnfold" (formula "155") (term "1") (inst "#v0=s"))
                                             (rule "variableDeclarationAssign" (formula "155") (term "1"))
                                             (rule "variableDeclaration" (formula "155") (term "1") (newnames "s_3"))
                                             (rule "methodCallWithAssignmentUnfoldArguments" (formula "155") (term "1"))
                                             (rule "variableDeclarationAssign" (formula "155") (term "1"))
                                             (rule "variableDeclaration" (formula "155") (term "1") (newnames "var_15"))
                                              (builtin "Use Operation Contract" (formula "155") (newnames "heapBefore_asBytes_0,result_866,exc_1138,heapAfter_asBytes_0,anon_heap_asBytes_0") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::asBytes(org.bouncycastle.math.ec.ECPoint)].JML normal_behavior operation contract.0"))
                                             (branch "Post (asBytes)"
                                                 (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "126")) (ifInst ""  (formula "126")))
                                                 (builtin "One Step Simplification" (formula "159"))
                                                 (builtin "One Step Simplification" (formula "120"))
                                                 (builtin "One Step Simplification" (formula "121"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "1,1") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,1,1") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,1,1") (ifseqformula "60"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,1,1") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,1,1") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "60"))
                                                (rule "andLeft" (formula "122"))
                                                (rule "andLeft" (formula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "1,1,0") (ifseqformula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,1,1,0") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,1,1,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,0,1,1,0") (ifseqformula "60"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "122"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "122"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "andLeft" (formula "122"))
                                                (rule "notLeft" (formula "125"))
                                                (rule "andLeft" (formula "122"))
                                                (rule "notLeft" (formula "123"))
                                                (rule "notLeft" (formula "122"))
                                                (rule "orRight" (formula "129"))
                                                (rule "orRight" (formula "129"))
                                                (rule "orRight" (formula "129"))
                                                (rule "replace_known_right" (formula "128") (term "1,0") (ifseqformula "136"))
                                                 (builtin "One Step Simplification" (formula "128") (ifInst ""  (formula "134")) (ifInst ""  (formula "135")) (ifInst ""  (formula "113")))
                                                (rule "true_left" (formula "128"))
                                                (rule "replace_known_right" (formula "121") (term "0") (ifseqformula "132"))
                                                 (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "128")) (ifInst ""  (formula "129")) (ifInst ""  (formula "130")) (ifInst ""  (formula "131")))
                                                (rule "assignment" (formula "169") (term "1"))
                                                 (builtin "One Step Simplification" (formula "169"))
                                                (rule "applyEq" (formula "125") (term "5") (ifseqformula "124"))
                                                (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "126"))
                                                (rule "replaceKnownSelect_taclet000000000000002_81" (formula "126") (term "1,0,1"))
                                                (rule "replaceKnownSelect_taclet000000000000002_79" (formula "126") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_82" (formula "126") (term "1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_80" (formula "126") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000002_81" (formula "126") (term "0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet000000000000002_79" (formula "126") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_82" (formula "126") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_80" (formula "126") (term "0,0,1,0"))
                                                (rule "andLeft" (formula "126"))
                                                (rule "andLeft" (formula "127"))
                                                (rule "andLeft" (formula "126"))
                                                (rule "notLeft" (formula "127"))
                                                (rule "notLeft" (formula "126"))
                                                (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "123"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "notLeft" (formula "124"))
                                                (rule "notLeft" (formula "123"))
                                                (rule "pullOutSelect" (formula "124") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_5"))
                                                (rule "applyEq" (formula "132") (term "0") (ifseqformula "124"))
                                                (rule "simplifySelectOfAnonEQ" (formula "124") (ifseqformula "120"))
                                                 (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "179")))
                                                (rule "replaceKnownSelect_taclet000000000000002_79" (formula "124") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_80" (formula "124") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0,0") (ifseqformula "60"))
                                                (rule "replace_known_left" (formula "124") (term "0,0,0,0,0,0") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "124"))
                                                (rule "applyEqReverse" (formula "132") (term "0") (ifseqformula "124"))
                                                (rule "applyEqReverse" (formula "125") (term "1") (ifseqformula "124"))
                                                (rule "hideAuxiliaryEq" (formula "124"))
                                                (rule "pullOutSelect" (formula "123") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_5"))
                                                (rule "applyEq" (formula "131") (term "0") (ifseqformula "123"))
                                                (rule "simplifySelectOfAnonEQ" (formula "123") (ifseqformula "120"))
                                                 (builtin "One Step Simplification" (formula "123") (ifInst ""  (formula "178")))
                                                (rule "replaceKnownSelect_taclet000000000000002_81" (formula "123") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_82" (formula "123") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "123") (term "0,0,0") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "123") (term "0,0,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "123") (term "0,0,0,0,0") (ifseqformula "60"))
                                                (rule "replace_known_left" (formula "123") (term "0,0,0,0,0,0") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "123"))
                                                (rule "applyEqReverse" (formula "124") (term "1") (ifseqformula "123"))
                                                (rule "applyEqReverse" (formula "131") (term "0") (ifseqformula "123"))
                                                (rule "hideAuxiliaryEq" (formula "123"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "128"))
                                                (rule "replaceKnownSelect_taclet000000000000002_83" (formula "128") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_84" (formula "128") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000002_83" (formula "128") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_84" (formula "128") (term "0,0,0"))
                                                (rule "andLeft" (formula "128"))
                                                (rule "notLeft" (formula "128"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "127"))
                                                (rule "true_left" (formula "127"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "124"))
                                                (rule "andLeft" (formula "124"))
                                                (rule "notLeft" (formula "124"))
                                                (rule "pullOutSelect" (formula "124") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_7"))
                                                (rule "applyEq" (formula "130") (term "0") (ifseqformula "124"))
                                                (rule "simplifySelectOfAnonEQ" (formula "124") (ifseqformula "120"))
                                                 (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "167")))
                                                (rule "replaceKnownSelect_taclet000000000000002_83" (formula "124") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_84" (formula "124") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,0,0") (ifseqformula "60"))
                                                (rule "replace_known_left" (formula "124") (term "0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "124"))
                                                (rule "applyEqReverse" (formula "125") (term "1") (ifseqformula "124"))
                                                (rule "applyEqReverse" (formula "130") (term "0") (ifseqformula "124"))
                                                (rule "hideAuxiliaryEq" (formula "124"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "123"))
                                                (rule "true_left" (formula "123"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "126"))
                                                (rule "true_left" (formula "126"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "123"))
                                                (rule "true_left" (formula "123"))
                                                 (builtin "Use Operation Contract" (formula "167") (newnames "heapBefore_asHexString_0,result_867,exc_1139,heapAfter_asHexString_0,anon_heap_asHexString_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
                                                (branch "Post (asHexString)"
                                                    (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "134")) (ifInst ""  (formula "134")))
                                                    (builtin "One Step Simplification" (formula "127"))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                    (builtin "One Step Simplification" (formula "128"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "1") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "0,1") (ifseqformula "112"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "0,0,1") (ifseqformula "68"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "129") (term "0,0,0,1") (ifseqformula "60"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,1,1") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,1,1") (ifseqformula "112"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "68"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "60"))
                                                   (rule "andLeft" (formula "129"))
                                                   (rule "andLeft" (formula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "1,1,0") (ifseqformula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,1,1,0") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,1,1,0") (ifseqformula "112"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,1,1,0") (ifseqformula "68"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,0,1,1,0") (ifseqformula "60"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "129"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "129"))
                                                   (rule "andLeft" (formula "129"))
                                                   (rule "notLeft" (formula "131"))
                                                   (rule "andLeft" (formula "129"))
                                                   (rule "notLeft" (formula "129"))
                                                   (rule "notLeft" (formula "129"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "orRight" (formula "134"))
                                                   (rule "replace_known_right" (formula "133") (term "1,0") (ifseqformula "143"))
                                                    (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "140")) (ifInst ""  (formula "141")) (ifInst ""  (formula "142")) (ifInst ""  (formula "121")))
                                                   (rule "true_left" (formula "133"))
                                                   (rule "replace_known_right" (formula "128") (term "1,0,0,1") (ifseqformula "136"))
                                                    (builtin "One Step Simplification" (formula "128") (ifInst ""  (formula "138")) (ifInst ""  (formula "133")) (ifInst ""  (formula "134")) (ifInst ""  (formula "135")) (ifInst ""  (formula "137")))
                                                   (rule "assignment" (formula "180") (term "1"))
                                                    (builtin "One Step Simplification" (formula "180"))
                                                   (rule "blockEmpty" (formula "180") (term "1"))
                                                   (rule "applyEq" (formula "131") (term "3") (ifseqformula "130"))
                                                   (rule "methodCallReturn" (formula "180") (term "1"))
                                                   (rule "assignment" (formula "180") (term "1"))
                                                    (builtin "One Step Simplification" (formula "180"))
                                                   (rule "methodCallEmpty" (formula "180") (term "1"))
                                                   (rule "tryEmpty" (formula "180") (term "1"))
                                                   (rule "emptyModality" (formula "180") (term "1"))
                                                    (builtin "One Step Simplification" (formula "180"))
                                                   (rule "notRight" (formula "180"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "134") (term "2") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "1"))
                                                   (rule "sameTypeTrue" (formula "189") (ifseqformula "132") (ifseqformula "107"))
                                                   (rule "closeTrue" (formula "189"))
                                                )
                                                (branch "Exceptional Post (asHexString)"
                                                    (builtin "One Step Simplification" (formula "127"))
                                                    (builtin "One Step Simplification" (formula "169"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,1,1") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,1,1") (ifseqformula "112"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "68"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "127") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "60"))
                                                   (rule "andLeft" (formula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "1,0") (ifseqformula "127"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,1,0") (ifseqformula "120"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,1,0") (ifseqformula "112"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,1,0") (ifseqformula "68"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "128") (term "0,0,0,0,1,0") (ifseqformula "60"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "129"))
                                                   (rule "andLeft" (formula "128"))
                                                   (rule "andLeft" (formula "130"))
                                                   (rule "notLeft" (formula "128"))
                                                   (rule "close" (formula "132") (ifseqformula "131"))
                                                )
                                                (branch "Pre (asHexString)"
                                                    (builtin "One Step Simplification" (formula "167") (ifInst ""  (formula "130")) (ifInst ""  (formula "130")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "1") (ifseqformula "120"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0") (ifseqformula "120"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0,0") (ifseqformula "112"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "0,1") (ifseqformula "112"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "0,0,1") (ifseqformula "68"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0,0,0") (ifseqformula "68"))
                                                   (rule "wellFormedAnonEQ" (formula "167") (term "0,0,0,0") (ifseqformula "60"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "167") (term "0,0,0,1") (ifseqformula "60"))
                                                   (rule "replace_known_left" (formula "167") (term "1,0,0") (ifseqformula "111"))
                                                    (builtin "One Step Simplification" (formula "167") (ifInst ""  (formula "13")) (ifInst ""  (formula "59")) (ifInst ""  (formula "67")) (ifInst ""  (formula "119")) (ifInst ""  (formula "126")) (ifInst ""  (formula "127")) (ifInst ""  (formula "128")) (ifInst ""  (formula "129")) (ifInst ""  (formula "121")))
                                                   (rule "closeTrue" (formula "167"))
                                                )
                                             )
                                             (branch "Exceptional Post (asBytes)"
                                                 (builtin "One Step Simplification" (formula "157"))
                                                 (builtin "One Step Simplification" (formula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,1,1") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,1,1") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "60"))
                                                (rule "andLeft" (formula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "1,0") (ifseqformula "120"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,1,0") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,1,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,0,1,0") (ifseqformula "60"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "121"))
                                                (rule "andLeft" (formula "123"))
                                                (rule "notLeft" (formula "121"))
                                                (rule "close" (formula "124") (ifseqformula "123"))
                                             )
                                             (branch "Pre (asBytes)"
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "122")) (ifInst ""  (formula "122")))
                                                (rule "wellFormedAnonEQ" (formula "155") (term "0,1") (ifseqformula "112"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "1,1") (ifseqformula "112"))
                                                (rule "wellFormedAnonEQ" (formula "155") (term "0,0,1") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "0,1,1") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "0,0,1,1") (ifseqformula "60"))
                                                (rule "wellFormedAnonEQ" (formula "155") (term "0,0,0,1") (ifseqformula "60"))
                                                (rule "replace_known_left" (formula "155") (term "1,1,1") (ifseqformula "113"))
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "13")) (ifInst ""  (formula "59")) (ifInst ""  (formula "67")) (ifInst ""  (formula "111")) (ifInst ""  (formula "119")) (ifInst ""  (formula "120")) (ifInst ""  (formula "121")))
                                                (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "155"))
                                                (rule "replaceKnownSelect_taclet000000000000002_81" (formula "155") (term "1,0,1"))
                                                (rule "replaceKnownSelect_taclet000000000000002_79" (formula "155") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_82" (formula "155") (term "1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_80" (formula "155") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000002_79" (formula "155") (term "0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet000000000000002_81" (formula "155") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_80" (formula "155") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_82" (formula "155") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "155") (term "0,0,0") (ifseqformula "149"))
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "150")))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "155") (term "0"))
                                                 (builtin "One Step Simplification" (formula "155"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "155"))
                                                (rule "replaceKnownSelect_taclet000000000000002_83" (formula "155") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_84" (formula "155") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet000000000000002_83" (formula "155") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000000000002_84" (formula "155") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "155") (term "0,0") (ifseqformula "123"))
                                                 (builtin "One Step Simplification" (formula "155"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "155"))
                                                (rule "closeTrue" (formula "155"))
                                             )
                                             (branch "Null reference (_group_35_A = null)"
                                                 (builtin "One Step Simplification" (formula "155") (ifInst ""  (formula "160")))
                                                (rule "closeTrue" (formula "155"))
                                             )
                                          )
                                          (branch "Exceptional Post (pow)"
                                              (builtin "One Step Simplification" (formula "112"))
                                              (builtin "One Step Simplification" (formula "145"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,0,0,0,1,1") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "60"))
                                             (rule "andLeft" (formula "112"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1,0") (ifseqformula "112"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,0") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,1,0") (ifseqformula "60"))
                                             (rule "andLeft" (formula "113"))
                                             (rule "andLeft" (formula "113"))
                                             (rule "andLeft" (formula "115"))
                                             (rule "notLeft" (formula "113"))
                                             (rule "close" (formula "116") (ifseqformula "115"))
                                          )
                                          (branch "Pre (pow)"
                                              (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "111")) (ifInst ""  (formula "128")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "128")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "143") (term "0,1") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "143") (term "1,1") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "143") (term "0,1,1") (ifseqformula "60"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "143") (term "0,0,1") (ifseqformula "60"))
                                             (rule "replace_known_left" (formula "143") (term "0,0,0,1") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "143") (term "1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet0000000000002_62" (formula "143") (term "1,1,1,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000002_64" (formula "143") (term "1,1,1,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet0000000000002_62" (formula "143") (term "0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000000002_64" (formula "143") (term "0,0,1,0,1,1,1,0"))
                                             (rule "replace_known_right" (formula "143") (term "0,1,0,1,1,1,0") (ifseqformula "138"))
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "pullOutSelect" (formula "143") (term "1,0,1,1,1,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_3"))
                                             (rule "applyEq" (formula "144") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "61"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")) (ifInst ""  (formula "15")))
                                             (rule "applyEqReverse" (formula "144") (term "1,0,1,1,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "144") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "143") (term "0,0,1,1,1,0") (ifseqformula "137"))
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "143") (term "0,0"))
                                             (rule "pullOutSelect" (formula "143") (term "0,1,0,0") (inst "selectSK=java_math_BigInteger_value_5"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "61"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "144") (term "0,0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_3"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet0000002_29" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000002_30" (formula "1") (term "2,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "145") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "142"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")) (ifInst ""  (formula "18")))
                                             (rule "applyEqReverse" (formula "144") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "143") (term "0,0,0,0") (ifseqformula "141"))
                                              (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "18")))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "143") (term "0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "143") (term "0,1,0"))
                                             (rule "replaceKnownSelect_taclet200000000000002_73" (formula "143") (term "0,1,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet200000000000002_77" (formula "143") (term "0,1,0,1,0"))
                                             (rule "replaceKnownSelect_taclet200000000000002_74" (formula "143") (term "0,0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet200000000000002_75" (formula "143") (term "0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "143") (term "0,0,0,1,0") (ifseqformula "141"))
                                              (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "18")))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "143") (term "1,0"))
                                             (rule "replaceKnownSelect_taclet00000000000002_66" (formula "143") (term "1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000002_67" (formula "143") (term "1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00000000000002_66" (formula "143") (term "0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000000002_67" (formula "143") (term "0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "143") (term "0,0,1,0") (ifseqformula "111"))
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "143") (term "0"))
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "orRight" (formula "143"))
                                             (rule "orRight" (formula "143"))
                                             (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "144"))
                                              (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "145")) (ifInst ""  (formula "143")))
                                             (rule "closeFalse" (formula "70"))
                                          )
                                          (branch "Null reference (var_10 = null)"
                                              (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "148")))
                                             (rule "closeTrue" (formula "143"))
                                          )
                                       )
                                       (branch "Exceptional Post (getG)"
                                           (builtin "One Step Simplification" (formula "107"))
                                           (builtin "One Step Simplification" (formula "140"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "1,0") (ifseqformula "68"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "0,1,0") (ifseqformula "60"))
                                          (rule "andLeft" (formula "107"))
                                          (rule "andLeft" (formula "107"))
                                          (rule "andLeft" (formula "109"))
                                          (rule "notLeft" (formula "107"))
                                          (rule "close" (formula "110") (ifseqformula "109"))
                                       )
                                       (branch "Pre (getG)"
                                           (builtin "One Step Simplification" (formula "139"))
                                          (rule "wellFormedAnonEQ" (formula "139") (term "1") (ifseqformula "68"))
                                          (rule "wellFormedAnonEQ" (formula "139") (term "0,1") (ifseqformula "60"))
                                          (rule "replace_known_left" (formula "139") (term "1,1") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "13")) (ifInst ""  (formula "59")))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "139"))
                                          (rule "pullOutSelect" (formula "139") (term "0,0,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_4"))
                                          (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "61"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "140") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "140") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "139") (term "0,0") (ifseqformula "130"))
                                           (builtin "One Step Simplification" (formula "139"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "139"))
                                          (rule "closeTrue" (formula "139"))
                                       )
                                       (branch "Null reference (e_24 = null)"
                                           (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "134")))
                                          (rule "closeTrue" (formula "139"))
                                       )
                                    )
                                    (branch "Null Reference (_group_35_A = null)"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Exceptional Post (asHexString)"
                                     (builtin "One Step Simplification" (formula "126"))
                                     (builtin "One Step Simplification" (formula "98"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,1,1") (ifseqformula "91"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,0,1,1") (ifseqformula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "45"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0,0,0,0,0,1,1") (ifseqformula "37"))
                                    (rule "andLeft" (formula "98"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "1,0") (ifseqformula "98"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,0") (ifseqformula "91"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,1,0") (ifseqformula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,1,0") (ifseqformula "45"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "andLeft" (formula "101"))
                                    (rule "notLeft" (formula "99"))
                                    (rule "close" (formula "102") (ifseqformula "101"))
                                 )
                                 (branch "Pre (asHexString)"
                                     (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "101")) (ifInst ""  (formula "101")))
                                    (rule "wellFormedAnonEQ" (formula "124") (term "0") (ifseqformula "91"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "1") (ifseqformula "91"))
                                    (rule "wellFormedAnonEQ" (formula "124") (term "0,0") (ifseqformula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,1") (ifseqformula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,1") (ifseqformula "45"))
                                    (rule "wellFormedAnonEQ" (formula "124") (term "0,0,0") (ifseqformula "45"))
                                    (rule "wellFormedAnonEQ" (formula "124") (term "0,0,0,0") (ifseqformula "37"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (term "0,0,0,1") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "124") (term "1,0,0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "23")) (ifInst ""  (formula "36")) (ifInst ""  (formula "44")) (ifInst ""  (formula "90")) (ifInst ""  (formula "97")) (ifInst ""  (formula "98")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "92")))
                                    (rule "closeTrue" (formula "124"))
                                 )
                              )
                              (branch "Exceptional Post (asBytes)"
                                  (builtin "One Step Simplification" (formula "114"))
                                  (builtin "One Step Simplification" (formula "91"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,0,0,0,1,1") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,0,0,0,0,1,1") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "37"))
                                 (rule "andLeft" (formula "91"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "1,0") (ifseqformula "91"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,0") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,1,0") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0,1,0") (ifseqformula "37"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "andLeft" (formula "93"))
                                 (rule "andLeft" (formula "92"))
                                 (rule "andLeft" (formula "94"))
                                 (rule "notLeft" (formula "92"))
                                 (rule "close" (formula "96") (ifseqformula "95"))
                              )
                              (branch "Pre (asBytes)"
                                  (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "93")) (ifInst ""  (formula "93")))
                                 (rule "wellFormedAnonEQ" (formula "112") (term "0,1") (ifseqformula "83"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "1,1") (ifseqformula "83"))
                                 (rule "wellFormedAnonEQ" (formula "112") (term "0,0,1") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,1,1") (ifseqformula "45"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,1,1") (ifseqformula "37"))
                                 (rule "wellFormedAnonEQ" (formula "112") (term "0,0,0,1") (ifseqformula "37"))
                                 (rule "replace_known_right" (formula "112") (term "1,0,1,1") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "23")) (ifInst ""  (formula "36")) (ifInst ""  (formula "44")) (ifInst ""  (formula "82")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "84")))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "112"))
                                 (rule "replaceKnownSelect_taclet0000000002_48" (formula "112") (term "1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000000002_50" (formula "112") (term "1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_49" (formula "112") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_51" (formula "112") (term "1,0,1"))
                                 (rule "replaceKnownSelect_taclet0000000002_48" (formula "112") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000000002_50" (formula "112") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_49" (formula "112") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_51" (formula "112") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "112") (term "0,0,0") (ifseqformula "107"))
                                  (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "108")))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "112") (term "1"))
                                 (rule "replaceKnownSelect_taclet0000000002_52" (formula "112") (term "1,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_53" (formula "112") (term "1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000000002_52" (formula "112") (term "0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000002_53" (formula "112") (term "0,0,0,1"))
                                 (rule "replace_known_right" (formula "112") (term "0,0,1") (ifseqformula "94"))
                                  (builtin "One Step Simplification" (formula "112"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "112") (term "0"))
                                  (builtin "One Step Simplification" (formula "112"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "112"))
                                 (rule "closeTrue" (formula "112"))
                              )
                              (branch "Null reference (_group_35_B = null)"
                                  (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "118")))
                                 (rule "closeTrue" (formula "112"))
                              )
                           )
                           (branch "Exceptional Post (pow)"
                               (builtin "One Step Simplification" (formula "83"))
                               (builtin "One Step Simplification" (formula "102"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0,0,0,0,1,1") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0,0,0,0,0,1,1") (ifseqformula "37"))
                              (rule "andLeft" (formula "83"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,0") (ifseqformula "83"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1,0") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,1,0") (ifseqformula "37"))
                              (rule "andLeft" (formula "84"))
                              (rule "andLeft" (formula "85"))
                              (rule "andLeft" (formula "84"))
                              (rule "andLeft" (formula "86"))
                              (rule "notLeft" (formula "84"))
                              (rule "close" (formula "88") (ifseqformula "87"))
                           )
                           (branch "Pre (pow)"
                               (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "82")) (ifInst ""  (formula "86")) (ifInst ""  (formula "81")) (ifInst ""  (formula "82")) (ifInst ""  (formula "86")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "1,1") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1") (ifseqformula "45"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1") (ifseqformula "37"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,1") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "100") (term "0,0,0,1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "100") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "100") (term "0,1,0"))
                              (rule "pullOutSelect" (formula "100") (term "1,0,1,0,1,0") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                              (rule "applyEq" (formula "101") (term "0,0,0,0,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0002_11" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0002_12" (formula "1") (term "2,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "101") (term "0,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "101") (term "1,0,1,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "100") (term "0,0,0,1,0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "pullOutSelect" (formula "100") (term "0,0,1,0") (inst "selectSK=java_math_BigInteger_value_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
                              (rule "replaceKnownSelect_taclet0002_13" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0002_14" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
                              (rule "applyEqReverse" (formula "101") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "100") (term "0,1,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "100") (term "0,0"))
                              (rule "replaceKnownSelect_taclet2000000002_41" (formula "100") (term "0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet2000000002_41" (formula "100") (term "1,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000002_42" (formula "100") (term "0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000002_42" (formula "100") (term "1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet2000000002_43" (formula "100") (term "0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000000002_44" (formula "100") (term "0,1,0,0"))
                              (rule "replace_known_right" (formula "100") (term "0,0,0,0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "28")))
                              (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "100") (term "0"))
                              (rule "replaceKnownSelect_taclet00000002_33" (formula "100") (term "1,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000002_35" (formula "100") (term "1,1,1,0"))
                              (rule "replaceKnownSelect_taclet00000002_33" (formula "100") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000002_35" (formula "100") (term "0,0,1,0,0"))
                              (rule "replace_known_right" (formula "100") (term "0,1,0,0") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "pullOutSelect" (formula "100") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
                              (rule "applyEq" (formula "101") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")) (ifInst ""  (formula "25")))
                              (rule "applyEqReverse" (formula "101") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "101") (term "1,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "100") (term "0,0,0") (ifseqformula "95"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "100") (term "0,0"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "100") (term "0"))
                              (rule "replaceKnownSelect_taclet000000002_37" (formula "100") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000002_38" (formula "100") (term "1,1,0"))
                              (rule "replaceKnownSelect_taclet000000002_37" (formula "100") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000002_38" (formula "100") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "100") (term "0,0,0") (ifseqformula "82"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "100") (term "0"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "orRight" (formula "100"))
                              (rule "orRight" (formula "100"))
                              (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "102")) (ifInst ""  (formula "100")))
                              (rule "closeFalse" (formula "47"))
                           )
                           (branch "Null reference (var_5 = null)"
                               (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "106")))
                              (rule "closeTrue" (formula "100"))
                           )
                        )
                        (branch "Exceptional Post (getG)"
                            (builtin "One Step Simplification" (formula "97"))
                            (builtin "One Step Simplification" (formula "78"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "1,0") (ifseqformula "45"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,1,0") (ifseqformula "37"))
                           (rule "andLeft" (formula "78"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "78"))
                           (rule "andLeft" (formula "80"))
                           (rule "notLeft" (formula "78"))
                           (rule "close" (formula "82") (ifseqformula "81"))
                        )
                        (branch "Pre (getG)"
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "wellFormedAnonEQ" (formula "95") (term "1") (ifseqformula "45"))
                           (rule "wellFormedAnonEQ" (formula "95") (term "0,1") (ifseqformula "37"))
                           (rule "replace_known_left" (formula "95") (term "1,1") (ifseqformula "44"))
                            (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "23")) (ifInst ""  (formula "36")))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "95"))
                           (rule "pullOutSelect" (formula "95") (term "0,0,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
                           (rule "applyEq" (formula "96") (term "1,1") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "8")))
                           (rule "applyEqReverse" (formula "96") (term "0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "96") (term "1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "95") (term "0,0") (ifseqformula "85"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                           (rule "closeTrue" (formula "95"))
                        )
                        (branch "Null reference (e_21 = null)"
                            (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "91")))
                           (rule "closeTrue" (formula "95"))
                        )
                     )
                     (branch "Null Reference (_group_35_B = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "102")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Exceptional Post (uniformHash)"
                      (builtin "One Step Simplification" (formula "65"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "andLeft" (formula "65"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "1,0") (ifseqformula "65"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,1,0") (ifseqformula "57"))
                     (rule "andLeft" (formula "66"))
                     (rule "andLeft" (formula "66"))
                     (rule "andLeft" (formula "68"))
                     (rule "notLeft" (formula "66"))
                     (rule "close" (formula "69") (ifseqformula "68"))
                  )
                  (branch "Pre (uniformHash)"
                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "67")) (ifInst ""  (formula "83")) (ifInst ""  (formula "82")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "1,1") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "1,0,1") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "1,0,0,1") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "1,0,0,0,1") (ifseqformula "57"))
                     (rule "wellFormedAnonEQ" (formula "80") (term "0,0,0,0,1") (ifseqformula "57"))
                     (rule "replace_known_left" (formula "80") (term "0,1,0,1") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "10")) (ifInst ""  (formula "56")) (ifInst ""  (formula "64")) (ifInst ""  (formula "58")) (ifInst ""  (formula "12")))
                     (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "80") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "80") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "80") (term "0,1,0,1,0"))
                     (rule "pullOutSelect" (formula "80") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_2"))
                     (rule "applyEq" (formula "81") (term "1,1,1,0,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "81") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "81") (term "1,1,1,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "80") (term "0,0,1,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "pullOutSelect" (formula "80") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "81") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "80") (term "0,1,0") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "80") (term "1,0"))
                     (rule "replaceKnownSelect_taclet2000002_23" (formula "80") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000002_24" (formula "80") (term "1,1,0"))
                     (rule "nonNull" (formula "80") (term "1,0") (inst "i=i"))
                     (rule "greater_literals" (formula "80") (term "0,1,1,0"))
                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "72")))
                     (rule "sub_literals" (formula "80") (term "2,1,0,1,0"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "80") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_imp2or" (formula "80") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "80") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "80") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "80") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "80") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "80") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "80") (term "0,0,0,1,0"))
                     (rule "times_zero_1" (formula "80") (term "1,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "80") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,1,0"))
                     (rule "mul_literals" (formula "80") (term "1,0,0,0,1,0"))
                     (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "80") (term "0,0"))
                     (rule "pullOutSelect" (formula "80") (term "0,1,0,0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "81") (term "0,0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "82") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                     (rule "applyEqReverse" (formula "81") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "80") (term "0,0,0,0") (ifseqformula "78"))
                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "15")))
                     (rule "commute_or" (formula "80") (term "1"))
                     (rule "replace_known_left" (formula "80") (term "1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "allRight" (formula "80") (inst "sk=i_1"))
                     (rule "orRight" (formula "80"))
                     (rule "notRight" (formula "81"))
                     (rule "orRight" (formula "81"))
                     (rule "inEqSimp_leqRight" (formula "81"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "82"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "61"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")) (ifInst ""  (formula "25")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "13") (ifseqformula "75"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "22"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "allLeft" (formula "20") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "20"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Exceptional Post (getOrder)"
                   (builtin "One Step Simplification" (formula "71"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "andLeft" (formula "56"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0") (ifseqformula "56"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "59"))
                  (rule "notLeft" (formula "57"))
                  (rule "close" (formula "61") (ifseqformula "60"))
               )
               (branch "Pre (getOrder)"
                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "9")))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "69"))
                  (rule "closeTrue" (formula "69"))
               )
               (branch "Null reference (s_1 = null)"
                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "63")))
                  (rule "closeTrue" (formula "69"))
               )
            )
            (branch "Null Reference (_group_35_A = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (uniformHash)"
             (builtin "One Step Simplification" (formula "59"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1,0") (ifseqformula "44"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1,0") (ifseqformula "36"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "47"))
            (rule "notLeft" (formula "45"))
            (rule "close" (formula "48") (ifseqformula "47"))
         )
         (branch "Pre (uniformHash)"
             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "43")) (ifInst ""  (formula "61")) (ifInst ""  (formula "60")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,1") (ifseqformula "36"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0,1") (ifseqformula "36"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0,0,1") (ifseqformula "36"))
            (rule "wellFormedAnonEQ" (formula "57") (term "0,0,0,0,1") (ifseqformula "36"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0,0,0,1") (ifseqformula "36"))
            (rule "replace_known_left" (formula "57") (term "1,0,0,0,0,1") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "22")) (ifInst ""  (formula "44")) (ifInst ""  (formula "38")) (ifInst ""  (formula "25")) (ifInst ""  (formula "24")))
            (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "57") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "57") (term "0,1,0,1,0"))
            (rule "pullOutSelect" (formula "57") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_currentIndex_0"))
            (rule "applyEq" (formula "58") (term "1,1,1,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "58") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "58") (term "1,1,1,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "57") (term "0,0,1,0") (ifseqformula "29"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "pullOutSelect" (formula "57") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_basic_Hashes_VALUES_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "58") (term "0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "34"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "57") (term "0,0"))
            (rule "pullOutSelect" (formula "57") (term "0,0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "58") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "58") (term "0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "57") (term "0,0,0,0") (ifseqformula "55"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "27")))
            (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "57") (term "0"))
            (rule "replaceKnownSelect_taclet2002_6" (formula "57") (term "1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2002_7" (formula "57") (term "1,0"))
            (rule "nonNull" (formula "57") (term "0") (inst "i=i"))
            (rule "sub_literals" (formula "57") (term "2,1,0,1,1,0"))
             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "49")))
            (rule "greater_literals" (formula "57") (term "0,0"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0"))
            (rule "nnf_imp2or" (formula "57") (term "0,0"))
            (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0"))
            (rule "mul_literals" (formula "57") (term "1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
            (rule "commute_or" (formula "57") (term "1"))
            (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "allRight" (formula "57") (inst "sk=i_1"))
            (rule "orRight" (formula "57"))
            (rule "notRight" (formula "58"))
            (rule "orRight" (formula "58"))
            (rule "inEqSimp_geqRight" (formula "59"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "59"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "37")))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "25") (ifseqformula "52"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
            (rule "mul_literals" (formula "2") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "allLeft" (formula "32") (inst "t=i_1"))
            (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "3"))
            (rule "andLeft" (formula "32"))
            (rule "inEqSimp_homoInEq1" (formula "32"))
            (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "times_zero_1" (formula "32") (term "1,0"))
            (rule "add_zero_right" (formula "32") (term "0"))
            (rule "leq_literals" (formula "32"))
            (rule "closeFalse" (formula "32"))
         )
      )
      (branch "Exceptional Post (getOrder)"
          (builtin "One Step Simplification" (formula "35"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "andLeft" (formula "35"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0") (ifseqformula "35"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "38"))
         (rule "notLeft" (formula "36"))
         (rule "close" (formula "40") (ifseqformula "39"))
      )
      (branch "Pre (getOrder)"
          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "21")))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "45"))
         (rule "closeTrue" (formula "45"))
      )
      (branch "Null reference (s = null)"
          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "40")))
         (rule "closeTrue" (formula "45"))
      )
   )
   (branch "Null Reference (_group_35_B = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Objects Isomorphic"
   (rule "boxToDiamond" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "boxToDiamond" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "16"))
   (rule "notLeft" (formula "15"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "18"))
   (rule "nonNull" (formula "18") (inst "i=i"))
   (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "greater_literals" (formula "18") (term "0,1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_crypto_basic_Hashes" (formula "8"))
   (rule "nonNull" (formula "8") (inst "i=i"))
   (rule "greater_literals" (formula "8") (term "0,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "sub_literals" (formula "8") (term "2,1,0,1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECParameterSpec" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "17"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "commute_or_2" (formula "6") (term "0"))
   (rule "commute_or" (formula "14") (term "0,0"))
   (rule "commute_or" (formula "6") (term "0,0"))
   (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN,savedHeapBefore_loginPasswordFromMasterPIN"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "variableDeclarationFinalAssign" (formula "28") (term "1"))
   (rule "variableDeclarationFinal" (formula "28") (term "1") (newnames "skPrime"))
   (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_loginPasswordFromMasterPIN_0,savedHeapBefore_loginPasswordFromMasterPIN_0"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "variableDeclarationFinalAssign" (formula "27") (term "1"))
   (rule "variableDeclarationFinal" (formula "27") (term "1") (newnames "skPrime_1"))
   (rule "definitionOfObjectsIsomorphic" (formula "35") (inst "i=i"))
    (builtin "One Step Simplification" (formula "35"))
   (rule "allRight" (formula "35") (inst "sk=i_0"))
   (rule "impRight" (formula "35"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,1,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "3,1,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "1,1,0"))
   (rule "castDel" (formula "37") (term "1,1,1,0"))
   (rule "getOfSeqSingleton" (formula "37") (term "3,1,0"))
   (rule "castDel" (formula "37") (term "1,3,1,0"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0,0,1"))
   (rule "castDel" (formula "37") (term "1,0,0,0,1"))
   (rule "castDel" (formula "37") (term "2,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "37") (term "0,0,0,0"))
   (rule "castDel" (formula "37") (term "2,0,0,0,0"))
   (rule "castDel" (formula "37") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "38") (term "0,0,0,0,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
   (rule "leq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "definitionOfObjectIsomorphic" (formula "36") (inst "i=i"))
    (builtin "One Step Simplification" (formula "36"))
   (rule "allRight" (formula "36") (inst "sk=i_1"))
   (rule "impRight" (formula "36"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "38") (term "0,0,0,1"))
   (rule "castDel" (formula "38") (term "2,0,0,0,1"))
   (rule "castDel" (formula "38") (term "1,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "38") (term "0,1,1"))
   (rule "getOfSeqSingleton" (formula "38") (term "0,0,0,0"))
   (rule "castDel" (formula "38") (term "1,0,0,0,0"))
   (rule "castDel" (formula "38") (term "2,0,0,0,0"))
   (rule "getOfSeqSingleton" (formula "38") (term "0,1,1,0"))
   (rule "castDel" (formula "38") (term "1,0,1,1,0"))
    (builtin "One Step Simplification" (formula "38"))
   (rule "getOfSeqSingleton" (formula "38") (term "2,1,1"))
   (rule "getOfSeqSingleton" (formula "38") (term "0,0,1,0"))
   (rule "castDel" (formula "38") (term "1,0,0,1,0"))
    (builtin "One Step Simplification" (formula "38"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "39"))
)
)
}
