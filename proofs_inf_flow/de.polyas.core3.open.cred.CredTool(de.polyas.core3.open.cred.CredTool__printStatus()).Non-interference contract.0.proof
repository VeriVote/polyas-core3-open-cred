\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 19 18:49:50 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Dec 19 18:49:50 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:printStatus()].Non-interference contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:printStatus()].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "71977")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "3"))
(rule "eqSymm" (formula "1"))
(rule "eqSymm" (formula "16"))
(rule "eqSymm" (formula "9") (term "0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,0,1"))
(rule "eqSymm" (formula "5") (term "0,0,0,1"))
(rule "eqSymm" (formula "5") (term "1,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "equalityToSeqGetAndSeqLenRight" (formula "16") (inst "iv=iv"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1"))
(rule "pullOutSelect" (formula "16") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_0"))
(rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "17") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
(rule "eqSymm" (formula "17") (term "1,0,1"))
(rule "eqSymm" (formula "17") (term "0"))
(rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
(rule "pullOutSelect" (formula "18") (term "1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
(rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "1"))
(rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=java_util_Collection_seq_1"))
(rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "4"))
(rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
(rule "applyEqReverse" (formula "20") (term "0,1,1,0,1") (ifseqformula "4"))
(rule "hideAuxiliaryEq" (formula "4"))
(rule "pullOutSelect" (formula "19") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_2"))
(rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
(rule "boxToDiamond" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "boxToDiamond" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "nnf_imp2or" (formula "20") (term "0,1"))
(rule "nnf_notAnd" (formula "20") (term "0,0,1"))
(rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
(rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1"))
(rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1"))
(rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1"))
(rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
(rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
(rule "mul_literals" (formula "20") (term "1,0,0,0,1"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_printStatus,savedHeapBefore_printStatus"))
 (builtin "One Step Simplification" (formula "13"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_printStatus_0,savedHeapBefore_printStatus_0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
(rule "compound_equality_comparison_1" (formula "13") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
(rule "compound_modulo_1" (formula "13") (term "1") (inst "#v=x_2"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
(rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
(rule "compound_equality_comparison_1" (formula "12") (term "1") (inst "#v0=x_4"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "x_4"))
(rule "compound_modulo_1" (formula "12") (term "1") (inst "#v=x_5"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "x_5"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "13") (term "1") (inst "#v0=c"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "c_8"))
(rule "assignment_read_attribute_this" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
 (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_getCurrentLineNumber,result_440,exc_587") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
(branch "Post (getCurrentLineNumber)"
    (builtin "One Step Simplification" (formula "17"))
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "9")))
    (builtin "One Step Simplification" (formula "14"))
   (rule "expand_inLong" (formula "13") (term "1,0"))
   (rule "replace_long_MIN" (formula "13") (term "0,1,1,0"))
   (rule "replace_long_MAX" (formula "13") (term "1,0,1,0"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "assignment" (formula "19") (term "1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "applyEq" (formula "16") (term "4") (ifseqformula "13"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "assignmentModulo" (formula "18") (term "1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "equal_literals" (formula "18") (term "0,0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "translateJavaMod" (formula "18") (term "0,1,0"))
   (rule "equality_comparison_simple" (formula "18") (term "1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "17") (term "1") (inst "#v0=c"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "c_9"))
   (rule "assignment_read_attribute_this" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
    (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_getCurrentLineNumber_0,result_441,exc_588") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
   (branch "Post (getCurrentLineNumber)"
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "6")))
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "20"))
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
      (rule "expand_inLong" (formula "17") (term "1,0"))
      (rule "replace_long_MIN" (formula "17") (term "0,1,1,0"))
      (rule "replace_long_MAX" (formula "17") (term "1,0,1,0"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "assignment" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "applyEq" (formula "20") (term "4") (ifseqformula "19"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "assignmentModulo" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "equal_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "translateJavaMod" (formula "21") (term "0,1,0"))
      (rule "equality_comparison_simple" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
      (rule "andLeft" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
      (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
      (rule "andLeft" (formula "4"))
      (rule "applyEq" (formula "5") (term "0,1,1,0,0") (ifseqformula "6"))
      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "lenNonNegative" (formula "29") (term "1,0"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
      (rule "andLeft" (formula "2"))
      (rule "applyEq" (formula "3") (term "0,1,1,0,0") (ifseqformula "4"))
      (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "lenNonNegative" (formula "30") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "ifSplit" (formula "24"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "25"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "activeUseStaticFieldWriteAccess" (formula "25") (term "1") (inst "#v0=s"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "s"))
         (rule "jmod_axiom" (formula "1") (term "0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
         (rule "polySimp_sepNegMonomial" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "newSym_eq" (formula "1") (inst "l=l_0") (inst "newSymDef=mul(result_440, Z(0(#)))"))
         (rule "times_zero_1" (formula "1") (term "1,1"))
         (rule "add_zero_right" (formula "1") (term "1"))
         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
         (rule "eqSymm" (formula "2"))
         (rule "applyEq" (formula "20") (term "3") (ifseqformula "2"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
         (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
         (rule "leq_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
         (rule "add_literals" (formula "19") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0"))
         (rule "leq_literals" (formula "19") (term "0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
         (rule "neg_literal" (formula "18") (term "0,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0"))
         (rule "qeq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "compound_addition_2" (formula "26") (term "1") (inst "#v1=s_2") (inst "#v0=s_1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "s_1"))
         (rule "compound_addition_2" (formula "26") (term "1") (inst "#v1=x") (inst "#v0=s_3"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "s_3"))
         (rule "stringAssignment" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "28"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "28") (term "1"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_6"))
         (rule "ifSplit" (formula "27"))
         (branch "if x_3 true"
             (builtin "One Step Simplification" (formula "28"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "activeUseStaticFieldWriteAccess" (formula "28") (term "1") (inst "#v0=s"))
            (rule "variableDeclarationAssign" (formula "28") (term "1"))
            (rule "variableDeclaration" (formula "28") (term "1") (newnames "s_4"))
            (rule "jmod_axiom" (formula "1") (term "0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "newSym_eq" (formula "1") (inst "l=l_1") (inst "newSymDef=mul(result_441, Z(0(#)))"))
            (rule "times_zero_1" (formula "1") (term "1,1"))
            (rule "add_zero_right" (formula "1") (term "1"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "applyEq" (formula "25") (term "0") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "3") (ifseqformula "2"))
            (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
            (rule "elimGcdLeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "24") (term "0,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "neg_literal" (formula "24") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
            (rule "add_literals" (formula "24") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "24") (term "1,0,0"))
            (rule "add_literals" (formula "24") (term "0,0"))
            (rule "qeq_literals" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
            (rule "leq_literals" (formula "25") (term "0,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
            (rule "add_literals" (formula "25") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0"))
            (rule "add_literals" (formula "25") (term "0,0"))
            (rule "leq_literals" (formula "25") (term "0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "compound_addition_2" (formula "29") (term "1") (inst "#v1=s_6") (inst "#v0=s_5"))
            (rule "variableDeclarationAssign" (formula "29") (term "1"))
            (rule "variableDeclaration" (formula "29") (term "1") (newnames "s_5"))
            (rule "compound_addition_2" (formula "29") (term "1") (inst "#v1=x") (inst "#v0=s_7"))
            (rule "variableDeclarationAssign" (formula "29") (term "1"))
            (rule "variableDeclaration" (formula "29") (term "1") (newnames "s_7"))
            (rule "stringAssignment" (formula "29") (term "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
             (builtin "One Step Simplification" (formula "31"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclarationAssign" (formula "30") (term "1"))
            (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_7"))
            (rule "jdiv_axiom" (formula "5") (term "0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
            (rule "eqSymm" (formula "5"))
            (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
            (rule "elimGcdGeq" (formula "5") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
            (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,0"))
            (rule "add_literals" (formula "5") (term "1,0,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "0,0,0,0"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polyDiv_pullOut" (formula "5") (term "1,0") (inst "polyDivCoeff=l_0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,1,0"))
            (rule "equal_literals" (formula "5") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,0"))
            (rule "add_literals" (formula "5") (term "1,0,0,1,0"))
            (rule "times_zero_1" (formula "5") (term "0,0,1,0"))
            (rule "div_literals" (formula "5") (term "0,1,0"))
            (rule "add_zero_left" (formula "5") (term "1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_homoEq" (formula "5") (term "1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
            (rule "polySimp_sepPosMonomial" (formula "5") (term "1"))
            (rule "polyDiv_pullOut" (formula "5") (term "0,1") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "5") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,1"))
            (rule "add_literals" (formula "5") (term "1,0,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "0,0,0,1"))
            (rule "div_literals" (formula "5") (term "0,0,1"))
            (rule "add_zero_left" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "31") (term "1") (inst "#v0=c"))
            (rule "variableDeclaration" (formula "31") (term "1") (newnames "c_10"))
            (rule "assignment_read_attribute_this" (formula "31") (term "1"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1") (ifseqformula "14"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0") (ifseqformula "21"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "22"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "jdiv_axiom" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0,2,1"))
            (rule "eqSymm" (formula "6"))
            (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "7"))
            (rule "elimGcdGeq" (formula "6") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0"))
            (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "6") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "6") (term "0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "6") (term "0,1,0,0,0"))
            (rule "add_literals" (formula "6") (term "1,0,1,0,0,0"))
            (rule "times_zero_1" (formula "6") (term "0,1,0,0,0"))
            (rule "leq_literals" (formula "6") (term "1,0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polyDiv_pullOut" (formula "6") (term "0,2,0") (inst "polyDivCoeff=mul(l_1, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,2,0,2,0"))
            (rule "equal_literals" (formula "6") (term "0,0,2,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,2,0"))
            (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,2,0"))
            (rule "add_literals" (formula "6") (term "1,0,0,0,2,0"))
            (rule "times_zero_1" (formula "6") (term "0,0,0,2,0"))
            (rule "div_literals" (formula "6") (term "0,0,2,0"))
            (rule "add_zero_left" (formula "6") (term "0,2,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "2,0"))
            (rule "polySimp_elimOne" (formula "6") (term "2,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polyDiv_pullOut" (formula "6") (term "0,1") (inst "polyDivCoeff=l_1"))
            (rule "equal_literals" (formula "6") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,1"))
            (rule "add_literals" (formula "6") (term "1,0,0,0,1"))
            (rule "times_zero_1" (formula "6") (term "0,0,0,1"))
            (rule "div_literals" (formula "6") (term "0,0,1"))
            (rule "add_zero_left" (formula "6") (term "0,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "36") (term "1") (inst "#v0=c"))
            (rule "variableDeclaration" (formula "36") (term "1") (newnames "c_11"))
            (rule "assignment_read_attribute_this" (formula "36") (term "1"))
             (builtin "One Step Simplification" (formula "36"))
             (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_getCurrentLineNumber_1,result_442,exc_589") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
            (branch "Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "36"))
                (builtin "One Step Simplification" (formula "40"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "23")))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "37")))
               (rule "expand_inLong" (formula "35") (term "1,0"))
               (rule "replace_long_MAX" (formula "35") (term "1,0,1,0"))
               (rule "replace_long_MIN" (formula "35") (term "0,1,1,0"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "inEqSimp_commuteLeq" (formula "36"))
               (rule "assignment" (formula "42") (term "1"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "stringConcatIntExpRight" (formula "42") (term "1") (inst "sk=sk_0"))
                (builtin "One Step Simplification" (formula "44"))
                (builtin "One Step Simplification" (formula "43"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
               (rule "variableDeclarationAssign" (formula "44") (term "1"))
               (rule "variableDeclaration" (formula "44") (term "1") (newnames "s_2"))
               (rule "stringAssignment" (formula "44") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "notLeft" (formula "1"))
               (rule "stringConcat" (formula "46") (term "1") (inst "sk=sk_1"))
                (builtin "One Step Simplification" (formula "48"))
                (builtin "One Step Simplification" (formula "47"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
               (rule "assignment_write_static_attribute" (formula "48") (term "1"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "3"))
               (rule "applyEq" (formula "41") (term "4") (ifseqformula "40"))
               (rule "eqSeqConcat" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "add_literals" (formula "5") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0,1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,2,0"))
               (rule "add_literals" (formula "4") (term "2,0"))
               (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_homoEq" (formula "3") (term "1"))
               (rule "times_zero_2" (formula "3") (term "1,0,1"))
               (rule "add_zero_right" (formula "3") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0"))
               (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "2"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "eqSeqConcat" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "lenOfSeqConcat" (formula "3") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "2") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "add_literals" (formula "2") (term "1,0,2,0"))
               (rule "add_literals" (formula "2") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqSubEQ" (formula "3") (term "1,1,0") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
               (rule "lenOfSeqSubEQ" (formula "2") (term "1,2,0") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,2,0"))
               (rule "mul_literals" (formula "2") (term "1,1,1,2,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "add_literals" (formula "1") (term "1,0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "add_literals" (formula "1") (term "1,0,1"))
               (rule "add_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,2,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,2,0"))
               (rule "lenOfSeqSubEQ" (formula "1") (term "1,1") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,1"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1"))
               (rule "polySimp_homoEq" (formula "1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
               (rule "add_literals" (formula "2") (term "0,2,0"))
               (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
               (rule "add_literals" (formula "3") (term "0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "lenOfSeqSub" (formula "4") (term "2,0"))
               (rule "polySimp_elimSub" (formula "4") (term "1,2,0"))
               (rule "times_zero_2" (formula "4") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "4") (term "1,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqSub" (formula "2") (term "0"))
               (rule "polySimp_elimSub" (formula "2") (term "1,0"))
               (rule "times_zero_2" (formula "2") (term "1,1,0"))
               (rule "add_zero_right" (formula "2") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "lenOfSeqConcat" (formula "3") (term "2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "add_literals" (formula "4") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "add_literals" (formula "2") (term "1,0,1"))
               (rule "add_literals" (formula "2") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,2,0"))
               (rule "add_literals" (formula "3") (term "2,0"))
               (rule "lenOfSeqSubEQ" (formula "2") (term "1,1") (ifseqformula "11"))
               (rule "polySimp_homoEq" (formula "2"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0"))
               (rule "mul_literals" (formula "2") (term "1,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,2,0"))
               (rule "add_zero_right" (formula "4") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,2,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,2,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "applyEqRigid" (formula "4") (term "2,0") (ifseqformula "2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,1,1"))
               (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "2") (term "1"))
               (rule "add_literals" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_homoEq" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "1,0,1"))
               (rule "add_zero_right" (formula "2") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,2,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,1,2,0"))
               (rule "applyEqRigid" (formula "4") (term "1,2,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0"))
               (rule "eqSeqConcat" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "7") (term "2,0"))
               (rule "polySimp_elimSub" (formula "7") (term "1,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,2,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,2,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,2,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "1,2,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1,2,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "1,2,0"))
               (rule "add_literals" (formula "7") (term "1,1,1,2,0"))
               (rule "times_zero_1" (formula "7") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "7") (term "1,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqSingleton" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "1,1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,1,0"))
               (rule "add_zero_right" (formula "5") (term "1,0"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "sub_literals" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "equal_literals" (formula "6") (term "1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,2,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,2,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,2,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,2,0"))
               (rule "leq_literals" (formula "7") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1"))
               (rule "add_literals" (formula "5") (term "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "equal_literals" (formula "5") (term "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0"))
               (rule "leq_literals" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "2,0"))
               (rule "less_literals" (formula "13") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,0"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_homoEq" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "eqSeqSingleton" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqSub" (formula "12") (term "0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,0"))
               (rule "add_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "sub_literals" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqConcat" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqSub" (formula "5") (term "2,0"))
               (rule "less_literals" (formula "5") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "2,0"))
               (rule "eqSeqSingleton" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "lenOfSeqSub" (formula "3") (term "0"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "sub_literals" (formula "3") (term "0"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqSub" (formula "4") (term "0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "sub_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0"))
               (rule "add_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0"))
               (rule "add_literals" (formula "6") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,1,0,0"))
               (rule "add_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "sub_literals" (formula "3") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "eqSeqConcat" (formula "14"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "lenOfSeqSub" (formula "16") (term "2,0"))
               (rule "less_literals" (formula "16") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "2,0"))
               (rule "lenOfSeqSub" (formula "14") (term "0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "0"))
               (rule "polySimp_homoEq" (formula "14"))
               (rule "mul_literals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "eqSeqSingleton" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqSub" (formula "15") (term "0"))
               (rule "sub_literals" (formula "15") (term "1,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "equal_literals" (formula "15") (term "1"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_literals" (formula "14") (term "1,0"))
               (rule "add_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_zero_left" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "sub_literals" (formula "3") (term "1,0,0"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "eqSeqConcat" (formula "4"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "lenOfSeqSub" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,2,0"))
               (rule "less_literals" (formula "6") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqSingleton" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "4") (term "0"))
               (rule "sub_literals" (formula "4") (term "1,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_homoEq" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_zero_left" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "3") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
               (rule "eqSeqConcat" (formula "9"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqSub" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,2,0"))
               (rule "less_literals" (formula "11") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "eqSeqSingleton" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_addAssoc" (formula "9") (term "1"))
               (rule "add_literals" (formula "9") (term "0,1"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "sub_literals" (formula "10") (term "1,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "equal_literals" (formula "10") (term "1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "less_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "0"))
               (rule "polySimp_homoEq" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "add_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "add_zero_left" (formula "4") (term "1,1,0"))
               (rule "sub_literals" (formula "4") (term "1,1,0,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "eqSeqConcat" (formula "17"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "lenOfSeqSub" (formula "19") (term "2,0"))
               (rule "less_literals" (formula "19") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "sub_literals" (formula "19") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "1"))
               (rule "add_literals" (formula "17") (term "0,1"))
               (rule "eqSeqSingleton" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "lenOfSeqSub" (formula "17") (term "0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "sub_literals" (formula "17") (term "0"))
               (rule "polySimp_homoEq" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqSub" (formula "18") (term "0"))
               (rule "sub_literals" (formula "18") (term "1,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "add_literals" (formula "17") (term "1,0"))
               (rule "add_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_zero_left" (formula "16") (term "1,1,0"))
               (rule "sub_literals" (formula "16") (term "1,1,0,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_zero_left" (formula "9") (term "1,1,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "eqSeqConcat" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "7") (term "2,0"))
               (rule "less_literals" (formula "7") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "eqSeqSingleton" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "0"))
               (rule "polySimp_homoEq" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_zero_left" (formula "4") (term "1,1,0"))
               (rule "sub_literals" (formula "4") (term "1,0,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "18") (term "1,1,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "1,1,0"))
               (rule "add_literals" (formula "9") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "9") (term "1,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "sub_literals" (formula "17") (term "1,1,0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,2,0"))
               (rule "less_literals" (formula "13") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,1"))
               (rule "add_literals" (formula "11") (term "1"))
               (rule "eqSeqSingleton" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "equal_literals" (formula "11") (term "1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "add_zero_left" (formula "10") (term "1,1,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqConcat" (formula "20"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "lenOfSeqSub" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,2,0"))
               (rule "less_literals" (formula "22") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "1"))
               (rule "add_literals" (formula "20") (term "0,1"))
               (rule "eqSeqSingleton" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "lenOfSeqSub" (formula "20") (term "0"))
               (rule "sub_literals" (formula "20") (term "1,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_homoEq" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqSub" (formula "21") (term "0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "sub_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "add_literals" (formula "20") (term "1,0"))
               (rule "add_literals" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "sub_literals" (formula "4") (term "1,0,0"))
               (rule "add_zero_right" (formula "4") (term "1,1,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "sub_literals" (formula "19") (term "1,0,0"))
               (rule "add_zero_left" (formula "19") (term "1,1,0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "sub_literals" (formula "18") (term "1,0,0"))
               (rule "add_zero_right" (formula "18") (term "1,1,0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_zero_left" (formula "11") (term "1,1,0"))
               (rule "sub_literals" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "eqSeqConcat" (formula "6"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqSub" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,2,0"))
               (rule "less_literals" (formula "8") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "eqSeqSingleton" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "add_literals" (formula "6") (term "0,1"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "0"))
               (rule "polySimp_homoEq" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,0"))
               (rule "add_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,0"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "sub_literals" (formula "5") (term "1,1,0,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "21") (term "1,1,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "add_zero_right" (formula "4") (term "1,1,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
               (rule "times_zero_2" (formula "4") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "4") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "1,0,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "eqSeqConcat" (formula "13"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,0,0"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "eqSeqSingleton" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "sub_literals" (formula "13") (term "1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "eqSeqSingleton" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "lenOfSeqSub" (formula "16") (term "2,0,0"))
               (rule "less_literals" (formula "16") (term "0,2,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "2,0,0"))
               (rule "lenOfSeqSub" (formula "15") (term "0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,0"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "lenOfSeqSub" (formula "14") (term "1,0,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "less_literals" (formula "14") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_homoEq" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqSub" (formula "14") (term "0,1,0"))
               (rule "sub_literals" (formula "14") (term "1,0,1,0"))
               (rule "less_literals" (formula "14") (term "0,0,1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "mul_literals" (formula "14") (term "1,0"))
               (rule "add_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqConcat" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "lenOfSeqSub" (formula "25") (term "2,0"))
               (rule "sub_literals" (formula "25") (term "1,2,0"))
               (rule "less_literals" (formula "25") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "eqSeqSingleton" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "lenOfSeqSub" (formula "23") (term "0"))
               (rule "sub_literals" (formula "23") (term "1,0"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_homoEq" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "lenOfSeqSub" (formula "24") (term "0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "sub_literals" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_addAssoc" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_addAssoc" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "add_literals" (formula "23") (term "1,0"))
               (rule "add_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "1,1,0"))
               (rule "add_literals" (formula "11") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "11") (term "1,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "1,0,0"))
               (rule "add_zero_left" (formula "15") (term "1,1,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "add_zero_left" (formula "24") (term "1,1,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "sub_literals" (formula "24") (term "1,0,0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "sub_literals" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "2,0"))
               (rule "add_literals" (formula "23") (term "1,1,0"))
               (rule "sub_literals" (formula "23") (term "1,1,0,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "add_zero_right" (formula "22") (term "1,1,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "25"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "lenOfSeqSub" (formula "27") (term "2,0"))
               (rule "less_literals" (formula "27") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "sub_literals" (formula "27") (term "2,0"))
               (rule "eqSeqSingleton" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "lenOfSeqSub" (formula "25") (term "0"))
               (rule "sub_literals" (formula "25") (term "1,0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_homoEq" (formula "25"))
               (rule "mul_literals" (formula "25") (term "1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "add_literals" (formula "25") (term "0,0"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_addAssoc" (formula "25") (term "0"))
               (rule "add_literals" (formula "25") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "add_literals" (formula "25") (term "1,0"))
               (rule "add_literals" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,0"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "add_zero_left" (formula "24") (term "1,1,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "hideAuxiliaryEqConcrete" (formula "17"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
               (rule "times_zero_2" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "eqSeqConcat" (formula "8"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "10") (term "2,0"))
               (rule "sub_literals" (formula "10") (term "1,2,0"))
               (rule "less_literals" (formula "10") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
               (rule "polySimp_homoEq" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "eqSeqSingleton" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "sub_literals" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,0"))
               (rule "add_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "sub_literals" (formula "25") (term "1,0,0"))
               (rule "add_zero_left" (formula "25") (term "1,1,0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "add_literals" (formula "15") (term "1,0"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "66"))
               (rule "true_left" (formula "66"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "1,1,0"))
               (rule "add_literals" (formula "14") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "1,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "add_literals" (formula "24") (term "1,0"))
               (rule "getOfSeqSub" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "2,0"))
               (rule "sub_literals" (formula "23") (term "1,1,0,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "add_literals" (formula "23") (term "1,0"))
               (rule "eqSeqConcat" (formula "26"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "lenOfSeqSub" (formula "28") (term "2,0"))
               (rule "sub_literals" (formula "28") (term "1,2,0"))
               (rule "less_literals" (formula "28") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "eqSeqSingleton" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "lenOfSeqConcat" (formula "26") (term "1,1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "add_literals" (formula "26") (term "1,1"))
               (rule "add_literals" (formula "26") (term "1"))
               (rule "lenOfSeqSub" (formula "27") (term "0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "sub_literals" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "sub_literals" (formula "26") (term "1,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "sub_literals" (formula "25") (term "1,0,0"))
               (rule "add_zero_left" (formula "25") (term "1,1,0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,0,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "sub_literals" (formula "16") (term "1,1,0,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_zero_right" (formula "6") (term "1,0"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "sub_literals" (formula "24") (term "1,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "eqSeqConcat" (formula "9"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqSub" (formula "11") (term "2,0"))
               (rule "less_literals" (formula "11") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "2,0"))
               (rule "eqSeqSingleton" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_addAssoc" (formula "9") (term "1"))
               (rule "add_literals" (formula "9") (term "0,1"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "0"))
               (rule "polySimp_homoEq" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "add_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "add_zero_right" (formula "24") (term "1,0"))
               (rule "commute_or" (formula "19"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "add_zero_left" (formula "27") (term "1,1,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "sub_literals" (formula "27") (term "1,0,0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "methodCallEmpty" (formula "73") (term "1"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "sub_literals" (formula "26") (term "1,1,0,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "sub_literals" (formula "16") (term "1,1,0,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "add_literals" (formula "16") (term "1,0"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "sub_literals" (formula "17") (term "1,0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
                (builtin "Use Operation Contract" (formula "70") (newnames "heapBefore_getCurrentLineNumber_2,result_443,exc_590") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
               (branch "Post (getCurrentLineNumber)"
                   (builtin "One Step Simplification" (formula "68"))
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "49")))
                   (builtin "One Step Simplification" (formula "73"))
                   (builtin "One Step Simplification" (formula "69"))
                  (rule "expand_inLong" (formula "68") (term "1,0"))
                  (rule "replace_long_MAX" (formula "68") (term "1,0,1,0"))
                  (rule "replace_long_MIN" (formula "68") (term "0,1,1,0"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "69"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "68"))
                  (rule "inEqSimp_commuteLeq" (formula "69"))
                  (rule "assignment" (formula "75") (term "1"))
                   (builtin "One Step Simplification" (formula "75"))
                  (rule "stringConcatIntExpRight" (formula "75") (term "1") (inst "sk=sk_2"))
                   (builtin "One Step Simplification" (formula "77"))
                   (builtin "One Step Simplification" (formula "76"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
                  (rule "variableDeclarationAssign" (formula "77") (term "1"))
                  (rule "variableDeclaration" (formula "77") (term "1") (newnames "s_6"))
                  (rule "stringAssignment" (formula "77") (term "1"))
                   (builtin "One Step Simplification" (formula "79"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "1"))
                  (rule "stringConcat" (formula "78") (term "1") (inst "sk=sk_3"))
                   (builtin "One Step Simplification" (formula "79"))
                   (builtin "One Step Simplification" (formula "80"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
                  (rule "assignment_write_static_attribute" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "74") (term "4") (ifseqformula "73"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_zero_right" (formula "9") (term "1,1,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
                  (rule "times_zero_2" (formula "9") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "sub_literals" (formula "28") (term "1,0,0"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "1,1,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSeqConcat" (formula "31"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "add_literals" (formula "31") (term "1,0,0"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "eqSeqSingleton" (formula "33"))
                  (rule "andLeft" (formula "33"))
                  (rule "eqSeqSingleton" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "lenOfSeqSub" (formula "31") (term "0"))
                  (rule "sub_literals" (formula "31") (term "1,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "equal_literals" (formula "31") (term "1"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "less_literals" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "lenOfSeqSub" (formula "33") (term "0"))
                  (rule "polySimp_elimSub" (formula "33") (term "1,0"))
                  (rule "mul_literals" (formula "33") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "33") (term "1,0"))
                  (rule "lenOfSeqSub" (formula "34") (term "2,0,0"))
                  (rule "sub_literals" (formula "34") (term "1,2,0,0"))
                  (rule "less_literals" (formula "34") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "lenOfSeqSub" (formula "31") (term "0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "sub_literals" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "lenOfSeqSub" (formula "32") (term "1,0,0"))
                  (rule "less_literals" (formula "32") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "polySimp_homoEq" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                  (rule "add_literals" (formula "32") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "32") (term "0,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,0,1,0"))
                  (rule "less_literals" (formula "32") (term "0,0,1,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1,0"))
                  (rule "add_literals" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "53"))
                  (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "89"))
                   (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "37")))
                  (rule "true_left" (formula "67"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "30") (term "1,1,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1,1,0"))
                  (rule "add_literals" (formula "19") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "1,0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "1,1,0"))
                  (rule "add_literals" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "1,0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,1,0,0"))
                  (rule "add_literals" (formula "20") (term "1,0,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "eqSeqConcat" (formula "13"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "lenOfSeqSub" (formula "15") (term "2,0"))
                  (rule "sub_literals" (formula "15") (term "1,2,0"))
                  (rule "less_literals" (formula "15") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSeqSingleton" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "lenOfSeqConcat" (formula "13") (term "1,1"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "add_literals" (formula "13") (term "1,1"))
                  (rule "add_literals" (formula "13") (term "1"))
                  (rule "lenOfSeqSub" (formula "14") (term "0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "lenOfSeqSub" (formula "13") (term "0"))
                  (rule "sub_literals" (formula "13") (term "1,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "equal_literals" (formula "13") (term "1"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_zero_left" (formula "32") (term "1,1,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "sub_literals" (formula "33") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "33") (term "1,1,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "eqSeqConcat" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "add_literals" (formula "5") (term "1,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "add_literals" (formula "4") (term "1,2,0"))
                  (rule "add_literals" (formula "4") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,0,1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
                  (rule "mul_literals" (formula "3") (term "1,1,1,1"))
                  (rule "polySimp_homoEq" (formula "3"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_homoEq" (formula "3") (term "1"))
                  (rule "times_zero_2" (formula "3") (term "1,0,1"))
                  (rule "add_zero_right" (formula "3") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "83")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "sub_literals" (formula "34") (term "1,0,0"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "eqSeqConcat" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "lenOfSeqConcat" (formula "2") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "add_literals" (formula "2") (term "1,0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqSubEQ" (formula "3") (term "1,1,0") (ifseqformula "8"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "3") (term "1,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqSubEQ" (formula "2") (term "1,2,0") (ifseqformula "8"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1,2,0"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,2,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "add_literals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,2,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,2,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,2,0"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "add_literals" (formula "1") (term "1,0,1"))
                  (rule "add_literals" (formula "1") (term "0,1"))
                  (rule "lenOfSeqSubEQ" (formula "1") (term "1,1") (ifseqformula "8"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,1,1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                  (rule "polySimp_homoEq" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
                  (rule "add_literals" (formula "2") (term "0,2,0"))
                  (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
                  (rule "add_literals" (formula "3") (term "0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "16") (term "0"))
                  (rule "castDel" (formula "16") (term "2,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "sub_literals" (formula "16") (term "1,0,0"))
                  (rule "less_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "lenNonNegative" (formula "39") (term "2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                  (rule "andLeft" (formula "40"))
                  (rule "lenOfSeqSub" (formula "40") (term "0"))
                  (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "1,0"))
                  (rule "lenOfSeqSub" (formula "41") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "41") (term "1,1,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "40") (term "1") (ifseqformula "20"))
                  (rule "eqSymm" (formula "40"))
                  (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "1,0"))
                  (rule "add_literals" (formula "40") (term "0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                  (rule "applyEq" (formula "41") (term "0,0,1,0") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "40") (term "0,0,1"))
                  (rule "applyEq" (formula "40") (term "1") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "polySimp_homoEq" (formula "40") (term "1"))
                  (rule "mul_literals" (formula "40") (term "1,0,1"))
                  (rule "add_zero_right" (formula "40") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "40") (term "1"))
                  (rule "mul_literals" (formula "40") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0,0"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "add_zero_right" (formula "15") (term "1,1,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "35") (term "0"))
                  (rule "castDel" (formula "35") (term "2,0"))
                  (rule "add_literals" (formula "35") (term "1,1,0"))
                  (rule "sub_literals" (formula "35") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "35") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "less_literals" (formula "35") (term "0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "1,1,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "sub_literals" (formula "34") (term "1,0,0"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "sub_literals" (formula "17") (term "1,0,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "37") (term "0"))
                  (rule "castDel" (formula "37") (term "2,0"))
                  (rule "sub_literals" (formula "37") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "37") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "add_zero_left" (formula "37") (term "1,1,0"))
                  (rule "less_literals" (formula "37") (term "0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "charLiteral_to_int" (formula "29") (term "1"))
                  (rule "getOfSeqSub" (formula "38") (term "0"))
                  (rule "castDel" (formula "38") (term "2,0"))
                  (rule "leq_literals" (formula "38") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "sub_literals" (formula "38") (term "1,0,0"))
                  (rule "add_literals" (formula "38") (term "1,1,0"))
                  (rule "less_literals" (formula "38") (term "0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "commute_or" (formula "10"))
                  (rule "eqSeqConcat" (formula "19"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_literals" (formula "19") (term "1,0,0"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "eqSeqSingleton" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "lenOfSeqSub" (formula "19") (term "0"))
                  (rule "sub_literals" (formula "19") (term "1,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "equal_literals" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "less_literals" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "eqSeqSingleton" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "lenOfSeqSub" (formula "22") (term "2,0,0"))
                  (rule "less_literals" (formula "22") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "2,0,0"))
                  (rule "lenOfSeqSub" (formula "21") (term "2,0,0"))
                  (rule "less_literals" (formula "21") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "2,0,0"))
                  (rule "lenOfSeqSub" (formula "19") (term "0"))
                  (rule "sub_literals" (formula "19") (term "1,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "equal_literals" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "less_literals" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "lenOfSeqSub" (formula "20") (term "0"))
                  (rule "sub_literals" (formula "20") (term "1,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "equal_literals" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "lenNonNegative" (formula "9") (term "1,1"))
                  (rule "inEqSimp_commuteLeq" (formula "9"))
                  (rule "getOfSeqSub" (formula "38") (term "0"))
                  (rule "castDel" (formula "38") (term "2,0"))
                  (rule "sub_literals" (formula "38") (term "1,1,0,0"))
                  (rule "add_literals" (formula "38") (term "1,1,0"))
                  (rule "leq_literals" (formula "38") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "less_literals" (formula "38") (term "0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "eqSeqConcat" (formula "7"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "lenOfSeqSub" (formula "9") (term "2,0"))
                  (rule "less_literals" (formula "9") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,0"))
                  (rule "eqSeqSingleton" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "sub_literals" (formula "7") (term "1,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_homoEq" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "8") (term "0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_literals" (formula "7") (term "1,0"))
                  (rule "add_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "sub_literals" (formula "18") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "substringSubstring" (formula "23") (term "0") (inst "newSym=newSym_0"))
                  (rule "add_zero_left" (formula "23") (term "2,0,1,1"))
                  (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "add_literals" (formula "23") (term "1,0,1,1"))
                  (rule "qeq_literals" (formula "23") (term "1,0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "polySimp_elimSub" (formula "23") (term "1,1,0"))
                  (rule "times_zero_2" (formula "23") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "23") (term "1,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,1,0,0,0"))
                  (rule "qeq_literals" (formula "23") (term "1,0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0"))
                  (rule "add_literals" (formula "23") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "23") (term "0,1,0"))
                  (rule "qeq_literals" (formula "23") (term "1,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "applyEq" (formula "23") (term "0,0,1") (ifseqformula "24"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                  (rule "andLeft" (formula "24"))
                  (rule "lenOfSeqSub" (formula "24") (term "0"))
                  (rule "polySimp_elimSub" (formula "24") (term "1,0"))
                  (rule "mul_literals" (formula "24") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "1,0"))
                  (rule "add_literals" (formula "24") (term "0,1,0"))
                  (rule "lenOfSeqSub" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "25") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "1,1,1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,1,1,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "24") (term "1") (ifseqformula "47"))
                  (rule "polySimp_elimSub" (formula "24") (term "1,1"))
                  (rule "mul_literals" (formula "24") (term "1,1,1"))
                  (rule "polySimp_addComm0" (formula "24") (term "1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                  (rule "add_literals" (formula "24") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                  (rule "add_literals" (formula "24") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                  (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                  (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "polySimp_homoEq" (formula "24") (term "1"))
                  (rule "times_zero_2" (formula "24") (term "1,0,1"))
                  (rule "add_zero_right" (formula "24") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
                  (rule "mul_literals" (formula "24") (term "1,1"))
                  (rule "charLiteral_to_int" (formula "25") (term "1"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "add_zero_right" (formula "17") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                  (rule "times_zero_2" (formula "17") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "39") (term "0"))
                  (rule "castDel" (formula "39") (term "2,0"))
                  (rule "add_literals" (formula "39") (term "1,1,0"))
                  (rule "leq_literals" (formula "39") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "sub_literals" (formula "39") (term "1,0,0"))
                  (rule "less_literals" (formula "39") (term "0,0"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "sub_literals" (formula "20") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "1,1,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "eqSeqConcat" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "lenOfSeqSub" (formula "4") (term "2,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "1,2,0"))
                  (rule "times_zero_2" (formula "4") (term "1,1,2,0"))
                  (rule "add_zero_right" (formula "4") (term "1,2,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "lenOfSeqConcat" (formula "3") (term "2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "lenOfSeqSub" (formula "2") (term "0"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                  (rule "times_zero_2" (formula "2") (term "1,1,0"))
                  (rule "add_zero_right" (formula "2") (term "1,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                  (rule "add_literals" (formula "2") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "add_literals" (formula "4") (term "1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,2,0"))
                  (rule "add_literals" (formula "3") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "add_literals" (formula "2") (term "1,0,1"))
                  (rule "add_literals" (formula "2") (term "0,1"))
                  (rule "lenOfSeqSubEQ" (formula "2") (term "1,1") (ifseqformula "11"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1,1"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                  (rule "polySimp_homoEq" (formula "2"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "4") (term "0,2,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,2,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,2,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,1,1"))
                  (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                  (rule "polySimp_addAssoc" (formula "2") (term "1"))
                  (rule "add_literals" (formula "2") (term "0,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_homoEq" (formula "2") (term "1"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1"))
                  (rule "add_zero_right" (formula "2") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,2,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,2,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,0,1,2,0"))
                  (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                  (rule "eqSeqConcat" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "lenOfSeqSub" (formula "7") (term "2,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,2,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,2,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,2,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,2,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1,2,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1,2,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "1,2,0"))
                  (rule "add_literals" (formula "7") (term "1,1,1,2,0"))
                  (rule "times_zero_1" (formula "7") (term "1,1,2,0"))
                  (rule "add_literals" (formula "7") (term "1,2,0"))
                  (rule "lenOfSeqSub" (formula "5") (term "0"))
                  (rule "polySimp_elimSub" (formula "5") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,1,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "eqSeqSingleton" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "1,1,1,0"))
                  (rule "times_zero_1" (formula "5") (term "1,1,0"))
                  (rule "add_zero_right" (formula "5") (term "1,0"))
                  (rule "lenOfSeqSub" (formula "6") (term "0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "sub_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,2,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0,2,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,2,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,2,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,2,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,2,0"))
                  (rule "add_literals" (formula "7") (term "0,0,2,0"))
                  (rule "leq_literals" (formula "7") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "add_literals" (formula "5") (term "1,1"))
                  (rule "add_literals" (formula "5") (term "1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "equal_literals" (formula "5") (term "1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "sub_literals" (formula "22") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "44") (term "0"))
                  (rule "castDel" (formula "44") (term "2,0"))
                  (rule "sub_literals" (formula "44") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "44") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "add_literals" (formula "44") (term "1,1,0"))
                  (rule "less_literals" (formula "44") (term "0,0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "getOfSeqSub" (formula "45") (term "0"))
                  (rule "castDel" (formula "45") (term "2,0"))
                  (rule "add_literals" (formula "45") (term "1,1,0"))
                  (rule "sub_literals" (formula "45") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "45") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "less_literals" (formula "45") (term "0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "getOfSeqSub" (formula "24") (term "0"))
                  (rule "castDel" (formula "24") (term "2,0"))
                  (rule "add_zero_left" (formula "24") (term "1,1,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "sub_literals" (formula "24") (term "1,0,0"))
                  (rule "less_literals" (formula "24") (term "0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "getOfSeqSub" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "2,0"))
                  (rule "add_zero_left" (formula "25") (term "1,1,0"))
                  (rule "sub_literals" (formula "25") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "less_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "getOfSeqSub" (formula "43") (term "0"))
                  (rule "castDel" (formula "43") (term "2,0"))
                  (rule "add_literals" (formula "43") (term "1,1,0"))
                  (rule "sub_literals" (formula "43") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "43") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "less_literals" (formula "43") (term "0,0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "charLiteral_to_int" (formula "37") (term "1"))
                  (rule "charLiteral_to_int" (formula "16") (term "1"))
                  (rule "ifEqualsInteger" (formula "16"))
                  (rule "seqGetAlphaCast" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "inEqSimp_or_weaken1" (formula "35"))
                  (rule "add_literals" (formula "35") (term "1,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "eqSeqConcat" (formula "11"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "lenOfSeqSub" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,2,0"))
                  (rule "less_literals" (formula "13") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "sub_literals" (formula "11") (term "1,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_homoEq" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "eqSeqSingleton" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "12") (term "0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_literals" (formula "11") (term "1,0"))
                  (rule "add_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "36"))
                  (rule "leq_literals" (formula "47") (term "0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "getOfSeqSub" (formula "43") (term "0"))
                  (rule "castDel" (formula "43") (term "2,0"))
                  (rule "sub_literals" (formula "43") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "43") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "add_literals" (formula "43") (term "1,1,0"))
                  (rule "less_literals" (formula "43") (term "0,0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "getOfSeqSub" (formula "24") (term "0"))
                  (rule "castDel" (formula "24") (term "2,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0"))
                  (rule "sub_literals" (formula "24") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "less_literals" (formula "24") (term "0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "seqGetAlphaCast" (formula "38") (term "0"))
                  (rule "castDel" (formula "38") (term "0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "charLiteral_to_int" (formula "30") (term "1"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "add_zero_left" (formula "5") (term "1,1,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "1,0,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "charLiteral_to_int" (formula "39") (term "1"))
                  (rule "eqSeqConcat" (formula "3"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "lenOfSeqSub" (formula "5") (term "2,0"))
                  (rule "less_literals" (formula "5") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "2,0"))
                  (rule "lenOfSeqSub" (formula "3") (term "0"))
                  (rule "sub_literals" (formula "3") (term "1,0"))
                  (rule "less_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_homoEq" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "eqSeqSingleton" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "4") (term "0"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "sub_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,0"))
                  (rule "add_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "getOfSeqSub" (formula "24") (term "0"))
                  (rule "castDel" (formula "24") (term "2,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "add_literals" (formula "24") (term "1,1,0"))
                  (rule "sub_literals" (formula "24") (term "1,0,0"))
                  (rule "less_literals" (formula "24") (term "0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "getOfSeqSub" (formula "46") (term "0"))
                  (rule "castDel" (formula "46") (term "2,0"))
                  (rule "sub_literals" (formula "46") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "46") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "add_literals" (formula "46") (term "1,1,0"))
                  (rule "less_literals" (formula "46") (term "0,0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "getOfSeqSub" (formula "47") (term "0"))
                  (rule "castDel" (formula "47") (term "2,0"))
                  (rule "sub_literals" (formula "47") (term "1,1,0,0"))
                  (rule "add_literals" (formula "47") (term "1,1,0"))
                  (rule "leq_literals" (formula "47") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "less_literals" (formula "47") (term "0,0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "add_zero_left" (formula "26") (term "1,1,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "getOfSeqSub" (formula "27") (term "0"))
                  (rule "castDel" (formula "27") (term "2,0"))
                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "add_literals" (formula "27") (term "1,1,0"))
                  (rule "sub_literals" (formula "27") (term "1,0,0"))
                  (rule "less_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "getOfSeqSub" (formula "45") (term "0"))
                  (rule "castDel" (formula "45") (term "2,0"))
                  (rule "sub_literals" (formula "45") (term "1,1,0,0"))
                  (rule "add_literals" (formula "45") (term "1,1,0"))
                  (rule "leq_literals" (formula "45") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "less_literals" (formula "45") (term "0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "charLiteral_to_int" (formula "19") (term "1"))
                  (rule "ifEqualsInteger" (formula "19"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_zero_left" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "23") (term "0"))
                  (rule "castDel" (formula "23") (term "2,0"))
                  (rule "leq_literals" (formula "23") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "sub_literals" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "1,1,0"))
                  (rule "less_literals" (formula "23") (term "0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "eqSeqConcat" (formula "7"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "lenOfSeqSub" (formula "9") (term "2,0"))
                  (rule "less_literals" (formula "9") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "sub_literals" (formula "7") (term "1,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_homoEq" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "8") (term "0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_literals" (formula "7") (term "1,0"))
                  (rule "add_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "45") (term "0"))
                  (rule "castDel" (formula "45") (term "2,0"))
                  (rule "sub_literals" (formula "45") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "45") (term "1,1,0"))
                  (rule "leq_literals" (formula "45") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "less_literals" (formula "45") (term "0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "sub_literals" (formula "26") (term "1,1,0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "add_zero_left" (formula "6") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "1,0,0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "seqGetAlphaCast" (formula "41") (term "0"))
                  (rule "castDel" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "getOfSeqSub" (formula "3") (term "0"))
                  (rule "castDel" (formula "3") (term "2,0"))
                  (rule "add_zero_left" (formula "3") (term "1,1,0"))
                  (rule "leq_literals" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "sub_literals" (formula "3") (term "1,0,0"))
                  (rule "less_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "eqSeqConcat" (formula "14"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "lenOfSeqSub" (formula "16") (term "2,0"))
                  (rule "sub_literals" (formula "16") (term "1,2,0"))
                  (rule "less_literals" (formula "16") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSeqSingleton" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "lenOfSeqSub" (formula "14") (term "0"))
                  (rule "sub_literals" (formula "14") (term "1,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_homoEq" (formula "14"))
                  (rule "mul_literals" (formula "14") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "15") (term "0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "add_literals" (formula "14") (term "1,0"))
                  (rule "add_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "getOfSeqSub" (formula "48") (term "0"))
                  (rule "castDel" (formula "48") (term "2,0"))
                  (rule "sub_literals" (formula "48") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "48") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "add_literals" (formula "48") (term "1,1,0"))
                  (rule "less_literals" (formula "48") (term "0,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "getOfSeqSub" (formula "49") (term "0"))
                  (rule "castDel" (formula "49") (term "2,0"))
                  (rule "leq_literals" (formula "49") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "sub_literals" (formula "49") (term "1,0,0"))
                  (rule "add_literals" (formula "49") (term "1,1,0"))
                  (rule "less_literals" (formula "49") (term "0,0"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "sub_literals" (formula "28") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "47") (term "0"))
                  (rule "castDel" (formula "47") (term "2,0"))
                  (rule "sub_literals" (formula "47") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "47") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "add_literals" (formula "47") (term "1,1,0"))
                  (rule "less_literals" (formula "47") (term "0,0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "eqSeqConcat" (formula "4"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "lenOfSeqSub" (formula "6") (term "2,0"))
                  (rule "less_literals" (formula "6") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "sub_literals" (formula "6") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "lenOfSeqSub" (formula "4") (term "0"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "sub_literals" (formula "4") (term "0"))
                  (rule "polySimp_homoEq" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "5") (term "0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "add_literals" (formula "4") (term "1,0"))
                  (rule "add_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "polySimp_elimSub" (formula "26") (term "1,0,0"))
                  (rule "times_zero_2" (formula "26") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "26") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_zero_left" (formula "8") (term "1,0"))
                  (rule "charLiteral_to_int" (formula "44") (term "1"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "add_zero_left" (formula "14") (term "1,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "1,0,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "sub_literals" (formula "28") (term "1,0,0"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "getOfSeqSub" (formula "3") (term "0"))
                  (rule "castDel" (formula "3") (term "2,0"))
                  (rule "add_zero_left" (formula "3") (term "1,1,0"))
                  (rule "sub_literals" (formula "3") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "less_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "add_zero_left" (formula "15") (term "1,1,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "seqGetAlphaCast" (formula "35") (term "0"))
                  (rule "castDel" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "eqSeqConcat" (formula "9"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "lenOfSeqSub" (formula "11") (term "2,0"))
                  (rule "less_literals" (formula "11") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "2,0"))
                  (rule "eqSeqSingleton" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "lenOfSeqSub" (formula "9") (term "0"))
                  (rule "sub_literals" (formula "9") (term "1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_homoEq" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "10") (term "0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "add_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "charLiteral_to_int" (formula "24") (term "1"))
                  (rule "ifEqualsInteger" (formula "24"))
                  (rule "inEqSimp_or_weaken1" (formula "21"))
                  (rule "add_literals" (formula "21") (term "1,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                  (rule "leq_literals" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "getOfSeqSub" (formula "27") (term "0"))
                  (rule "castDel" (formula "27") (term "2,0"))
                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "sub_literals" (formula "27") (term "1,0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0"))
                  (rule "less_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "getOfSeqSub" (formula "49") (term "0"))
                  (rule "castDel" (formula "49") (term "2,0"))
                  (rule "leq_literals" (formula "49") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "sub_literals" (formula "49") (term "1,0,0"))
                  (rule "add_literals" (formula "49") (term "1,1,0"))
                  (rule "less_literals" (formula "49") (term "0,0"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "getOfSeqSub" (formula "50") (term "0"))
                  (rule "castDel" (formula "50") (term "2,0"))
                  (rule "sub_literals" (formula "50") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "50") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "add_literals" (formula "50") (term "1,1,0"))
                  (rule "less_literals" (formula "50") (term "0,0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "sub_literals" (formula "29") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "48") (term "0"))
                  (rule "castDel" (formula "48") (term "2,0"))
                  (rule "sub_literals" (formula "48") (term "1,1,0,0"))
                  (rule "add_literals" (formula "48") (term "1,1,0"))
                  (rule "leq_literals" (formula "48") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "less_literals" (formula "48") (term "0,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "eqSeqConcat" (formula "17"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "lenOfSeqSub" (formula "19") (term "2,0"))
                  (rule "less_literals" (formula "19") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "sub_literals" (formula "19") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "17") (term "1,1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_addAssoc" (formula "17") (term "1"))
                  (rule "add_literals" (formula "17") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "lenOfSeqSub" (formula "17") (term "0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "0"))
                  (rule "polySimp_homoEq" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "18") (term "0"))
                  (rule "sub_literals" (formula "18") (term "1,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "equal_literals" (formula "18") (term "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "less_literals" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "add_literals" (formula "17") (term "1,0"))
                  (rule "add_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "getOfSeqSub" (formula "4") (term "0"))
                  (rule "castDel" (formula "4") (term "2,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "add_zero_left" (formula "4") (term "1,1,0"))
                  (rule "sub_literals" (formula "4") (term "1,0,0"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "charLiteral_to_int" (formula "37") (term "1"))
                  (rule "seqGetAlphaCast" (formula "45") (term "0"))
                  (rule "castDel" (formula "45") (term "0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "true_left" (formula "45"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "1,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "96"))
                  (rule "true_left" (formula "96"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "sub_literals" (formula "29") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "3") (term "0"))
                  (rule "castDel" (formula "3") (term "2,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "leq_literals" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
                  (rule "times_zero_2" (formula "3") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                  (rule "eqSeqConcat" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "lenOfSeqSub" (formula "7") (term "2,0"))
                  (rule "sub_literals" (formula "7") (term "1,2,0"))
                  (rule "less_literals" (formula "7") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "lenOfSeqSub" (formula "5") (term "0"))
                  (rule "sub_literals" (formula "5") (term "1,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_homoEq" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "6") (term "0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "sub_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "add_literals" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "sub_literals" (formula "17") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "1,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "sub_literals" (formula "29") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "29") (term "1,1,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "51") (term "0"))
                  (rule "castDel" (formula "51") (term "2,0"))
                  (rule "leq_literals" (formula "51") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "sub_literals" (formula "51") (term "1,0,0"))
                  (rule "add_literals" (formula "51") (term "1,1,0"))
                  (rule "less_literals" (formula "51") (term "0,0"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "getOfSeqSub" (formula "52") (term "0"))
                  (rule "castDel" (formula "52") (term "2,0"))
                  (rule "leq_literals" (formula "52") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "sub_literals" (formula "52") (term "1,0,0"))
                  (rule "add_literals" (formula "52") (term "1,1,0"))
                  (rule "less_literals" (formula "52") (term "0,0"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "charLiteral_to_int" (formula "47") (term "1"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "sub_literals" (formula "31") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "tryEmpty" (formula "104") (term "1"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "50") (term "0"))
                  (rule "castDel" (formula "50") (term "2,0"))
                  (rule "sub_literals" (formula "50") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "50") (term "1,1,0"))
                  (rule "leq_literals" (formula "50") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "less_literals" (formula "50") (term "0,0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "hideAuxiliaryEqConcrete" (formula "13"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "add_zero_left" (formula "17") (term "1,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "1,0,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSeqConcat" (formula "11"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "lenOfSeqSub" (formula "13") (term "2,0"))
                  (rule "less_literals" (formula "13") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "2,0"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "0"))
                  (rule "polySimp_homoEq" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "eqSeqSingleton" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_literals" (formula "11") (term "1,0"))
                  (rule "add_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "sub_literals" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "equal_literals" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "seqGetAlphaCast" (formula "38") (term "0"))
                  (rule "castDel" (formula "38") (term "0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "getOfSeqSub" (formula "4") (term "0"))
                  (rule "castDel" (formula "4") (term "2,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "sub_literals" (formula "4") (term "1,0,0"))
                  (rule "add_zero_left" (formula "4") (term "1,1,0"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "methodCallEmpty" (formula "101") (term "1"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "1,1,0"))
                  (rule "add_literals" (formula "9") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "1,0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "1,0,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "charLiteral_to_int" (formula "26") (term "1"))
                  (rule "ifEqualsInteger" (formula "26"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "sub_literals" (formula "30") (term "1,0,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "eqSeqConcat" (formula "19"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "lenOfSeqSub" (formula "21") (term "2,0"))
                  (rule "less_literals" (formula "21") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "2,0"))
                  (rule "eqSeqSingleton" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "lenOfSeqConcat" (formula "19") (term "1,1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1"))
                  (rule "add_literals" (formula "19") (term "0,1"))
                  (rule "lenOfSeqSub" (formula "20") (term "0"))
                  (rule "sub_literals" (formula "20") (term "1,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "lenOfSeqSub" (formula "19") (term "0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "sub_literals" (formula "19") (term "0"))
                  (rule "polySimp_homoEq" (formula "19"))
                  (rule "mul_literals" (formula "19") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_literals" (formula "19") (term "1,0"))
                  (rule "add_literals" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "sub_literals" (formula "5") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "add_zero_left" (formula "5") (term "1,1,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "sub_literals" (formula "17") (term "1,1,0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_zero_right" (formula "30") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "30") (term "1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "30") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                  (rule "seqGetAlphaCast" (formula "48") (term "0"))
                  (rule "castDel" (formula "48") (term "0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "getOfSeqSub" (formula "52") (term "0"))
                  (rule "castDel" (formula "52") (term "2,0"))
                  (rule "sub_literals" (formula "52") (term "1,1,0,0"))
                  (rule "add_literals" (formula "52") (term "1,1,0"))
                  (rule "leq_literals" (formula "52") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "less_literals" (formula "52") (term "0,0"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "getOfSeqSub" (formula "53") (term "0"))
                  (rule "castDel" (formula "53") (term "2,0"))
                  (rule "add_literals" (formula "53") (term "1,1,0"))
                  (rule "sub_literals" (formula "53") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "53") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "less_literals" (formula "53") (term "0,0"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "charLiteral_to_int" (formula "40") (term "1"))
                  (rule "eqSeqConcat" (formula "6"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "lenOfSeqSub" (formula "8") (term "2,0"))
                  (rule "sub_literals" (formula "8") (term "1,2,0"))
                  (rule "less_literals" (formula "8") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "eqSeqSingleton" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "lenOfSeqSub" (formula "6") (term "0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "sub_literals" (formula "6") (term "0"))
                  (rule "polySimp_homoEq" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "add_literals" (formula "6") (term "1,0"))
                  (rule "add_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "sub_literals" (formula "34") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "charLiteral_to_int" (formula "42") (term "1"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "sub_literals" (formula "19") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_zero_left" (formula "19") (term "1,1,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "commute_or" (formula "15"))
                  (rule "getOfSeqSub" (formula "4") (term "0"))
                  (rule "castDel" (formula "4") (term "2,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "add_zero_right" (formula "4") (term "1,1,0"))
                  (rule "sub_literals" (formula "4") (term "1,0,0"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_notGeq" (formula "25") (term "0,1"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "25") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1"))
                  (rule "mul_literals" (formula "25") (term "1,0,1"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "sub_literals" (formula "20") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "add_zero_left" (formula "20") (term "1,0"))
                  (rule "eqSeqConcat" (formula "13"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "add_literals" (formula "13") (term "1,0,0"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "lenOfSeqSub" (formula "15") (term "2,0"))
                  (rule "less_literals" (formula "15") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "2,0"))
                  (rule "lenOfSeqSub" (formula "13") (term "0"))
                  (rule "sub_literals" (formula "13") (term "1,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "equal_literals" (formula "13") (term "1"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "eqSeqSingleton" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "eqSeqSingleton" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "lenOfSeqSub" (formula "13") (term "0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "lenOfSeqSub" (formula "14") (term "0"))
                  (rule "sub_literals" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "less_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "add_zero_left" (formula "5") (term "1,1,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "1,0,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_zero_right" (formula "19") (term "1,1,0"))
                  (rule "sub_literals" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "54") (term "0"))
                  (rule "castDel" (formula "54") (term "2,0"))
                  (rule "sub_literals" (formula "54") (term "1,1,0,0"))
                  (rule "add_literals" (formula "54") (term "1,1,0"))
                  (rule "leq_literals" (formula "54") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "less_literals" (formula "54") (term "0,0"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "seqGetAlphaCast" (formula "42") (term "0"))
                  (rule "castDel" (formula "42") (term "0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "getOfSeqSub" (formula "55") (term "0"))
                  (rule "castDel" (formula "55") (term "2,0"))
                  (rule "sub_literals" (formula "55") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "55") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "add_literals" (formula "55") (term "1,1,0"))
                  (rule "less_literals" (formula "55") (term "0,0"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "eqSeqConcat" (formula "22"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "lenOfSeqSub" (formula "24") (term "2,0"))
                  (rule "less_literals" (formula "24") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "sub_literals" (formula "24") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "22") (term "1,1"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "polySimp_addAssoc" (formula "22") (term "1"))
                  (rule "add_literals" (formula "22") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "lenOfSeqSub" (formula "22") (term "0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "0"))
                  (rule "polySimp_homoEq" (formula "22"))
                  (rule "mul_literals" (formula "22") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "add_literals" (formula "22") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "23") (term "0"))
                  (rule "sub_literals" (formula "23") (term "1,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "equal_literals" (formula "23") (term "1"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "less_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "add_literals" (formula "22") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "add_literals" (formula "22") (term "1,0"))
                  (rule "add_literals" (formula "22") (term "0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "getOfSeqSub" (formula "35") (term "0"))
                  (rule "castDel" (formula "35") (term "2,0"))
                  (rule "add_literals" (formula "35") (term "1,1,0"))
                  (rule "leq_literals" (formula "35") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "sub_literals" (formula "35") (term "1,0,0"))
                  (rule "less_literals" (formula "35") (term "0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "seqGetAlphaCast" (formula "44") (term "0"))
                  (rule "castDel" (formula "44") (term "0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "add_zero_left" (formula "6") (term "1,1,0"))
                  (rule "sub_literals" (formula "6") (term "1,0,0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "getOfSeqSub" (formula "36") (term "0"))
                  (rule "castDel" (formula "36") (term "2,0"))
                  (rule "sub_literals" (formula "36") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "36") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "add_literals" (formula "36") (term "1,1,0"))
                  (rule "less_literals" (formula "36") (term "0,0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "sub_literals" (formula "20") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "inEqSimp_notGeq" (formula "28") (term "0,1"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "28") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1"))
                  (rule "mul_literals" (formula "28") (term "1,0,1"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_zero_left" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "4") (term "0"))
                  (rule "castDel" (formula "4") (term "2,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "add_zero_right" (formula "4") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "add_zero_right" (formula "34") (term "1,1,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "sub_literals" (formula "34") (term "1,0,0"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "add_zero_left" (formula "21") (term "1,1,0"))
                  (rule "sub_literals" (formula "21") (term "1,0,0"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "commute_or" (formula "57"))
                  (rule "eqSeqConcat" (formula "7"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "lenOfSeqSub" (formula "9") (term "2,0"))
                  (rule "less_literals" (formula "9") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "0"))
                  (rule "polySimp_homoEq" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "8") (term "0"))
                  (rule "sub_literals" (formula "8") (term "1,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "less_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_literals" (formula "7") (term "1,0"))
                  (rule "add_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "add_zero_left" (formula "14") (term "1,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "1,0,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "sub_literals" (formula "5") (term "1,1,0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1,1,0"))
                  (rule "add_literals" (formula "12") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "lenNonNegative" (formula "25") (term "2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                  (rule "andLeft" (formula "26"))
                  (rule "lenOfSeqSub" (formula "26") (term "0"))
                  (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                  (rule "mul_literals" (formula "26") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "26") (term "1,0"))
                  (rule "lenOfSeqSub" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "1,1,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "26") (term "1") (ifseqformula "28"))
                  (rule "eqSymm" (formula "26"))
                  (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                  (rule "mul_literals" (formula "26") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "26") (term "1,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                  (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "getOfSeqSub" (formula "57") (term "0"))
                  (rule "castDel" (formula "57") (term "2,0"))
                  (rule "sub_literals" (formula "57") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "57") (term "1,1,0"))
                  (rule "leq_literals" (formula "57") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "less_literals" (formula "57") (term "0,0"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "getOfSeqSub" (formula "58") (term "0"))
                  (rule "castDel" (formula "58") (term "2,0"))
                  (rule "add_zero_right" (formula "58") (term "1,1,0"))
                  (rule "sub_literals" (formula "58") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "58") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "58"))
                  (rule "less_literals" (formula "58") (term "0,0"))
                   (builtin "One Step Simplification" (formula "58"))
                  (rule "getOfSeqSub" (formula "23") (term "0"))
                  (rule "castDel" (formula "23") (term "2,0"))
                  (rule "add_zero_left" (formula "23") (term "1,1,0"))
                  (rule "sub_literals" (formula "23") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "23") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "less_literals" (formula "23") (term "0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "getOfSeqSub" (formula "37") (term "0"))
                  (rule "castDel" (formula "37") (term "2,0"))
                  (rule "add_literals" (formula "37") (term "1,1,0"))
                  (rule "leq_literals" (formula "37") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "sub_literals" (formula "37") (term "1,0,0"))
                  (rule "less_literals" (formula "37") (term "0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "add_zero_left" (formula "6") (term "1,1,0"))
                  (rule "sub_literals" (formula "6") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "getOfSeqSub" (formula "38") (term "0"))
                  (rule "castDel" (formula "38") (term "2,0"))
                  (rule "sub_literals" (formula "38") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "38") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "add_literals" (formula "38") (term "1,1,0"))
                  (rule "less_literals" (formula "38") (term "0,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "sub_literals" (formula "21") (term "1,0,0"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "charLiteral_to_int" (formula "54") (term "1"))
                  (rule "eqSeqConcat" (formula "24"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "24"))
                  (rule "lenOfSeqSub" (formula "26") (term "2,0"))
                  (rule "sub_literals" (formula "26") (term "1,2,0"))
                  (rule "less_literals" (formula "26") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "lenOfSeqSub" (formula "24") (term "0"))
                  (rule "less_literals" (formula "24") (term "0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "sub_literals" (formula "24") (term "0"))
                  (rule "polySimp_homoEq" (formula "24"))
                  (rule "mul_literals" (formula "24") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "add_literals" (formula "24") (term "0,0"))
                  (rule "eqSeqSingleton" (formula "25"))
                  (rule "andLeft" (formula "25"))
                  (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0"))
                  (rule "add_literals" (formula "24") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "25") (term "0"))
                  (rule "sub_literals" (formula "25") (term "1,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "less_literals" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "add_literals" (formula "24") (term "1,0"))
                  (rule "add_literals" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "getOfSeqSub" (formula "37") (term "0"))
                  (rule "castDel" (formula "37") (term "2,0"))
                  (rule "add_zero_right" (formula "37") (term "1,1,0"))
                  (rule "leq_literals" (formula "37") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "polySimp_elimSub" (formula "37") (term "1,0,0"))
                  (rule "times_zero_2" (formula "37") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "37") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "sub_literals" (formula "22") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "add_zero_left" (formula "7") (term "1,1,0"))
                  (rule "sub_literals" (formula "7") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "sub_literals" (formula "14") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "add_zero_left" (formula "14") (term "1,1,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "add_zero_right" (formula "5") (term "1,1,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "1,0,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "lenNonNegative" (formula "1") (term "1,1"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "eqSeqConcat" (formula "9"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "lenOfSeqSub" (formula "11") (term "2,0"))
                  (rule "less_literals" (formula "11") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_addAssoc" (formula "9") (term "1"))
                  (rule "add_literals" (formula "9") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "lenOfSeqSub" (formula "9") (term "0"))
                  (rule "sub_literals" (formula "9") (term "1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_homoEq" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "10") (term "0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "add_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "0,1"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1"))
                  (rule "mul_literals" (formula "34") (term "1,0,1"))
                  (rule "getOfSeqSub" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "2,0"))
                  (rule "leq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "sub_literals" (formula "25") (term "1,0,0"))
                  (rule "add_zero_left" (formula "25") (term "1,1,0"))
                  (rule "less_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "getOfSeqSub" (formula "40") (term "0"))
                  (rule "castDel" (formula "40") (term "2,0"))
                  (rule "add_literals" (formula "40") (term "1,1,0"))
                  (rule "sub_literals" (formula "40") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "40") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "less_literals" (formula "40") (term "0,0"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "41") (term "0"))
                  (rule "castDel" (formula "41") (term "2,0"))
                  (rule "add_literals" (formula "41") (term "1,1,0"))
                  (rule "leq_literals" (formula "41") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "sub_literals" (formula "41") (term "1,0,0"))
                  (rule "less_literals" (formula "41") (term "0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "getOfSeqSub" (formula "23") (term "0"))
                  (rule "castDel" (formula "23") (term "2,0"))
                  (rule "add_zero_right" (formula "23") (term "1,1,0"))
                  (rule "leq_literals" (formula "23") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "sub_literals" (formula "23") (term "1,0,0"))
                  (rule "less_literals" (formula "23") (term "0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "seqGetAlphaCast" (formula "57") (term "0"))
                  (rule "castDel" (formula "57") (term "0"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "true_left" (formula "57"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "add_zero_left" (formula "26") (term "1,1,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "charLiteral_to_int" (formula "36") (term "1"))
                  (rule "ifEqualsInteger" (formula "36"))
                  (rule "getOfSeqSub" (formula "24") (term "0"))
                  (rule "castDel" (formula "24") (term "2,0"))
                  (rule "sub_literals" (formula "24") (term "1,1,0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "less_literals" (formula "24") (term "0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "add_zero_left" (formula "8") (term "1,1,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "16") (term "0"))
                  (rule "castDel" (formula "16") (term "2,0"))
                  (rule "sub_literals" (formula "16") (term "1,1,0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "less_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "1,0,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "add_zero_right" (formula "6") (term "1,1,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                  (rule "commute_or" (formula "3"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_zero_left" (formula "9") (term "1,0"))
                  (rule "eqSeqConcat" (formula "27"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "lenOfSeqSub" (formula "29") (term "2,0"))
                  (rule "less_literals" (formula "29") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "27") (term "1,1"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "add_literals" (formula "27") (term "1,1"))
                  (rule "add_literals" (formula "27") (term "1"))
                  (rule "eqSeqSingleton" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "lenOfSeqSub" (formula "27") (term "0"))
                  (rule "sub_literals" (formula "27") (term "1,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "equal_literals" (formula "27") (term "1"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "less_literals" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "lenOfSeqSub" (formula "27") (term "0"))
                  (rule "less_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "sub_literals" (formula "27") (term "0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "getOfSeqSub" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "2,0"))
                  (rule "sub_literals" (formula "25") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "less_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "add_literals" (formula "25") (term "1,0"))
                  (rule "getOfSeqSub" (formula "41") (term "0"))
                  (rule "castDel" (formula "41") (term "2,0"))
                  (rule "add_zero_right" (formula "41") (term "1,1,0"))
                  (rule "sub_literals" (formula "41") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "41") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "less_literals" (formula "41") (term "0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "42") (term "0"))
                  (rule "castDel" (formula "42") (term "2,0"))
                  (rule "add_literals" (formula "42") (term "1,1,0"))
                  (rule "sub_literals" (formula "42") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "42") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "less_literals" (formula "42") (term "0,0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1,1,0"))
                  (rule "add_literals" (formula "15") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "1,0,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "add_zero_left" (formula "26") (term "1,1,0"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "eqSeqConcat" (formula "10"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "lenOfSeqSub" (formula "12") (term "2,0"))
                  (rule "less_literals" (formula "12") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "2,0"))
                  (rule "lenOfSeqSub" (formula "10") (term "0"))
                  (rule "sub_literals" (formula "10") (term "1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_homoEq" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "eqSeqSingleton" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "sub_literals" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "equal_literals" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,0"))
                  (rule "add_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "getOfSeqSub" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "2,0"))
                  (rule "sub_literals" (formula "25") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "add_literals" (formula "25") (term "1,1,0"))
                  (rule "less_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "sub_literals" (formula "17") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "1,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_zero_left" (formula "9") (term "1,1,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "add_zero_left" (formula "28") (term "1,1,0"))
                  (rule "sub_literals" (formula "28") (term "1,0,0"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "sub_literals" (formula "26") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "commute_and" (formula "34") (term "0"))
                  (rule "getOfSeqSub" (formula "42") (term "0"))
                  (rule "castDel" (formula "42") (term "2,0"))
                  (rule "leq_literals" (formula "42") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "add_zero_right" (formula "42") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "42") (term "1,0,0"))
                  (rule "times_zero_2" (formula "42") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "42") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "37") (term "0,1"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "37") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1"))
                  (rule "mul_literals" (formula "37") (term "1,0,1"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "add_zero_right" (formula "7") (term "1,1,0"))
                  (rule "sub_literals" (formula "7") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "43") (term "0"))
                  (rule "castDel" (formula "43") (term "2,0"))
                  (rule "leq_literals" (formula "43") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "add_zero_right" (formula "43") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "43") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "27") (term "0"))
                  (rule "castDel" (formula "27") (term "2,0"))
                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "sub_literals" (formula "27") (term "1,0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0"))
                  (rule "less_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "eqSeqConcat" (formula "29"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "add_literals" (formula "29") (term "1,0,0"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "lenOfSeqSub" (formula "31") (term "2,0"))
                  (rule "sub_literals" (formula "31") (term "1,2,0"))
                  (rule "less_literals" (formula "31") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "lenOfSeqSub" (formula "29") (term "0"))
                  (rule "sub_literals" (formula "29") (term "1,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "less_literals" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "eqSeqSingleton" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "eqSeqSingleton" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "lenOfSeqSub" (formula "29") (term "0"))
                  (rule "sub_literals" (formula "29") (term "1,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "less_literals" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "lenOfSeqSub" (formula "30") (term "0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "sub_literals" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "getOfSeqSub" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "2,0"))
                  (rule "sub_literals" (formula "25") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "25") (term "1,1,0"))
                  (rule "leq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "less_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "sub_literals" (formula "17") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "1,0,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "add_zero_left" (formula "28") (term "1,1,0"))
                  (rule "sub_literals" (formula "28") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "substringSubstring" (formula "12") (term "0") (inst "newSym=newSym_1"))
                  (rule "add_zero_right" (formula "12") (term "1,0,1,1"))
                  (rule "qeq_literals" (formula "12") (term "1,0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_zero_left" (formula "12") (term "2,0,1,1"))
                  (rule "qeq_literals" (formula "12") (term "0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,0,0,0"))
                  (rule "qeq_literals" (formula "12") (term "1,0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,0"))
                  (rule "add_literals" (formula "12") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "12") (term "0,1,0"))
                  (rule "qeq_literals" (formula "12") (term "1,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "13"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "13") (inst "iv=iv"))
                  (rule "andLeft" (formula "13"))
                  (rule "lenOfSeqSub" (formula "13") (term "0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "1,0"))
                  (rule "add_literals" (formula "13") (term "0,1,0"))
                  (rule "lenOfSeqSub" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "1,1,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,1,1,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "13") (term "1") (ifseqformula "15"))
                  (rule "eqSymm" (formula "13"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "1,0"))
                  (rule "add_literals" (formula "13") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                  (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "eqSeqConcat" (formula "11"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "lenOfSeqSub" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,2,0"))
                  (rule "less_literals" (formula "13") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "lenOfSeqConcat" (formula "11") (term "1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_literals" (formula "11") (term "1,1"))
                  (rule "add_literals" (formula "11") (term "1"))
                  (rule "eqSeqSingleton" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "sub_literals" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "equal_literals" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_zero_right" (formula "7") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
                  (rule "times_zero_2" (formula "7") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_or_weaken1" (formula "22"))
                  (rule "add_literals" (formula "22") (term "1,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "22"))
                  (rule "leq_literals" (formula "33") (term "0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "commute_and" (formula "37") (term "0"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "add_zero_left" (formula "31") (term "1,1,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_zero_left" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1,1,0"))
                  (rule "add_literals" (formula "19") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "1,0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "1,1,0"))
                  (rule "add_literals" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "1,0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "1,0,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "1,0,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "sub_literals" (formula "30") (term "1,0,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "sub_literals" (formula "28") (term "1,0,0"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "charLiteral_to_int" (formula "23") (term "1"))
                  (rule "charLiteral_to_int" (formula "62") (term "1"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "1,1,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "charLiteral_to_int" (formula "15") (term "1"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_or_weaken1" (formula "66"))
                  (rule "add_literals" (formula "66") (term "1,0"))
                   (builtin "One Step Simplification" (formula "66"))
                  (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "66"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "66"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "applyEq" (formula "68") (term "1") (ifseqformula "46"))
                  (rule "applyEq" (formula "48") (term "1") (ifseqformula "46"))
                  (rule "inEqSimp_subsumption1" (formula "37") (term "1,0") (ifseqformula "67"))
                  (rule "leq_literals" (formula "37") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "inEqSimp_subsumption1" (formula "41") (term "0,0") (ifseqformula "67"))
                  (rule "leq_literals" (formula "41") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "inEqSimp_contradInEq1" (formula "39") (term "0,1") (ifseqformula "67"))
                  (rule "qeq_literals" (formula "39") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "inEqSimp_contradInEq1" (formula "38") (term "0,1") (ifseqformula "68"))
                  (rule "qeq_literals" (formula "38") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "andLeft" (formula "38"))
                  (rule "inEqSimp_subsumption1" (formula "42") (term "0,0,1") (ifseqformula "69"))
                  (rule "leq_literals" (formula "42") (term "0,0,0,1"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "inEqSimp_subsumption1" (formula "36") (term "1,0") (ifseqformula "70"))
                  (rule "leq_literals" (formula "36") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "70"))
                  (rule "leq_literals" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "inEqSimp_subsumption1" (formula "46") (term "0,0") (ifseqformula "69"))
                  (rule "leq_literals" (formula "46") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "inEqSimp_subsumption1" (formula "45") (term "0,0") (ifseqformula "69"))
                  (rule "leq_literals" (formula "45") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "inEqSimp_subsumption1" (formula "44") (term "0,0") (ifseqformula "69"))
                  (rule "leq_literals" (formula "44") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "inEqSimp_contradInEq1" (formula "36") (term "0,1") (ifseqformula "37"))
                  (rule "qeq_literals" (formula "36") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "inEqSimp_contradInEq1" (formula "35") (term "0,1") (ifseqformula "41"))
                  (rule "qeq_literals" (formula "35") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "39"))
                  (rule "leq_literals" (formula "37") (term "0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "68"))
                  (rule "leq_literals" (formula "40") (term "0"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "67"))
                  (rule "leq_literals" (formula "38") (term "0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "add_zero_left" (formula "31") (term "1,1,0"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "add_zero_right" (formula "8") (term "1,1,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "eqSeqConcat" (formula "12"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "1,0,0"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "eqSeqSingleton" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "eqSeqSingleton" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "lenOfSeqSub" (formula "12") (term "0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "lenOfSeqSub" (formula "14") (term "2,0,0"))
                  (rule "less_literals" (formula "14") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "2,0,0"))
                  (rule "lenOfSeqSub" (formula "15") (term "2,0,0"))
                  (rule "less_literals" (formula "15") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "2,0,0"))
                  (rule "lenOfSeqSub" (formula "12") (term "0"))
                  (rule "sub_literals" (formula "12") (term "1,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "equal_literals" (formula "12") (term "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "lenOfSeqSub" (formula "13") (term "0"))
                  (rule "sub_literals" (formula "13") (term "1,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "equal_literals" (formula "13") (term "1"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "1,0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "seqGetAlphaCast" (formula "24") (term "0"))
                  (rule "castDel" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "sub_literals" (formula "31") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "sub_literals" (formula "29") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "29") (term "1,1,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_zero_left" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "seqGetAlphaCast" (formula "63") (term "0"))
                  (rule "castDel" (formula "63") (term "0"))
                   (builtin "One Step Simplification" (formula "63"))
                  (rule "true_left" (formula "63"))
                  (rule "seqGetAlphaCast" (formula "16") (term "0"))
                  (rule "castDel" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "sub_literals" (formula "33") (term "1,0,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_zero_right" (formula "8") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_zero_left" (formula "12") (term "1,1,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "sub_literals" (formula "31") (term "1,1,0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "sub_literals" (formula "33") (term "1,1,0,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_zero_left" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_zero_right" (formula "9") (term "1,1,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "charLiteral_to_int" (formula "25") (term "1"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "charLiteral_to_int" (formula "4") (term "1"))
                  (rule "ifEqualsInteger" (formula "4"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "sub_literals" (formula "33") (term "1,0,0"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_or_weaken1" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                  (rule "leq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "add_zero_right" (formula "8") (term "1,1,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "1,0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "emptyModality" (formula "117") (term "1"))
                   (builtin "One Step Simplification" (formula "117"))
                  (rule "notRight" (formula "117"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "3"))
                  (rule "simplifySelectOfStoreEQ" (formula "85") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "85"))
                  (rule "simplifySelectOfStoreEQ" (formula "86") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "86"))
                  (rule "simplifySelectOfCreate" (formula "85"))
                   (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "119")) (ifInst ""  (formula "119")))
                  (rule "simplifySelectOfCreate" (formula "86"))
                   (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "119")))
                  (rule "simplifySelectOfCreate" (formula "85"))
                   (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "118")) (ifInst ""  (formula "118")))
                  (rule "simplifySelectOfCreate" (formula "86"))
                   (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "118")))
                  (rule "applyEqReverse" (formula "126") (term "0,1,1,0,1") (ifseqformula "86"))
                  (rule "applyEqReverse" (formula "86") (term "1,0") (ifseqformula "85"))
                  (rule "applyEqReverse" (formula "126") (term "1,0,1,1,0,1") (ifseqformula "85"))
                  (rule "applyEqReverse" (formula "126") (term "0,1,0") (ifseqformula "86"))
                  (rule "applyEqReverse" (formula "82") (term "0,0") (ifseqformula "86"))
                  (rule "applyEqReverse" (formula "126") (term "0,1,1,0,0,1") (ifseqformula "86"))
                  (rule "hideAuxiliaryEq" (formula "85"))
                  (rule "hideAuxiliaryEq" (formula "85"))
                  (rule "eqSymm" (formula "2"))
                  (rule "eqSymm" (formula "124") (term "1,0,1"))
                  (rule "eqSymm" (formula "124") (term "0"))
                  (rule "applyEq" (formula "92") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "87"))
                  (rule "applyEq" (formula "98") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "124") (term "0,1,1,0,0,1") (ifseqformula "87"))
                  (rule "applyEq" (formula "106") (term "1,2") (ifseqformula "1"))
                  (rule "applyEq" (formula "119") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "124") (term "0,0,1,0,1") (ifseqformula "87"))
                  (rule "applyEq" (formula "98") (term "1,2") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "124") (term "0,0,0") (ifseqformula "87"))
                  (rule "applyEq" (formula "93") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "106") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "1"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "charLiteral_to_int" (formula "66") (term "1"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "sub_literals" (formula "33") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "sub_literals" (formula "34") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "tryEmpty" (formula "115") (term "1"))
                  (rule "seqGetAlphaCast" (formula "27") (term "0"))
                  (rule "castDel" (formula "27") (term "0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "getOfSeqSub" (formula "35") (term "0"))
                  (rule "castDel" (formula "35") (term "2,0"))
                  (rule "add_literals" (formula "35") (term "1,1,0"))
                  (rule "sub_literals" (formula "35") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "35") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "less_literals" (formula "35") (term "0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "1,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "charLiteral_to_int" (formula "19") (term "1"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "sub_literals" (formula "33") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "33") (term "1,1,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "sub_literals" (formula "34") (term "1,1,0,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "getOfSeqSub" (formula "35") (term "0"))
                  (rule "castDel" (formula "35") (term "2,0"))
                  (rule "leq_literals" (formula "35") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "add_literals" (formula "35") (term "1,1,0"))
                  (rule "sub_literals" (formula "35") (term "1,0,0"))
                  (rule "less_literals" (formula "35") (term "0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "sub_literals" (formula "14") (term "1,1,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "seqGetAlphaCast" (formula "66") (term "0"))
                  (rule "castDel" (formula "66") (term "0"))
                   (builtin "One Step Simplification" (formula "66"))
                  (rule "true_left" (formula "66"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "sub_literals" (formula "34") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "getOfSeqSub" (formula "35") (term "0"))
                  (rule "castDel" (formula "35") (term "2,0"))
                  (rule "add_literals" (formula "35") (term "1,1,0"))
                  (rule "sub_literals" (formula "35") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "35") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "less_literals" (formula "35") (term "0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "sub_literals" (formula "14") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_zero_right" (formula "13") (term "1,1,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "34") (term "0"))
                  (rule "castDel" (formula "34") (term "2,0"))
                  (rule "sub_literals" (formula "34") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "34") (term "1,1,0"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "seqGetAlphaCast" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "getOfSeqSub" (formula "35") (term "0"))
                  (rule "castDel" (formula "35") (term "2,0"))
                  (rule "add_zero_right" (formula "35") (term "1,1,0"))
                  (rule "leq_literals" (formula "35") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "sub_literals" (formula "35") (term "1,0,0"))
                  (rule "less_literals" (formula "35") (term "0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "1,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_zero_right" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                  (rule "times_zero_2" (formula "13") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "1,0,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "charLiteral_to_int" (formula "28") (term "1"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "sub_literals" (formula "14") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "1,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "add_zero_right" (formula "15") (term "1,1,0"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "add_zero_right" (formula "14") (term "1,1,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "add_zero_right" (formula "15") (term "1,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                  (rule "times_zero_2" (formula "15") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "charLiteral_to_int" (formula "7") (term "1"))
                  (rule "ifEqualsInteger" (formula "7"))
                  (rule "seqGetAlphaCast" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "charLiteral_to_int" (formula "20") (term "1"))
                  (rule "charLiteral_to_int" (formula "67") (term "1"))
                  (rule "charLiteral_to_int" (formula "68") (term "1"))
                  (rule "seqGetAlphaCast" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "seqGetAlphaCast" (formula "67") (term "0"))
                  (rule "castDel" (formula "67") (term "0"))
                   (builtin "One Step Simplification" (formula "67"))
                  (rule "true_left" (formula "67"))
                  (rule "seqGetAlphaCast" (formula "68") (term "0"))
                  (rule "castDel" (formula "68") (term "0"))
                   (builtin "One Step Simplification" (formula "68"))
                  (rule "true_left" (formula "68"))
                  (rule "inEqSimp_notGeq" (formula "6") (term "0,1"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "6") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,1"))
                  (rule "mul_literals" (formula "6") (term "1,0,1"))
                  (rule "charLiteral_to_int" (formula "29") (term "1"))
                  (rule "charLiteral_to_int" (formula "8") (term "1"))
                  (rule "ifEqualsInteger" (formula "8"))
                  (rule "charLiteral_to_int" (formula "21") (term "1"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "seqGetAlphaCast" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "charLiteral_to_int" (formula "30") (term "1"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "0,1"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "7") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1"))
                  (rule "mul_literals" (formula "7") (term "1,0,1"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "0,1"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "8") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1"))
                  (rule "mul_literals" (formula "8") (term "1,0,1"))
                  (rule "charLiteral_to_int" (formula "9") (term "1"))
                  (rule "ifEqualsInteger" (formula "9"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,1"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1"))
                  (rule "mul_literals" (formula "9") (term "1,0,1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "22") (term "1"))
                  (rule "charLiteral_to_int" (formula "23") (term "1"))
                  (rule "charLiteral_to_int" (formula "47") (term "1"))
                  (rule "charLiteral_to_int" (formula "43") (term "1"))
                  (rule "charLiteral_to_int" (formula "46") (term "1"))
                  (rule "charLiteral_to_int" (formula "45") (term "1"))
                  (rule "charLiteral_to_int" (formula "44") (term "1"))
                  (rule "seqGetAlphaCast" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "seqGetAlphaCast" (formula "23") (term "0"))
                  (rule "castDel" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "seqGetAlphaCast" (formula "47") (term "0"))
                  (rule "castDel" (formula "47") (term "0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "48") (inst "iv=iv"))
                  (rule "andLeft" (formula "48"))
                  (rule "lenOfSeqSubEQ" (formula "48") (term "1") (ifseqformula "51"))
                  (rule "eqSymm" (formula "48"))
                  (rule "polySimp_elimSub" (formula "48") (term "1,0"))
                  (rule "mul_literals" (formula "48") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "1,0"))
                  (rule "add_literals" (formula "48") (term "0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                  (rule "applyEq" (formula "49") (term "0,0,1,0,0,1,0,0") (ifseqformula "50"))
                  (rule "lenOfSeqSubEQ" (formula "49") (term "0,1,0,0,1,0,0") (ifseqformula "51"))
                  (rule "polySimp_elimSub" (formula "49") (term "1,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "49") (term "1,1,0,1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "1,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,1,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,1,0,0"))
                  (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "50"))
                  (rule "lenOfSeqSubEQ" (formula "48") (term "1") (ifseqformula "52"))
                  (rule "eqSymm" (formula "48"))
                  (rule "polySimp_elimSub" (formula "48") (term "1,0"))
                  (rule "mul_literals" (formula "48") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "1,0"))
                  (rule "add_literals" (formula "48") (term "0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0"))
                  (rule "eqSymm" (formula "48"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1"))
                  (rule "eqSymm" (formula "48"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "applyEq" (formula "48") (term "0,0,1,0") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "49") (inst "iv=iv"))
                  (rule "andLeft" (formula "49"))
                  (rule "lenOfSeqSub" (formula "49") (term "0"))
                  (rule "polySimp_elimSub" (formula "49") (term "1,0"))
                  (rule "mul_literals" (formula "49") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "1,0"))
                  (rule "add_literals" (formula "49") (term "0,1,0"))
                  (rule "lenOfSeqSub" (formula "50") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "50") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "1,1,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,1,1,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "49") (term "1") (ifseqformula "51"))
                  (rule "eqSymm" (formula "49"))
                  (rule "polySimp_elimSub" (formula "49") (term "1,0"))
                  (rule "mul_literals" (formula "49") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "1,0"))
                  (rule "add_literals" (formula "49") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "true_left" (formula "49"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                  (rule "applyEq" (formula "49") (term "0,0,1,0") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "true_left" (formula "49"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "70") (inst "iv=iv"))
                  (rule "andLeft" (formula "70"))
                  (rule "lenOfSeqSub" (formula "70") (term "0"))
                  (rule "polySimp_elimSub" (formula "70") (term "1,0"))
                  (rule "mul_literals" (formula "70") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "70") (term "1,0"))
                  (rule "lenOfSeqSubEQ" (formula "70") (term "1") (ifseqformula "49"))
                  (rule "eqSymm" (formula "70"))
                  (rule "polySimp_elimSub" (formula "70") (term "1,0"))
                  (rule "mul_literals" (formula "70") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "70") (term "1,0"))
                  (rule "add_literals" (formula "70") (term "0,1,0"))
                  (rule "lenOfSeqSub" (formula "71") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "71") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "71") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "71") (term "1,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0"))
                  (rule "eqSymm" (formula "70"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "70") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,1"))
                  (rule "add_literals" (formula "70") (term "0,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "70") (term "0,0,1"))
                  (rule "add_literals" (formula "70") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "71") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "71") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "71") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0"))
                  (rule "eqSymm" (formula "70"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "70") (term "0,0,1"))
                  (rule "add_literals" (formula "70") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "71") (term "0,0,1,0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "71"))
                  (rule "true_left" (formula "71"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "0,0,0"))
                  (rule "eqSymm" (formula "70"))
                  (rule "polySimp_elimOne" (formula "70") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "0,0,0"))
                  (rule "eqSymm" (formula "70"))
                  (rule "polySimp_elimOne" (formula "70") (term "0,0,1"))
                  (rule "applyEq" (formula "70") (term "1") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "70"))
                  (rule "polySimp_homoEq" (formula "70") (term "1"))
                  (rule "mul_literals" (formula "70") (term "1,0,1"))
                  (rule "add_zero_right" (formula "70") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "70") (term "1"))
                  (rule "mul_literals" (formula "70") (term "1,1"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "50") (inst "iv=iv"))
                  (rule "andLeft" (formula "50"))
                  (rule "lenOfSeqSub" (formula "51") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "51") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "51") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "51") (term "1,1,1,0,0"))
                  (rule "add_literals" (formula "51") (term "0,1,1,1,0,0"))
                  (rule "lenOfSeqSub" (formula "50") (term "0"))
                  (rule "polySimp_elimSub" (formula "50") (term "1,0"))
                  (rule "mul_literals" (formula "50") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "1,0"))
                  (rule "add_literals" (formula "50") (term "0,1,0"))
                  (rule "lenOfSeqSubEQ" (formula "50") (term "1") (ifseqformula "49"))
                  (rule "eqSymm" (formula "50"))
                  (rule "polySimp_elimSub" (formula "50") (term "1,0"))
                  (rule "mul_literals" (formula "50") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "1,0"))
                  (rule "add_literals" (formula "50") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "true_left" (formula "50"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0"))
                  (rule "applyEq" (formula "50") (term "0,0,1,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "true_left" (formula "50"))
                  (rule "charLiteral_to_int" (formula "10") (term "1"))
                  (rule "ifEqualsInteger" (formula "10"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,1"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1"))
                  (rule "mul_literals" (formula "10") (term "1,0,1"))
                  (rule "seqGetAlphaCast" (formula "43") (term "0"))
                  (rule "castDel" (formula "43") (term "0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "seqGetAlphaCast" (formula "41") (term "0"))
                  (rule "castDel" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "seqGetAlphaCast" (formula "40") (term "0"))
                  (rule "castDel" (formula "40") (term "0"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "seqGetAlphaCast" (formula "42") (term "0"))
                  (rule "castDel" (formula "42") (term "0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "seqGetAlphaCast" (formula "46") (term "0"))
                  (rule "castDel" (formula "46") (term "0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "true_left" (formula "46"))
                  (rule "seqGetAlphaCast" (formula "45") (term "0"))
                  (rule "castDel" (formula "45") (term "0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "true_left" (formula "45"))
                  (rule "seqGetAlphaCast" (formula "44") (term "0"))
                  (rule "castDel" (formula "44") (term "0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "seqGetAlphaCast" (formula "39") (term "0"))
                  (rule "castDel" (formula "39") (term "0"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "commute_and" (formula "6") (term "0"))
                  (rule "seqGetAlphaCast" (formula "38") (term "0"))
                  (rule "castDel" (formula "38") (term "0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "charLiteral_to_int" (formula "11") (term "1"))
                  (rule "ifEqualsInteger" (formula "11"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1"))
                  (rule "emptyModality" (formula "116") (term "1"))
                   (builtin "One Step Simplification" (formula "116"))
                  (rule "notRight" (formula "116"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "3"))
                  (rule "simplifySelectOfStoreEQ" (formula "87") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "87"))
                  (rule "simplifySelectOfStoreEQ" (formula "88") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "88"))
                  (rule "simplifySelectOfCreate" (formula "87"))
                   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "118")))
                  (rule "simplifySelectOfCreate" (formula "88"))
                   (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "118")) (ifInst ""  (formula "118")))
                  (rule "simplifySelectOfCreate" (formula "87"))
                   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "117")))
                  (rule "simplifySelectOfCreate" (formula "88"))
                   (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "117")) (ifInst ""  (formula "117")))
                  (rule "applyEqReverse" (formula "127") (term "0,1,1,0,1") (ifseqformula "87"))
                  (rule "applyEqReverse" (formula "85") (term "0,0") (ifseqformula "87"))
                  (rule "applyEqReverse" (formula "127") (term "0,1,0") (ifseqformula "87"))
                  (rule "applyEqReverse" (formula "87") (term "1,0") (ifseqformula "88"))
                  (rule "applyEqReverse" (formula "127") (term "1,0,1,1,0,1") (ifseqformula "88"))
                   (builtin "One Step Simplification" (formula "127"))
                  (rule "applyEqReverse" (formula "85") (term "1,0,0") (ifseqformula "88"))
                  (rule "applyEqReverse" (formula "126") (term "1,0,1") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "126"))
                  (rule "closeTrue" (formula "126"))
               )
               (branch "Exceptional Post (getCurrentLineNumber)"
                   (builtin "One Step Simplification" (formula "68"))
                   (builtin "One Step Simplification" (formula "71"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "70"))
                  (rule "notLeft" (formula "68"))
                  (rule "close" (formula "71") (ifseqformula "70"))
               )
               (branch "Pre (getCurrentLineNumber)"
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "49")))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "add_literals" (formula "6") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
                  (rule "times_zero_2" (formula "6") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "2,0"))
                  (rule "sub_literals" (formula "25") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "add_literals" (formula "25") (term "1,1,0"))
                  (rule "less_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "1,0,0"))
                  (rule "add_zero_left" (formula "9") (term "1,1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "eqSeqConcat" (formula "28"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "add_literals" (formula "28") (term "1,0,0"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "eqSeqSingleton" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "lenOfSeqSub" (formula "28") (term "0"))
                  (rule "sub_literals" (formula "28") (term "1,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "equal_literals" (formula "28") (term "1"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "less_literals" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "eqSeqSingleton" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "lenOfSeqSub" (formula "30") (term "2,0,0"))
                  (rule "sub_literals" (formula "30") (term "1,2,0,0"))
                  (rule "less_literals" (formula "30") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "lenOfSeqSub" (formula "31") (term "2,0,0"))
                  (rule "sub_literals" (formula "31") (term "1,2,0,0"))
                  (rule "less_literals" (formula "31") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "lenOfSeqSub" (formula "28") (term "0"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "sub_literals" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "lenOfSeqSub" (formula "29") (term "0"))
                  (rule "sub_literals" (formula "29") (term "1,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "less_literals" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "2") (ifseqformula "50"))
                  (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "79"))
                   (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "34")))
                  (rule "true_left" (formula "64"))
                  (rule "getOfSeqSub" (formula "27") (term "0"))
                  (rule "castDel" (formula "27") (term "2,0"))
                  (rule "sub_literals" (formula "27") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "add_zero_left" (formula "27") (term "1,1,0"))
                  (rule "less_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "getOfSeqSub" (formula "16") (term "0"))
                  (rule "castDel" (formula "16") (term "2,0"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "1,0,0"))
                  (rule "less_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "1,1,0"))
                  (rule "add_literals" (formula "17") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "1,0,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSeqConcat" (formula "10"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "lenOfSeqSub" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,2,0"))
                  (rule "less_literals" (formula "12") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,1"))
                  (rule "add_literals" (formula "10") (term "1"))
                  (rule "eqSeqSingleton" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "lenOfSeqSub" (formula "10") (term "0"))
                  (rule "sub_literals" (formula "10") (term "1,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "less_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "lenOfSeqSub" (formula "10") (term "0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_zero_left" (formula "9") (term "1,1,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "add_zero_left" (formula "29") (term "1,1,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "30") (term "1,1,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "sub_literals" (formula "28") (term "1,1,0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_zero_right" (formula "7") (term "1,1,0"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "27") (term "0"))
                  (rule "castDel" (formula "27") (term "2,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0"))
                  (rule "sub_literals" (formula "27") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "less_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "lenNonNegative" (formula "31") (term "2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                  (rule "andLeft" (formula "32"))
                  (rule "lenOfSeqSub" (formula "32") (term "0"))
                  (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                  (rule "mul_literals" (formula "32") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                  (rule "lenOfSeqSubEQ" (formula "32") (term "1") (ifseqformula "12"))
                  (rule "eqSymm" (formula "32"))
                  (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                  (rule "mul_literals" (formula "32") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "1,0"))
                  (rule "add_literals" (formula "32") (term "0,1,0"))
                  (rule "lenOfSeqSub" (formula "33") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "33") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                  (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "0,0,1"))
                  (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "polySimp_homoEq" (formula "32") (term "1"))
                  (rule "times_zero_2" (formula "32") (term "1,0,1"))
                  (rule "add_zero_right" (formula "32") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
                  (rule "mul_literals" (formula "32") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "0,0"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "2,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "sub_literals" (formula "26") (term "1,0,0"))
                  (rule "less_literals" (formula "26") (term "0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "add_zero_left" (formula "29") (term "1,1,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "sub_literals" (formula "30") (term "1,0,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "28") (term "0"))
                  (rule "castDel" (formula "28") (term "2,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "sub_literals" (formula "28") (term "1,0,0"))
                  (rule "less_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_literals" (formula "8") (term "1,0"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "add_zero_right" (formula "7") (term "1,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
                  (rule "times_zero_2" (formula "7") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "27") (term "0"))
                  (rule "castDel" (formula "27") (term "2,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0"))
                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "sub_literals" (formula "27") (term "1,0,0"))
                  (rule "less_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "charLiteral_to_int" (formula "21") (term "1"))
                  (rule "eqSeqConcat" (formula "11"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_literals" (formula "11") (term "1,0,0"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "lenOfSeqSub" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,2,0"))
                  (rule "less_literals" (formula "13") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "eqSeqSingleton" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "eqSeqSingleton" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "sub_literals" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "lenOfSeqSub" (formula "12") (term "0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "commute_or" (formula "2"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "sub_literals" (formula "30") (term "1,0,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "sub_literals" (formula "29") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "lenNonNegative" (formula "1") (term "1,1"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_zero_left" (formula "12") (term "1,0"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "add_zero_left" (formula "13") (term "1,1,0"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,0"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "sub_literals" (formula "30") (term "1,0,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "seqGetAlphaCast" (formula "23") (term "0"))
                  (rule "castDel" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "1,0,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "2,0"))
                  (rule "leq_literals" (formula "29") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "add_zero_right" (formula "29") (term "1,1,0"))
                  (rule "sub_literals" (formula "29") (term "1,0,0"))
                  (rule "less_literals" (formula "29") (term "0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_literals" (formula "30") (term "1,1,0"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
                  (rule "times_zero_2" (formula "9") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "sub_literals" (formula "31") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "add_literals" (formula "31") (term "1,0"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "add_literals" (formula "32") (term "1,0"))
                  (rule "getOfSeqSub" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "2,0"))
                  (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "30") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "less_literals" (formula "30") (term "0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "add_literals" (formula "30") (term "1,0"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "14") (inst "iv=iv"))
                  (rule "andLeft" (formula "14"))
                  (rule "lenOfSeqSub" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "1,1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,1,1,1,0,0"))
                  (rule "lenOfSeqSub" (formula "14") (term "0"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "1,0"))
                  (rule "add_literals" (formula "14") (term "0,1,0"))
                  (rule "lenOfSeqSubEQ" (formula "14") (term "1") (ifseqformula "37"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                  (rule "mul_literals" (formula "14") (term "1,1,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "applyEq" (formula "15") (term "0,0,1,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,1"))
                  (rule "applyEq" (formula "14") (term "1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_homoEq" (formula "14") (term "1"))
                  (rule "times_zero_2" (formula "14") (term "1,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "14") (term "1"))
                  (rule "mul_literals" (formula "14") (term "1,1"))
                  (rule "substringSubstring" (formula "14") (term "0") (inst "newSym=newSym_0"))
                  (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "qeq_literals" (formula "14") (term "1,0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "add_zero_right" (formula "14") (term "1,0,1,1"))
                  (rule "add_zero_left" (formula "14") (term "2,0,1,1"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,1,0"))
                  (rule "times_zero_2" (formula "14") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "14") (term "1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,1,0,0,0"))
                  (rule "qeq_literals" (formula "14") (term "1,0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,0"))
                  (rule "add_literals" (formula "14") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "14") (term "0,1,0"))
                  (rule "qeq_literals" (formula "14") (term "1,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                  (rule "add_literals" (formula "14") (term "0,0,1,0"))
                  (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "15"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "charLiteral_to_int" (formula "16") (term "1"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "sub_literals" (formula "11") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_zero_right" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "sub_literals" (formula "33") (term "1,0,0"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "2,0"))
                  (rule "leq_literals" (formula "31") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "sub_literals" (formula "31") (term "1,0,0"))
                  (rule "add_zero_right" (formula "31") (term "1,1,0"))
                  (rule "less_literals" (formula "31") (term "0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "sub_literals" (formula "11") (term "1,1,0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_zero_right" (formula "10") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
                  (rule "times_zero_2" (formula "10") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "sub_literals" (formula "33") (term "1,1,0,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "charLiteral_to_int" (formula "25") (term "1"))
                  (rule "charLiteral_to_int" (formula "4") (term "1"))
                  (rule "ifEqualsInteger" (formula "4"))
                  (rule "seqGetAlphaCast" (formula "16") (term "0"))
                  (rule "castDel" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "1,0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_or_weaken1" (formula "23"))
                  (rule "add_literals" (formula "23") (term "1,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "23"))
                  (rule "leq_literals" (formula "34") (term "0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,0,0"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "sub_literals" (formula "33") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_zero_right" (formula "11") (term "1,1,0"))
                  (rule "sub_literals" (formula "11") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "getOfSeqSub" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "2,0"))
                  (rule "add_zero_right" (formula "32") (term "1,1,0"))
                  (rule "sub_literals" (formula "32") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "less_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "getOfSeqSub" (formula "33") (term "0"))
                  (rule "castDel" (formula "33") (term "2,0"))
                  (rule "add_zero_right" (formula "33") (term "1,1,0"))
                  (rule "leq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "sub_literals" (formula "33") (term "1,0,0"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "getOfSeqSub" (formula "11") (term "0"))
                  (rule "castDel" (formula "11") (term "2,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "seqGetAlphaCast" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "sub_literals" (formula "13") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                  (rule "charLiteral_to_int" (formula "17") (term "1"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "add_zero_right" (formula "13") (term "1,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                  (rule "charLiteral_to_int" (formula "26") (term "1"))
                  (rule "seqGetAlphaCast" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "charLiteral_to_int" (formula "5") (term "1"))
                  (rule "ifEqualsInteger" (formula "5"))
                  (rule "inEqSimp_or_weaken1" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                  (rule "leq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "seqGetAlphaCast" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "charLiteral_to_int" (formula "17") (term "1"))
                  (rule "charLiteral_to_int" (formula "26") (term "1"))
                  (rule "seqGetAlphaCast" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "charLiteral_to_int" (formula "5") (term "1"))
                  (rule "ifEqualsInteger" (formula "5"))
                  (rule "charLiteral_to_int" (formula "18") (term "1"))
                  (rule "seqGetAlphaCast" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "75"))
                  (rule "closeTrue" (formula "75"))
               )
               (branch "Null reference (c_11 = null)"
                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "77")))
                  (rule "closeTrue" (formula "70"))
               )
            )
            (branch "Exceptional Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "35"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "35"))
               (rule "close" (formula "38") (ifseqformula "37"))
            )
            (branch "Pre (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "23")))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "37"))
               (rule "closeTrue" (formula "37"))
            )
            (branch "Null reference (c_10 = null)"
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "43")))
               (rule "closeTrue" (formula "37"))
            )
         )
         (branch "if x_3 false"
             (builtin "One Step Simplification" (formula "28"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "jmod_axiom" (formula "26") (term "0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "26"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
            (rule "methodCallEmpty" (formula "28") (term "1"))
            (rule "tryEmpty" (formula "28") (term "1"))
            (rule "emptyModality" (formula "28") (term "1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "notRight" (formula "28"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "38") (term "0,0,1,0,1") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "9"))
            (rule "hideAuxiliaryEq" (formula "9"))
            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "37") (term "1,0,0,0") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "7") (term "1,0,0") (ifseqformula "9"))
            (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0,1") (ifseqformula "9"))
            (rule "hideAuxiliaryEq" (formula "9"))
            (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "26") (term "1,2") (ifseqformula "1"))
            (rule "jdiv_axiom" (formula "5") (term "0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
            (rule "eqSymm" (formula "5"))
            (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
            (rule "polyDiv_pullOut" (formula "5") (term "1,0") (inst "polyDivCoeff=l_0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,1,0"))
            (rule "equal_literals" (formula "5") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,0"))
            (rule "add_literals" (formula "5") (term "1,0,0,1,0"))
            (rule "times_zero_1" (formula "5") (term "0,0,1,0"))
            (rule "div_literals" (formula "5") (term "0,1,0"))
            (rule "add_zero_left" (formula "5") (term "1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_homoEq" (formula "5") (term "1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
            (rule "polySimp_sepPosMonomial" (formula "5") (term "1"))
            (rule "polyDiv_pullOut" (formula "5") (term "0,1") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0,1"))
            (rule "equal_literals" (formula "5") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,1"))
            (rule "add_literals" (formula "5") (term "1,0,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "0,0,0,1"))
            (rule "div_literals" (formula "5") (term "0,0,1"))
            (rule "add_zero_left" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "29") (term "1") (inst "#v0=c"))
            (rule "variableDeclaration" (formula "29") (term "1") (newnames "c_10"))
            (rule "assignment_read_attribute_this" (formula "29") (term "1"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0") (ifseqformula "15"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1") (ifseqformula "13"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "jdiv_axiom" (formula "32") (term "0,0"))
            (rule "eqSymm" (formula "1"))
             (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_getCurrentLineNumber_1,result_442,exc_589") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
            (branch "Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "21")))
                (builtin "One Step Simplification" (formula "34"))
                (builtin "One Step Simplification" (formula "38"))
                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "35")))
               (rule "expand_inLong" (formula "33") (term "1,0"))
               (rule "replace_long_MIN" (formula "33") (term "0,1,1,0"))
               (rule "replace_long_MAX" (formula "33") (term "1,0,1,0"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "inEqSimp_commuteLeq" (formula "34"))
               (rule "assignment" (formula "40") (term "1"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "stringConcatIntExpRight" (formula "40") (term "1") (inst "sk=sk_0"))
                (builtin "One Step Simplification" (formula "41"))
                (builtin "One Step Simplification" (formula "42"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
               (rule "variableDeclarationAssign" (formula "42") (term "1"))
               (rule "variableDeclaration" (formula "42") (term "1") (newnames "s_2"))
               (rule "stringAssignment" (formula "42") (term "1"))
                (builtin "One Step Simplification" (formula "44"))
                (builtin "One Step Simplification" (formula "2"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "stringConcat" (formula "44") (term "1") (inst "sk=sk_1"))
                (builtin "One Step Simplification" (formula "46"))
                (builtin "One Step Simplification" (formula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
               (rule "assignment_write_static_attribute" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "applyEq" (formula "39") (term "4") (ifseqformula "38"))
               (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "3"))
               (rule "eqSeqConcat" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "add_literals" (formula "5") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0,1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,2,0"))
               (rule "add_literals" (formula "4") (term "2,0"))
               (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_homoEq" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "1,0,1"))
               (rule "add_zero_right" (formula "3") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0"))
               (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "2"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "eqSeqConcat" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "lenOfSeqConcat" (formula "3") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "2") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "add_literals" (formula "2") (term "1,0,2,0"))
               (rule "add_literals" (formula "2") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqSubEQ" (formula "2") (term "1,2,0") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,2,0"))
               (rule "mul_literals" (formula "2") (term "1,1,1,2,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,2,0"))
               (rule "lenOfSeqSubEQ" (formula "3") (term "1,1,0") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "add_literals" (formula "1") (term "1,0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,2,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "add_literals" (formula "1") (term "1,0,1"))
               (rule "add_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
               (rule "lenOfSeqSubEQ" (formula "1") (term "1,1") (ifseqformula "8"))
               (rule "polySimp_homoEq" (formula "1"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
               (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
               (rule "add_literals" (formula "2") (term "0,2,0"))
               (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
               (rule "add_literals" (formula "3") (term "0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqSub" (formula "2") (term "0"))
               (rule "polySimp_elimSub" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "1,1,0"))
               (rule "add_zero_right" (formula "2") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqSub" (formula "4") (term "2,0"))
               (rule "polySimp_elimSub" (formula "4") (term "1,2,0"))
               (rule "mul_literals" (formula "4") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "4") (term "1,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "add_literals" (formula "4") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,2,0"))
               (rule "add_literals" (formula "3") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "add_literals" (formula "2") (term "1,0,1"))
               (rule "add_literals" (formula "2") (term "0,1"))
               (rule "lenOfSeqSubEQ" (formula "2") (term "1,1") (ifseqformula "11"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,1"))
               (rule "mul_literals" (formula "2") (term "1,1,1,1"))
               (rule "polySimp_homoEq" (formula "2"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,2,0"))
               (rule "add_zero_right" (formula "4") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,2,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,2,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
               (rule "polySimp_sepNegMonomial" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,1,1"))
               (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "2") (term "1"))
               (rule "add_literals" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_homoEq" (formula "2") (term "1"))
               (rule "times_zero_2" (formula "2") (term "1,0,1"))
               (rule "add_zero_right" (formula "2") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,2,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,1,2,0"))
               (rule "applyEqRigid" (formula "4") (term "1,2,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0"))
               (rule "eqSeqConcat" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "7") (term "2,0"))
               (rule "polySimp_elimSub" (formula "7") (term "1,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,2,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,2,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,2,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "1,2,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1,2,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "1,2,0"))
               (rule "add_literals" (formula "7") (term "1,1,1,2,0"))
               (rule "times_zero_1" (formula "7") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "7") (term "1,2,0"))
               (rule "eqSeqSingleton" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "sub_literals" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "equal_literals" (formula "6") (term "1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,1,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "1,1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,1,0"))
               (rule "add_zero_right" (formula "5") (term "1,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,2,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,2,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "0,0,2,0"))
               (rule "leq_literals" (formula "7") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1"))
               (rule "add_literals" (formula "5") (term "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "equal_literals" (formula "5") (term "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0"))
               (rule "leq_literals" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,2,0"))
               (rule "less_literals" (formula "13") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "eqSeqSingleton" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "1"))
               (rule "add_literals" (formula "11") (term "0,1"))
               (rule "lenOfSeqSub" (formula "12") (term "0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_homoEq" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,0"))
               (rule "add_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "sub_literals" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqConcat" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqSub" (formula "5") (term "2,0"))
               (rule "less_literals" (formula "5") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "eqSeqSingleton" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "lenOfSeqSub" (formula "3") (term "0"))
               (rule "sub_literals" (formula "3") (term "1,0"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqSub" (formula "4") (term "0"))
               (rule "sub_literals" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "less_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0"))
               (rule "add_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0"))
               (rule "add_literals" (formula "6") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "sub_literals" (formula "3") (term "1,0,0"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "2,0"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "sub_literals" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "eqSeqConcat" (formula "14"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "lenOfSeqSub" (formula "16") (term "2,0"))
               (rule "less_literals" (formula "16") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "2,0"))
               (rule "eqSeqSingleton" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqSub" (formula "14") (term "0"))
               (rule "sub_literals" (formula "14") (term "1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_homoEq" (formula "14"))
               (rule "mul_literals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqSub" (formula "15") (term "0"))
               (rule "sub_literals" (formula "15") (term "1,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "equal_literals" (formula "15") (term "1"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_literals" (formula "14") (term "1,0"))
               (rule "add_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_zero_left" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "sub_literals" (formula "3") (term "1,1,0,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0"))
               (rule "eqSeqConcat" (formula "4"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "lenOfSeqSub" (formula "6") (term "2,0"))
               (rule "less_literals" (formula "6") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "2,0"))
               (rule "lenOfSeqSub" (formula "4") (term "0"))
               (rule "sub_literals" (formula "4") (term "1,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_homoEq" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "eqSeqSingleton" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_zero_left" (formula "15") (term "1,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "1,0,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "3") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
               (rule "eqSeqConcat" (formula "9"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqSub" (formula "11") (term "2,0"))
               (rule "less_literals" (formula "11") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "2,0"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "sub_literals" (formula "9") (term "1,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_homoEq" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "eqSeqSingleton" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "add_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "sub_literals" (formula "4") (term "1,0,0"))
               (rule "add_zero_left" (formula "4") (term "1,1,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "eqSeqConcat" (formula "17"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "lenOfSeqSub" (formula "19") (term "2,0"))
               (rule "less_literals" (formula "19") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "sub_literals" (formula "19") (term "2,0"))
               (rule "lenOfSeqSub" (formula "17") (term "0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "sub_literals" (formula "17") (term "0"))
               (rule "polySimp_homoEq" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "eqSeqSingleton" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqSub" (formula "18") (term "0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "sub_literals" (formula "18") (term "0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "add_literals" (formula "17") (term "1,0"))
               (rule "add_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_zero_left" (formula "16") (term "1,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "eqSeqConcat" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,2,0"))
               (rule "less_literals" (formula "7") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqSingleton" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "0"))
               (rule "polySimp_homoEq" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "sub_literals" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "equal_literals" (formula "6") (term "1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "sub_literals" (formula "10") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "sub_literals" (formula "4") (term "1,1,0,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_zero_left" (formula "4") (term "1,0"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "add_zero_left" (formula "18") (term "1,1,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "1,1,0"))
               (rule "add_literals" (formula "9") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "9") (term "1,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "sub_literals" (formula "17") (term "1,1,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,2,0"))
               (rule "less_literals" (formula "13") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,1"))
               (rule "add_literals" (formula "11") (term "1"))
               (rule "eqSeqSingleton" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqConcat" (formula "20"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "lenOfSeqSub" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,2,0"))
               (rule "less_literals" (formula "22") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "lenOfSeqSub" (formula "20") (term "0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "0"))
               (rule "polySimp_homoEq" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "eqSeqSingleton" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqSub" (formula "21") (term "0"))
               (rule "sub_literals" (formula "21") (term "1,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "equal_literals" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "add_literals" (formula "20") (term "1,0"))
               (rule "add_literals" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "sub_literals" (formula "10") (term "1,1,0,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "add_zero_right" (formula "4") (term "1,1,0"))
               (rule "sub_literals" (formula "4") (term "1,1,0,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "sub_literals" (formula "19") (term "1,1,0,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "18") (term "1,1,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "eqSeqConcat" (formula "6"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqSub" (formula "8") (term "2,0"))
               (rule "less_literals" (formula "8") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "add_literals" (formula "6") (term "0,1"))
               (rule "eqSeqSingleton" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "sub_literals" (formula "6") (term "1,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_homoEq" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,0"))
               (rule "add_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_zero_left" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "1,0,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
               (rule "mul_literals" (formula "4") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "4") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "sub_literals" (formula "20") (term "1,1,0,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "eqSeqConcat" (formula "13"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,0,0"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "eqSeqSingleton" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "sub_literals" (formula "13") (term "1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "eqSeqSingleton" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "lenOfSeqSub" (formula "16") (term "2,0,0"))
               (rule "sub_literals" (formula "16") (term "1,2,0,0"))
               (rule "less_literals" (formula "16") (term "0,2,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "lenOfSeqSub" (formula "15") (term "2,0,0"))
               (rule "less_literals" (formula "15") (term "0,2,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "2,0,0"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "sub_literals" (formula "13") (term "1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "equal_literals" (formula "13") (term "1"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "lenOfSeqSub" (formula "14") (term "0"))
               (rule "sub_literals" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "equal_literals" (formula "14") (term "1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqConcat" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "lenOfSeqSub" (formula "25") (term "2,0"))
               (rule "sub_literals" (formula "25") (term "1,2,0"))
               (rule "less_literals" (formula "25") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_addAssoc" (formula "23") (term "1"))
               (rule "add_literals" (formula "23") (term "0,1"))
               (rule "eqSeqSingleton" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "lenOfSeqSub" (formula "23") (term "0"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "sub_literals" (formula "23") (term "0"))
               (rule "polySimp_homoEq" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "lenOfSeqSub" (formula "24") (term "0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "sub_literals" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_addAssoc" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "add_literals" (formula "23") (term "1,0"))
               (rule "add_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_zero_left" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "1,1,0"))
               (rule "add_literals" (formula "11") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "11") (term "1,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "add_zero_left" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,0,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "add_zero_left" (formula "24") (term "1,1,0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "sub_literals" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "2,0"))
               (rule "add_literals" (formula "23") (term "1,1,0"))
               (rule "sub_literals" (formula "23") (term "1,1,0,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "25"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "lenOfSeqSub" (formula "27") (term "2,0"))
               (rule "sub_literals" (formula "27") (term "1,2,0"))
               (rule "less_literals" (formula "27") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "lenOfSeqConcat" (formula "25") (term "1,1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_addAssoc" (formula "25") (term "1"))
               (rule "add_literals" (formula "25") (term "0,1"))
               (rule "eqSeqSingleton" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "lenOfSeqSub" (formula "25") (term "0"))
               (rule "sub_literals" (formula "25") (term "1,0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_homoEq" (formula "25"))
               (rule "mul_literals" (formula "25") (term "1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "add_literals" (formula "25") (term "0,0"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "sub_literals" (formula "26") (term "1,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "equal_literals" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "add_literals" (formula "25") (term "1,0"))
               (rule "add_literals" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "add_zero_left" (formula "24") (term "1,1,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "add_zero_right" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
               (rule "mul_literals" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
               (rule "hideAuxiliaryEqConcrete" (formula "17"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "eqSeqConcat" (formula "8"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "10") (term "2,0"))
               (rule "less_literals" (formula "10") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "2,0"))
               (rule "eqSeqSingleton" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,1"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_addAssoc" (formula "8") (term "1"))
               (rule "add_literals" (formula "8") (term "0,1"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "sub_literals" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "equal_literals" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
               (rule "polySimp_homoEq" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,0"))
               (rule "add_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "sub_literals" (formula "25") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "25") (term "1,1,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "sub_literals" (formula "16") (term "1,1,0,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "add_literals" (formula "16") (term "1,0"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "add_literals" (formula "24") (term "1,1,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "sub_literals" (formula "24") (term "1,0,0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "64"))
               (rule "true_left" (formula "64"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "1,1,0"))
               (rule "add_literals" (formula "14") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "1,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "2,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "sub_literals" (formula "23") (term "1,0,0"))
               (rule "add_literals" (formula "23") (term "1,1,0"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "eqSeqConcat" (formula "26"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "lenOfSeqSub" (formula "28") (term "2,0"))
               (rule "less_literals" (formula "28") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "sub_literals" (formula "28") (term "2,0"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "0"))
               (rule "polySimp_homoEq" (formula "26"))
               (rule "mul_literals" (formula "26") (term "1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "add_literals" (formula "26") (term "0,0"))
               (rule "eqSeqSingleton" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "lenOfSeqConcat" (formula "26") (term "1,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "add_literals" (formula "26") (term "1,0"))
               (rule "add_literals" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "add_zero_left" (formula "25") (term "1,1,0"))
               (rule "sub_literals" (formula "25") (term "1,0,0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "1,0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "sub_literals" (formula "16") (term "1,1,0,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "add_literals" (formula "24") (term "1,1,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "eqSeqConcat" (formula "9"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqSub" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,2,0"))
               (rule "less_literals" (formula "11") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "sub_literals" (formula "9") (term "1,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_homoEq" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "eqSeqSingleton" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "sub_literals" (formula "10") (term "1,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "less_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "add_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "commute_or" (formula "19"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "sub_literals" (formula "27") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "27") (term "1,1,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "methodCallEmpty" (formula "71") (term "1"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "sub_literals" (formula "26") (term "1,1,0,0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "sub_literals" (formula "17") (term "1,0,0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
               (rule "mul_literals" (formula "6") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "sub_literals" (formula "25") (term "1,0,0"))
               (rule "add_literals" (formula "25") (term "1,1,0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "div_axiom" (formula "30") (term "1,0") (inst "quotient=quotient_0"))
               (rule "mul_literals" (formula "30") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "30") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "equal_literals" (formula "30") (term "0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "polySimp_addComm1" (formula "32") (term "1"))
               (rule "add_literals" (formula "32") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "31"))
               (rule "inEqSimp_homoInEq1" (formula "32"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0"))
               (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "30"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32"))
               (rule "polySimp_mulComm0" (formula "32") (term "1"))
               (rule "polySimp_rightDist" (formula "32") (term "1"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
               (rule "mul_literals" (formula "32") (term "0,1"))
               (rule "div_axiom" (formula "33") (term "0,2,0") (inst "quotient=quotient_1"))
               (rule "equal_literals" (formula "33") (term "0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "mul_literals" (formula "33") (term "1,1,1,1"))
               (rule "qeq_literals" (formula "33") (term "0,1"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "polySimp_addComm1" (formula "35") (term "1"))
               (rule "add_literals" (formula "35") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "34"))
               (rule "inEqSimp_homoInEq1" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,0"))
               (rule "applyEq" (formula "36") (term "0,2,0") (ifseqformula "33"))
               (rule "inEqSimp_sepNegMonomial0" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_zero_left" (formula "9") (term "1,1,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "eqSeqConcat" (formula "28"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "add_literals" (formula "28") (term "1,0,0"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "lenOfSeqSub" (formula "30") (term "2,0"))
               (rule "less_literals" (formula "30") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "sub_literals" (formula "30") (term "2,0"))
               (rule "eqSeqSingleton" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "lenOfSeqSub" (formula "28") (term "0"))
               (rule "sub_literals" (formula "28") (term "1,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "equal_literals" (formula "28") (term "1"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "less_literals" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "eqSeqSingleton" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "lenOfSeqSub" (formula "28") (term "0"))
               (rule "less_literals" (formula "28") (term "0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "sub_literals" (formula "28") (term "0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "lenOfSeqSub" (formula "29") (term "0"))
               (rule "less_literals" (formula "29") (term "0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "sub_literals" (formula "29") (term "0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "add_zero_left" (formula "27") (term "1,1,0"))
               (rule "sub_literals" (formula "27") (term "1,0,0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "lenNonNegative" (formula "85") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "sub_literals" (formula "26") (term "1,1,0,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
               (rule "add_literals" (formula "16") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0"))
               (rule "add_literals" (formula "16") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "1,1,0"))
               (rule "add_literals" (formula "17") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,0,0"))
               (rule "add_literals" (formula "17") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "17") (term "1,0,0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "eqSeqConcat" (formula "10"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqSub" (formula "12") (term "2,0"))
               (rule "sub_literals" (formula "12") (term "1,2,0"))
               (rule "less_literals" (formula "12") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_literals" (formula "10") (term "1,1"))
               (rule "add_literals" (formula "10") (term "1"))
               (rule "eqSeqSingleton" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "sub_literals" (formula "10") (term "1,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "equal_literals" (formula "10") (term "1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "less_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "sub_literals" (formula "26") (term "1,0,0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_zero_left" (formula "9") (term "1,0"))
               (rule "getOfSeqSub" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "2,0"))
               (rule "sub_literals" (formula "29") (term "1,1,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "less_literals" (formula "29") (term "0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "add_zero_left" (formula "29") (term "1,0"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "add_zero_left" (formula "30") (term "1,1,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "sub_literals" (formula "30") (term "1,0,0"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "28") (term "0"))
               (rule "castDel" (formula "28") (term "2,0"))
               (rule "sub_literals" (formula "28") (term "1,1,0,0"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "leq_literals" (formula "28") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "less_literals" (formula "28") (term "0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "add_literals" (formula "27") (term "1,1,0"))
               (rule "sub_literals" (formula "27") (term "1,0,0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "lenNonNegative" (formula "31") (term "2,0"))
               (rule "inEqSimp_commuteLeq" (formula "31"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
               (rule "andLeft" (formula "32"))
               (rule "lenOfSeqSub" (formula "32") (term "0"))
               (rule "polySimp_elimSub" (formula "32") (term "1,0"))
               (rule "mul_literals" (formula "32") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "32") (term "1,0"))
               (rule "lenOfSeqSub" (formula "33") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0,0"))
               (rule "lenOfSeqSubEQ" (formula "32") (term "1") (ifseqformula "12"))
               (rule "eqSymm" (formula "32"))
               (rule "polySimp_elimSub" (formula "32") (term "1,0"))
               (rule "mul_literals" (formula "32") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "32") (term "1,0"))
               (rule "add_literals" (formula "32") (term "0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
               (rule "eqSymm" (formula "32"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1"))
               (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
               (rule "add_literals" (formula "32") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
               (rule "eqSymm" (formula "32"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
               (rule "add_literals" (formula "32") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
               (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "true_left" (formula "33"))
               (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
               (rule "eqSymm" (formula "32"))
               (rule "polySimp_elimOne" (formula "32") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
               (rule "eqSymm" (formula "32"))
               (rule "polySimp_elimOne" (formula "32") (term "0,0,1"))
               (rule "applyEq" (formula "32") (term "1") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "polySimp_homoEq" (formula "32") (term "1"))
               (rule "mul_literals" (formula "32") (term "1,0,1"))
               (rule "add_zero_right" (formula "32") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
               (rule "mul_literals" (formula "32") (term "1,1"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "sub_literals" (formula "10") (term "1,1,0,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_zero_left" (formula "10") (term "1,1,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "sub_literals" (formula "26") (term "1,1,0,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "add_zero_right" (formula "26") (term "1,1,0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "2,0"))
               (rule "add_zero_left" (formula "29") (term "1,1,0"))
               (rule "sub_literals" (formula "29") (term "1,1,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "less_literals" (formula "29") (term "0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "sub_literals" (formula "30") (term "1,1,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "28") (term "0"))
               (rule "castDel" (formula "28") (term "2,0"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "sub_literals" (formula "28") (term "1,1,0,0"))
               (rule "leq_literals" (formula "28") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "less_literals" (formula "28") (term "0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "commute_or" (formula "2"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_zero_right" (formula "7") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "7") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "sub_literals" (formula "27") (term "1,0,0"))
               (rule "add_literals" (formula "27") (term "1,1,0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "38"))
               (rule "mul_literals" (formula "69") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "69"))
               (rule "polySimp_mulLiterals" (formula "69") (term "0"))
               (rule "elimGcdLeq_antec" (formula "69") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0,0,1,0"))
               (rule "neg_literal" (formula "69") (term "0,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "69") (term "0,0"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "69") (term "0,0,0,0"))
               (rule "add_literals" (formula "69") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "69") (term "0,0"))
               (rule "add_literals" (formula "69") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "69") (term "1,0,0"))
               (rule "add_zero_right" (formula "69") (term "0,0"))
               (rule "qeq_literals" (formula "69") (term "0"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "36"))
               (rule "mul_literals" (formula "70") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "70") (term "0"))
               (rule "add_literals" (formula "70") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "70"))
               (rule "mul_literals" (formula "70") (term "1"))
               (rule "elimGcdGeq_antec" (formula "70") (inst "elimGcdRightDiv=Z(neglit(6(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "leq_literals" (formula "70") (term "0,0"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "70") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "70") (term "0,0,0,0"))
               (rule "add_literals" (formula "70") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "70") (term "0,0"))
               (rule "add_literals" (formula "70") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "70") (term "1,0,0"))
               (rule "add_zero_right" (formula "70") (term "0,0"))
               (rule "leq_literals" (formula "70") (term "0"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,0,0"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "eqSeqSingleton" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "equal_literals" (formula "11") (term "1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "eqSeqSingleton" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "13") (term "1,0"))
               (rule "lenOfSeqSub" (formula "14") (term "2,0,0"))
               (rule "less_literals" (formula "14") (term "0,2,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "2,0,0"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "lenOfSeqSub" (formula "12") (term "1,0,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "less_literals" (formula "12") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_homoEq" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "0,0"))
               (rule "lenOfSeqSub" (formula "12") (term "0,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,1,0"))
               (rule "less_literals" (formula "12") (term "0,0,1,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "mul_literals" (formula "12") (term "1,0"))
               (rule "add_literals" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_zero_left" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "sub_literals" (formula "30") (term "1,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "39"))
               (rule "polySimp_mulAssoc" (formula "36") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
               (rule "polySimp_addComm0" (formula "36") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "70"))
               (rule "polySimp_mulAssoc" (formula "37") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
               (rule "polySimp_addComm0" (formula "37") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "lenNonNegative" (formula "1") (term "1,1"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "sub_literals" (formula "30") (term "1,1,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=mul(quotient_1, Z(neglit(1(#))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
               (rule "leq_literals" (formula "37") (term "0,0"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "neg_literal" (formula "37") (term "0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0"))
               (rule "add_zero_right" (formula "37") (term "0,0"))
               (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0"))
               (rule "add_literals" (formula "37") (term "0,0"))
               (rule "qeq_literals" (formula "37") (term "0"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "neg_literal" (formula "38") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "38") (term "0,0"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
               (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "38") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
               (rule "add_literals" (formula "38") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "38") (term "1,0,0"))
               (rule "add_literals" (formula "38") (term "0,0"))
               (rule "qeq_literals" (formula "38") (term "0"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "getOfSeqSub" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "2,0"))
               (rule "add_literals" (formula "29") (term "1,1,0"))
               (rule "sub_literals" (formula "29") (term "1,1,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "less_literals" (formula "29") (term "0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "72"))
               (rule "polySimp_rightDist" (formula "43") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
               (rule "mul_literals" (formula "43") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0"))
               (rule "add_literals" (formula "43") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "43"))
               (rule "mul_literals" (formula "43") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "40"))
               (rule "polySimp_rightDist" (formula "44") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
               (rule "mul_literals" (formula "44") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0"))
               (rule "polySimp_addComm1" (formula "44") (term "0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
               (rule "polySimp_mulComm0" (formula "44") (term "1"))
               (rule "polySimp_rightDist" (formula "44") (term "1"))
               (rule "mul_literals" (formula "44") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(neglit(6(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
               (rule "leq_literals" (formula "43") (term "0,0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
               (rule "add_literals" (formula "43") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "43") (term "1,0,0"))
               (rule "add_zero_right" (formula "43") (term "0,0"))
               (rule "leq_literals" (formula "43") (term "0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "elimGcdGeq_antec" (formula "44") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), mul(quotient_1, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "leq_literals" (formula "44") (term "0,0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
               (rule "add_literals" (formula "44") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0"))
               (rule "add_zero_right" (formula "44") (term "0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
               (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
               (rule "add_literals" (formula "44") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0"))
               (rule "add_zero_right" (formula "44") (term "0,0"))
               (rule "leq_literals" (formula "44") (term "0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,0"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_zero_right" (formula "9") (term "1,1,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "2,0"))
               (rule "sub_literals" (formula "29") (term "1,1,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "add_zero_right" (formula "29") (term "1,1,0"))
               (rule "less_literals" (formula "29") (term "0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "14") (inst "iv=iv"))
               (rule "andLeft" (formula "14"))
               (rule "lenOfSeqSub" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "1,1,1,0,0"))
               (rule "add_literals" (formula "15") (term "0,1,1,1,0,0"))
               (rule "lenOfSeqSubEQ" (formula "14") (term "1") (ifseqformula "16"))
               (rule "eqSymm" (formula "14"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "1,0"))
               (rule "add_literals" (formula "14") (term "0,1,0"))
               (rule "lenOfSeqSub" (formula "14") (term "1"))
               (rule "eqSymm" (formula "14"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "1,0"))
               (rule "add_literals" (formula "14") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "substringSubstring" (formula "14") (term "0") (inst "newSym=newSym_0"))
               (rule "add_zero_left" (formula "14") (term "2,0,1,1"))
               (rule "add_zero_right" (formula "14") (term "1,0,1,1"))
               (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "qeq_literals" (formula "14") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_elimSub" (formula "14") (term "1,1,0"))
               (rule "mul_literals" (formula "14") (term "1,1,1,0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,1,0,0,0"))
               (rule "qeq_literals" (formula "14") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
               (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,0"))
               (rule "add_literals" (formula "14") (term "1,0,1,0"))
               (rule "times_zero_1" (formula "14") (term "0,1,0"))
               (rule "qeq_literals" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "15"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
               (rule "charLiteral_to_int" (formula "16") (term "1"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_zero_right" (formula "9") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
               (rule "times_zero_2" (formula "9") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "9") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "38"))
               (rule "mul_literals" (formula "77") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "77"))
               (rule "polySimp_mulLiterals" (formula "77") (term "0"))
               (rule "polySimp_elimOne" (formula "77") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "77") (ifseqformula "76"))
               (rule "leq_literals" (formula "77") (term "0"))
                (builtin "One Step Simplification" (formula "77"))
               (rule "true_left" (formula "77"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "4") (term "1"))
               (rule "ifEqualsInteger" (formula "4"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "seqGetAlphaCast" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_or_weaken1" (formula "23"))
               (rule "add_literals" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "23"))
               (rule "leq_literals" (formula "34") (term "0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_literals" (formula "12") (term "1,0"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,0"))
               (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "38"))
               (rule "polySimp_rightDist" (formula "44") (term "0,0"))
               (rule "mul_literals" (formula "44") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "44") (term "0"))
               (rule "add_literals" (formula "44") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "44"))
               (rule "mul_literals" (formula "44") (term "1"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "10") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "charLiteral_to_int" (formula "17") (term "1"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,0"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_literals" (formula "12") (term "1,0"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_zero_right" (formula "11") (term "1,1,0"))
               (rule "sub_literals" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_zero_right" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "11") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
               (rule "charLiteral_to_int" (formula "5") (term "1"))
               (rule "ifEqualsInteger" (formula "5"))
               (rule "seqGetAlphaCast" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_zero_right" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
               (rule "times_zero_2" (formula "13") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_or_weaken1" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
               (rule "leq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "17") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "charLiteral_to_int" (formula "5") (term "1"))
               (rule "ifEqualsInteger" (formula "5"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "18") (term "1"))
               (rule "inEqSimp_notGeq" (formula "3") (term "0,1"))
               (rule "mul_literals" (formula "3") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "3") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1"))
               (rule "mul_literals" (formula "3") (term "1,0,1"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "tryEmpty" (formula "88") (term "1"))
               (rule "charLiteral_to_int" (formula "6") (term "1"))
               (rule "ifEqualsInteger" (formula "6"))
               (rule "seqGetAlphaCast" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "charLiteral_to_int" (formula "19") (term "1"))
               (rule "commute_or" (formula "33"))
               (rule "charLiteral_to_int" (formula "20") (term "1"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,1"))
               (rule "mul_literals" (formula "4") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "4") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,1"))
               (rule "mul_literals" (formula "4") (term "1,0,1"))
               (rule "inEqSimp_notGeq" (formula "5") (term "0,1"))
               (rule "mul_literals" (formula "5") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "5") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1"))
               (rule "mul_literals" (formula "5") (term "1,0,1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "62"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,1"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "7") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1"))
               (rule "mul_literals" (formula "7") (term "1,0,1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "63"))
               (rule "replace_known_left" (formula "79") (term "1") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "94")))
               (rule "true_left" (formula "79"))
               (rule "inEqSimp_or_weaken1" (formula "34"))
               (rule "add_literals" (formula "34") (term "1,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "applyEq" (formula "36") (term "1") (ifseqformula "14"))
               (rule "applyEq" (formula "16") (term "1") (ifseqformula "14"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "35"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_subsumption1" (formula "6") (term "0,0") (ifseqformula "34"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "inEqSimp_subsumption1" (formula "7") (term "0,0") (ifseqformula "34"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption1" (formula "10") (term "0,0") (ifseqformula "34"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_contradInEq1" (formula "4") (term "0,1") (ifseqformula "34"))
               (rule "qeq_literals" (formula "4") (term "0,0,1"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "inEqSimp_contradInEq1" (formula "6") (term "0,1") (ifseqformula "35"))
               (rule "qeq_literals" (formula "6") (term "0,0,1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "36"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "3") (term "0,1") (ifseqformula "36"))
               (rule "qeq_literals" (formula "3") (term "0,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "37"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "37"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "36"))
               (rule "leq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_contradInEq1" (formula "7") (term "0,1") (ifseqformula "35"))
               (rule "qeq_literals" (formula "7") (term "0,0,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "35"))
               (rule "leq_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "seqGetAlphaCast" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "charLiteral_to_int" (formula "30") (term "1"))
               (rule "seqGetAlphaCast" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "charLiteral_to_int" (formula "31") (term "1"))
               (rule "charLiteral_to_int" (formula "32") (term "1"))
               (rule "charLiteral_to_int" (formula "33") (term "1"))
               (rule "seqGetAlphaCast" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "emptyModality" (formula "89") (term "1"))
                (builtin "One Step Simplification" (formula "89"))
               (rule "notRight" (formula "89"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "3"))
               (rule "simplifySelectOfStoreEQ" (formula "61") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "61"))
               (rule "simplifySelectOfStoreEQ" (formula "62") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "simplifySelectOfCreate" (formula "61"))
                (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "91")) (ifInst ""  (formula "91")))
               (rule "simplifySelectOfCreate" (formula "62"))
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "91")))
               (rule "simplifySelectOfCreate" (formula "61"))
                (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "90")) (ifInst ""  (formula "90")))
               (rule "simplifySelectOfCreate" (formula "62"))
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "90")))
               (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "62"))
               (rule "applyEqReverse" (formula "98") (term "0,1,0") (ifseqformula "62"))
               (rule "applyEqReverse" (formula "98") (term "0,1,1,0,1") (ifseqformula "62"))
               (rule "applyEqReverse" (formula "98") (term "0,1,1,0,0,1") (ifseqformula "62"))
               (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
               (rule "applyEqReverse" (formula "60") (term "1,0,0") (ifseqformula "61"))
               (rule "applyEqReverse" (formula "98") (term "1,0,1,0") (ifseqformula "61"))
               (rule "applyEqReverse" (formula "98") (term "1,0,1,1,0,1") (ifseqformula "61"))
               (rule "applyEqReverse" (formula "98") (term "1,0,1,1,0,0,1") (ifseqformula "61"))
               (rule "hideAuxiliaryEq" (formula "61"))
               (rule "hideAuxiliaryEq" (formula "61"))
               (rule "eqSymm" (formula "2"))
               (rule "eqSymm" (formula "96") (term "0"))
               (rule "eqSymm" (formula "96") (term "1,0,1"))
               (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "63"))
               (rule "applyEq" (formula "83") (term "1,2") (ifseqformula "1"))
               (rule "applyEq" (formula "68") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "95") (term "0,1,1,0,0,1") (ifseqformula "62"))
               (rule "applyEqRigid" (formula "95") (term "0,0,0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "95"))
               (rule "allRight" (formula "95") (inst "sk=iv_0"))
               (rule "orRight" (formula "95"))
               (rule "orRight" (formula "95"))
               (rule "inEqSimp_geqRight" (formula "96"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "96"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "96") (term "1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "85") (term "1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "75") (term "1,2") (ifseqformula "3"))
               (rule "applyEq" (formula "92") (term "0") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "97") (term "0,0") (ifseqformula "64"))
                (builtin "One Step Simplification" (formula "97"))
               (rule "closeTrue" (formula "97"))
            )
            (branch "Exceptional Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "36"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "33"))
               (rule "notLeft" (formula "33"))
               (rule "close" (formula "36") (ifseqformula "35"))
            )
            (branch "Pre (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "21")))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "35"))
               (rule "closeTrue" (formula "35"))
            )
            (branch "Null reference (c_10 = null)"
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "41")))
               (rule "closeTrue" (formula "35"))
            )
         )
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "25"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "jmod_axiom" (formula "23") (term "0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
         (rule "polySimp_sepNegMonomial" (formula "23"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
         (rule "methodCallEmpty" (formula "25") (term "1"))
         (rule "tryEmpty" (formula "25") (term "1"))
         (rule "emptyModality" (formula "25") (term "1"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "notRight" (formula "25"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "2"))
         (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
         (rule "hideAuxiliaryEq" (formula "8"))
         (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "20") (term "1,2") (ifseqformula "1"))
         (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "33") (term "0,1,1,0,1") (ifseqformula "8"))
         (rule "applyEqReverse" (formula "33") (term "0,1,0") (ifseqformula "8"))
         (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "8"))
         (rule "applyEqReverse" (formula "33") (term "0,1,1,0,0,1") (ifseqformula "8"))
         (rule "hideAuxiliaryEq" (formula "8"))
         (rule "eqSymm" (formula "32") (term "1,0,1"))
         (rule "eqSymm" (formula "32") (term "0"))
         (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "8"))
         (rule "applyEqRigid" (formula "32") (term "0,1,1,0,0,1") (ifseqformula "8"))
         (rule "applyEqRigid" (formula "32") (term "0,0,1,0,1") (ifseqformula "8"))
         (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "8"))
         (rule "jdiv_axiom" (formula "24") (term "0,0"))
         (rule "eqSymm" (formula "1"))
         (rule "ifSplit" (formula "26"))
         (branch "if x_3 true"
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "activeUseStaticFieldWriteAccess" (formula "27") (term "1") (inst "#v0=s"))
            (rule "variableDeclarationAssign" (formula "27") (term "1"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "s"))
            (rule "jmod_axiom" (formula "1") (term "0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "newSym_eq" (formula "1") (inst "l=l_0") (inst "newSymDef=mul(result_441, Z(0(#)))"))
            (rule "times_zero_1" (formula "1") (term "1,1"))
            (rule "add_zero_right" (formula "1") (term "1"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
            (rule "applyEq" (formula "26") (term "3") (ifseqformula "2"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
            (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "24") (term "0,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
            (rule "add_literals" (formula "24") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "24") (term "1,0,0"))
            (rule "add_zero_right" (formula "24") (term "0,0"))
            (rule "leq_literals" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0"))
            (rule "neg_literal" (formula "23") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "23") (term "0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0"))
            (rule "qeq_literals" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "compound_addition_2" (formula "28") (term "1") (inst "#v1=s_2") (inst "#v0=s_1"))
            (rule "variableDeclarationAssign" (formula "28") (term "1"))
            (rule "variableDeclaration" (formula "28") (term "1") (newnames "s_1"))
            (rule "compound_addition_2" (formula "28") (term "1") (inst "#v1=x") (inst "#v0=s_3"))
            (rule "variableDeclarationAssign" (formula "28") (term "1"))
            (rule "variableDeclaration" (formula "28") (term "1") (newnames "s_3"))
            (rule "stringAssignment" (formula "28") (term "1"))
             (builtin "One Step Simplification" (formula "30"))
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "notLeft" (formula "1"))
            (rule "variableDeclarationAssign" (formula "30") (term "1"))
            (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_6"))
            (rule "div_axiom" (formula "4") (term "0,2,0") (inst "quotient=quotient_0"))
            (rule "qeq_literals" (formula "4") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1,1,1,1"))
            (rule "equal_literals" (formula "4") (term "0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "polySimp_addComm1" (formula "6") (term "1"))
            (rule "add_literals" (formula "6") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0"))
            (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "4"))
            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
            (rule "mul_literals" (formula "25") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
            (rule "leq_literals" (formula "25") (term "0,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
            (rule "neg_literal" (formula "25") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
            (rule "add_literals" (formula "25") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0"))
            (rule "add_literals" (formula "25") (term "0,0"))
            (rule "qeq_literals" (formula "25") (term "0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "24"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "mul_literals" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(neglit(6(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_literals" (formula "6") (term "0,0"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "div_axiom" (formula "8") (term "1,0") (inst "quotient=quotient_1"))
            (rule "mul_literals" (formula "8") (term "1,1,1,1,1"))
            (rule "equal_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "qeq_literals" (formula "8") (term "0,1"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "polySimp_addComm1" (formula "10") (term "1"))
            (rule "add_literals" (formula "10") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "inEqSimp_homoInEq1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "8"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10"))
            (rule "polySimp_mulComm0" (formula "10") (term "1"))
            (rule "polySimp_rightDist" (formula "10") (term "1"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
            (rule "mul_literals" (formula "10") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "10"))
            (rule "mul_literals" (formula "30") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "mul_literals" (formula "30") (term "1"))
            (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(neglit(6(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "leq_literals" (formula "30") (term "0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1"))
            (rule "polySimp_rightDist" (formula "7") (term "1"))
            (rule "mul_literals" (formula "7") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
            (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), mul(quotient_1, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "leq_literals" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
            (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=mul(quotient_1, Z(neglit(1(#))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "neg_literal" (formula "10") (term "0,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "10") (term "0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0"))
            (rule "qeq_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "30"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0"))
            (rule "qeq_literals" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
            (rule "mul_literals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "12"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "32"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "jdiv_axiom" (formula "2") (term "0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,2,1"))
            (rule "eqSymm" (formula "2"))
            (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
            (rule "elimGcdGeq" (formula "2") (term "0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
            (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,0,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1,0,0,0"))
            (rule "add_literals" (formula "2") (term "1,0,1,0,0,0"))
            (rule "times_zero_1" (formula "2") (term "0,1,0,0,0"))
            (rule "leq_literals" (formula "2") (term "1,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "2") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polyDiv_pullOut" (formula "2") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,2,0,2,0"))
            (rule "equal_literals" (formula "2") (term "0,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,2,0"))
            (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,2,0"))
            (rule "add_literals" (formula "2") (term "1,0,0,0,2,0"))
            (rule "times_zero_1" (formula "2") (term "0,0,0,2,0"))
            (rule "div_literals" (formula "2") (term "0,0,2,0"))
            (rule "add_zero_left" (formula "2") (term "0,2,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "2,0"))
            (rule "polySimp_elimOne" (formula "2") (term "2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polyDiv_pullOut" (formula "2") (term "0,1") (inst "polyDivCoeff=l_0"))
            (rule "equal_literals" (formula "2") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1"))
            (rule "polySimp_homoEq" (formula "2") (term "1"))
            (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,1,0,1"))
            (rule "add_literals" (formula "2") (term "1,0,0,0,1,0,1"))
            (rule "times_zero_1" (formula "2") (term "0,0,0,1,0,1"))
            (rule "div_literals" (formula "2") (term "0,0,1,0,1"))
            (rule "add_zero_left" (formula "2") (term "0,1,0,1"))
            (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1"))
            (rule "add_literals" (formula "2") (term "1,0,1"))
            (rule "times_zero_1" (formula "2") (term "0,1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "23"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "24"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,0") (ifseqformula "28"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "29"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1,1") (ifseqformula "27"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "47") (term "1") (inst "#v0=c"))
            (rule "variableDeclaration" (formula "47") (term "1") (newnames "c_10"))
            (rule "assignment_read_attribute_this" (formula "47") (term "1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "lenNonNegative" (formula "22") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
             (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore_getCurrentLineNumber_1,result_442,exc_589") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
            (branch "Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "46"))
                (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "28")))
                (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")))
                (builtin "One Step Simplification" (formula "50"))
               (rule "expand_inLong" (formula "45") (term "1,0"))
               (rule "replace_long_MIN" (formula "45") (term "0,1,1,0"))
               (rule "replace_long_MAX" (formula "45") (term "1,0,1,0"))
               (rule "andLeft" (formula "45"))
               (rule "andLeft" (formula "45"))
               (rule "andLeft" (formula "45"))
               (rule "inEqSimp_commuteLeq" (formula "46"))
               (rule "assignment" (formula "52") (term "1"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "stringConcatIntExpRight" (formula "52") (term "1") (inst "sk=sk_0"))
                (builtin "One Step Simplification" (formula "53"))
                (builtin "One Step Simplification" (formula "54"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
               (rule "variableDeclarationAssign" (formula "54") (term "1"))
               (rule "variableDeclaration" (formula "54") (term "1") (newnames "s_2"))
               (rule "stringAssignment" (formula "54") (term "1"))
                (builtin "One Step Simplification" (formula "56"))
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "notLeft" (formula "1"))
               (rule "stringConcat" (formula "56") (term "1") (inst "sk=sk_1"))
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "58"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
               (rule "assignment_write_static_attribute" (formula "58") (term "1"))
                (builtin "One Step Simplification" (formula "58"))
               (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "3"))
               (rule "applyEq" (formula "51") (term "4") (ifseqformula "50"))
               (rule "eqSeqConcat" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "add_literals" (formula "5") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0,1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,2,0"))
               (rule "add_literals" (formula "4") (term "2,0"))
               (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_homoEq" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "1,0,1"))
               (rule "add_zero_right" (formula "3") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0"))
               (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "2"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "eqSeqConcat" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "lenOfSeqConcat" (formula "3") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "2") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "add_literals" (formula "2") (term "1,0,2,0"))
               (rule "add_literals" (formula "2") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqSubEQ" (formula "2") (term "1,2,0") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,2,0"))
               (rule "mul_literals" (formula "2") (term "1,1,1,2,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,2,0"))
               (rule "lenOfSeqSubEQ" (formula "3") (term "1,1,0") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "add_literals" (formula "1") (term "1,0,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "add_literals" (formula "1") (term "1,0,1"))
               (rule "add_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,2,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,2,0"))
               (rule "lenOfSeqSubEQ" (formula "1") (term "1,1") (ifseqformula "8"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,1"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1"))
               (rule "polySimp_homoEq" (formula "1"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
               (rule "add_literals" (formula "2") (term "0,2,0"))
               (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
               (rule "add_literals" (formula "3") (term "0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "lenOfSeqSub" (formula "4") (term "2,0"))
               (rule "polySimp_elimSub" (formula "4") (term "1,2,0"))
               (rule "mul_literals" (formula "4") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "4") (term "1,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqConcat" (formula "2") (term "0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "lenOfSeqConcat" (formula "3") (term "2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqSub" (formula "2") (term "0"))
               (rule "polySimp_elimSub" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "1,1,0"))
               (rule "add_zero_right" (formula "2") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
               (rule "add_literals" (formula "3") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "add_literals" (formula "4") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "2") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "add_literals" (formula "2") (term "1,0,1"))
               (rule "add_literals" (formula "2") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,2,0"))
               (rule "add_literals" (formula "3") (term "2,0"))
               (rule "lenOfSeqSubEQ" (formula "2") (term "1,1") (ifseqformula "4"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,1"))
               (rule "mul_literals" (formula "2") (term "1,1,1,1"))
               (rule "polySimp_homoEq" (formula "2"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,2,0"))
               (rule "add_zero_right" (formula "4") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,2,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,2,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0,1,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,1,1,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_sepPosMonomial" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_homoEq" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "1,0,1"))
               (rule "add_zero_right" (formula "2") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "1,1"))
               (rule "ifEqualsInteger" (formula "2") (term "1"))
               (rule "equal_literals" (formula "2") (term "1,1,1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_homoEq" (formula "2") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,1,1"))
               (rule "mul_literals" (formula "2") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1,1"))
               (rule "add_literals" (formula "2") (term "0,0,1,1"))
               (rule "polySimp_sepNegMonomial" (formula "2") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,2,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0"))
               (rule "eqSeqConcat" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "7") (term "2,0"))
               (rule "polySimp_elimSub" (formula "7") (term "1,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,2,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,2,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,2,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "1,2,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1,2,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "1,2,0"))
               (rule "add_literals" (formula "7") (term "1,1,1,2,0"))
               (rule "times_zero_1" (formula "7") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "7") (term "1,2,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqSingleton" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "1,1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,1,0"))
               (rule "add_zero_right" (formula "5") (term "1,0"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,2,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,2,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "0,0,2,0"))
               (rule "leq_literals" (formula "7") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1"))
               (rule "add_literals" (formula "5") (term "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "equal_literals" (formula "5") (term "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0"))
               (rule "leq_literals" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "2,0"))
               (rule "less_literals" (formula "13") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,0"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "0"))
               (rule "polySimp_homoEq" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "eqSeqSingleton" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqSub" (formula "12") (term "0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,0"))
               (rule "add_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqConcat" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqSub" (formula "5") (term "2,0"))
               (rule "sub_literals" (formula "5") (term "1,2,0"))
               (rule "less_literals" (formula "5") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "lenOfSeqSub" (formula "3") (term "0"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "sub_literals" (formula "3") (term "0"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "eqSeqSingleton" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqSub" (formula "4") (term "0"))
               (rule "sub_literals" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "equal_literals" (formula "4") (term "1"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "less_literals" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0"))
               (rule "add_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0"))
               (rule "add_literals" (formula "6") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "2,0"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "sub_literals" (formula "3") (term "1,0,0"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "eqSeqConcat" (formula "14"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "lenOfSeqSub" (formula "16") (term "2,0"))
               (rule "less_literals" (formula "16") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "2,0"))
               (rule "lenOfSeqSub" (formula "14") (term "0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "0"))
               (rule "polySimp_homoEq" (formula "14"))
               (rule "mul_literals" (formula "14") (term "1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "eqSeqSingleton" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqSub" (formula "15") (term "0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_literals" (formula "14") (term "1,0"))
               (rule "add_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_zero_left" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_right" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "4"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "lenOfSeqSub" (formula "6") (term "2,0"))
               (rule "less_literals" (formula "6") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,1"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "1"))
               (rule "add_literals" (formula "4") (term "0,1"))
               (rule "eqSeqSingleton" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "4") (term "0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "sub_literals" (formula "4") (term "0"))
               (rule "polySimp_homoEq" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "sub_literals" (formula "3") (term "1,0,0"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "less_literals" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_zero_left" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "eqSeqConcat" (formula "9"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqSub" (formula "11") (term "2,0"))
               (rule "less_literals" (formula "11") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "2,0"))
               (rule "eqSeqSingleton" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_addAssoc" (formula "9") (term "1"))
               (rule "add_literals" (formula "9") (term "0,1"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "sub_literals" (formula "9") (term "1,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_homoEq" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "add_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "sub_literals" (formula "4") (term "1,1,0,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_zero_left" (formula "4") (term "1,0"))
               (rule "eqSeqConcat" (formula "17"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "lenOfSeqSub" (formula "19") (term "2,0"))
               (rule "sub_literals" (formula "19") (term "1,2,0"))
               (rule "less_literals" (formula "19") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "1"))
               (rule "add_literals" (formula "17") (term "0,1"))
               (rule "eqSeqSingleton" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "lenOfSeqSub" (formula "17") (term "0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "sub_literals" (formula "17") (term "0"))
               (rule "polySimp_homoEq" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqSub" (formula "18") (term "0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "sub_literals" (formula "18") (term "0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "add_literals" (formula "17") (term "1,0"))
               (rule "add_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "getOfSeqSub" (formula "3") (term "0"))
               (rule "castDel" (formula "3") (term "2,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_zero_left" (formula "3") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "3") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_zero_left" (formula "9") (term "1,0"))
               (rule "eqSeqConcat" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "7") (term "2,0"))
               (rule "less_literals" (formula "7") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "2,0"))
               (rule "eqSeqSingleton" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "0"))
               (rule "polySimp_homoEq" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "sub_literals" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "equal_literals" (formula "6") (term "1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "1,1,0"))
               (rule "add_literals" (formula "9") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "9") (term "1,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "sub_literals" (formula "4") (term "1,1,0,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "add_literals" (formula "18") (term "1,0"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "2,0"))
               (rule "less_literals" (formula "13") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,0"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_homoEq" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "eqSeqSingleton" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,0"))
               (rule "add_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_zero_left" (formula "10") (term "1,1,0"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqConcat" (formula "20"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "lenOfSeqSub" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,2,0"))
               (rule "less_literals" (formula "22") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "1"))
               (rule "add_literals" (formula "20") (term "0,1"))
               (rule "eqSeqSingleton" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "lenOfSeqSub" (formula "20") (term "0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "0"))
               (rule "polySimp_homoEq" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqSub" (formula "21") (term "0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "sub_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "polySimp_addAssoc" (formula "20") (term "0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "add_literals" (formula "20") (term "1,0"))
               (rule "add_literals" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "sub_literals" (formula "4") (term "1,1,0,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_zero_right" (formula "4") (term "1,0"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "add_zero_left" (formula "19") (term "1,1,0"))
               (rule "sub_literals" (formula "19") (term "1,1,0,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_zero_left" (formula "11") (term "1,1,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "eqSeqConcat" (formula "6"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqSub" (formula "8") (term "2,0"))
               (rule "less_literals" (formula "8") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "2,0"))
               (rule "eqSeqSingleton" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "0"))
               (rule "polySimp_homoEq" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,0"))
               (rule "add_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "add_zero_right" (formula "19") (term "1,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "sub_literals" (formula "19") (term "1,0,0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "1,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "sub_literals" (formula "5") (term "1,1,0,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_zero_left" (formula "21") (term "1,1,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
               (rule "times_zero_2" (formula "4") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "4") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
               (rule "eqSeqConcat" (formula "13"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,0,0"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "eqSeqSingleton" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "sub_literals" (formula "13") (term "1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "equal_literals" (formula "13") (term "1"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "eqSeqSingleton" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "lenOfSeqSub" (formula "15") (term "0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,0"))
               (rule "lenOfSeqSub" (formula "16") (term "2,0,0"))
               (rule "sub_literals" (formula "16") (term "1,2,0,0"))
               (rule "less_literals" (formula "16") (term "0,2,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "lenOfSeqSub" (formula "14") (term "1,0,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "less_literals" (formula "14") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_homoEq" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "lenOfSeqSub" (formula "14") (term "0,1,0"))
               (rule "less_literals" (formula "14") (term "0,0,1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "0,1,0"))
               (rule "mul_literals" (formula "14") (term "1,0"))
               (rule "add_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "sub_literals" (formula "21") (term "1,0,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_left" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqConcat" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "lenOfSeqSub" (formula "25") (term "2,0"))
               (rule "less_literals" (formula "25") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "sub_literals" (formula "25") (term "2,0"))
               (rule "lenOfSeqSub" (formula "23") (term "0"))
               (rule "sub_literals" (formula "23") (term "1,0"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_homoEq" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "eqSeqSingleton" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_addAssoc" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "lenOfSeqSub" (formula "24") (term "0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "sub_literals" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_addAssoc" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "add_literals" (formula "23") (term "1,0"))
               (rule "add_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "1,1,0"))
               (rule "add_literals" (formula "11") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "11") (term "1,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_zero_left" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "sub_literals" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_homoEq" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,0"))
               (rule "add_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_zero_left" (formula "15") (term "1,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "1,0,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "24") (term "1,1,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,1,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "2,0"))
               (rule "sub_literals" (formula "23") (term "1,1,0,0"))
               (rule "add_literals" (formula "23") (term "1,1,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "25"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "lenOfSeqSub" (formula "27") (term "2,0"))
               (rule "sub_literals" (formula "27") (term "1,2,0"))
               (rule "less_literals" (formula "27") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "lenOfSeqConcat" (formula "25") (term "1,1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "polySimp_addAssoc" (formula "25") (term "1"))
               (rule "add_literals" (formula "25") (term "0,1"))
               (rule "eqSeqSingleton" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "lenOfSeqSub" (formula "25") (term "0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "sub_literals" (formula "25") (term "0"))
               (rule "polySimp_homoEq" (formula "25"))
               (rule "mul_literals" (formula "25") (term "1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "add_literals" (formula "25") (term "0,0"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "add_literals" (formula "25") (term "1,0"))
               (rule "add_literals" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_zero_right" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "hideAuxiliaryEqConcrete" (formula "17"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "2,0"))
               (rule "sub_literals" (formula "23") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "23") (term "1,1,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
               (rule "mul_literals" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "eqSeqConcat" (formula "8"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "10") (term "2,0"))
               (rule "sub_literals" (formula "10") (term "1,2,0"))
               (rule "less_literals" (formula "10") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "eqSeqSingleton" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,1"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_addAssoc" (formula "8") (term "1"))
               (rule "add_literals" (formula "8") (term "0,1"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
               (rule "polySimp_homoEq" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,0"))
               (rule "add_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "sub_literals" (formula "25") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "25") (term "1,1,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "76"))
               (rule "true_left" (formula "76"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "1,1,0"))
               (rule "add_literals" (formula "14") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "1,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "add_literals" (formula "24") (term "1,1,0"))
               (rule "sub_literals" (formula "24") (term "1,0,0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "eqSeqConcat" (formula "26"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "lenOfSeqSub" (formula "28") (term "2,0"))
               (rule "less_literals" (formula "28") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "sub_literals" (formula "28") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "26") (term "1,1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "add_literals" (formula "26") (term "1,1"))
               (rule "add_literals" (formula "26") (term "1"))
               (rule "eqSeqSingleton" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "lenOfSeqSub" (formula "26") (term "0"))
               (rule "sub_literals" (formula "26") (term "1,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "equal_literals" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "getOfSeqSub" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "2,0"))
               (rule "add_literals" (formula "23") (term "1,1,0"))
               (rule "sub_literals" (formula "23") (term "1,1,0,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "less_literals" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_zero_left" (formula "8") (term "1,1,0"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "add_zero_left" (formula "25") (term "1,1,0"))
               (rule "sub_literals" (formula "25") (term "1,1,0,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "commute_or" (formula "18"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "add_literals" (formula "24") (term "1,1,0"))
               (rule "sub_literals" (formula "24") (term "1,0,0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "eqSeqConcat" (formula "9"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "lenOfSeqSub" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,2,0"))
               (rule "less_literals" (formula "11") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "eqSeqSingleton" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "0"))
               (rule "polySimp_homoEq" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "add_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "methodCallEmpty" (formula "83") (term "1"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "add_zero_left" (formula "27") (term "1,1,0"))
               (rule "sub_literals" (formula "27") (term "1,1,0,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "getOfSeqSub" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "2,0"))
               (rule "sub_literals" (formula "24") (term "1,1,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "add_zero_right" (formula "24") (term "1,1,0"))
               (rule "less_literals" (formula "24") (term "0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "1,0,0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "sub_literals" (formula "17") (term "1,1,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
               (rule "mul_literals" (formula "6") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "2,0"))
               (rule "sub_literals" (formula "25") (term "1,1,0,0"))
               (rule "leq_literals" (formula "25") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "add_literals" (formula "25") (term "1,1,0"))
               (rule "less_literals" (formula "25") (term "0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_zero_left" (formula "9") (term "1,1,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "57"))
               (rule "replace_known_right" (formula "73") (term "0") (ifseqformula "88"))
                (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "31")))
               (rule "true_left" (formula "73"))
               (rule "eqSeqConcat" (formula "28"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "add_literals" (formula "28") (term "1,0,0"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "lenOfSeqSub" (formula "30") (term "2,0"))
               (rule "less_literals" (formula "30") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "sub_literals" (formula "30") (term "2,0"))
               (rule "eqSeqSingleton" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "lenOfSeqSub" (formula "28") (term "0"))
               (rule "less_literals" (formula "28") (term "0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "sub_literals" (formula "28") (term "0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "eqSeqSingleton" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "lenOfSeqSub" (formula "28") (term "0"))
               (rule "sub_literals" (formula "28") (term "1,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "equal_literals" (formula "28") (term "1"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "less_literals" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "lenOfSeqSub" (formula "29") (term "0"))
               (rule "sub_literals" (formula "29") (term "1,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "equal_literals" (formula "29") (term "1"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "less_literals" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "add_zero_left" (formula "27") (term "1,1,0"))
               (rule "sub_literals" (formula "27") (term "1,0,0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "sub_literals" (formula "26") (term "1,1,0,0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "2") (ifseqformula "61"))
               (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "91"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
               (rule "add_literals" (formula "16") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0"))
               (rule "add_literals" (formula "16") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "1,1,0"))
               (rule "add_literals" (formula "17") (term "0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,0,0"))
               (rule "add_literals" (formula "17") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,1,0,0"))
               (rule "add_literals" (formula "17") (term "1,0,0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "eqSeqConcat" (formula "10"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqSub" (formula "12") (term "2,0"))
               (rule "sub_literals" (formula "12") (term "1,2,0"))
               (rule "less_literals" (formula "12") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "eqSeqSingleton" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_literals" (formula "10") (term "1,1"))
               (rule "add_literals" (formula "10") (term "1"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "sub_literals" (formula "26") (term "1,0,0"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_zero_left" (formula "9") (term "1,1,0"))
               (rule "sub_literals" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "2,0"))
               (rule "add_zero_left" (formula "29") (term "1,1,0"))
               (rule "sub_literals" (formula "29") (term "1,1,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "less_literals" (formula "29") (term "0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "add_zero_left" (formula "30") (term "1,1,0"))
               (rule "sub_literals" (formula "30") (term "1,0,0"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "28") (term "0"))
               (rule "castDel" (formula "28") (term "2,0"))
               (rule "sub_literals" (formula "28") (term "1,1,0,0"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "leq_literals" (formula "28") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "less_literals" (formula "28") (term "0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "sub_literals" (formula "27") (term "1,0,0"))
               (rule "add_literals" (formula "27") (term "1,1,0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "lenNonNegative" (formula "31") (term "2,0"))
               (rule "inEqSimp_commuteLeq" (formula "31"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
               (rule "andLeft" (formula "32"))
               (rule "lenOfSeqSub" (formula "32") (term "0"))
               (rule "polySimp_elimSub" (formula "32") (term "1,0"))
               (rule "mul_literals" (formula "32") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "32") (term "1,0"))
               (rule "lenOfSeqSub" (formula "33") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0,0"))
               (rule "lenOfSeqSubEQ" (formula "32") (term "1") (ifseqformula "34"))
               (rule "eqSymm" (formula "32"))
               (rule "polySimp_elimSub" (formula "32") (term "1,0"))
               (rule "mul_literals" (formula "32") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
               (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_zero_left" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "2,0"))
               (rule "add_zero_right" (formula "26") (term "1,1,0"))
               (rule "sub_literals" (formula "26") (term "1,1,0,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "less_literals" (formula "26") (term "0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "2,0"))
               (rule "sub_literals" (formula "29") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "29") (term "1,1,0"))
               (rule "leq_literals" (formula "29") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "less_literals" (formula "29") (term "0,0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "sub_literals" (formula "30") (term "1,1,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "28") (term "0"))
               (rule "castDel" (formula "28") (term "2,0"))
               (rule "leq_literals" (formula "28") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "sub_literals" (formula "28") (term "1,0,0"))
               (rule "less_literals" (formula "28") (term "0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,0"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_zero_right" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "7") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "2,0"))
               (rule "sub_literals" (formula "27") (term "1,1,0,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "add_literals" (formula "27") (term "1,1,0"))
               (rule "less_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "eqSeqConcat" (formula "11"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,0,0"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,2,0"))
               (rule "less_literals" (formula "13") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "equal_literals" (formula "11") (term "1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "eqSeqSingleton" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "eqSeqSingleton" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "lenOfSeqSub" (formula "12") (term "0"))
               (rule "sub_literals" (formula "12") (term "1,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "equal_literals" (formula "12") (term "1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_zero_left" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "sub_literals" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "sub_literals" (formula "30") (term "1,0,0"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "cnf_rightDist" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "sub_literals" (formula "30") (term "1,1,0,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "lenNonNegative" (formula "1") (term "1,1"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "add_literals" (formula "30") (term "1,1,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "sub_literals" (formula "30") (term "1,0,0"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_zero_left" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "sub_literals" (formula "11") (term "1,0,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_zero_right" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "1,0,0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "2,0"))
               (rule "sub_literals" (formula "30") (term "1,1,0,0"))
               (rule "leq_literals" (formula "30") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "less_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "add_zero_right" (formula "30") (term "1,0"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_zero_left" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,0"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_zero_right" (formula "10") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "10") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,1,0,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqSub" (formula "15") (term "0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,0"))
               (rule "lenOfSeqSub" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0,0"))
               (rule "lenOfSeqSubEQ" (formula "15") (term "1") (ifseqformula "37"))
               (rule "polySimp_elimSub" (formula "15") (term "1,1"))
               (rule "mul_literals" (formula "15") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "15") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
               (rule "eqSymm" (formula "15"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
               (rule "add_literals" (formula "15") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
               (rule "eqSymm" (formula "15"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
               (rule "add_literals" (formula "15") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
               (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
               (rule "eqSymm" (formula "15"))
               (rule "polySimp_elimOne" (formula "15") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
               (rule "eqSymm" (formula "15"))
               (rule "polySimp_elimOne" (formula "15") (term "0,0,1"))
               (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "2"))
               (rule "substringSubstring" (formula "16") (term "0") (inst "newSym=newSym_0"))
               (rule "qeq_literals" (formula "16") (term "0,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "qeq_literals" (formula "16") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "add_zero_right" (formula "16") (term "1,0,1,1"))
               (rule "add_zero_left" (formula "16") (term "2,0,1,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0"))
               (rule "times_zero_2" (formula "16") (term "1,1,1,0"))
               (rule "add_zero_right" (formula "16") (term "1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0,0,0"))
               (rule "add_literals" (formula "16") (term "1,1,0,1,0,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,1,0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,1,0,0,0"))
               (rule "qeq_literals" (formula "16") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "17"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "sub_literals" (formula "11") (term "1,1,0,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "add_zero_right" (formula "11") (term "1,1,0"))
               (rule "less_literals" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "charLiteral_to_int" (formula "18") (term "1"))
               (rule "getOfSeqSub" (formula "34") (term "0"))
               (rule "castDel" (formula "34") (term "2,0"))
               (rule "leq_literals" (formula "34") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "add_literals" (formula "34") (term "1,1,0"))
               (rule "sub_literals" (formula "34") (term "1,0,0"))
               (rule "less_literals" (formula "34") (term "0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "getOfSeqSub" (formula "35") (term "0"))
               (rule "castDel" (formula "35") (term "2,0"))
               (rule "sub_literals" (formula "35") (term "1,1,0,0"))
               (rule "add_literals" (formula "35") (term "1,1,0"))
               (rule "leq_literals" (formula "35") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "less_literals" (formula "35") (term "0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "11") (term "0"))
               (rule "castDel" (formula "11") (term "2,0"))
               (rule "add_zero_right" (formula "11") (term "1,1,0"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
               (rule "times_zero_2" (formula "11") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "11") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "34") (term "0"))
               (rule "castDel" (formula "34") (term "2,0"))
               (rule "sub_literals" (formula "34") (term "1,1,0,0"))
               (rule "leq_literals" (formula "34") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "less_literals" (formula "34") (term "0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "add_literals" (formula "34") (term "1,0"))
               (rule "getOfSeqSub" (formula "35") (term "0"))
               (rule "castDel" (formula "35") (term "2,0"))
               (rule "add_literals" (formula "35") (term "1,1,0"))
               (rule "leq_literals" (formula "35") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "sub_literals" (formula "35") (term "1,0,0"))
               (rule "less_literals" (formula "35") (term "0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_or_weaken1" (formula "25"))
               (rule "add_literals" (formula "25") (term "1,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "25"))
               (rule "leq_literals" (formula "36") (term "0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "true_left" (formula "36"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "getOfSeqSub" (formula "34") (term "0"))
               (rule "castDel" (formula "34") (term "2,0"))
               (rule "leq_literals" (formula "34") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "add_literals" (formula "34") (term "1,1,0"))
               (rule "sub_literals" (formula "34") (term "1,0,0"))
               (rule "less_literals" (formula "34") (term "0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "seqGetAlphaCast" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "getOfSeqSub" (formula "35") (term "0"))
               (rule "castDel" (formula "35") (term "2,0"))
               (rule "leq_literals" (formula "35") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "add_literals" (formula "35") (term "1,1,0"))
               (rule "sub_literals" (formula "35") (term "1,0,0"))
               (rule "less_literals" (formula "35") (term "0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "34") (term "0"))
               (rule "castDel" (formula "34") (term "2,0"))
               (rule "sub_literals" (formula "34") (term "1,1,0,0"))
               (rule "leq_literals" (formula "34") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "less_literals" (formula "34") (term "0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "add_zero_right" (formula "34") (term "1,0"))
               (rule "getOfSeqSub" (formula "35") (term "0"))
               (rule "castDel" (formula "35") (term "2,0"))
               (rule "add_zero_right" (formula "35") (term "1,1,0"))
               (rule "sub_literals" (formula "35") (term "1,1,0,0"))
               (rule "leq_literals" (formula "35") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "less_literals" (formula "35") (term "0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
               (rule "charLiteral_to_int" (formula "5") (term "1"))
               (rule "ifEqualsInteger" (formula "5"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_literals" (formula "14") (term "1,0"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "sub_literals" (formula "14") (term "1,0,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_zero_right" (formula "13") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
               (rule "charLiteral_to_int" (formula "19") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "charLiteral_to_int" (formula "6") (term "1"))
               (rule "ifEqualsInteger" (formula "6"))
               (rule "charLiteral_to_int" (formula "20") (term "1"))
               (rule "seqGetAlphaCast" (formula "28") (term "0"))
               (rule "castDel" (formula "28") (term "0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "7") (term "1"))
               (rule "ifEqualsInteger" (formula "7"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "29") (term "0"))
               (rule "castDel" (formula "29") (term "0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "tryEmpty" (formula "91") (term "1"))
               (rule "inEqSimp_notGeq" (formula "5") (term "0,1"))
               (rule "mul_literals" (formula "5") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "5") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1"))
               (rule "mul_literals" (formula "5") (term "1,0,1"))
               (rule "charLiteral_to_int" (formula "30") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "8") (term "1"))
               (rule "ifEqualsInteger" (formula "8"))
               (rule "inEqSimp_notGeq" (formula "6") (term "0,1"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "6") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,1"))
               (rule "mul_literals" (formula "6") (term "1,0,1"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,1"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "7") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1"))
               (rule "mul_literals" (formula "7") (term "1,0,1"))
               (rule "inEqSimp_notGeq" (formula "8") (term "0,1"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "8") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1"))
               (rule "mul_literals" (formula "8") (term "1,0,1"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "30") (term "0"))
               (rule "castDel" (formula "30") (term "0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "commute_or" (formula "3"))
               (rule "charLiteral_to_int" (formula "31") (term "1"))
               (rule "charLiteral_to_int" (formula "9") (term "1"))
               (rule "ifEqualsInteger" (formula "9"))
               (rule "inEqSimp_notGeq" (formula "9") (term "0,1"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "9") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1"))
               (rule "mul_literals" (formula "9") (term "1,0,1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "seqGetAlphaCast" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "charLiteral_to_int" (formula "32") (term "1"))
               (rule "charLiteral_to_int" (formula "10") (term "1"))
               (rule "ifEqualsInteger" (formula "10"))
               (rule "inEqSimp_notGeq" (formula "10") (term "0,1"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "10") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1"))
               (rule "mul_literals" (formula "10") (term "1,0,1"))
               (rule "seqGetAlphaCast" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "charLiteral_to_int" (formula "33") (term "1"))
               (rule "charLiteral_to_int" (formula "11") (term "1"))
               (rule "ifEqualsInteger" (formula "11"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,1"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "11") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1"))
               (rule "mul_literals" (formula "11") (term "1,0,1"))
               (rule "commute_and" (formula "5") (term "0"))
               (rule "charLiteral_to_int" (formula "34") (term "1"))
               (rule "charLiteral_to_int" (formula "35") (term "1"))
               (rule "charLiteral_to_int" (formula "12") (term "1"))
               (rule "ifEqualsInteger" (formula "12"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,1"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "12") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1"))
               (rule "mul_literals" (formula "12") (term "1,0,1"))
               (rule "commute_and" (formula "6") (term "0"))
               (rule "commute_and" (formula "7") (term "0"))
               (rule "commute_and" (formula "5") (term "1"))
               (rule "seqGetAlphaCast" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "true_left" (formula "33"))
               (rule "commute_and" (formula "8") (term "0"))
               (rule "commute_and" (formula "6") (term "1"))
               (rule "commute_and" (formula "7") (term "1"))
               (rule "commute_and" (formula "8") (term "1"))
               (rule "charLiteral_to_int" (formula "13") (term "1"))
               (rule "ifEqualsInteger" (formula "13"))
               (rule "inEqSimp_notGeq" (formula "13") (term "0,1"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "13") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1"))
               (rule "mul_literals" (formula "13") (term "1,0,1"))
               (rule "commute_and" (formula "9") (term "0"))
               (rule "commute_and" (formula "9") (term "1"))
               (rule "charLiteral_to_int" (formula "14") (term "1"))
               (rule "ifEqualsInteger" (formula "14"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,1"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0,1"))
               (rule "add_literals" (formula "14") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1"))
               (rule "mul_literals" (formula "14") (term "1,0,1"))
               (rule "commute_and" (formula "10") (term "0"))
               (rule "commute_and" (formula "10") (term "1"))
               (rule "commute_and" (formula "11") (term "0"))
               (rule "commute_and" (formula "11") (term "1"))
               (rule "commute_and" (formula "12") (term "0"))
               (rule "commute_and" (formula "12") (term "1"))
               (rule "emptyModality" (formula "91") (term "1"))
                (builtin "One Step Simplification" (formula "91"))
               (rule "notRight" (formula "91"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "3"))
               (rule "simplifySelectOfStoreEQ" (formula "63") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "simplifySelectOfStoreEQ" (formula "62") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "simplifySelectOfCreate" (formula "63"))
                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "93")) (ifInst ""  (formula "93")))
               (rule "simplifySelectOfCreate" (formula "62"))
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "93")))
               (rule "simplifySelectOfCreate" (formula "63"))
                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "92")) (ifInst ""  (formula "92")))
               (rule "simplifySelectOfCreate" (formula "62"))
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "92")))
               (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "62"))
               (rule "applyEqReverse" (formula "100") (term "0,1,0") (ifseqformula "62"))
               (rule "applyEqReverse" (formula "100") (term "0,1,1,0,1") (ifseqformula "62"))
               (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "63"))
               (rule "applyEqReverse" (formula "60") (term "1,0,0") (ifseqformula "63"))
               (rule "applyEqReverse" (formula "99") (term "1,0,1,0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "allRight" (formula "99") (inst "sk=iv_0"))
               (rule "orRight" (formula "99"))
               (rule "orRight" (formula "99"))
               (rule "applyEqReverse" (formula "101") (term "1,0,1") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "101"))
               (rule "closeTrue" (formula "101"))
            )
            (branch "Exceptional Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "48"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "andLeft" (formula "45"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "45"))
               (rule "notLeft" (formula "45"))
               (rule "close" (formula "48") (ifseqformula "47"))
            )
            (branch "Pre (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "28")))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "47"))
               (rule "closeTrue" (formula "47"))
            )
            (branch "Null reference (c_10 = null)"
                (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "51")))
               (rule "closeTrue" (formula "47"))
            )
         )
         (branch "if x_3 false"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "jmod_axiom" (formula "25") (term "0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "methodCallEmpty" (formula "27") (term "1"))
            (rule "tryEmpty" (formula "27") (term "1"))
            (rule "emptyModality" (formula "27") (term "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "notRight" (formula "27"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "27") (term "1,2") (ifseqformula "1"))
            (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "10"))
            (rule "applyEqReverse" (formula "36") (term "0,1,0") (ifseqformula "10"))
            (rule "applyEqReverse" (formula "36") (term "0,1,1,0,1") (ifseqformula "10"))
            (rule "hideAuxiliaryEq" (formula "10"))
            (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "35") (term "1,0,1,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "allRight" (formula "35") (inst "sk=iv_0"))
            (rule "orRight" (formula "35"))
            (rule "orRight" (formula "35"))
            (rule "applyEqReverse" (formula "8") (term "1,0,0") (ifseqformula "10"))
            (rule "applyEqReverse" (formula "36") (term "1,0,1") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "closeTrue" (formula "36"))
         )
      )
   )
   (branch "Exceptional Post (getCurrentLineNumber)"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "19"))
      (rule "notLeft" (formula "17"))
      (rule "close" (formula "20") (ifseqformula "19"))
   )
   (branch "Pre (getCurrentLineNumber)"
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "6")))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "17"))
      (rule "closeTrue" (formula "17"))
   )
   (branch "Null reference (c_9 = null)"
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")))
      (rule "closeTrue" (formula "17"))
   )
)
(branch "Exceptional Post (getCurrentLineNumber)"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "13"))
   (rule "close" (formula "16") (ifseqformula "15"))
)
(branch "Pre (getCurrentLineNumber)"
    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "9")))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "13"))
   (rule "closeTrue" (formula "13"))
)
(branch "Null reference (c_8 = null)"
    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
   (rule "closeTrue" (formula "13"))
)
)
}
