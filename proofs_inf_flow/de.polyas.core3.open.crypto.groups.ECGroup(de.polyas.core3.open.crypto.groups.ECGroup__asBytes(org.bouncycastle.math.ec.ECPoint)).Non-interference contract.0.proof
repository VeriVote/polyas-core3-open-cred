\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 19 17:26:05 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Dec 19 17:26:05 CET 2019
contract=de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup\\:\\:asBytes(org.bouncycastle.math.ec.ECPoint)].Non-interference contract.0
name=de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup\\:\\:asBytes(org.bouncycastle.math.ec.ECPoint)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "513")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "17") (term "0,1"))
(rule "eqSymm" (formula "17") (term "1,1"))
(rule "eqSymm" (formula "6") (term "1,0,0,0,1"))
(rule "eqSymm" (formula "6") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "6") (term "1,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "16"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "15"))
 (builtin "One Step Simplification" (formula "10"))
(rule "allFieldsEq" (formula "17") (term "1,1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "boxToDiamond" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "boxToDiamond" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "5"))
(rule "true_left" (formula "5"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "10"))
(rule "true_left" (formula "10"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "5"))
(rule "true_left" (formula "5"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "9"))
(rule "true_left" (formula "9"))
(rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_asBytes,savedHeapBefore_asBytes"))
 (builtin "One Step Simplification" (formula "16"))
(rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_asBytes_0,savedHeapBefore_asBytes_0"))
 (builtin "One Step Simplification" (formula "15"))
(rule "returnUnfold" (formula "16") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "16") (term "1"))
(rule "variableDeclaration" (formula "16") (term "1") (newnames "x_arr"))
(rule "returnUnfold" (formula "15") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_1"))
 (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_getEncoded,result_155,exc_203,heapAfter_getEncoded,anon_heap_getEncoded") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::getEncoded(boolean)].JML normal_behavior operation contract.0"))
(branch "Post (getEncoded)"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "11"))
    (builtin "One Step Simplification" (formula "20"))
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "16"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "14"))
   (rule "notLeft" (formula "13"))
   (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "18")))
   (rule "assignment" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "applyEq" (formula "15") (term "5") (ifseqformula "11"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "methodCallReturn" (formula "24") (term "1"))
   (rule "assignment" (formula "24") (term "1"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "methodCallEmpty" (formula "24") (term "1"))
   (rule "tryEmpty" (formula "24") (term "1"))
   (rule "emptyModality" (formula "24") (term "1"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "notRight" (formula "24"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "3"))
   (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
   (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "2"))
   (rule "applyEq" (formula "18") (term "4") (ifseqformula "2"))
   (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "1"))
    (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_getEncoded_0,result_156,exc_204,heapAfter_getEncoded_0,anon_heap_getEncoded_0") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::getEncoded(boolean)].JML normal_behavior operation contract.0"))
   (branch "Post (getEncoded)"
       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "9")))
       (builtin "One Step Simplification" (formula "21"))
       (builtin "One Step Simplification" (formula "20"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "andLeft" (formula "20"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1,0") (ifseqformula "20"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "25"))
      (rule "notLeft" (formula "22"))
      (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "27"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")))
      (rule "assignment" (formula "37") (term "1"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "applyEq" (formula "25") (term "5") (ifseqformula "24"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "26"))
      (rule "true_left" (formula "26"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "methodCallReturn" (formula "35") (term "1"))
      (rule "assignment" (formula "35") (term "1"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "methodCallEmpty" (formula "35") (term "1"))
      (rule "tryEmpty" (formula "35") (term "1"))
      (rule "emptyModality" (formula "35") (term "1"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "notRight" (formula "35"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "3"))
      (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "30") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "28") (term "4") (ifseqformula "2"))
      (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "2"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "16"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "1,0") (ifseqformula "17"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "18"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "cut_direct" (formula "49") (term "0"))
      (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_154_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_154_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
          (builtin "One Step Simplification" (formula "50"))
         (rule "impRight" (formula "50"))
         (rule "Use_information_flow_contract_for_getEncoded_253512071_00_1" (formula "36") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "1")))
         (rule "notLeft" (formula "36"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "37") (term "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "37"))
         (rule "closeTrue" (formula "37"))
      )
      (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_154_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_154_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
          (builtin "One Step Simplification" (formula "50"))
         (rule "false_right" (formula "50"))
         (rule "definitionOfNewObjectsIsomorphic" (formula "49"))
         (branch "New on Heap 1"
            (rule "definitionOfNewOnHeap" (formula "49") (inst "i=i"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "allRight" (formula "49") (inst "sk=i_0"))
            (rule "impRight" (formula "49"))
            (rule "andLeft" (formula "1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0,0,1"))
            (rule "castDel" (formula "51") (term "2,0,0,0,1"))
            (rule "castDel" (formula "51") (term "1,0,0,0,1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0,0,0"))
            (rule "castDel" (formula "51") (term "1,0,0,0,0"))
            (rule "castDel" (formula "51") (term "2,0,0,0,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,0,0,1,0"))
            (rule "castDel" (formula "51") (term "1,1,0,0,1,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
            (rule "replace_known_left" (formula "52") (term "0,1,1,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "40")))
            (rule "closeTrue" (formula "52"))
         )
         (branch "New on Heap 2"
            (rule "definitionOfNewOnHeap" (formula "49") (inst "i=i"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "allRight" (formula "49") (inst "sk=i_0"))
            (rule "impRight" (formula "49"))
            (rule "andLeft" (formula "1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0,0,1"))
            (rule "castDel" (formula "51") (term "2,0,0,0,1"))
            (rule "castDel" (formula "51") (term "1,0,0,0,1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0,0,0"))
            (rule "castDel" (formula "51") (term "1,0,0,0,0"))
            (rule "castDel" (formula "51") (term "2,0,0,0,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,0,0,1,0"))
            (rule "castDel" (formula "51") (term "1,1,0,0,1,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
            (rule "replace_known_left" (formula "52") (term "0,1,1,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "38")))
            (rule "closeTrue" (formula "52"))
         )
         (branch "Same Types"
            (rule "definitionOfSameTypes" (formula "49") (inst "i=i"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "allRight" (formula "49") (inst "sk=i_0"))
            (rule "impRight" (formula "49"))
            (rule "andLeft" (formula "1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0,0,1"))
            (rule "castDel" (formula "51") (term "2,0,0,0,1"))
            (rule "castDel" (formula "51") (term "1,0,0,0,1"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,1,1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,1,1"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,0"))
            (rule "castDel" (formula "51") (term "2,1,0"))
            (rule "castDel" (formula "51") (term "1,1,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0"))
            (rule "castDel" (formula "51") (term "1,0,0"))
            (rule "castDel" (formula "51") (term "2,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
            (rule "replace_known_left" (formula "52") (term "0,1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "sameTypeTrue" (formula "52") (ifseqformula "30") (ifseqformula "35"))
            (rule "closeTrue" (formula "52"))
         )
         (branch "Objects Isomorphic"
            (rule "definitionOfObjectsIsomorphic" (formula "49") (inst "i=i"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "allRight" (formula "49") (inst "sk=i_0"))
            (rule "impRight" (formula "49"))
            (rule "andLeft" (formula "1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0,0,1"))
            (rule "castDel" (formula "51") (term "2,0,0,0,1"))
            (rule "castDel" (formula "51") (term "1,0,0,0,1"))
            (rule "getOfSeqSingleton" (formula "51") (term "0,0,0,0"))
            (rule "castDel" (formula "51") (term "1,0,0,0,0"))
            (rule "castDel" (formula "51") (term "2,0,0,0,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,1,0"))
            (rule "castDel" (formula "51") (term "1,1,1,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "3,1,1"))
            (rule "getOfSeqSingleton" (formula "51") (term "3,1,0"))
            (rule "castDel" (formula "51") (term "1,3,1,0"))
            (rule "getOfSeqSingleton" (formula "51") (term "1,1,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
            (rule "replace_known_left" (formula "52") (term "0,3,1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
            (rule "leq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "definitionOfObjectIsomorphic" (formula "50") (inst "i=i"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "allRight" (formula "50") (inst "sk=i_1"))
            (rule "impRight" (formula "50"))
            (rule "andLeft" (formula "1"))
            (rule "getOfSeqSingleton" (formula "52") (term "0,0,1,0"))
            (rule "castDel" (formula "52") (term "1,0,0,1,0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "getOfSeqSingleton" (formula "52") (term "0,1,1,0"))
            (rule "castDel" (formula "52") (term "1,0,1,1,0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "getOfSeqSingleton" (formula "52") (term "2,1,1"))
            (rule "getOfSeqSingleton" (formula "52") (term "0,0,0,1"))
            (rule "castDel" (formula "52") (term "2,0,0,0,1"))
            (rule "castDel" (formula "52") (term "1,0,0,0,1"))
            (rule "getOfSeqSingleton" (formula "52") (term "0,1,1"))
            (rule "getOfSeqSingleton" (formula "52") (term "0,0,0,0"))
            (rule "castDel" (formula "52") (term "2,0,0,0,0"))
            (rule "castDel" (formula "52") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
            (rule "replace_known_left" (formula "53") (term "0,0,1,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "53"))
         )
      )
   )
   (branch "Exceptional Post (getEncoded)"
       (builtin "One Step Simplification" (formula "29"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "23"))
      (rule "notLeft" (formula "21"))
      (rule "close" (formula "24") (ifseqformula "23"))
   )
   (branch "Pre (getEncoded)"
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "9")))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "27"))
      (rule "closeTrue" (formula "27"))
   )
   (branch "Null reference (_p_10_B = null)"
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
      (rule "closeTrue" (formula "27"))
   )
)
(branch "Exceptional Post (getEncoded)"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "14") (ifseqformula "13"))
)
(branch "Pre (getEncoded)"
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "16"))
   (rule "closeTrue" (formula "16"))
)
(branch "Null reference (_p_10_A = null)"
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
   (rule "closeTrue" (formula "16"))
)
)
}
