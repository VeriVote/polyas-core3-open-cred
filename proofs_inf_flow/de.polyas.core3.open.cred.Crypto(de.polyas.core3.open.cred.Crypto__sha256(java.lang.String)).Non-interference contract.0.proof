\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Feb 09 15:07:53 CET 2020
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../../../home/flo/git/polyas-core3-open-cred/boot";

\javaSource "../../../../../../home/flo/git/polyas-core3-open-cred/src";

\proofObligation "#Proof Obligation Settings
#Sun Feb 09 15:07:53 CET 2020
contract=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:sha256(java.lang.String)].Non-interference contract.0
name=de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto\\:\\:sha256(java.lang.String)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))

(autoModeTime "1978")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "4") (term "0,0,0,1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1"))
(rule "eqSymm" (formula "8") (term "0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,0,0,1"))
(rule "replace_known_right" (formula "6") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "6"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "10"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "definitionOfNewObjectsIsomorphic" (formula "11"))
(branch "New on Heap 1"
   (rule "boxToDiamond" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "notLeft" (formula "4"))
   (rule "boxToDiamond" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "notLeft" (formula "5"))
   (rule "notLeft" (formula "3"))
   (rule "notLeft" (formula "3"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "notLeft" (formula "5"))
   (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_sha256,savedHeapBefore_sha256"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_sha256_0,savedHeapBefore_sha256_0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "s"))
   (rule "returnUnfold" (formula "10") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "s_1"))
   (rule "definitionOfNewOnHeap" (formula "14") (inst "i=i"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "allRight" (formula "14") (inst "sk=i_0"))
   (rule "impRight" (formula "14"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0,0,0"))
   (rule "castDel" (formula "16") (term "1,0,0,0,0"))
   (rule "castDel" (formula "16") (term "2,0,0,0,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,0,0,1,0"))
   (rule "castDel" (formula "16") (term "1,1,0,0,1,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0,0,1"))
   (rule "castDel" (formula "16") (term "1,0,0,0,1"))
   (rule "castDel" (formula "16") (term "2,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "17") (term "0,0,0,0,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "notRight" (formula "17"))
   (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
   (rule "leq_literals" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "13") (term "1"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "var"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_1"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "13") (term "1") (inst "#v0=m"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "m"))
   (rule "activeUseStaticFieldReadAccess" (formula "13") (term "1"))
   (rule "assignment_read_static_attribute" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "12") (term "1") (inst "#v0=m"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "m_1"))
   (rule "activeUseStaticFieldReadAccess" (formula "12") (term "1"))
   (rule "assignment_read_static_attribute" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "13") (term "1"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "var_2"))
   (rule "assignment" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "var_3"))
    (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_getBytes,result_1058,exc_1394,heapAfter_getBytes,anon_heap_getBytes") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
   (branch "Post (getBytes)"
       (builtin "One Step Simplification" (formula "17"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,1,0") (ifseqformula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "14"))
      (rule "notLeft" (formula "11"))
      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")))
      (rule "assignment" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "applyEq" (formula "13") (term "4") (ifseqformula "9"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "20") (term "1"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "var_4"))
      (rule "assignment" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "var_5"))
       (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_digest,result_1059,exc_1395,heapAfter_digest,anon_heap_digest") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
      (branch "Post (digest)"
          (builtin "One Step Simplification" (formula "15"))
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "25"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1") (ifseqformula "8"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0,0,0,1,1") (ifseqformula "8"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,1,0") (ifseqformula "8"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "20"))
         (rule "notLeft" (formula "17"))
         (rule "orRight" (formula "23"))
         (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "26"))
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "10")))
         (rule "true_left" (formula "22"))
         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")) (ifInst ""  (formula "23")))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "blockEmpty" (formula "33") (term "1"))
         (rule "applyEq" (formula "19") (term "5") (ifseqformula "15"))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "18"))
         (rule "true_left" (formula "18"))
          (builtin "Use Operation Contract" (formula "30") (newnames "heapBefore_getBytes_0,result_1060,exc_1396,heapAfter_getBytes_0,anon_heap_getBytes_0") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
         (branch "Post (getBytes)"
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "5")))
             (builtin "One Step Simplification" (formula "22"))
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0") (ifseqformula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "27"))
            (rule "notLeft" (formula "24"))
            (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")))
            (rule "assignment" (formula "40") (term "1"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "applyEq" (formula "26") (term "4") (ifseqformula "22"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "25"))
            (rule "true_left" (formula "25"))
             (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_asHexString,result_1061,exc_1397,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
            (branch "Post (asHexString)"
                (builtin "One Step Simplification" (formula "43"))
                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")))
                (builtin "One Step Simplification" (formula "28"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "8"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,1,1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,0,1,1") (ifseqformula "8"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,1,0") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,1,0") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,1,0") (ifseqformula "8"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "30"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "30"))
               (rule "notLeft" (formula "29"))
               (rule "orRight" (formula "34"))
               (rule "orRight" (formula "34"))
               (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
               (rule "true_left" (formula "33"))
               (rule "replace_known_right" (formula "28") (term "0,0,0,1") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "blockEmpty" (formula "50") (term "1"))
               (rule "applyEq" (formula "31") (term "3") (ifseqformula "30"))
               (rule "methodCallReturn" (formula "50") (term "1"))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "methodCallEmpty" (formula "50") (term "1"))
               (rule "tryEmpty" (formula "50") (term "1"))
               (rule "emptyModality" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "notRight" (formula "50"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "2"))
               (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
               (rule "close" (formula "36") (ifseqformula "4"))
            )
            (branch "Exceptional Post (asHexString)"
                (builtin "One Step Simplification" (formula "41"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,1,1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,0,1,1") (ifseqformula "8"))
               (rule "andLeft" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0") (ifseqformula "8"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "30"))
               (rule "notLeft" (formula "28"))
               (rule "close" (formula "32") (ifseqformula "31"))
            )
            (branch "Pre (asHexString)"
                (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1") (ifseqformula "14"))
               (rule "wellFormedAnonEQ" (formula "39") (term "0") (ifseqformula "14"))
               (rule "wellFormedAnonEQ" (formula "39") (term "0,0") (ifseqformula "8"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1") (ifseqformula "8"))
               (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "7")) (ifInst ""  (formula "13")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "16")))
               (rule "closeTrue" (formula "39"))
            )
         )
         (branch "Exceptional Post (getBytes)"
             (builtin "One Step Simplification" (formula "32"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "22"))
            (rule "close" (formula "25") (ifseqformula "24"))
         )
         (branch "Pre (getBytes)"
             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "5")))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "30"))
            (rule "closeTrue" (formula "30"))
         )
         (branch "Null reference (_input_22_B = null)"
             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "32")))
            (rule "closeTrue" (formula "30"))
         )
      )
      (branch "Exceptional Post (digest)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0,0,0,1,1") (ifseqformula "8"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0") (ifseqformula "8"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "15"))
         (rule "close" (formula "18") (ifseqformula "17"))
      )
      (branch "Pre (digest)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
         (rule "wellFormedAnonEQ" (formula "21") (term "0,1") (ifseqformula "8"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1") (ifseqformula "8"))
         (rule "replace_known_left" (formula "21") (term "1,1,1") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "3")) (ifInst ""  (formula "7")) (ifInst ""  (formula "13")))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "21"))
         (rule "closeTrue" (formula "21"))
      )
      (branch "Null reference (var_2 = null)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")))
         (rule "closeTrue" (formula "21"))
      )
   )
   (branch "Exceptional Post (getBytes)"
       (builtin "One Step Simplification" (formula "15"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "9"))
      (rule "close" (formula "13") (ifseqformula "12"))
   )
   (branch "Pre (getBytes)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "3")))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "13"))
      (rule "closeTrue" (formula "13"))
   )
   (branch "Null reference (_input_22_A = null)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
      (rule "closeTrue" (formula "13"))
   )
)
(branch "New on Heap 2"
   (rule "boxToDiamond" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "notLeft" (formula "4"))
   (rule "boxToDiamond" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "notLeft" (formula "5"))
   (rule "notLeft" (formula "3"))
   (rule "notLeft" (formula "3"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "notLeft" (formula "5"))
   (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_sha256,savedHeapBefore_sha256"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_sha256_0,savedHeapBefore_sha256_0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "s"))
   (rule "returnUnfold" (formula "10") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "s_1"))
   (rule "definitionOfNewOnHeap" (formula "14") (inst "i=i"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "allRight" (formula "14") (inst "sk=i_0"))
   (rule "impRight" (formula "14"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0,0,0"))
   (rule "castDel" (formula "16") (term "1,0,0,0,0"))
   (rule "castDel" (formula "16") (term "2,0,0,0,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,0,0,1,0"))
   (rule "castDel" (formula "16") (term "1,1,0,0,1,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0,0,1"))
   (rule "castDel" (formula "16") (term "1,0,0,0,1"))
   (rule "castDel" (formula "16") (term "2,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "17") (term "0,0,0,0,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "notRight" (formula "17"))
   (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
   (rule "leq_literals" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "13") (term "1"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "var"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_1"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "13") (term "1") (inst "#v0=m"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "m"))
   (rule "activeUseStaticFieldReadAccess" (formula "13") (term "1"))
   (rule "assignment_read_static_attribute" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "12") (term "1") (inst "#v0=m"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "m_1"))
   (rule "activeUseStaticFieldReadAccess" (formula "12") (term "1"))
   (rule "assignment_read_static_attribute" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "13") (term "1"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "var_2"))
   (rule "assignment" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "var_3"))
    (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_getBytes,result_1058,exc_1394,heapAfter_getBytes,anon_heap_getBytes") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
   (branch "Post (getBytes)"
       (builtin "One Step Simplification" (formula "17"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,1,0") (ifseqformula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "14"))
      (rule "notLeft" (formula "11"))
      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")))
      (rule "assignment" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "applyEq" (formula "13") (term "4") (ifseqformula "9"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "20") (term "1"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "var_4"))
      (rule "assignment" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "var_5"))
       (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_digest,result_1059,exc_1395,heapAfter_digest,anon_heap_digest") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
      (branch "Post (digest)"
          (builtin "One Step Simplification" (formula "15"))
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "25"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1") (ifseqformula "8"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0,0,0,1,1") (ifseqformula "8"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,1,0") (ifseqformula "8"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "20"))
         (rule "notLeft" (formula "17"))
         (rule "orRight" (formula "23"))
         (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "26"))
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "10")))
         (rule "true_left" (formula "22"))
         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")) (ifInst ""  (formula "23")))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "blockEmpty" (formula "33") (term "1"))
         (rule "applyEq" (formula "19") (term "5") (ifseqformula "15"))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "18"))
         (rule "true_left" (formula "18"))
          (builtin "Use Operation Contract" (formula "30") (newnames "heapBefore_getBytes_0,result_1060,exc_1396,heapAfter_getBytes_0,anon_heap_getBytes_0") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
         (branch "Post (getBytes)"
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "5")))
             (builtin "One Step Simplification" (formula "22"))
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0") (ifseqformula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "27"))
            (rule "notLeft" (formula "24"))
            (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")))
            (rule "assignment" (formula "40") (term "1"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "applyEq" (formula "26") (term "4") (ifseqformula "22"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "25"))
            (rule "true_left" (formula "25"))
             (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_asHexString,result_1061,exc_1397,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
            (branch "Post (asHexString)"
                (builtin "One Step Simplification" (formula "43"))
                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")))
                (builtin "One Step Simplification" (formula "28"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "8"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,1,1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,0,1,1") (ifseqformula "8"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,1,0") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,1,0") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,1,0") (ifseqformula "8"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "30"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "30"))
               (rule "notLeft" (formula "29"))
               (rule "orRight" (formula "34"))
               (rule "orRight" (formula "34"))
               (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
               (rule "true_left" (formula "33"))
               (rule "replace_known_right" (formula "28") (term "0,0,0,1") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "blockEmpty" (formula "50") (term "1"))
               (rule "applyEq" (formula "31") (term "3") (ifseqformula "30"))
               (rule "methodCallReturn" (formula "50") (term "1"))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "methodCallEmpty" (formula "50") (term "1"))
               (rule "tryEmpty" (formula "50") (term "1"))
               (rule "emptyModality" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "notRight" (formula "50"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "2"))
               (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "34") (term "2") (ifseqformula "1"))
                (builtin "Use Operation Contract" (formula "52") (newnames "heapBefore_digest_0,result_1062,exc_1398,heapAfter_digest_0,anon_heap_digest_0") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
               (branch "Post (digest)"
                   (builtin "One Step Simplification" (formula "37"))
                   (builtin "One Step Simplification" (formula "56"))
                   (builtin "One Step Simplification" (formula "38"))
                   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,1") (ifseqformula "24"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,0,1,1") (ifseqformula "24"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1,0") (ifseqformula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,1,0") (ifseqformula "24"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "39"))
                  (rule "notLeft" (formula "42"))
                  (rule "notLeft" (formula "39"))
                  (rule "orRight" (formula "46"))
                  (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "53")))
                  (rule "true_left" (formula "45"))
                  (rule "replace_known_right" (formula "38") (term "0,0,1") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "47")) (ifInst ""  (formula "46")))
                  (rule "assignment" (formula "64") (term "1"))
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "blockEmpty" (formula "64") (term "1"))
                  (rule "applyEq" (formula "42") (term "5") (ifseqformula "41"))
                  (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "40"))
                  (rule "true_left" (formula "40"))
                   (builtin "Use Operation Contract" (formula "62") (newnames "heapBefore_asHexString_0,result_1063,exc_1399,heapAfter_asHexString_0,anon_heap_asHexString_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
                  (branch "Post (asHexString)"
                      (builtin "One Step Simplification" (formula "66"))
                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                      (builtin "One Step Simplification" (formula "45"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1") (ifseqformula "37"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,1,1") (ifseqformula "37"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,0,1,1") (ifseqformula "24"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1,1,0") (ifseqformula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1,1,0") (ifseqformula "37"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,1,1,0") (ifseqformula "24"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "notLeft" (formula "48"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "notLeft" (formula "47"))
                     (rule "notLeft" (formula "47"))
                     (rule "orRight" (formula "51"))
                     (rule "orRight" (formula "51"))
                     (rule "replace_known_right" (formula "50") (term "1,0") (ifseqformula "56"))
                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "55")) (ifInst ""  (formula "38")))
                     (rule "true_left" (formula "50"))
                     (rule "replace_known_right" (formula "46") (term "0,0,0,1") (ifseqformula "50"))
                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                     (rule "assignment" (formula "73") (term "1"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "blockEmpty" (formula "73") (term "1"))
                     (rule "applyEq" (formula "48") (term "3") (ifseqformula "45"))
                     (rule "methodCallReturn" (formula "73") (term "1"))
                     (rule "assignment" (formula "73") (term "1"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "methodCallEmpty" (formula "73") (term "1"))
                     (rule "tryEmpty" (formula "73") (term "1"))
                     (rule "emptyModality" (formula "73") (term "1"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "notRight" (formula "73"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "51") (term "2") (ifseqformula "1"))
                     (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "1"))
                     (rule "close" (formula "53") (ifseqformula "7"))
                  )
                  (branch "Exceptional Post (asHexString)"
                      (builtin "One Step Simplification" (formula "64"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,1,1") (ifseqformula "37"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,0,1,1") (ifseqformula "24"))
                     (rule "andLeft" (formula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1,0") (ifseqformula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1,0") (ifseqformula "37"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,1,0") (ifseqformula "24"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "47"))
                     (rule "notLeft" (formula "45"))
                     (rule "close" (formula "48") (ifseqformula "47"))
                  )
                  (branch "Pre (asHexString)"
                      (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                     (rule "wellFormedAnonEQ" (formula "62") (term "0") (ifseqformula "37"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "1") (ifseqformula "37"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,1") (ifseqformula "24"))
                     (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "42"))
                      (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "36")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "38")))
                     (rule "closeTrue" (formula "62"))
                  )
               )
               (branch "Exceptional Post (digest)"
                   (builtin "One Step Simplification" (formula "54"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,0,1,1") (ifseqformula "24"))
                  (rule "andLeft" (formula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,0") (ifseqformula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0") (ifseqformula "24"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "40"))
                  (rule "notLeft" (formula "38"))
                  (rule "close" (formula "41") (ifseqformula "40"))
               )
               (branch "Pre (digest)"
                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "1,1") (ifseqformula "24"))
                  (rule "wellFormedAnonEQ" (formula "52") (term "0,1") (ifseqformula "24"))
                  (rule "replace_known_right" (formula "52") (term "0,1,1") (ifseqformula "40"))
                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "8")) (ifInst ""  (formula "23")) (ifInst ""  (formula "26")))
                  (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "52"))
                  (rule "closeTrue" (formula "52"))
               )
               (branch "Null reference (var_4 = null)"
                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "48")))
                  (rule "closeTrue" (formula "52"))
               )
            )
            (branch "Exceptional Post (asHexString)"
                (builtin "One Step Simplification" (formula "41"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,1,1") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,0,0,0,1,1") (ifseqformula "8"))
               (rule "andLeft" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0") (ifseqformula "14"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0") (ifseqformula "8"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "30"))
               (rule "notLeft" (formula "28"))
               (rule "close" (formula "32") (ifseqformula "31"))
            )
            (branch "Pre (asHexString)"
                (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1") (ifseqformula "14"))
               (rule "wellFormedAnonEQ" (formula "39") (term "0") (ifseqformula "14"))
               (rule "wellFormedAnonEQ" (formula "39") (term "0,0") (ifseqformula "8"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1") (ifseqformula "8"))
               (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "7")) (ifInst ""  (formula "13")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "16")))
               (rule "closeTrue" (formula "39"))
            )
         )
         (branch "Exceptional Post (getBytes)"
             (builtin "One Step Simplification" (formula "32"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "22"))
            (rule "close" (formula "25") (ifseqformula "24"))
         )
         (branch "Pre (getBytes)"
             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "5")))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "30"))
            (rule "closeTrue" (formula "30"))
         )
         (branch "Null reference (_input_22_B = null)"
             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "32")))
            (rule "closeTrue" (formula "30"))
         )
      )
      (branch "Exceptional Post (digest)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0,0,0,1,1") (ifseqformula "8"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0") (ifseqformula "8"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "15"))
         (rule "close" (formula "18") (ifseqformula "17"))
      )
      (branch "Pre (digest)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
         (rule "wellFormedAnonEQ" (formula "21") (term "0,1") (ifseqformula "8"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1") (ifseqformula "8"))
         (rule "replace_known_left" (formula "21") (term "1,1,1") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "3")) (ifInst ""  (formula "7")) (ifInst ""  (formula "13")))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "21"))
         (rule "closeTrue" (formula "21"))
      )
      (branch "Null reference (var_2 = null)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")))
         (rule "closeTrue" (formula "21"))
      )
   )
   (branch "Exceptional Post (getBytes)"
       (builtin "One Step Simplification" (formula "15"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "9"))
      (rule "close" (formula "13") (ifseqformula "12"))
   )
   (branch "Pre (getBytes)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "3")))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "13"))
      (rule "closeTrue" (formula "13"))
   )
   (branch "Null reference (_input_22_A = null)"
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
      (rule "closeTrue" (formula "13"))
   )
)
(branch "Same Types"
   (rule "boxToDiamond" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "notLeft" (formula "4"))
   (rule "boxToDiamond" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "notLeft" (formula "5"))
   (rule "notLeft" (formula "3"))
   (rule "notLeft" (formula "3"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "notLeft" (formula "5"))
   (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_sha256,savedHeapBefore_sha256"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_sha256_0,savedHeapBefore_sha256_0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "s"))
   (rule "returnUnfold" (formula "10") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "s_1"))
   (rule "definitionOfSameTypes" (formula "14") (inst "i=i"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "allRight" (formula "14") (inst "sk=i_0"))
   (rule "impRight" (formula "14"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,0"))
   (rule "castDel" (formula "16") (term "2,1,0"))
   (rule "castDel" (formula "16") (term "1,1,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0,0,1"))
   (rule "castDel" (formula "16") (term "2,0,0,0,1"))
   (rule "castDel" (formula "16") (term "1,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0"))
   (rule "castDel" (formula "16") (term "2,0,0"))
   (rule "castDel" (formula "16") (term "1,0,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,1,1"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "17") (term "0,1,1,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
   (rule "leq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "11") (term "1"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_1"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "12") (term "1") (inst "#v0=m"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "m"))
   (rule "activeUseStaticFieldReadAccess" (formula "12") (term "1"))
   (rule "assignment_read_static_attribute" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "11") (term "1") (inst "#v0=m"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "m_1"))
   (rule "activeUseStaticFieldReadAccess" (formula "11") (term "1"))
   (rule "assignment_read_static_attribute" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_2"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_3"))
    (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_getBytes,result_1058,exc_1394,heapAfter_getBytes,anon_heap_getBytes") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
   (branch "Post (getBytes)"
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "8"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "2")))
       (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "12"))
      (rule "notLeft" (formula "9"))
      (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")))
      (rule "assignment" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "applyEq" (formula "12") (term "4") (ifseqformula "11"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_4"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_5"))
       (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_digest,result_1059,exc_1395,heapAfter_digest,anon_heap_digest") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
      (branch "Post (digest)"
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1") (ifseqformula "7"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,0,0,0,0,1,1") (ifseqformula "7"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,1,0") (ifseqformula "7"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "18"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "orRight" (formula "22"))
         (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "8")))
         (rule "true_left" (formula "21"))
         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
         (rule "assignment" (formula "32") (term "1"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "blockEmpty" (formula "32") (term "1"))
         (rule "applyEq" (formula "18") (term "5") (ifseqformula "17"))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "16"))
         (rule "true_left" (formula "16"))
          (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_getBytes_0,result_1060,exc_1396,heapAfter_getBytes_0,anon_heap_getBytes_0") (contract "java.lang.String[java.lang.String::getBytes()].JML normal_behavior operation contract.0"))
         (branch "Post (getBytes)"
             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "4")))
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1,0") (ifseqformula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "25"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "23"))
            (rule "notLeft" (formula "22"))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")))
            (rule "assignment" (formula "39") (term "1"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "applyEq" (formula "25") (term "4") (ifseqformula "24"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "23"))
            (rule "true_left" (formula "23"))
             (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_asHexString,result_1061,exc_1397,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
            (branch "Post (asHexString)"
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "26"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "13"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1") (ifseqformula "7"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,0,0,1,1") (ifseqformula "13"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,0,0,0,1,1") (ifseqformula "7"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0") (ifseqformula "13"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1,1,0") (ifseqformula "7"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "31"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "orRight" (formula "33"))
               (rule "orRight" (formula "33"))
               (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "40")) (ifInst ""  (formula "14")))
               (rule "true_left" (formula "32"))
               (rule "replace_known_right" (formula "28") (term "0,0,0,1") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
               (rule "assignment" (formula "49") (term "1"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "blockEmpty" (formula "49") (term "1"))
               (rule "applyEq" (formula "30") (term "3") (ifseqformula "27"))
               (rule "methodCallReturn" (formula "49") (term "1"))
               (rule "assignment" (formula "49") (term "1"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "methodCallEmpty" (formula "49") (term "1"))
               (rule "tryEmpty" (formula "49") (term "1"))
               (rule "emptyModality" (formula "49") (term "1"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "notRight" (formula "49"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "2"))
               (rule "applyEq" (formula "33") (term "2") (ifseqformula "1"))
               (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                (builtin "Use Operation Contract" (formula "51") (newnames "heapBefore_digest_0,result_1062,exc_1398,heapAfter_digest_0,anon_heap_digest_0") (contract "java.security.MessageDigest[java.security.MessageDigest::digest([B)].JML normal_behavior operation contract.0"))
               (branch "Post (digest)"
                   (builtin "One Step Simplification" (formula "55"))
                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                   (builtin "One Step Simplification" (formula "36"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1") (ifseqformula "23"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,1,1") (ifseqformula "23"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1,0") (ifseqformula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,1,0") (ifseqformula "23"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "38"))
                  (rule "notLeft" (formula "41"))
                  (rule "notLeft" (formula "38"))
                  (rule "orRight" (formula "45"))
                  (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                  (rule "true_left" (formula "44"))
                  (rule "replace_known_right" (formula "37") (term "1,0,1") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "46")) (ifInst ""  (formula "44")))
                  (rule "assignment" (formula "63") (term "1"))
                   (builtin "One Step Simplification" (formula "63"))
                  (rule "blockEmpty" (formula "63") (term "1"))
                  (rule "applyEq" (formula "41") (term "5") (ifseqformula "40"))
                  (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "39"))
                  (rule "true_left" (formula "39"))
                   (builtin "Use Operation Contract" (formula "61") (newnames "heapBefore_asHexString_0,result_1063,exc_1399,heapAfter_asHexString_0,anon_heap_asHexString_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
                  (branch "Post (asHexString)"
                      (builtin "One Step Simplification" (formula "65"))
                      (builtin "One Step Simplification" (formula "43"))
                      (builtin "One Step Simplification" (formula "44"))
                      (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1") (ifseqformula "23"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,1,1") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,0,1,1") (ifseqformula "23"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,1,0") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,1,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,1,1,0") (ifseqformula "23"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "47"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "45"))
                     (rule "notLeft" (formula "45"))
                     (rule "orRight" (formula "50"))
                     (rule "orRight" (formula "50"))
                     (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "54")) (ifInst ""  (formula "55")))
                     (rule "true_left" (formula "49"))
                     (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "52"))
                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
                     (rule "assignment" (formula "72") (term "1"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "blockEmpty" (formula "72") (term "1"))
                     (rule "applyEq" (formula "47") (term "3") (ifseqformula "46"))
                     (rule "methodCallReturn" (formula "72") (term "1"))
                     (rule "assignment" (formula "72") (term "1"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "methodCallEmpty" (formula "72") (term "1"))
                     (rule "tryEmpty" (formula "72") (term "1"))
                     (rule "emptyModality" (formula "72") (term "1"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "notRight" (formula "72"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "50") (term "2") (ifseqformula "1"))
                     (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "1"))
                     (rule "sameTypeTrue" (formula "77") (ifseqformula "35") (ifseqformula "48"))
                     (rule "closeTrue" (formula "77"))
                  )
                  (branch "Exceptional Post (asHexString)"
                      (builtin "One Step Simplification" (formula "63"))
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,1,1") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,0,1,1") (ifseqformula "23"))
                     (rule "andLeft" (formula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,0") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,1,0") (ifseqformula "23"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "46"))
                     (rule "notLeft" (formula "44"))
                     (rule "close" (formula "47") (ifseqformula "46"))
                  )
                  (branch "Pre (asHexString)"
                      (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1") (ifseqformula "36"))
                     (rule "wellFormedAnonEQ" (formula "61") (term "0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1") (ifseqformula "23"))
                     (rule "replace_known_left" (formula "61") (term "1,1") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "41")) (ifInst ""  (formula "35")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")))
                     (rule "closeTrue" (formula "61"))
                  )
               )
               (branch "Exceptional Post (digest)"
                   (builtin "One Step Simplification" (formula "36"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,1,1") (ifseqformula "23"))
                  (rule "andLeft" (formula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0") (ifseqformula "23"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "39"))
                  (rule "notLeft" (formula "37"))
                  (rule "close" (formula "41") (ifseqformula "40"))
               )
               (branch "Pre (digest)"
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1,1") (ifseqformula "23"))
                  (rule "wellFormedAnonEQ" (formula "51") (term "0,1") (ifseqformula "23"))
                  (rule "replace_known_right" (formula "51") (term "0,1,1") (ifseqformula "39"))
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "24")))
                  (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "51"))
                  (rule "closeTrue" (formula "51"))
               )
               (branch "Null reference (var_4 = null)"
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "47")))
                  (rule "closeTrue" (formula "51"))
               )
            )
            (branch "Exceptional Post (asHexString)"
                (builtin "One Step Simplification" (formula "26"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,0,0,1,1") (ifseqformula "13"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,0,0,0,1,1") (ifseqformula "7"))
               (rule "andLeft" (formula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0") (ifseqformula "13"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1,0") (ifseqformula "7"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "27"))
               (rule "close" (formula "30") (ifseqformula "29"))
            )
            (branch "Pre (asHexString)"
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1") (ifseqformula "13"))
               (rule "wellFormedAnonEQ" (formula "38") (term "0") (ifseqformula "13"))
               (rule "wellFormedAnonEQ" (formula "38") (term "0,0") (ifseqformula "7"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1") (ifseqformula "7"))
               (rule "replace_known_left" (formula "38") (term "1,1") (ifseqformula "14"))
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "12")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
               (rule "closeTrue" (formula "38"))
            )
         )
         (branch "Exceptional Post (getBytes)"
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "andLeft" (formula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "21"))
            (rule "close" (formula "24") (ifseqformula "23"))
         )
         (branch "Pre (getBytes)"
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "4")))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "29"))
            (rule "closeTrue" (formula "29"))
         )
         (branch "Null reference (_input_22_B = null)"
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "31")))
            (rule "closeTrue" (formula "29"))
         )
      )
      (branch "Exceptional Post (digest)"
          (builtin "One Step Simplification" (formula "13"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,0,0,0,0,1,1") (ifseqformula "7"))
         (rule "andLeft" (formula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,0") (ifseqformula "7"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "14"))
         (rule "close" (formula "17") (ifseqformula "16"))
      )
      (branch "Pre (digest)"
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,1") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "20") (term "0,1") (ifseqformula "7"))
         (rule "replace_known_left" (formula "20") (term "1,0,1") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")) (ifInst ""  (formula "12")) (ifInst ""  (formula "8")))
         (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "20"))
         (rule "closeTrue" (formula "20"))
      )
      (branch "Null reference (var_2 = null)"
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "18")))
         (rule "closeTrue" (formula "20"))
      )
   )
   (branch "Exceptional Post (getBytes)"
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "8"))
      (rule "close" (formula "12") (ifseqformula "11"))
   )
   (branch "Pre (getBytes)"
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "2")))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "12"))
      (rule "closeTrue" (formula "12"))
   )
   (branch "Null reference (_input_22_A = null)"
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "14")))
      (rule "closeTrue" (formula "12"))
   )
)
(branch "Objects Isomorphic"
   (rule "boxToDiamond" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "notLeft" (formula "4"))
   (rule "boxToDiamond" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "notLeft" (formula "5"))
   (rule "notLeft" (formula "3"))
   (rule "notLeft" (formula "3"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "notLeft" (formula "5"))
   (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_sha256,savedHeapBefore_sha256"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_sha256_0,savedHeapBefore_sha256_0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "s"))
   (rule "returnUnfold" (formula "10") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "s_1"))
   (rule "definitionOfObjectsIsomorphic" (formula "14") (inst "i=i"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "allRight" (formula "14") (inst "sk=i_0"))
   (rule "impRight" (formula "14"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0,0,1"))
   (rule "castDel" (formula "16") (term "1,0,0,0,1"))
   (rule "castDel" (formula "16") (term "2,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "16") (term "0,0,0,0"))
   (rule "castDel" (formula "16") (term "2,0,0,0,0"))
   (rule "castDel" (formula "16") (term "1,0,0,0,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,1,1"))
   (rule "getOfSeqSingleton" (formula "16") (term "3,1,1"))
   (rule "getOfSeqSingleton" (formula "16") (term "1,1,0"))
   (rule "castDel" (formula "16") (term "1,1,1,0"))
   (rule "getOfSeqSingleton" (formula "16") (term "3,1,0"))
   (rule "castDel" (formula "16") (term "1,3,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "17") (term "0,0,0,0,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
   (rule "leq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "definitionOfObjectIsomorphic" (formula "15") (inst "i=i"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "allRight" (formula "15") (inst "sk=i_1"))
   (rule "impRight" (formula "15"))
   (rule "andLeft" (formula "1"))
   (rule "getOfSeqSingleton" (formula "17") (term "0,0,0,0"))
   (rule "castDel" (formula "17") (term "2,0,0,0,0"))
   (rule "castDel" (formula "17") (term "1,0,0,0,0"))
   (rule "getOfSeqSingleton" (formula "17") (term "2,1,1"))
   (rule "getOfSeqSingleton" (formula "17") (term "0,1,1,0"))
   (rule "castDel" (formula "17") (term "1,0,1,1,0"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "getOfSeqSingleton" (formula "17") (term "0,0,0,1"))
   (rule "castDel" (formula "17") (term "2,0,0,0,1"))
   (rule "castDel" (formula "17") (term "1,0,0,0,1"))
   (rule "getOfSeqSingleton" (formula "17") (term "0,0,1,0"))
   (rule "castDel" (formula "17") (term "1,0,0,1,0"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "getOfSeqSingleton" (formula "17") (term "0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
   (rule "replace_known_left" (formula "18") (term "0,0,1,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "18"))
)
)
}
