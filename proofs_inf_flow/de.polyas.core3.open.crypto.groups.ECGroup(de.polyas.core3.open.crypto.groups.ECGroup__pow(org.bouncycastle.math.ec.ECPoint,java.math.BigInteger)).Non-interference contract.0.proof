\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 19 17:25:36 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Dec 19 17:25:36 CET 2019
contract=de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup\\:\\:pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].Non-interference contract.0
name=de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup\\:\\:pow(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "17400")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "23"))
(rule "notLeft" (formula "22"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "eqSymm" (formula "27") (term "1,0,1"))
(rule "eqSymm" (formula "27") (term "0,0,0,1"))
(rule "eqSymm" (formula "27") (term "1,0,0,1"))
(rule "eqSymm" (formula "27") (term "1,1"))
(rule "eqSymm" (formula "20") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "20") (term "1,0,0,1"))
(rule "eqSymm" (formula "20") (term "1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1"))
(rule "eqSymm" (formula "10") (term "0,0,0,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "22"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "21"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "15") (term "0") (ifseqformula "24"))
 (builtin "One Step Simplification" (formula "15"))
(rule "replace_known_right" (formula "14") (term "0") (ifseqformula "23"))
 (builtin "One Step Simplification" (formula "14"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "pullOutSelect" (formula "27") (term "1,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_0"))
(rule "pullOutSelect" (formula "28") (term "0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_1"))
(rule "boxToDiamond" (formula "22") (term "1"))
 (builtin "One Step Simplification" (formula "22"))
(rule "notLeft" (formula "22"))
(rule "boxToDiamond" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "17"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "17"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "18"))
(rule "true_left" (formula "18"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "9"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "17"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "17"))
(rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "16"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "18"))
(rule "notLeft" (formula "17"))
(rule "notLeft" (formula "16"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "notLeft" (formula "18"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "17"))
(rule "true_left" (formula "17"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "9"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "16"))
(rule "true_left" (formula "16"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "9"))
(rule "true_left" (formula "9"))
(rule "commute_and" (formula "31") (term "0,0,1"))
(rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_pow,savedHeapBefore_pow"))
 (builtin "One Step Simplification" (formula "24"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "exponentPos"))
(rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_pow_0,savedHeapBefore_pow_0"))
 (builtin "One Step Simplification" (formula "23"))
(rule "variableDeclarationAssign" (formula "23") (term "1"))
(rule "variableDeclaration" (formula "23") (term "1") (newnames "exponentPos_1"))
(rule "condition" (formula "24") (term "1"))
(rule "condition" (formula "23") (term "1"))
(rule "ifElseUnfold" (formula "24") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "x"))
(rule "remove_parentheses_right" (formula "24") (term "1"))
(rule "compound_less_than_comparison_1" (formula "24") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "x_1"))
(rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "23") (term "1") (newnames "x_2"))
(rule "remove_parentheses_right" (formula "23") (term "1"))
(rule "compound_less_than_comparison_1" (formula "23") (term "1") (inst "#v0=x_3"))
(rule "variableDeclarationAssign" (formula "23") (term "1"))
(rule "variableDeclaration" (formula "23") (term "1") (newnames "x_3"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "24") (term "1"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "var"))
(rule "assignment" (formula "24") (term "1"))
 (builtin "One Step Simplification" (formula "24"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "var_1"))
(rule "activeUseStaticFieldReadAccess" (formula "24") (term "1"))
(rule "assignment_read_static_attribute" (formula "24") (term "1"))
 (builtin "One Step Simplification" (formula "24"))
 (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_compareTo,result_51,exc_67") (contract "java.math.BigInteger[java.math.BigInteger::compareTo(java.math.BigInteger)].JML normal_behavior operation contract.0"))
(branch "Post (compareTo)"
    (builtin "One Step Simplification" (formula "17"))
    (builtin "One Step Simplification" (formula "28"))
    (builtin "One Step Simplification" (formula "16"))
    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")) (ifInst ""  (formula "9")) (ifInst ""  (formula "26")))
   (rule "expand_inInt" (formula "16") (term "1,0"))
   (rule "replace_int_MIN" (formula "16") (term "0,1,1,0"))
   (rule "replace_int_MAX" (formula "16") (term "1,0,1,0"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "polySimp_elimSub" (formula "19") (term "0,1"))
   (rule "polySimp_elimSub" (formula "20") (term "0,1"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "assignment" (formula "33") (term "1"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "blockEmpty" (formula "33") (term "1"))
   (rule "applyEq" (formula "20") (term "0,1,0,1") (ifseqformula "14"))
   (rule "times_zero_2" (formula "20") (term "1,0,1"))
   (rule "add_zero_right" (formula "20") (term "0,1"))
   (rule "applyEq" (formula "21") (term "5") (ifseqformula "16"))
   (rule "applyEq" (formula "19") (term "0,1,0,1") (ifseqformula "14"))
   (rule "times_zero_2" (formula "19") (term "1,0,1"))
   (rule "add_zero_right" (formula "19") (term "0,1"))
   (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "notLeft" (formula "22"))
   (rule "less_than_comparison_simple" (formula "32") (term "1"))
    (builtin "One Step Simplification" (formula "32"))
   (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "32") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
   (rule "mul_literals" (formula "32") (term "1,0,0,1,0"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "31") (term "1"))
   (rule "variableDeclarationAssign" (formula "31") (term "1"))
   (rule "variableDeclaration" (formula "31") (term "1") (newnames "var_2"))
   (rule "assignment" (formula "31") (term "1"))
    (builtin "One Step Simplification" (formula "31"))
   (rule "variableDeclarationAssign" (formula "31") (term "1"))
   (rule "variableDeclaration" (formula "31") (term "1") (newnames "var_3"))
   (rule "activeUseStaticFieldReadAccess" (formula "31") (term "1"))
   (rule "assignment_read_static_attribute" (formula "31") (term "1"))
    (builtin "One Step Simplification" (formula "31"))
    (builtin "Use Operation Contract" (formula "31") (newnames "heapBefore_compareTo_0,result_52,exc_68") (contract "java.math.BigInteger[java.math.BigInteger::compareTo(java.math.BigInteger)].JML normal_behavior operation contract.0"))
   (branch "Post (compareTo)"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "23"))
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "32")) (ifInst ""  (formula "3")) (ifInst ""  (formula "32")))
       (builtin "One Step Simplification" (formula "34"))
      (rule "expand_inInt" (formula "23") (term "1,0"))
      (rule "replace_int_MIN" (formula "23") (term "0,1,1,0"))
      (rule "replace_int_MAX" (formula "23") (term "1,0,1,0"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "27"))
      (rule "polySimp_elimSub" (formula "26") (term "0,1"))
      (rule "polySimp_elimSub" (formula "27") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "25"))
      (rule "assignment" (formula "39") (term "1"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "blockEmpty" (formula "39") (term "1"))
      (rule "applyEq" (formula "27") (term "0,1,0,1") (ifseqformula "8"))
      (rule "times_zero_2" (formula "27") (term "1,0,1"))
      (rule "add_zero_right" (formula "27") (term "0,1"))
      (rule "applyEq" (formula "28") (term "5") (ifseqformula "23"))
      (rule "applyEqRigid" (formula "26") (term "0,1,0,1") (ifseqformula "8"))
      (rule "times_zero_2" (formula "26") (term "1,0,1"))
      (rule "add_zero_right" (formula "26") (term "0,1"))
      (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "29"))
      (rule "andLeft" (formula "29"))
      (rule "notLeft" (formula "29"))
      (rule "less_than_comparison_simple" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,1,0"))
      (rule "ifElseSplit" (formula "39"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "inEqSimp_subsumption0" (formula "20") (term "0") (ifseqformula "1"))
         (rule "leq_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "inEqSimp_geqRight" (formula "30"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "2"))
         (rule "leq_literals" (formula "19") (term "0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "1"))
         (rule "leq_literals" (formula "20") (term "0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "38") (term "1"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "38") (term "1"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_5"))
         (rule "ifElseSplit" (formula "37"))
         (branch "if x_2 true"
             (builtin "One Step Simplification" (formula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption0" (formula "26") (term "0") (ifseqformula "1"))
            (rule "leq_literals" (formula "26") (term "0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "1"))
            (rule "leq_literals" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "26") (term "0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "1"))
            (rule "leq_literals" (formula "26") (term "0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "36") (term "1"))
            (rule "variableDeclarationAssign" (formula "36") (term "1"))
            (rule "variableDeclaration" (formula "36") (term "1") (newnames "var_6"))
            (rule "assignment" (formula "36") (term "1"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "variableDeclarationAssign" (formula "36") (term "1"))
            (rule "variableDeclaration" (formula "36") (term "1") (newnames "var_7"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0") (ifseqformula "13"))
            (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "24"))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")))
            (rule "true_left" (formula "18"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "1,0,1,0,1") (ifseqformula "13"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "1,1,1,0,1") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "1,0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0") (ifseqformula "11"))
            (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "39")))
            (rule "true_left" (formula "16"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1,0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "methodCallWithAssignmentWithinClass" (formula "43") (term "1") (inst "#v0=b"))
            (rule "variableDeclaration" (formula "43") (term "1") (newnames "b_1"))
            (rule "methodBodyExpand" (formula "43") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
             (builtin "One Step Simplification" (formula "43"))
            (rule "returnUnfold" (formula "43") (term "1") (inst "#v0=b_2"))
            (rule "variableDeclarationAssign" (formula "43") (term "1"))
            (rule "variableDeclaration" (formula "43") (term "1") (newnames "b_2"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "43") (term "1") (inst "#v0=s"))
            (rule "variableDeclaration" (formula "43") (term "1") (newnames "s"))
            (rule "assignment_read_attribute_this" (formula "43") (term "1"))
             (builtin "One Step Simplification" (formula "43"))
             (builtin "Use Operation Contract" (formula "43") (newnames "heapBefore_getOrder,result_53,exc_69,heapAfter_getOrder,anon_heap_getOrder") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
            (branch "Post (getOrder)"
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "19")))
                (builtin "One Step Simplification" (formula "36"))
                (builtin "One Step Simplification" (formula "35"))
                (builtin "One Step Simplification" (formula "47"))
               (rule "andLeft" (formula "35"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,1,0") (ifseqformula "35"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "39"))
               (rule "notLeft" (formula "43"))
               (rule "andLeft" (formula "39"))
               (rule "notLeft" (formula "39"))
               (rule "notLeft" (formula "39"))
               (rule "eqSymm" (formula "38"))
               (rule "replace_known_right" (formula "37") (term "0,1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "45")))
               (rule "assignment" (formula "55") (term "1"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "applyEq" (formula "42") (term "4") (ifseqformula "36"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_0"))
               (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
               (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
               (rule "hideAuxiliaryEq" (formula "38"))
               (rule "eqSymm" (formula "38"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_math_BigInteger_value_0"))
               (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "46")) (ifInst ""  (formula "45")))
               (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
               (rule "hideAuxiliaryEq" (formula "38"))
               (rule "eqSymm" (formula "38"))
               (rule "applyEq" (formula "62") (term "0,1,0,1") (ifseqformula "38"))
               (rule "eqSymm" (formula "62") (term "1,0,1"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "41"))
               (rule "true_left" (formula "41"))
               (rule "commute_and_2" (formula "60") (term "0,1"))
               (rule "commute_and" (formula "60") (term "0,0,1"))
               (rule "methodCallReturn" (formula "53") (term "1"))
               (rule "assignment" (formula "53") (term "1"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "methodCallEmpty" (formula "53") (term "1"))
               (rule "blockEmpty" (formula "53") (term "1"))
               (rule "assignment" (formula "53") (term "1"))
                (builtin "One Step Simplification" (formula "53"))
                (builtin "Use Operation Contract" (formula "53") (newnames "heapBefore_mod,result_54,exc_70,heapAfter_mod,anon_heap_mod") (contract "java.math.BigInteger[java.math.BigInteger::mod(java.math.BigInteger)].JML normal_behavior operation contract.0"))
               (branch "Post (mod)"
                   (builtin "One Step Simplification" (formula "57"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                   (builtin "One Step Simplification" (formula "43"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1,1") (ifseqformula "35"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "35"))
                  (rule "andLeft" (formula "45"))
                  (rule "andLeft" (formula "43"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,1,0") (ifseqformula "43"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,1,0") (ifseqformula "35"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "45"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "45"))
                  (rule "andLeft" (formula "46"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "48"))
                  (rule "andLeft" (formula "47"))
                  (rule "notLeft" (formula "50"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "47"))
                  (rule "notLeft" (formula "48"))
                  (rule "notLeft" (formula "47"))
                  (rule "orRight" (formula "55"))
                  (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "37")))
                  (rule "true_left" (formula "54"))
                  (rule "replace_known_right" (formula "44") (term "0,0,1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                  (rule "assignment" (formula "68") (term "1"))
                   (builtin "One Step Simplification" (formula "68"))
                  (rule "blockEmpty" (formula "68") (term "1"))
                  (rule "applyEq" (formula "51") (term "5") (ifseqformula "50"))
                  (rule "jmod_axiom" (formula "45") (term "1"))
                  (rule "polySimp_mulComm1" (formula "45") (term "1,1"))
                  (rule "polySimp_homoEq" (formula "45"))
                  (rule "polySimp_addComm1" (formula "45") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                  (rule "polySimp_elimOne" (formula "45") (term "0"))
                  (rule "pullOutSelect" (formula "45") (term "0,1,1") (inst "selectSK=java_math_BigInteger_value_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "43"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "35"))
                  (rule "replace_known_right" (formula "45") (term "1,0,0,0") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "55")))
                  (rule "applyEqReverse" (formula "46") (term "0,1,1") (ifseqformula "45"))
                  (rule "hideAuxiliaryEq" (formula "45"))
                  (rule "polySimp_addComm0" (formula "45") (term "1"))
                  (rule "pullOutSelect" (formula "45") (term "1,0,0") (inst "selectSK=java_math_BigInteger_value_2"))
                  (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "45"))
                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "43"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "59")))
                  (rule "replaceKnownSelect_taclet00000_5" (formula "45") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_6" (formula "45") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "35"))
                  (rule "replace_known_left" (formula "45") (term "1,0,0,0") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "58")))
                  (rule "applyEqReverse" (formula "46") (term "1,0,0") (ifseqformula "45"))
                  (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "45"))
                  (rule "hideAuxiliaryEq" (formula "45"))
                  (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=java_math_BigInteger_value_3"))
                  (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "45"))
                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "43"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "73")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "35"))
                  (rule "replace_known_left" (formula "45") (term "0,0,0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "73")) (ifInst ""  (formula "23")))
                  (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                  (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                  (rule "hideAuxiliaryEq" (formula "45"))
                  (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_math_BigInteger_value_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "55")))
                  (rule "ifthenelse_negated" (formula "52") (term "0"))
                  (rule "applyEq" (formula "52") (term "1") (ifseqformula "53"))
                  (rule "ifEqualsInteger" (formula "52"))
                  (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                  (rule "applyEq" (formula "53") (term "1,0,1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "1,0,0,0,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,1,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "24")) (ifInst ""  (formula "29")))
                  (rule "true_left" (formula "52"))
                  (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "notLeft" (formula "46"))
                  (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_math_BigInteger_value_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "43"))
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "55")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0") (ifseqformula "35"))
                  (rule "ifthenelse_negated" (formula "46") (term "0"))
                  (rule "applyEqRigid" (formula "46") (term "1") (ifseqformula "47"))
                  (rule "ifEqualsInteger" (formula "46"))
                  (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                  (rule "applyEq" (formula "47") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "47") (term "1,0,1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "47") (term "1,0,0,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "47") (term "1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "47") (term "1,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "47") (term "1,0,1,0,0,1") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet000000_16" (formula "1") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_17" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,1,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,0,0,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "1,0,1,0,0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "29")))
                  (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_math_BigInteger_value_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "68")) (ifInst ""  (formula "29")))
                  (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "46"))
                  (rule "hideAuxiliaryEq" (formula "46"))
                  (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "49"))
                  (rule "replaceKnownSelect_taclet000000_18" (formula "49") (term "0,1"))
                  (rule "replaceKnownSelect_taclet000000_19" (formula "49") (term "0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_20" (formula "49") (term "0,0,0"))
                  (rule "andLeft" (formula "49"))
                  (rule "notLeft" (formula "49"))
                  (rule "returnUnfold" (formula "67") (term "1") (inst "#v0=e"))
                  (rule "variableDeclarationAssign" (formula "67") (term "1"))
                  (rule "variableDeclaration" (formula "67") (term "1") (newnames "e_1"))
                  (rule "jdiv_axiom" (formula "45") (term "0,0"))
                  (rule "eqSymm" (formula "45"))
                  (rule "inEqSimp_contradInEq0" (formula "45") (term "0,0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "45") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "eqSymm" (formula "45"))
                  (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "45"))
                  (rule "polySimp_mulComm1" (formula "46") (term "0"))
                  (rule "polySimp_homoEq" (formula "46"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "46"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1"))
                  (rule "polySimp_rightDist" (formula "46") (term "1"))
                  (rule "polySimp_mulAssoc" (formula "46") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "46") (term "0,1"))
                   (builtin "Use Operation Contract" (formula "68") (newnames "heapBefore_multiply,result_55,exc_71,heapAfter_multiply,anon_heap_multiply") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
                  (branch "Post (multiply)"
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")))
                      (builtin "One Step Simplification" (formula "56"))
                      (builtin "One Step Simplification" (formula "72"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,1") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,1") (ifseqformula "35"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "35"))
                     (rule "andLeft" (formula "57"))
                     (rule "andLeft" (formula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,1,0") (ifseqformula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,1,0") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,1,0") (ifseqformula "35"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "57"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "57"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "60"))
                     (rule "andLeft" (formula "58"))
                     (rule "notLeft" (formula "62"))
                     (rule "andLeft" (formula "58"))
                     (rule "notLeft" (formula "58"))
                     (rule "notLeft" (formula "58"))
                     (rule "orRight" (formula "66"))
                     (rule "orRight" (formula "66"))
                     (rule "replace_known_right" (formula "65") (term "1,0") (ifseqformula "71"))
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "70")) (ifInst ""  (formula "44")))
                     (rule "true_left" (formula "65"))
                     (rule "replace_known_right" (formula "56") (term "1,0,0,1") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "68")) (ifInst ""  (formula "65")) (ifInst ""  (formula "67")))
                     (rule "assignment" (formula "83") (term "1"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "applyEq" (formula "62") (term "5") (ifseqformula "61"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "63"))
                     (rule "true_left" (formula "63"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "57"))
                     (rule "true_left" (formula "57"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "59"))
                     (rule "true_left" (formula "59"))
                     (rule "methodCallReturn" (formula "80") (term "1"))
                     (rule "assignment" (formula "80") (term "1"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "methodCallEmpty" (formula "80") (term "1"))
                     (rule "tryEmpty" (formula "80") (term "1"))
                     (rule "emptyModality" (formula "80") (term "1"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "notRight" (formula "80"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "applyEq" (formula "45") (term "1,2") (ifseqformula "1"))
                     (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "80") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "64") (term "4") (ifseqformula "2"))
                     (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "89") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "4"))
                     (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0,0") (ifseqformula "47"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,0") (ifseqformula "39"))
                     (rule "replace_known_right" (formula "15") (term "1,0,1,0,0") (ifseqformula "68"))
                      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "66")))
                     (rule "applyEq" (formula "5") (term "1,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "69") (term "0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "ifthenelse_negated" (formula "15") (term "0"))
                     (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "67"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "applyEqReverse" (formula "90") (term "0,1,1") (ifseqformula "15"))
                     (rule "hideAuxiliaryEq" (formula "15"))
                     (rule "div_axiom" (formula "48") (term "0,1") (inst "quotient=quotient_0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "0,2,1,1"))
                     (rule "polySimp_addComm1" (formula "48") (term "1,2,1,1"))
                     (rule "polySimp_addComm1" (formula "48") (term "1,1,1,1"))
                     (rule "commute_and" (formula "48") (term "0,1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "2") (ifseqformula "22"))
                     (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "80")))
                     (rule "true_left" (formula "44"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "22"))
                     (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                     (rule "true_left" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "22"))
                     (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "77")))
                     (rule "true_left" (formula "5"))
                     (rule "methodCallWithAssignmentWithinClass" (formula "83") (term "1") (inst "#v0=b"))
                     (rule "variableDeclaration" (formula "83") (term "1") (newnames "b_3"))
                     (rule "methodBodyExpand" (formula "83") (term "1") (newnames "heapBefore_order_0,savedHeapBefore_order_0"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "returnUnfold" (formula "83") (term "1") (inst "#v0=b_4"))
                     (rule "variableDeclarationAssign" (formula "83") (term "1"))
                     (rule "variableDeclaration" (formula "83") (term "1") (newnames "b_4"))
                     (rule "methodCallWithAssignmentUnfoldTarget" (formula "83") (term "1") (inst "#v0=s"))
                     (rule "variableDeclaration" (formula "83") (term "1") (newnames "s_1"))
                     (rule "assignment_read_attribute_this" (formula "83") (term "1"))
                      (builtin "One Step Simplification" (formula "83"))
                      (builtin "Use Operation Contract" (formula "83") (newnames "heapBefore_getOrder_0,result_56,exc_72,heapAfter_getOrder_0,anon_heap_getOrder_0") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
                     (branch "Post (getOrder)"
                         (builtin "One Step Simplification" (formula "87"))
                         (builtin "One Step Simplification" (formula "68"))
                         (builtin "One Step Simplification" (formula "67"))
                         (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "16")))
                        (rule "andLeft" (formula "67"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1,0") (ifseqformula "67"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "70"))
                        (rule "andLeft" (formula "70"))
                        (rule "andLeft" (formula "71"))
                        (rule "andLeft" (formula "71"))
                        (rule "andLeft" (formula "73"))
                        (rule "andLeft" (formula "71"))
                        (rule "notLeft" (formula "75"))
                        (rule "andLeft" (formula "71"))
                        (rule "notLeft" (formula "71"))
                        (rule "notLeft" (formula "71"))
                        (rule "eqSymm" (formula "70"))
                        (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "77"))
                         (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "76")))
                        (rule "assignment" (formula "95") (term "1"))
                         (builtin "One Step Simplification" (formula "95"))
                        (rule "applyEq" (formula "74") (term "4") (ifseqformula "68"))
                        (rule "pullOutSelect" (formula "70") (term "1") (inst "selectSK=java_math_BigInteger_value_7"))
                        (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "67"))
                         (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "78")) (ifInst ""  (formula "77")))
                        (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "67"))
                         (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "91")) (ifInst ""  (formula "9")))
                        (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "71"))
                        (rule "hideAuxiliaryEq" (formula "71"))
                        (rule "eqSymm" (formula "70"))
                        (rule "applyEq" (formula "102") (term "0,0,0,0,1") (ifseqformula "70"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "75"))
                        (rule "true_left" (formula "75"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "methodCallReturn" (formula "93") (term "1"))
                        (rule "assignment" (formula "93") (term "1"))
                         (builtin "One Step Simplification" (formula "93"))
                        (rule "methodCallEmpty" (formula "93") (term "1"))
                        (rule "blockEmpty" (formula "93") (term "1"))
                        (rule "assignment" (formula "93") (term "1"))
                         (builtin "One Step Simplification" (formula "93"))
                         (builtin "Use Operation Contract" (formula "93") (newnames "heapBefore_mod_0,result_57,exc_73,heapAfter_mod_0,anon_heap_mod_0") (contract "java.math.BigInteger[java.math.BigInteger::mod(java.math.BigInteger)].JML normal_behavior operation contract.0"))
                        (branch "Post (mod)"
                            (builtin "One Step Simplification" (formula "97"))
                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "79")) (ifInst ""  (formula "79")))
                            (builtin "One Step Simplification" (formula "76"))
                            (builtin "One Step Simplification" (formula "75"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "1,1") (ifseqformula "67"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "67"))
                           (rule "andLeft" (formula "77"))
                           (rule "andLeft" (formula "75"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,1,0") (ifseqformula "75"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,1,1,0") (ifseqformula "67"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "76"))
                           (rule "andLeft" (formula "77"))
                           (rule "andLeft" (formula "76"))
                           (rule "andLeft" (formula "77"))
                           (rule "andLeft" (formula "78"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "79"))
                           (rule "andLeft" (formula "81"))
                           (rule "andLeft" (formula "79"))
                           (rule "notLeft" (formula "83"))
                           (rule "andLeft" (formula "79"))
                           (rule "notLeft" (formula "80"))
                           (rule "notLeft" (formula "79"))
                           (rule "orRight" (formula "87"))
                           (rule "replace_known_left" (formula "86") (term "1") (ifseqformula "69"))
                            (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "90")))
                           (rule "true_left" (formula "86"))
                           (rule "replace_known_right" (formula "76") (term "0,0,1") (ifseqformula "86"))
                            (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "88")) (ifInst ""  (formula "87")))
                           (rule "assignment" (formula "108") (term "1"))
                            (builtin "One Step Simplification" (formula "108"))
                           (rule "blockEmpty" (formula "108") (term "1"))
                           (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                           (rule "jmod_axiom" (formula "77") (term "1"))
                           (rule "polySimp_mulComm1" (formula "77") (term "1,1"))
                           (rule "polySimp_homoEq" (formula "77"))
                           (rule "polySimp_addComm1" (formula "77") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "77"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                           (rule "polySimp_elimOne" (formula "77") (term "0"))
                           (rule "pullOutSelect" (formula "77") (term "0,1") (inst "selectSK=java_math_BigInteger_value_8"))
                           (rule "applyEq" (formula "78") (term "0,0,0") (ifseqformula "77"))
                           (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "75"))
                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "111")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "67"))
                           (rule "replace_known_left" (formula "77") (term "0,0,0,0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "77"))
                           (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "111")) (ifInst ""  (formula "20")))
                           (rule "applyEqReverse" (formula "78") (term "0,1") (ifseqformula "77"))
                           (rule "applyEqReverse" (formula "78") (term "0,0,0") (ifseqformula "77"))
                           (rule "hideAuxiliaryEq" (formula "77"))
                           (rule "pullOutSelect" (formula "77") (term "0,1,1") (inst "selectSK=java_math_BigInteger_value_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "75"))
                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "89")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "67"))
                           (rule "replace_known_right" (formula "77") (term "0,0,0,0") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "88")))
                           (rule "applyEqReverse" (formula "78") (term "0,1,1") (ifseqformula "77"))
                           (rule "hideAuxiliaryEq" (formula "77"))
                           (rule "polySimp_addComm0" (formula "77") (term "1"))
                           (rule "pullOutSelect" (formula "77") (term "1,0,0") (inst "selectSK=java_math_BigInteger_value_10"))
                           (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "77"))
                           (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "75"))
                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "91")))
                           (rule "replaceKnownSelect_taclet00000000_27" (formula "77") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00000000_29" (formula "77") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "67"))
                           (rule "replace_known_left" (formula "77") (term "1,0,0,0") (ifseqformula "69"))
                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "90")))
                           (rule "applyEqReverse" (formula "78") (term "1,0") (ifseqformula "77"))
                           (rule "applyEqReverse" (formula "78") (term "1,0,0") (ifseqformula "77"))
                           (rule "hideAuxiliaryEq" (formula "77"))
                           (rule "applyEq" (formula "77") (term "1,0,0") (ifseqformula "70"))
                           (rule "polySimp_mulComm0" (formula "77") (term "0"))
                           (rule "applyEq" (formula "77") (term "0,0") (ifseqformula "70"))
                           (rule "polySimp_mulComm0" (formula "77") (term "0"))
                           (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "84"))
                           (rule "andLeft" (formula "84"))
                           (rule "notLeft" (formula "84"))
                           (rule "pullOutSelect" (formula "84") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                           (rule "applyEq" (formula "87") (term "0") (ifseqformula "84"))
                           (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "84"))
                           (rule "applyEqReverse" (formula "87") (term "0") (ifseqformula "84"))
                           (rule "applyEqReverse" (formula "85") (term "1,0") (ifseqformula "84"))
                           (rule "hideAuxiliaryEq" (formula "84"))
                           (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=java_math_BigInteger_value_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "107")) (ifInst ""  (formula "36")))
                           (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "84"))
                           (rule "hideAuxiliaryEq" (formula "84"))
                           (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "78"))
                           (rule "andLeft" (formula "78"))
                           (rule "notLeft" (formula "78"))
                           (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=java_math_BigInteger_value_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "78") (ifseqformula "75"))
                            (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "86")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,0,0") (ifseqformula "67"))
                           (rule "ifthenelse_negated" (formula "78") (term "0"))
                           (rule "applyEq" (formula "78") (term "1") (ifseqformula "79"))
                           (rule "ifEqualsInteger" (formula "78"))
                           (rule "pullOutSelect" (formula "86") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_3"))
                           (rule "applyEq" (formula "79") (term "1,0,1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "79") (term "1,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "79") (term "1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "79") (term "1,0,1,0,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "79") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "79") (term "1,0,0,0,0,1") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet000000000_38" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000000_39" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "87") (term "0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "79") (term "1,0,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "79") (term "1,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "79") (term "1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "79") (term "1,0,1,0,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "79") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "replaceKnownSelect_taclet000000000_40" (formula "79") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000000_41" (formula "79") (term "0,1,0"))
                           (rule "applyEqReverse" (formula "79") (term "1,0,0,0,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_left" (formula "78") (term "1,0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                           (rule "true_left" (formula "78"))
                           (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "81"))
                           (rule "replaceKnownSelect_taclet000000000_42" (formula "81") (term "0,1"))
                           (rule "replaceKnownSelect_taclet000000000_43" (formula "81") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000000_44" (formula "81") (term "0,0,0"))
                           (rule "andLeft" (formula "81"))
                           (rule "notLeft" (formula "81"))
                           (rule "returnUnfold" (formula "106") (term "1") (inst "#v0=e"))
                           (rule "variableDeclarationAssign" (formula "106") (term "1"))
                           (rule "variableDeclaration" (formula "106") (term "1") (newnames "e_2"))
                           (rule "jdiv_axiom" (formula "77") (term "0,0"))
                           (rule "eqSymm" (formula "77"))
                           (rule "inEqSimp_contradInEq0" (formula "77") (term "0,0") (ifseqformula "11"))
                           (rule "qeq_literals" (formula "77") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "77"))
                           (rule "eqSymm" (formula "77"))
                           (rule "applyEq" (formula "78") (term "0,0") (ifseqformula "77"))
                           (rule "polySimp_mulComm1" (formula "78") (term "0"))
                           (rule "polySimp_homoEq" (formula "78"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "78") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "78"))
                           (rule "polySimp_mulComm0" (formula "78") (term "1"))
                           (rule "polySimp_rightDist" (formula "78") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "78") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "78") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "78") (term "0,1"))
                            (builtin "Use Operation Contract" (formula "107") (newnames "heapBefore_multiply_0,result_58,exc_74,heapAfter_multiply_0,anon_heap_multiply_0") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
                           (branch "Post (multiply)"
                               (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "91")) (ifInst ""  (formula "91")))
                               (builtin "One Step Simplification" (formula "87"))
                               (builtin "One Step Simplification" (formula "111"))
                               (builtin "One Step Simplification" (formula "86"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,1") (ifseqformula "75"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,1,1") (ifseqformula "67"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "75"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "67"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "86"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,1,0") (ifseqformula "86"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,1,1,0") (ifseqformula "75"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,1,1,0") (ifseqformula "67"))
                              (rule "andLeft" (formula "90"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "90"))
                              (rule "andLeft" (formula "89"))
                              (rule "notLeft" (formula "92"))
                              (rule "andLeft" (formula "89"))
                              (rule "andLeft" (formula "89"))
                              (rule "notLeft" (formula "89"))
                              (rule "notLeft" (formula "89"))
                              (rule "orRight" (formula "97"))
                              (rule "orRight" (formula "97"))
                              (rule "replace_known_left" (formula "96") (term "1") (ifseqformula "76"))
                               (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
                              (rule "true_left" (formula "96"))
                              (rule "replace_known_right" (formula "87") (term "0,0,0,1") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "99")) (ifInst ""  (formula "97")) (ifInst ""  (formula "98")))
                              (rule "assignment" (formula "122") (term "1"))
                               (builtin "One Step Simplification" (formula "122"))
                              (rule "applyEq" (formula "93") (term "5") (ifseqformula "92"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "94"))
                              (rule "true_left" (formula "94"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "88"))
                              (rule "true_left" (formula "88"))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "90"))
                              (rule "true_left" (formula "90"))
                              (rule "methodCallReturn" (formula "119") (term "1"))
                              (rule "assignment" (formula "119") (term "1"))
                               (builtin "One Step Simplification" (formula "119"))
                              (rule "methodCallEmpty" (formula "119") (term "1"))
                              (rule "tryEmpty" (formula "119") (term "1"))
                              (rule "emptyModality" (formula "119") (term "1"))
                               (builtin "One Step Simplification" (formula "119"))
                              (rule "notRight" (formula "119"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEq" (formula "11") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "92") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "115") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "99") (term "1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "77") (term "1,2") (ifseqformula "1"))
                              (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "4"))
                              (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1,0,0") (ifseqformula "79"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,1,0,0") (ifseqformula "71"))
                              (rule "replace_known_right" (formula "19") (term "1,0,1,0,0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "97") (term "1,0") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "19") (term "0,0,1,0,0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "93") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "95") (term "4") (ifseqformula "2"))
                              (rule "applyEq" (formula "98") (term "1,0") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "19") (term "0,1,0,0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "ifthenelse_negated" (formula "19") (term "0"))
                              (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "127") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "100") (term "0") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "100"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEqReverse" (formula "129") (term "1,1,1") (ifseqformula "19"))
                              (rule "hideAuxiliaryEq" (formula "19"))
                              (rule "eqSymm" (formula "128") (term "1,1"))
                              (rule "applyEq" (formula "116") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "1"))
                              (rule "div_axiom" (formula "80") (term "0,1") (inst "quotient=quotient_1"))
                              (rule "polySimp_mulComm0" (formula "80") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "80") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "80") (term "0,1,1,1"))
                              (rule "polySimp_addComm1" (formula "80") (term "1,2,1,1"))
                              (rule "polySimp_addComm1" (formula "80") (term "1,1,1,1"))
                              (rule "commute_and" (formula "80") (term "0,1"))
                              (rule "ifthenelse_split_for" (formula "51") (term "1,1"))
                              (branch " result_53.value@anon_heap_getOrder<<anonHeapFunction>> >= 0 TRUE"
                                 (rule "cnf_rightDist" (formula "52"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "cnf_rightDist" (formula "52"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "ifthenelse_split_for" (formula "83") (term "1,1"))
                                 (branch " result_56.value@anon_heap_getOrder_0<<anonHeapFunction>> >= 0 TRUE"
                                    (rule "cnf_rightDist" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "commute_or" (formula "85"))
                                    (rule "cnf_rightDist" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "commute_or" (formula "85"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0") (ifseqformula "19"))
                                    (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "122"))
                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")))
                                    (rule "true_left" (formula "11"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,0") (ifseqformula "19"))
                                    (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "124"))
                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
                                    (rule "true_left" (formula "11"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "2") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "79") (term "1") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "125")))
                                    (rule "true_left" (formula "79"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "19"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                    (rule "true_left" (formula "1"))
                                    (rule "cut_direct" (formula "135") (term "0"))
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEq" (formula "87") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "58") (term "0,1,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "87") (term "0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "91") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "55") (term "0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "56") (term "0,0,0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "89") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "88") (term "0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "polySimp_homoEq" (formula "58"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,0"))
                                       (rule "applyEq" (formula "87") (term "1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "89") (term "1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "88") (term "0,1,0,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "59") (term "0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "59") (term "0") (ifseqformula "90"))
                                       (rule "polySimp_homoEq" (formula "59"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                       (rule "polySimp_addComm1" (formula "59") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "59") (term "0"))
                                       (rule "add_literals" (formula "59") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "59") (term "1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0"))
                                       (rule "applyEq" (formula "58") (term "0,0,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "58") (term "0"))
                                       (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "89"))
                                       (rule "polySimp_pullOutFactor1" (formula "58") (term "0"))
                                       (rule "add_literals" (formula "58") (term "1,0"))
                                       (rule "times_zero_1" (formula "58") (term "0"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "true_left" (formula "58"))
                                       (rule "polySimp_sepNegMonomial" (formula "58"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "0"))
                                       (rule "applyEq" (formula "89") (term "0,1") (ifseqformula "58"))
                                       (rule "div_axiom" (formula "89") (term "0,0") (inst "quotient=quotient_2"))
                                       (rule "replace_known_left" (formula "89") (term "0,1,1") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "1,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "89") (term "1,1,1"))
                                       (rule "cnf_rightDist" (formula "89"))
                                       (rule "andLeft" (formula "89"))
                                       (rule "commute_or" (formula "90"))
                                       (rule "cnf_rightDist" (formula "89"))
                                       (rule "andLeft" (formula "89"))
                                       (rule "commute_or" (formula "90"))
                                       (rule "div_axiom" (formula "56") (term "0,1") (inst "quotient=quotient_3"))
                                       (rule "replace_known_left" (formula "56") (term "0,1,1") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,1,1,1"))
                                       (rule "polySimp_addComm1" (formula "56") (term "1,1,1"))
                                       (rule "cnf_rightDist" (formula "56"))
                                       (rule "andLeft" (formula "56"))
                                       (rule "commute_or" (formula "57"))
                                       (rule "cnf_rightDist" (formula "56"))
                                       (rule "andLeft" (formula "56"))
                                       (rule "commute_or" (formula "57"))
                                       (rule "jdiv_axiom" (formula "91") (term "0"))
                                       (rule "eqSymm" (formula "91"))
                                       (rule "applyEq" (formula "91") (term "1") (ifseqformula "92"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "eqSymm" (formula "91") (term "1"))
                                       (rule "polySimp_homoEq" (formula "91") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "91") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "91") (term "1,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "91") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "91") (term "0,0") (ifseqformula "19"))
                                       (rule "qeq_literals" (formula "91") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "true_left" (formula "91"))
                                       (rule "cut_direct" (formula "55") (term "0"))
                                       (branch "CUT: result_53.value@anon_heap_getOrder<<anonHeapFunction>> = 0 TRUE"
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "88"))
                                          (rule "true_left" (formula "88"))
                                          (rule "replace_known_left" (formula "91") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "91"))
                                          (rule "true_left" (formula "91"))
                                          (rule "replace_known_left" (formula "87") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "true_left" (formula "87"))
                                          (rule "replace_known_left" (formula "89") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "89"))
                                          (rule "true_left" (formula "89"))
                                          (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "replace_known_left" (formula "86") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "86"))
                                          (rule "true_left" (formula "86"))
                                          (rule "replace_known_left" (formula "87") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "true_left" (formula "87"))
                                          (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                                          (rule "qeq_literals" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "applyEq" (formula "83") (term "1,0,0") (ifseqformula "54"))
                                          (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "54"))
                                          (rule "times_zero_1" (formula "83") (term "0"))
                                          (rule "polySimp_homoEq" (formula "83"))
                                          (rule "mul_literals" (formula "83") (term "1,0"))
                                          (rule "add_zero_right" (formula "83") (term "0"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "54"))
                                          (rule "applyEq" (formula "75") (term "1") (ifseqformula "54"))
                                          (rule "applyEq" (formula "47") (term "1") (ifseqformula "54"))
                                          (rule "applyEq" (formula "82") (term "1,0,1") (ifseqformula "54"))
                                          (rule "polySimp_sepNegMonomial" (formula "83"))
                                          (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                          (rule "polySimp_elimOne" (formula "83") (term "0"))
                                          (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "83"))
                                          (rule "eqSymm" (formula "82"))
                                          (rule "polySimp_homoEq" (formula "82"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,0"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,0"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "83"))
                                          (rule "applyEq" (formula "82") (term "0,0,1,0") (ifseqformula "83"))
                                          (rule "polySimp_addComm0" (formula "82") (term "0"))
                                          (rule "applyEq" (formula "2") (term "1") (ifseqformula "83"))
                                          (rule "polySimp_sepPosMonomial" (formula "82"))
                                          (rule "jdiv_axiom" (formula "82") (term "0"))
                                          (rule "eqSymm" (formula "82"))
                                          (rule "applyEq" (formula "82") (term "1") (ifseqformula "83"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "eqSymm" (formula "82") (term "1"))
                                          (rule "polySimp_homoEq" (formula "82") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,0,1"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "82") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "82") (term "0,0") (ifseqformula "19"))
                                          (rule "qeq_literals" (formula "82") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                          (rule "div_axiom" (formula "82") (term "0,1") (inst "quotient=quotient_4"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "true_left" (formula "82"))
                                          (rule "Use_information_flow_contract_for_getOrder_757678341_00000_2" (formula "78") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "replaceKnownSelect_taclet00000_5" (formula "78") (term "1,1,1,1"))
                                          (rule "replaceKnownSelect_taclet00000000_27" (formula "78") (term "0,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000_6" (formula "78") (term "1,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000_29" (formula "78") (term "0,1,1,1"))
                                          (rule "eqSymm" (formula "78") (term "0,1,1"))
                                          (rule "applyEq" (formula "78") (term "1,1,0,1,1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "78") (term "0,0,1,1") (ifseqformula "47"))
                                          (rule "eqSymm" (formula "78") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "78") (term "0,1,1") (ifseqformula "75"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "applyEq" (formula "78") (term "0,1,1") (ifseqformula "75"))
                                          (rule "eqSymm" (formula "78") (term "1,1"))
                                          (rule "replace_known_left" (formula "78") (term "1,1") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "78") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "78") (term "0"))
                                           (builtin "One Step Simplification" (formula "78"))
                                          (rule "applyEq" (formula "89") (term "1") (ifseqformula "78"))
                                          (rule "applyEq" (formula "79") (term "3") (ifseqformula "78"))
                                          (rule "applyEq" (formula "77") (term "0,0") (ifseqformula "78"))
                                          (rule "applyEq" (formula "105") (term "1,0") (ifseqformula "77"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "77"))
                                          (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "77"))
                                          (rule "applyEq" (formula "106") (term "0") (ifseqformula "77"))
                                          (rule "applyEq" (formula "74") (term "1,0") (ifseqformula "77"))
                                          (rule "Use_information_flow_contract_for_multiply_1272441881_0000000_23" (formula "96") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "105")) (ifInst ""  (formula "113")))
                                          (rule "replaceKnownSelect_taclet0000000000_46" (formula "96") (term "0,1,1,1"))
                                          (rule "replaceKnownSelect_taclet0000000_24" (formula "96") (term "1,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000000_47" (formula "96") (term "0,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_25" (formula "96") (term "1,1,1,1"))
                                          (rule "replaceKnownSelect_taclet000000000_34" (formula "96") (term "0,1,0,1,1"))
                                          (rule "replaceKnownSelect_taclet000000_8" (formula "96") (term "1,1,0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000000_35" (formula "96") (term "0,1,0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_9" (formula "96") (term "1,1,0,1,1"))
                                          (rule "eqSymm" (formula "96") (term "0,1"))
                                          (rule "replace_known_left" (formula "96") (term "1,0,1,1") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "130")))
                                          (rule "pullOutSelect" (formula "96") (term "1,0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "127")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0") (ifseqformula "44"))
                                          (rule "replace_known_left" (formula "96") (term "0,0,0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "96"))
                                          (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "127")) (ifInst ""  (formula "31")))
                                          (rule "applyEqReverse" (formula "97") (term "1,0,1,1") (ifseqformula "96"))
                                          (rule "hideAuxiliaryEq" (formula "96"))
                                          (rule "applyEq" (formula "96") (term "1,0,1,1") (ifseqformula "3"))
                                          (rule "pullOutSelect" (formula "96") (term "0,0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "125")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0") (ifseqformula "72"))
                                          (rule "eqSymm" (formula "97") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "96") (term "0,0,0,0") (ifseqformula "25"))
                                           (builtin "One Step Simplification" (formula "96"))
                                          (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "72"))
                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "125")) (ifInst ""  (formula "25")))
                                          (rule "applyEqReverse" (formula "97") (term "1,0,1,1") (ifseqformula "96"))
                                           (builtin "One Step Simplification" (formula "97"))
                                          (rule "notLeft" (formula "97"))
                                          (rule "hideAuxiliaryEq" (formula "96"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "98") (term "0"))
                                           (builtin "One Step Simplification" (formula "98"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "98"))
                                          (rule "closeTrue" (formula "98"))
                                       )
                                       (branch "CUT: result_53.value@anon_heap_getOrder<<anonHeapFunction>> = 0 FALSE"
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_right" (formula "90") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "90"))
                                          (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "replace_known_right" (formula "94") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "94"))
                                          (rule "replace_known_right" (formula "92") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "92"))
                                          (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "replace_known_right" (formula "93") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "93"))
                                          (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "89") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "89"))
                                          (rule "replace_known_right" (formula "88") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "88"))
                                          (rule "applyEq" (formula "92") (term "0") (ifseqformula "56"))
                                          (rule "eqSymm" (formula "92"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "89"))
                                          (rule "eqSymm" (formula "59"))
                                          (rule "applyEq" (formula "95") (term "0,0") (ifseqformula "56"))
                                          (rule "polySimp_mulComm0" (formula "95") (term "0"))
                                          (rule "applyEq" (formula "89") (term "0") (ifseqformula "56"))
                                          (rule "eqSymm" (formula "89"))
                                          (rule "applyEqRigid" (formula "94") (term "1,0") (ifseqformula "92"))
                                          (rule "applyEqRigid" (formula "93") (term "1,0") (ifseqformula "92"))
                                          (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "56"))
                                          (rule "applyEqRigid" (formula "88") (term "1,0") (ifseqformula "89"))
                                          (rule "applyEqRigid" (formula "60") (term "1,0") (ifseqformula "59"))
                                          (rule "applyEqRigid" (formula "88") (term "1,0") (ifseqformula "87"))
                                          (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "59"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "90"))
                                          (rule "inEqSimp_homoInEq0" (formula "57"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                          (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "57") (term "0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0"))
                                          (rule "add_zero_right" (formula "57") (term "0"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "90"))
                                          (rule "inEqSimp_homoInEq1" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "58") (term "0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0"))
                                          (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "87"))
                                          (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "87"))
                                          (rule "inEqSimp_invertInEq1" (formula "57"))
                                          (rule "mul_literals" (formula "57") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "54") (ifseqformula "105"))
                                          (rule "add_zero_right" (formula "54") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "105") (ifseqformula "54"))
                                          (rule "times_zero_1" (formula "105") (term "1,0,0"))
                                          (rule "add_literals" (formula "105") (term "0,0"))
                                          (rule "leq_literals" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "false_right" (formula "105"))
                                          (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "57"))
                                          (rule "add_zero_right" (formula "58") (term "0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "0"))
                                          (rule "mul_literals" (formula "58") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                          (rule "mul_literals" (formula "58") (term "1"))
                                          (rule "Use_information_flow_contract_for_getOrder_757678341_00000000_26" (formula "83") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "83"))
                                          (rule "replaceKnownSelect_taclet00000_5" (formula "83") (term "1,1,1,1"))
                                          (rule "replaceKnownSelect_taclet00000000_27" (formula "83") (term "0,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000_6" (formula "83") (term "1,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000_29" (formula "83") (term "0,1,1,1"))
                                          (rule "eqSymm" (formula "83") (term "0,1,1"))
                                          (rule "applyEq" (formula "83") (term "1,1,0,1,1,1") (ifseqformula "5"))
                                          (rule "replace_known_left" (formula "83") (term "1,1,1") (ifseqformula "80"))
                                           (builtin "One Step Simplification" (formula "83"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "83") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "83"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "83") (term "0"))
                                           (builtin "One Step Simplification" (formula "83"))
                                          (rule "applyEq" (formula "114") (term "0") (ifseqformula "83"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "83"))
                                          (rule "applyEq" (formula "113") (term "1,0") (ifseqformula "83"))
                                          (rule "applyEq" (formula "96") (term "1") (ifseqformula "83"))
                                          (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "83"))
                                          (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "83"))
                                          (rule "applyEq" (formula "84") (term "3") (ifseqformula "83"))
                                          (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "83"))
                                          (rule "Use_information_flow_contract_for_multiply_1272441881_0000000_23" (formula "103") (ifseqformula "74"))
                                           (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "112")) (ifInst ""  (formula "120")))
                                          (rule "replaceKnownSelect_taclet0000000000_46" (formula "103") (term "0,1,1,1"))
                                          (rule "replaceKnownSelect_taclet0000000_24" (formula "103") (term "1,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000000_47" (formula "103") (term "0,1,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_25" (formula "103") (term "1,1,1,1"))
                                          (rule "replaceKnownSelect_taclet000000000_34" (formula "103") (term "0,1,0,1,1"))
                                          (rule "replaceKnownSelect_taclet000000_8" (formula "103") (term "1,1,0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000000_35" (formula "103") (term "0,1,0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_9" (formula "103") (term "1,1,0,1,1"))
                                          (rule "eqSymm" (formula "103") (term "0,1"))
                                          (rule "replace_known_left" (formula "103") (term "1,0,1,1") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "137")))
                                          (rule "pullOutSelect" (formula "103") (term "0,0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "85"))
                                           (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "132")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "0,0,0") (ifseqformula "77"))
                                          (rule "eqSymm" (formula "104") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "103") (term "0,0,0,0") (ifseqformula "25"))
                                           (builtin "One Step Simplification" (formula "103"))
                                          (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "77"))
                                           (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "132")) (ifInst ""  (formula "25")))
                                          (rule "applyEqReverse" (formula "104") (term "1,0,1,1") (ifseqformula "103"))
                                          (rule "hideAuxiliaryEq" (formula "103"))
                                          (rule "pullOutSelect" (formula "103") (term "0,0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "134")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "0,0,0") (ifseqformula "44"))
                                          (rule "eqSymm" (formula "104") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "103") (term "0,0,0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "103"))
                                          (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "134")) (ifInst ""  (formula "31")))
                                          (rule "applyEqReverse" (formula "104") (term "1,0,1,1") (ifseqformula "103"))
                                          (rule "hideAuxiliaryEq" (formula "103"))
                                          (rule "eqSymm" (formula "103") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "103") (term "0,1,1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "103"))
                                          (rule "notLeft" (formula "103"))
                                          (rule "applyEq" (formula "55") (term "0") (ifseqformula "90"))
                                          (rule "inEqSimp_homoInEq0" (formula "55"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                          (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "55") (term "0"))
                                          (rule "add_literals" (formula "55") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "55") (term "1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0"))
                                          (rule "inEqSimp_invertInEq1" (formula "55"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                          (rule "mul_literals" (formula "55") (term "1"))
                                          (rule "polySimp_elimOne" (formula "55") (term "0"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "104") (term "1"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "104"))
                                          (rule "closeTrue" (formula "104"))
                                       )
                                    )
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "false_right" (formula "136"))
                                       (rule "definitionOfNewObjectsIsomorphic" (formula "135"))
                                       (branch "New on Heap 1"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "106")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "New on Heap 2"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "115")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Same Types"
                                          (rule "definitionOfSameTypes" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0"))
                                          (rule "castDel" (formula "137") (term "2,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,1,1,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "sameTypeTrue" (formula "138") (ifseqformula "102") (ifseqformula "71"))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Objects Isomorphic"
                                          (rule "definitionOfObjectsIsomorphic" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,0"))
                                          (rule "castDel" (formula "137") (term "1,3,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,1,1,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "definitionOfObjectIsomorphic" (formula "136") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "136"))
                                          (rule "allRight" (formula "136") (inst "sk=i_1"))
                                          (rule "impRight" (formula "136"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "2,1,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "139") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "139"))
                                       )
                                    )
                                 )
                                 (branch " result_56.value@anon_heap_getOrder_0<<anonHeapFunction>> >= 0 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "100"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradEq3" (formula "84") (term "0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "84") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "84") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "84") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "85"))
                                    (rule "polySimp_mulComm0" (formula "88") (term "0"))
                                    (rule "applyEq" (formula "84") (term "0") (ifseqformula "88"))
                                    (rule "inEqSimp_homoInEq0" (formula "84"))
                                    (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "84") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "84") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                    (rule "polySimp_addComm0" (formula "84") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "84") (term "0"))
                                    (rule "add_literals" (formula "84") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "84") (term "1,0"))
                                    (rule "add_zero_right" (formula "84") (term "0"))
                                    (rule "applyEq" (formula "86") (term "0") (ifseqformula "88"))
                                    (rule "inEqSimp_homoInEq1" (formula "86"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                    (rule "polySimp_addComm1" (formula "86") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "86") (term "0"))
                                    (rule "add_literals" (formula "86") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "86") (term "1,0"))
                                    (rule "add_zero_right" (formula "86") (term "0"))
                                    (rule "applyEq" (formula "87") (term "0,1") (ifseqformula "85"))
                                    (rule "inEqSimp_invertInEq1" (formula "84"))
                                    (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                    (rule "mul_literals" (formula "84") (term "1"))
                                    (rule "polySimp_elimOne" (formula "84") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "86") (ifseqformula "84"))
                                    (rule "add_zero_right" (formula "86") (term "0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "0"))
                                    (rule "mul_literals" (formula "86") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "86"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "20"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "125")))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "0") (ifseqformula "20"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "122")))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "2") (ifseqformula "20"))
                                    (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "14")))
                                    (rule "true_left" (formula "80"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "20"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "124"))
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")))
                                    (rule "true_left" (formula "13"))
                                    (rule "cut_direct" (formula "135") (term "0"))
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "57") (term "0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "58") (term "0,0,0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "90") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "92") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "59") (term "0,1,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "60"))
                                       (rule "polySimp_homoEq" (formula "60"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,0"))
                                       (rule "applyEq" (formula "89") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "80") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "60") (term "0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "88"))
                                       (rule "eqSymm" (formula "57") (term "1"))
                                       (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "88"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "0"))
                                       (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "59") (term "0"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "91"))
                                       (rule "polySimp_homoEq" (formula "60"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                       (rule "polySimp_addComm1" (formula "60") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "60") (term "0"))
                                       (rule "add_literals" (formula "60") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "60") (term "1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0"))
                                       (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "90"))
                                       (rule "polySimp_addComm0" (formula "59") (term "0"))
                                       (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "88"))
                                       (rule "polySimp_pullOutFactor2" (formula "59") (term "0"))
                                       (rule "add_literals" (formula "59") (term "1,0"))
                                       (rule "times_zero_1" (formula "59") (term "0"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "polySimp_sepNegMonomial" (formula "59"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "0"))
                                       (rule "applyEq" (formula "86") (term "0") (ifseqformula "59"))
                                       (rule "applyEq" (formula "88") (term "0") (ifseqformula "59"))
                                       (rule "applyEq" (formula "90") (term "0,1") (ifseqformula "59"))
                                       (rule "inEqSimp_contradEq3" (formula "57") (term "0") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "57") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "57") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "57") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "applyEqRigid" (formula "58") (term "1,0,1") (ifseqformula "57"))
                                       (rule "applyEqRigid" (formula "56") (term "1,0,1") (ifseqformula "57"))
                                       (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "90"))
                                       (rule "inEqSimp_homoInEq1" (formula "58") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "58") (term "0,1"))
                                       (rule "add_literals" (formula "58") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "58") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "58") (term "0,1"))
                                       (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "90"))
                                       (rule "inEqSimp_homoInEq0" (formula "56") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "56") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "56") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "56") (term "0,1"))
                                       (rule "add_literals" (formula "56") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "56") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "56") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "58") (term "0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "56") (term "1"))
                                       (rule "times_zero_2" (formula "56") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "56") (term "0,1"))
                                       (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "86"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "true_left" (formula "56"))
                                       (rule "inEqSimp_contradEq3" (formula "57") (term "0") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "57") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "57") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "57") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "55"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "false_right" (formula "136"))
                                       (rule "definitionOfNewObjectsIsomorphic" (formula "135"))
                                       (branch "New on Heap 1"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "106")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "New on Heap 2"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "115")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Same Types"
                                          (rule "definitionOfSameTypes" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0"))
                                          (rule "castDel" (formula "137") (term "2,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "sameTypeTrue" (formula "138") (ifseqformula "102") (ifseqformula "72"))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Objects Isomorphic"
                                          (rule "definitionOfObjectsIsomorphic" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,0"))
                                          (rule "castDel" (formula "137") (term "1,3,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,3,1,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "definitionOfObjectIsomorphic" (formula "136") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "136"))
                                          (rule "allRight" (formula "136") (inst "sk=i_1"))
                                          (rule "impRight" (formula "136"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "2,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "139") (term "0,0,0,0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "139"))
                                       )
                                    )
                                 )
                              )
                              (branch " result_53.value@anon_heap_getOrder<<anonHeapFunction>> >= 0 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "97"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "52") (term "0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "52") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "53"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "0"))
                                 (rule "applyEq" (formula "54") (term "0") (ifseqformula "56"))
                                 (rule "inEqSimp_homoInEq1" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "54") (term "0"))
                                 (rule "add_literals" (formula "54") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "54") (term "1,0"))
                                 (rule "add_zero_right" (formula "54") (term "0"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "56"))
                                 (rule "inEqSimp_homoInEq0" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                 (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0"))
                                 (rule "add_zero_right" (formula "52") (term "0"))
                                 (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "53"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "inEqSimp_invertInEq1" (formula "52"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                 (rule "mul_literals" (formula "52") (term "1"))
                                 (rule "polySimp_elimOne" (formula "52") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "52"))
                                 (rule "add_zero_right" (formula "54") (term "0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "0"))
                                 (rule "mul_literals" (formula "54") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "ifthenelse_split_for" (formula "83") (term "1,1"))
                                 (branch " result_56.value@anon_heap_getOrder_0<<anonHeapFunction>> >= 0 TRUE"
                                    (rule "cnf_rightDist" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "commute_or" (formula "85"))
                                    (rule "cnf_rightDist" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "commute_or" (formula "85"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "2") (ifseqformula "20"))
                                    (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "14")))
                                    (rule "true_left" (formula "79"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "1,0") (ifseqformula "20"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,0") (ifseqformula "20"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
                                    (rule "true_left" (formula "14"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,0") (ifseqformula "20"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "122")))
                                    (rule "true_left" (formula "12"))
                                    (rule "cut_direct" (formula "135") (term "0"))
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "89") (term "1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "89") (term "0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "87") (term "0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "86") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "89") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "91") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "59") (term "0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "90") (term "1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "89") (term "0,1,0,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "90") (term "0") (ifseqformula "58"))
                                       (rule "eqSymm" (formula "90"))
                                       (rule "polySimp_homoEq" (formula "90"))
                                       (rule "polySimp_mulLiterals" (formula "90") (term "1,0"))
                                       (rule "polySimp_elimOne" (formula "90") (term "1,0"))
                                       (rule "applyEq" (formula "88") (term "0,1") (ifseqformula "56"))
                                       (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "56"))
                                       (rule "polySimp_mulComm0" (formula "91") (term "0"))
                                       (rule "applyEq" (formula "91") (term "0") (ifseqformula "59"))
                                       (rule "polySimp_homoEq" (formula "91"))
                                       (rule "polySimp_mulComm0" (formula "91") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "91") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "91") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "91") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "91") (term "0"))
                                       (rule "polySimp_addComm1" (formula "91") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "91") (term "0"))
                                       (rule "add_literals" (formula "91") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "91") (term "1,0"))
                                       (rule "add_zero_right" (formula "91") (term "0"))
                                       (rule "polySimp_addComm0" (formula "91") (term "0"))
                                       (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_pullOutFactor2" (formula "90") (term "0"))
                                       (rule "add_literals" (formula "90") (term "1,0"))
                                       (rule "times_zero_1" (formula "90") (term "0"))
                                        (builtin "One Step Simplification" (formula "90"))
                                       (rule "true_left" (formula "90"))
                                       (rule "polySimp_sepPosMonomial" (formula "90"))
                                       (rule "polySimp_mulLiterals" (formula "90") (term "1"))
                                       (rule "polySimp_elimOne" (formula "90") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "88") (term "0") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "88") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "88") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "88") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "88"))
                                       (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "88"))
                                       (rule "applyEq" (formula "89") (term "0,1") (ifseqformula "59"))
                                       (rule "inEqSimp_homoInEq1" (formula "89") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "89") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "89") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "89") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "89") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "89") (term "0,1"))
                                       (rule "add_literals" (formula "89") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "89") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "89") (term "0,1"))
                                       (rule "applyEq" (formula "87") (term "0,1") (ifseqformula "59"))
                                       (rule "inEqSimp_homoInEq0" (formula "87") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "87") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "87") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "87") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "87") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "87") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "87") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "87") (term "0,1"))
                                       (rule "add_literals" (formula "87") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "87") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "87") (term "0,1"))
                                       (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "88"))
                                       (rule "applyEqRigid" (formula "58") (term "0,1") (ifseqformula "88"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "89") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "89") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "89") (term "0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "87") (term "1"))
                                       (rule "times_zero_2" (formula "87") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "87") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "87") (term "0,1"))
                                       (rule "replace_known_left" (formula "87") (term "1") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "87"))
                                       (rule "true_left" (formula "87"))
                                       (rule "inEqSimp_contradEq3" (formula "88") (term "0") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "88") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "88") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "88") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "88"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "86"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "false_right" (formula "136"))
                                       (rule "definitionOfNewObjectsIsomorphic" (formula "135"))
                                       (branch "New on Heap 1"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "106")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "New on Heap 2"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "115")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Same Types"
                                          (rule "definitionOfSameTypes" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0"))
                                          (rule "castDel" (formula "137") (term "2,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "sameTypeTrue" (formula "138") (ifseqformula "102") (ifseqformula "71"))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Objects Isomorphic"
                                          (rule "definitionOfObjectsIsomorphic" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,0"))
                                          (rule "castDel" (formula "137") (term "1,3,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,3,1,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "definitionOfObjectIsomorphic" (formula "136") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "136"))
                                          (rule "allRight" (formula "136") (inst "sk=i_1"))
                                          (rule "impRight" (formula "136"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "2,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "139") (term "0,0,0,0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "139"))
                                       )
                                    )
                                 )
                                 (branch " result_56.value@anon_heap_getOrder_0<<anonHeapFunction>> >= 0 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "100"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradEq3" (formula "84") (term "0") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "84") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "84") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "84") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "85"))
                                    (rule "polySimp_mulComm0" (formula "88") (term "0"))
                                    (rule "applyEq" (formula "86") (term "0") (ifseqformula "88"))
                                    (rule "inEqSimp_homoInEq1" (formula "86"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                    (rule "polySimp_addComm1" (formula "86") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "86") (term "0"))
                                    (rule "add_literals" (formula "86") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "86") (term "1,0"))
                                    (rule "add_zero_right" (formula "86") (term "0"))
                                    (rule "applyEq" (formula "84") (term "0") (ifseqformula "88"))
                                    (rule "inEqSimp_homoInEq0" (formula "84"))
                                    (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "84") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "84") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                    (rule "polySimp_addComm0" (formula "84") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "84") (term "0"))
                                    (rule "add_literals" (formula "84") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "84") (term "1,0"))
                                    (rule "add_zero_right" (formula "84") (term "0"))
                                    (rule "applyEq" (formula "87") (term "0,1") (ifseqformula "85"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "0"))
                                    (rule "inEqSimp_invertInEq1" (formula "84"))
                                    (rule "times_zero_2" (formula "84") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                    (rule "polySimp_elimOne" (formula "84") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "86") (ifseqformula "84"))
                                    (rule "add_zero_right" (formula "86") (term "0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "0"))
                                    (rule "mul_literals" (formula "86") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "86"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "0") (ifseqformula "21"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "122"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,0") (ifseqformula "21"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "124")))
                                    (rule "true_left" (formula "13"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "2") (ifseqformula "21"))
                                    (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "15")))
                                    (rule "true_left" (formula "80"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "21"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "15"))
                                    (rule "cut_direct" (formula "135") (term "0"))
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "88") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "89") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "59") (term "0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "87") (term "0") (ifseqformula "56"))
                                       (rule "applyEq" (formula "89") (term "0") (ifseqformula "58"))
                                       (rule "polySimp_homoEq" (formula "89"))
                                       (rule "polySimp_mulLiterals" (formula "89") (term "1,0"))
                                       (rule "polySimp_elimOne" (formula "89") (term "1,0"))
                                       (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "87"))
                                       (rule "applyEq" (formula "89") (term "1,0") (ifseqformula "87"))
                                       (rule "polySimp_pullOutFactor2" (formula "89") (term "0"))
                                       (rule "add_literals" (formula "89") (term "1,0"))
                                       (rule "times_zero_1" (formula "89") (term "0"))
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "true_left" (formula "89"))
                                       (rule "applyEq" (formula "89") (term "0") (ifseqformula "59"))
                                       (rule "polySimp_homoEq" (formula "89"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "89") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "89") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                       (rule "polySimp_addComm1" (formula "89") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "89") (term "0"))
                                       (rule "add_literals" (formula "89") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "89") (term "1,0"))
                                       (rule "add_zero_right" (formula "89") (term "0"))
                                       (rule "polySimp_addComm0" (formula "89") (term "0"))
                                       (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "87"))
                                       (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "87"))
                                       (rule "polySimp_sepPosMonomial" (formula "89"))
                                       (rule "polySimp_mulLiterals" (formula "89") (term "1"))
                                       (rule "polySimp_elimOne" (formula "89") (term "1"))
                                       (rule "applyEq" (formula "88") (term "0") (ifseqformula "89"))
                                       (rule "applyEq" (formula "86") (term "0") (ifseqformula "88"))
                                       (rule "div_axiom" (formula "56") (term "0") (inst "quotient=quotient_2"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "0,2,1,1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,1,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "0,1,1,1"))
                                       (rule "polySimp_addComm1" (formula "56") (term "1,2,1,1"))
                                       (rule "polySimp_addComm1" (formula "56") (term "1,1,1,1"))
                                       (rule "applyEq" (formula "56") (term "0,0,0,1") (ifseqformula "57"))
                                       (rule "inEqSimp_contradEq3" (formula "56") (term "0") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "56") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "56") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "56") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "andLeft" (formula "56"))
                                       (rule "andLeft" (formula "56"))
                                       (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "56"))
                                       (rule "applyEq" (formula "58") (term "0,2") (ifseqformula "62"))
                                       (rule "inEqSimp_homoInEq1" (formula "58") (term "2"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,2"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,2"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,2"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,2"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,2"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,0,2"))
                                       (rule "polySimp_pullOutFactor2b" (formula "58") (term "0,2"))
                                       (rule "add_literals" (formula "58") (term "1,1,0,2"))
                                       (rule "times_zero_1" (formula "58") (term "1,0,2"))
                                       (rule "add_zero_right" (formula "58") (term "0,2"))
                                       (rule "applyEq" (formula "57") (term "0") (ifseqformula "62"))
                                       (rule "inEqSimp_homoInEq0" (formula "57"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                       (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "57") (term "0"))
                                       (rule "add_literals" (formula "57") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "57") (term "1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0"))
                                       (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "62"))
                                       (rule "inEqSimp_homoInEq1" (formula "58") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "58") (term "0,1"))
                                       (rule "add_literals" (formula "58") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "58") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "58") (term "0,1"))
                                       (rule "applyEq" (formula "61") (term "0,1") (ifseqformula "56"))
                                       (rule "applyEq" (formula "89") (term "1") (ifseqformula "56"))
                                       (rule "applyEq" (formula "59") (term "1") (ifseqformula "56"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "2"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "0,2"))
                                       (rule "polySimp_elimOne" (formula "58") (term "0,2"))
                                       (rule "replace_known_left" (formula "58") (term "2") (ifseqformula "60"))
                                       (rule "inEqSimp_invertInEq1" (formula "57"))
                                       (rule "mul_literals" (formula "57") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "57") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "57") (term "0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "57") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "true_left" (formula "57"))
                                       (rule "jdiv_axiom" (formula "59") (term "0"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "applyEq" (formula "59") (term "0,2,0") (ifseqformula "57"))
                                       (rule "applyEq" (formula "59") (term "1") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "inEqSimp_contradInEq0" (formula "59") (term "0,0") (ifseqformula "20"))
                                       (rule "qeq_literals" (formula "59") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "Use_information_flow_contract_for_getOrder_757678341_00000_2" (formula "83") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "83"))
                                       (rule "replaceKnownSelect_taclet00000000_27" (formula "83") (term "0,1,1,1"))
                                       (rule "replaceKnownSelect_taclet00000_5" (formula "83") (term "1,1,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_29" (formula "83") (term "0,1,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000_6" (formula "83") (term "1,1,1,1"))
                                       (rule "eqSymm" (formula "83") (term "0,1,1"))
                                       (rule "applyEq" (formula "83") (term "0,0,1,1") (ifseqformula "48"))
                                       (rule "eqSymm" (formula "83") (term "0,1,1"))
                                       (rule "replace_known_left" (formula "83") (term "0,1,1") (ifseqformula "80"))
                                        (builtin "One Step Simplification" (formula "83"))
                                       (rule "applyEq" (formula "83") (term "1,1,0,1,1") (ifseqformula "6"))
                                       (rule "replace_known_left" (formula "83") (term "1,1") (ifseqformula "80"))
                                        (builtin "One Step Simplification" (formula "83"))
                                       (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "83") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "83"))
                                       (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "83") (term "0"))
                                        (builtin "One Step Simplification" (formula "83"))
                                       (rule "applyEq" (formula "84") (term "3") (ifseqformula "83"))
                                       (rule "applyEq" (formula "112") (term "0") (ifseqformula "83"))
                                       (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "83"))
                                       (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "82"))
                                       (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "82"))
                                       (rule "applyEq" (formula "110") (term "1,0") (ifseqformula "82"))
                                       (rule "applyEq" (formula "93") (term "1") (ifseqformula "82"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "82"))
                                       (rule "Use_information_flow_contract_for_multiply_1272441881_0000000_23" (formula "101") (ifseqformula "74"))
                                        (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "110")) (ifInst ""  (formula "118")))
                                       (rule "replaceKnownSelect_taclet0000000000_46" (formula "101") (term "0,1,1,1"))
                                       (rule "replaceKnownSelect_taclet0000000_24" (formula "101") (term "1,1,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000000_47" (formula "101") (term "0,1,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_25" (formula "101") (term "1,1,1,1"))
                                       (rule "replaceKnownSelect_taclet000000_8" (formula "101") (term "1,1,0,1,1"))
                                       (rule "replaceKnownSelect_taclet000000000_34" (formula "101") (term "0,1,0,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_9" (formula "101") (term "1,1,0,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000000_35" (formula "101") (term "0,1,0,1,1"))
                                       (rule "eqSymm" (formula "101") (term "0,1"))
                                       (rule "replace_known_left" (formula "101") (term "1,0,1,1") (ifseqformula "88"))
                                        (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "135")))
                                       (rule "pullOutSelect" (formula "101") (term "1,0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "101") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "132")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,0") (ifseqformula "45"))
                                       (rule "replace_known_left" (formula "101") (term "0,0,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "101"))
                                       (rule "simplifySelectOfAnonEQ" (formula "101") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "132")) (ifInst ""  (formula "32")))
                                       (rule "applyEqReverse" (formula "102") (term "1,0,1,1") (ifseqformula "101"))
                                       (rule "hideAuxiliaryEq" (formula "101"))
                                       (rule "applyEq" (formula "101") (term "1,0,1,1") (ifseqformula "3"))
                                       (rule "pullOutSelect" (formula "101") (term "0,0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "101") (ifseqformula "85"))
                                        (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "130")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,0") (ifseqformula "77"))
                                       (rule "eqSymm" (formula "102") (term "0,1,1"))
                                       (rule "replace_known_left" (formula "101") (term "0,0,0,0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "101"))
                                       (rule "simplifySelectOfAnonEQ" (formula "101") (ifseqformula "77"))
                                        (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "130")) (ifInst ""  (formula "26")))
                                       (rule "applyEqReverse" (formula "102") (term "1,0,1,1") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "102"))
                                       (rule "notLeft" (formula "102"))
                                       (rule "hideAuxiliaryEq" (formula "101"))
                                       (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "103") (term "0"))
                                        (builtin "One Step Simplification" (formula "103"))
                                       (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "103"))
                                       (rule "closeTrue" (formula "103"))
                                    )
                                    (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                        (builtin "One Step Simplification" (formula "136"))
                                       (rule "false_right" (formula "136"))
                                       (rule "definitionOfNewObjectsIsomorphic" (formula "135"))
                                       (branch "New on Heap 1"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "106")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "New on Heap 2"
                                          (rule "definitionOfNewOnHeap" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0,0,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,0,0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "115")))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Same Types"
                                          (rule "definitionOfSameTypes" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,0"))
                                          (rule "castDel" (formula "137") (term "2,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,0,1,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "sameTypeTrue" (formula "138") (ifseqformula "102") (ifseqformula "72"))
                                          (rule "closeTrue" (formula "138"))
                                       )
                                       (branch "Objects Isomorphic"
                                          (rule "definitionOfObjectsIsomorphic" (formula "135") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "allRight" (formula "135") (inst "sk=i_0"))
                                          (rule "impRight" (formula "135"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,0"))
                                          (rule "castDel" (formula "137") (term "1,1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,1"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "1,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,0"))
                                          (rule "castDel" (formula "137") (term "1,3,1,0"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "3,1,1"))
                                          (rule "getOfSeqSingleton" (formula "137") (term "0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "137") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "138") (term "0,1,1,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "definitionOfObjectIsomorphic" (formula "136") (inst "i=i"))
                                           (builtin "One Step Simplification" (formula "136"))
                                          (rule "allRight" (formula "136") (inst "sk=i_1"))
                                          (rule "impRight" (formula "136"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "2,1,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,1"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "2,0,0,0,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,0,0"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,0,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "getOfSeqSingleton" (formula "138") (term "0,1,1,0"))
                                          (rule "castDel" (formula "138") (term "1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "replace_known_left" (formula "139") (term "0,0,1,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "139") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "139"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Exceptional Post (multiply)"
                               (builtin "One Step Simplification" (formula "109"))
                               (builtin "One Step Simplification" (formula "86"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "75"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "67"))
                              (rule "andLeft" (formula "86"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,0") (ifseqformula "86"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,1,0") (ifseqformula "75"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,1,0") (ifseqformula "67"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "88"))
                              (rule "andLeft" (formula "87"))
                              (rule "andLeft" (formula "89"))
                              (rule "notLeft" (formula "87"))
                              (rule "close" (formula "91") (ifseqformula "90"))
                           )
                           (branch "Pre (multiply)"
                               (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "87")) (ifInst ""  (formula "87")))
                              (rule "wellFormedAnonEQ" (formula "107") (term "0,1") (ifseqformula "75"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "1,1") (ifseqformula "75"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (term "0,1,1") (ifseqformula "67"))
                              (rule "wellFormedAnonEQ" (formula "107") (term "0,0,1") (ifseqformula "67"))
                              (rule "replace_known_left" (formula "107") (term "1,1,1") (ifseqformula "76"))
                               (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "16")) (ifInst ""  (formula "66")) (ifInst ""  (formula "74")) (ifInst ""  (formula "85")) (ifInst ""  (formula "86")))
                              (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "107"))
                              (rule "closeTrue" (formula "107"))
                           )
                           (branch "Null reference (_p_3_A = null)"
                               (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "108")))
                              (rule "closeTrue" (formula "107"))
                           )
                        )
                        (branch "Exceptional Post (mod)"
                            (builtin "One Step Simplification" (formula "75"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "67"))
                           (rule "andLeft" (formula "75"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,0") (ifseqformula "75"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,1,0") (ifseqformula "67"))
                           (rule "andLeft" (formula "76"))
                           (rule "andLeft" (formula "76"))
                           (rule "andLeft" (formula "78"))
                           (rule "notLeft" (formula "76"))
                           (rule "close" (formula "79") (ifseqformula "78"))
                        )
                        (branch "Pre (mod)"
                            (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "75")) (ifInst ""  (formula "75")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "1,1") (ifseqformula "67"))
                           (rule "wellFormedAnonEQ" (formula "93") (term "0,1") (ifseqformula "67"))
                           (rule "replace_known_right" (formula "93") (term "0,1,1") (ifseqformula "74"))
                            (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "16")) (ifInst ""  (formula "66")) (ifInst ""  (formula "69")))
                           (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "93"))
                           (rule "pullOutSelect" (formula "93") (term "1,0,1") (inst "selectSK=java_math_BigInteger_ZERO_2"))
                           (rule "applyEq" (formula "94") (term "0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "94") (term "0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "94") (term "1,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "93") (term "0,0") (ifseqformula "91"))
                            (builtin "One Step Simplification" (formula "93"))
                           (rule "pullOutSelect" (formula "93") (term "0") (inst "selectSK=java_math_BigInteger_value_8"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "37")))
                           (rule "applyEqReverse" (formula "94") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "94") (ifseqformula "22"))
                        )
                        (branch "Null reference (var_6 = null)"
                            (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "95")))
                           (rule "closeTrue" (formula "93"))
                        )
                     )
                     (branch "Exceptional Post (getOrder)"
                         (builtin "One Step Simplification" (formula "85"))
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "andLeft" (formula "67"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,0") (ifseqformula "67"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "70"))
                        (rule "notLeft" (formula "68"))
                        (rule "close" (formula "71") (ifseqformula "70"))
                     )
                     (branch "Pre (getOrder)"
                         (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "16")))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "83"))
                        (rule "closeTrue" (formula "83"))
                     )
                     (branch "Null reference (s_1 = null)"
                         (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "78")))
                        (rule "closeTrue" (formula "83"))
                     )
                  )
                  (branch "Exceptional Post (multiply)"
                      (builtin "One Step Simplification" (formula "70"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "35"))
                     (rule "andLeft" (formula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,0") (ifseqformula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0") (ifseqformula "35"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "58"))
                     (rule "notLeft" (formula "56"))
                     (rule "close" (formula "59") (ifseqformula "58"))
                  )
                  (branch "Pre (multiply)"
                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1") (ifseqformula "43"))
                     (rule "wellFormedAnonEQ" (formula "68") (term "0,1") (ifseqformula "43"))
                     (rule "wellFormedAnonEQ" (formula "68") (term "0,0,1") (ifseqformula "35"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,1") (ifseqformula "35"))
                     (rule "replace_known_left" (formula "68") (term "1,1,1") (ifseqformula "44"))
                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "19")) (ifInst ""  (formula "34")) (ifInst ""  (formula "42")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "68"))
                     (rule "closeTrue" (formula "68"))
                  )
                  (branch "Null reference (_p_3_B = null)"
                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "71")))
                     (rule "closeTrue" (formula "68"))
                  )
               )
               (branch "Exceptional Post (mod)"
                   (builtin "One Step Simplification" (formula "55"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "35"))
                  (rule "andLeft" (formula "43"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,0") (ifseqformula "43"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0") (ifseqformula "35"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "46"))
                  (rule "notLeft" (formula "44"))
                  (rule "close" (formula "47") (ifseqformula "46"))
               )
               (branch "Pre (mod)"
                   (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "43")) (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1") (ifseqformula "35"))
                  (rule "wellFormedAnonEQ" (formula "53") (term "0,1") (ifseqformula "35"))
                  (rule "replace_known_left" (formula "53") (term "1,1,1") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "19")) (ifInst ""  (formula "34")) (ifInst ""  (formula "42")))
                  (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "53"))
                  (rule "pullOutSelect" (formula "53") (term "0,1") (inst "selectSK=java_math_BigInteger_value_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                  (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                  (rule "applyEqReverse" (formula "54") (term "0,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "51")))
                  (rule "closeTrue" (formula "53"))
               )
               (branch "Null reference (var_4 = null)"
                   (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "57")))
                  (rule "closeTrue" (formula "53"))
               )
            )
            (branch "Exceptional Post (getOrder)"
                (builtin "One Step Simplification" (formula "45"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0") (ifseqformula "35"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "38"))
               (rule "notLeft" (formula "36"))
               (rule "close" (formula "39") (ifseqformula "38"))
            )
            (branch "Pre (getOrder)"
                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "19")))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "43"))
               (rule "closeTrue" (formula "43"))
            )
            (branch "Null reference (s = null)"
                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "38")))
               (rule "closeTrue" (formula "43"))
            )
         )
         (branch "if x_2 false"
             (builtin "One Step Simplification" (formula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_leqRight" (formula "29"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "assignment" (formula "38") (term "1"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "blockEmpty" (formula "38") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "1"))
            (rule "leq_literals" (formula "25") (term "0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "returnUnfold" (formula "37") (term "1") (inst "#v0=e"))
            (rule "variableDeclarationAssign" (formula "37") (term "1"))
            (rule "variableDeclaration" (formula "37") (term "1") (newnames "e_1"))
             (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_multiply,result_53,exc_69,heapAfter_multiply,anon_heap_multiply") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
            (branch "Post (multiply)"
                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "44")) (ifInst ""  (formula "6")) (ifInst ""  (formula "44")) (ifInst ""  (formula "10")))
                (builtin "One Step Simplification" (formula "31"))
                (builtin "One Step Simplification" (formula "41"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,0") (ifseqformula "30"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "33"))
               (rule "notLeft" (formula "36"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "notLeft" (formula "33"))
               (rule "notLeft" (formula "33"))
               (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "39")))
               (rule "assignment" (formula "49") (term "1"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "applyEq" (formula "37") (term "5") (ifseqformula "36"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "methodCallReturn" (formula "46") (term "1"))
               (rule "assignment" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "methodCallEmpty" (formula "46") (term "1"))
               (rule "tryEmpty" (formula "46") (term "1"))
               (rule "emptyModality" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "notRight" (formula "46"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "3"))
               (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "4"))
               (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "applyEq" (formula "39") (term "4") (ifseqformula "2"))
               (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "9") (term "0,1,0,0") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "ifthenelse_negated" (formula "9") (term "0"))
               (rule "applyEq" (formula "41") (term "0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "41"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "applyEqReverse" (formula "57") (term "1,1,1") (ifseqformula "9"))
               (rule "hideAuxiliaryEq" (formula "9"))
               (rule "eqSymm" (formula "56") (term "1,1"))
               (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "56") (term "1,1,1,1,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "54") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "2"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "1,0,1,0,1") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "49"))
                (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "33")))
               (rule "true_left" (formula "15"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "17"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "13"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "methodCallWithAssignmentWithinClass" (formula "55") (term "1") (inst "#v0=b"))
               (rule "variableDeclaration" (formula "55") (term "1") (newnames "b_1"))
               (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "returnUnfold" (formula "55") (term "1") (inst "#v0=b_2"))
               (rule "variableDeclarationAssign" (formula "55") (term "1"))
               (rule "variableDeclaration" (formula "55") (term "1") (newnames "b_2"))
               (rule "methodCallWithAssignmentUnfoldTarget" (formula "55") (term "1") (inst "#v0=s"))
               (rule "variableDeclaration" (formula "55") (term "1") (newnames "s"))
               (rule "assignment_read_attribute_this" (formula "55") (term "1"))
                (builtin "One Step Simplification" (formula "55"))
                (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_getOrder,result_54,exc_70,heapAfter_getOrder,anon_heap_getOrder") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
               (branch "Post (getOrder)"
                   (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "21")))
                   (builtin "One Step Simplification" (formula "59"))
                   (builtin "One Step Simplification" (formula "47"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,1,0") (ifseqformula "46"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "48"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "48"))
                  (rule "andLeft" (formula "49"))
                  (rule "andLeft" (formula "50"))
                  (rule "andLeft" (formula "49"))
                  (rule "notLeft" (formula "52"))
                  (rule "andLeft" (formula "49"))
                  (rule "andLeft" (formula "49"))
                  (rule "notLeft" (formula "49"))
                  (rule "notLeft" (formula "49"))
                  (rule "eqSymm" (formula "48"))
                  (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "56")))
                  (rule "assignment" (formula "67") (term "1"))
                   (builtin "One Step Simplification" (formula "67"))
                  (rule "applyEq" (formula "53") (term "4") (ifseqformula "52"))
                  (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "64")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "48"))
                  (rule "hideAuxiliaryEq" (formula "48"))
                  (rule "eqSymm" (formula "48"))
                  (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_math_BigInteger_value_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                  (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "48"))
                  (rule "hideAuxiliaryEq" (formula "48"))
                  (rule "eqSymm" (formula "48"))
                  (rule "applyEq" (formula "74") (term "0,1,0,1") (ifseqformula "48"))
                  (rule "eqSymm" (formula "74") (term "1,0,1"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "54"))
                  (rule "true_left" (formula "54"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "51"))
                  (rule "true_left" (formula "51"))
                  (rule "commute_and_2" (formula "72") (term "0,1"))
                  (rule "commute_and" (formula "72") (term "0,0,1"))
                  (rule "methodCallReturn" (formula "65") (term "1"))
                  (rule "assignment" (formula "65") (term "1"))
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "methodCallEmpty" (formula "65") (term "1"))
                  (rule "blockEmpty" (formula "65") (term "1"))
                  (rule "assignment" (formula "65") (term "1"))
                   (builtin "One Step Simplification" (formula "65"))
                   (builtin "Use Operation Contract" (formula "65") (newnames "heapBefore_mod,result_55,exc_71,heapAfter_mod,anon_heap_mod") (contract "java.math.BigInteger[java.math.BigInteger::mod(java.math.BigInteger)].JML normal_behavior operation contract.0"))
                  (branch "Post (mod)"
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                      (builtin "One Step Simplification" (formula "54"))
                      (builtin "One Step Simplification" (formula "55"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,1") (ifseqformula "46"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "46"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,1,0") (ifseqformula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,1,0") (ifseqformula "46"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "57"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "60"))
                     (rule "andLeft" (formula "58"))
                     (rule "notLeft" (formula "62"))
                     (rule "andLeft" (formula "58"))
                     (rule "notLeft" (formula "58"))
                     (rule "notLeft" (formula "58"))
                     (rule "orRight" (formula "66"))
                     (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "69")))
                     (rule "true_left" (formula "65"))
                     (rule "replace_known_right" (formula "55") (term "1,0,1") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "67")) (ifInst ""  (formula "65")))
                     (rule "assignment" (formula "80") (term "1"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "blockEmpty" (formula "80") (term "1"))
                     (rule "applyEq" (formula "62") (term "5") (ifseqformula "61"))
                     (rule "jmod_axiom" (formula "56") (term "1"))
                     (rule "polySimp_mulComm1" (formula "56") (term "1,1"))
                     (rule "polySimp_homoEq" (formula "56"))
                     (rule "polySimp_addComm1" (formula "56") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "56"))
                     (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                     (rule "polySimp_elimOne" (formula "56") (term "0"))
                     (rule "pullOutSelect" (formula "56") (term "0,1") (inst "selectSK=java_math_BigInteger_value_1"))
                     (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "56"))
                     (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "85")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0") (ifseqformula "46"))
                     (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "46"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "85")) (ifInst ""  (formula "25")))
                     (rule "applyEqReverse" (formula "57") (term "0,1") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                     (rule "hideAuxiliaryEq" (formula "56"))
                     (rule "pullOutSelect" (formula "56") (term "0,1,1") (inst "selectSK=java_math_BigInteger_value_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "68")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0") (ifseqformula "46"))
                     (rule "replace_known_right" (formula "56") (term "0,0,0,0") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "67")))
                     (rule "applyEqReverse" (formula "57") (term "0,1,1") (ifseqformula "56"))
                     (rule "hideAuxiliaryEq" (formula "56"))
                     (rule "polySimp_addComm0" (formula "56") (term "1"))
                     (rule "pullOutSelect" (formula "56") (term "1,0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "applyEq" (formula "57") (term "1,0,0") (ifseqformula "56"))
                     (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "70")))
                     (rule "replaceKnownSelect_taclet001000_8" (formula "56") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet001000_9" (formula "56") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0") (ifseqformula "46"))
                     (rule "replace_known_right" (formula "56") (term "0,0,0,0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "47")))
                     (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "57") (term "1,0,0") (ifseqformula "56"))
                     (rule "hideAuxiliaryEq" (formula "56"))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "notLeft" (formula "63"))
                     (rule "pullOutSelect" (formula "63") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                     (rule "applyEq" (formula "66") (term "0") (ifseqformula "63"))
                     (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "46"))
                      (builtin "One Step Simplification" (formula "63"))
                     (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "63"))
                     (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                     (rule "hideAuxiliaryEq" (formula "63"))
                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=java_math_BigInteger_value_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "46"))
                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "80")) (ifInst ""  (formula "31")))
                     (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                     (rule "hideAuxiliaryEq" (formula "63"))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "57"))
                     (rule "andLeft" (formula "57"))
                     (rule "notLeft" (formula "57"))
                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=java_math_BigInteger_value_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "65")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0") (ifseqformula "46"))
                     (rule "ifthenelse_negated" (formula "57") (term "0"))
                     (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "58"))
                     (rule "ifEqualsInteger" (formula "57"))
                     (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "58") (term "1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "58") (term "1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "58") (term "1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "58") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "58") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet0001000_18" (formula "1") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0001000_19" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "58") (term "1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "58") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "replaceKnownSelect_taclet0001000_20" (formula "58") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0001000_21" (formula "58") (term "0,1,0"))
                     (rule "applyEqReverse" (formula "58") (term "1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "58") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "57") (term "1,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")))
                     (rule "true_left" (formula "57"))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "60"))
                     (rule "replaceKnownSelect_taclet0001000_22" (formula "60") (term "0,1"))
                     (rule "replaceKnownSelect_taclet0001000_23" (formula "60") (term "0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0001000_24" (formula "60") (term "0,0,0"))
                     (rule "andLeft" (formula "60"))
                     (rule "notLeft" (formula "60"))
                     (rule "returnUnfold" (formula "78") (term "1") (inst "#v0=e"))
                     (rule "variableDeclarationAssign" (formula "78") (term "1"))
                     (rule "variableDeclaration" (formula "78") (term "1") (newnames "e_2"))
                     (rule "jdiv_axiom" (formula "56") (term "0,0"))
                     (rule "eqSymm" (formula "56"))
                     (rule "inEqSimp_contradInEq0" (formula "56") (term "0,0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "56") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "eqSymm" (formula "56"))
                     (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "56"))
                     (rule "polySimp_mulComm1" (formula "57") (term "0"))
                     (rule "polySimp_homoEq" (formula "57"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "57") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "57"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1"))
                     (rule "polySimp_rightDist" (formula "57") (term "1"))
                     (rule "polySimp_mulAssoc" (formula "57") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "57") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "57") (term "0,1"))
                      (builtin "Use Operation Contract" (formula "79") (newnames "heapBefore_multiply_0,result_56,exc_72,heapAfter_multiply_0,anon_heap_multiply_0") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
                     (branch "Post (multiply)"
                         (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                         (builtin "One Step Simplification" (formula "66"))
                         (builtin "One Step Simplification" (formula "83"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1") (ifseqformula "46"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "46"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "65"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "1,1,0") (ifseqformula "65"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,1,1,0") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,1,1,0") (ifseqformula "46"))
                        (rule "andLeft" (formula "69"))
                        (rule "andLeft" (formula "66"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "66"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "69"))
                        (rule "andLeft" (formula "68"))
                        (rule "notLeft" (formula "71"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "68"))
                        (rule "notLeft" (formula "68"))
                        (rule "notLeft" (formula "68"))
                        (rule "orRight" (formula "76"))
                        (rule "orRight" (formula "76"))
                        (rule "replace_known_right" (formula "75") (term "1,0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "55")))
                        (rule "true_left" (formula "75"))
                        (rule "replace_known_right" (formula "66") (term "1,0,1") (ifseqformula "77"))
                         (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "78")) (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                        (rule "assignment" (formula "94") (term "1"))
                         (builtin "One Step Simplification" (formula "94"))
                        (rule "applyEq" (formula "72") (term "5") (ifseqformula "71"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "67"))
                        (rule "true_left" (formula "67"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "69"))
                        (rule "true_left" (formula "69"))
                        (rule "methodCallReturn" (formula "91") (term "1"))
                        (rule "assignment" (formula "91") (term "1"))
                         (builtin "One Step Simplification" (formula "91"))
                        (rule "methodCallEmpty" (formula "91") (term "1"))
                        (rule "tryEmpty" (formula "91") (term "1"))
                        (rule "emptyModality" (formula "91") (term "1"))
                         (builtin "One Step Simplification" (formula "91"))
                        (rule "notRight" (formula "91"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "applyEq" (formula "8") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "100") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "74") (term "4") (ifseqformula "2"))
                        (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "76") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "88") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                        (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "69"))
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "79")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,0") (ifseqformula "58"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,0,0") (ifseqformula "50"))
                        (rule "replace_known_right" (formula "18") (term "1,0,0,0") (ifseqformula "78"))
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
                        (rule "applyEqReverse" (formula "101") (term "1,1,1") (ifseqformula "18"))
                        (rule "hideAuxiliaryEq" (formula "18"))
                        (rule "eqSymm" (formula "100") (term "1,1"))
                        (rule "applyEq" (formula "55") (term "1,2") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "1"))
                        (rule "div_axiom" (formula "59") (term "0,1") (inst "quotient=quotient_0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "59") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "59") (term "1,2,1,1"))
                        (rule "polySimp_addComm1" (formula "59") (term "1,1,1,1"))
                        (rule "commute_and" (formula "59") (term "0,1"))
                        (rule "equiv_left" (formula "37"))
                        (branch "Case 1"
                           (rule "inEqSimp_subsumption0" (formula "36") (ifseqformula "37"))
                           (rule "leq_literals" (formula "36") (term "0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "inEqSimp_antiSymm" (formula "38") (ifseqformula "37"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                           (rule "leq_literals" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                           (rule "qeq_literals" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "applyEq" (formula "100") (term "1,1,0,0,1") (ifseqformula "37"))
                           (rule "inEqSimp_contradEq3" (formula "100") (term "1,0,0,1") (ifseqformula "16"))
                           (rule "mul_literals" (formula "100") (term "1,0,0,1,0,0,1"))
                           (rule "add_literals" (formula "100") (term "0,0,1,0,0,1"))
                           (rule "qeq_literals" (formula "100") (term "0,1,0,0,1"))
                            (builtin "One Step Simplification" (formula "100"))
                           (rule "definitionOfNewObjectsIsomorphic" (formula "100"))
                           (branch "New on Heap 1"
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "36"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "38") (term "4") (ifseqformula "15"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "15"))
                              (rule "leq_literals" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "definitionOfNewOnHeap" (formula "99") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "99"))
                              (rule "allRight" (formula "99") (inst "sk=i_0"))
                              (rule "impRight" (formula "99"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0,0,1"))
                              (rule "castDel" (formula "101") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "101") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0,0,0"))
                              (rule "castDel" (formula "101") (term "1,0,0,0,0"))
                              (rule "castDel" (formula "101") (term "2,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "101") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "102") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "86")))
                              (rule "closeTrue" (formula "102"))
                           )
                           (branch "New on Heap 2"
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "36"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "38") (term "4") (ifseqformula "15"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "15"))
                              (rule "leq_literals" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "definitionOfNewOnHeap" (formula "99") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "99"))
                              (rule "allRight" (formula "99") (inst "sk=i_0"))
                              (rule "impRight" (formula "99"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0,0,1"))
                              (rule "castDel" (formula "101") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "101") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0,0,0"))
                              (rule "castDel" (formula "101") (term "1,0,0,0,0"))
                              (rule "castDel" (formula "101") (term "2,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "101") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "102") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "77")))
                              (rule "closeTrue" (formula "102"))
                           )
                           (branch "Same Types"
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "36"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "38") (term "4") (ifseqformula "15"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "15"))
                              (rule "leq_literals" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "definitionOfSameTypes" (formula "99") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "99"))
                              (rule "allRight" (formula "99") (inst "sk=i_0"))
                              (rule "impRight" (formula "99"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0,0,1"))
                              (rule "castDel" (formula "101") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "101") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0"))
                              (rule "castDel" (formula "101") (term "1,0,0"))
                              (rule "castDel" (formula "101") (term "2,0,0"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,0"))
                              (rule "castDel" (formula "101") (term "1,1,0"))
                              (rule "castDel" (formula "101") (term "2,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "102") (term "0,1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "sameTypeTrue" (formula "102") (ifseqformula "46") (ifseqformula "73"))
                              (rule "closeTrue" (formula "102"))
                           )
                           (branch "Objects Isomorphic"
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "36"))
                              (rule "applyEq" (formula "39") (term "4") (ifseqformula "15"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "15"))
                              (rule "leq_literals" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "definitionOfObjectsIsomorphic" (formula "99") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "99"))
                              (rule "allRight" (formula "99") (inst "sk=i_0"))
                              (rule "impRight" (formula "99"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "3,1,0"))
                              (rule "castDel" (formula "101") (term "1,3,1,0"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0,0,1"))
                              (rule "castDel" (formula "101") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "101") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "101") (term "1,1,0"))
                              (rule "castDel" (formula "101") (term "1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "101") (term "0,0,0,0"))
                              (rule "castDel" (formula "101") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "101") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "101") (term "3,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "102") (term "0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "definitionOfObjectIsomorphic" (formula "100") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "allRight" (formula "100") (inst "sk=i_1"))
                              (rule "impRight" (formula "100"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,1,1,0"))
                              (rule "castDel" (formula "102") (term "1,0,1,1,0"))
                               (builtin "One Step Simplification" (formula "102"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,1"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "2,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,0"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,1,0"))
                              (rule "castDel" (formula "102") (term "1,0,0,1,0"))
                               (builtin "One Step Simplification" (formula "102"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "103") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "103"))
                           )
                        )
                        (branch "Case 2"
                           (rule "inEqSimp_leqRight" (formula "76"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "76"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "2"))
                           (rule "leq_literals" (formula "39") (term "0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "ifthenelse_split_for" (formula "58") (term "1,1"))
                           (branch " result_54.value@anon_heap_getOrder<<anonHeapFunction>> >= 0 TRUE"
                              (rule "cnf_rightDist" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "commute_or" (formula "60"))
                              (rule "cnf_rightDist" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "commute_or" (formula "60"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "25"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "91"))
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
                              (rule "true_left" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,1,0") (ifseqformula "25"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "95"))
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
                              (rule "true_left" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "1,0") (ifseqformula "25"))
                              (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "94")))
                              (rule "true_left" (formula "50"))
                              (rule "cut_direct" (formula "103") (term "0"))
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                  (builtin "One Step Simplification" (formula "104"))
                                 (rule "impRight" (formula "104"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEq" (formula "63") (term "0,1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "65") (term "0,1,1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "66"))
                                 (rule "polySimp_homoEq" (formula "66"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "64") (term "0,0,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "67") (term "0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "67") (term "0,1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "66") (term "0,0,1,0") (ifseqformula "2"))
                                 (rule "polySimp_addComm0" (formula "66") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "66"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "21"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                  (builtin "One Step Simplification" (formula "104"))
                                 (rule "false_right" (formula "104"))
                                 (rule "definitionOfNewObjectsIsomorphic" (formula "103"))
                                 (branch "New on Heap 1"
                                    (rule "definitionOfNewOnHeap" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,0,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,1,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "90")))
                                    (rule "closeTrue" (formula "106"))
                                 )
                                 (branch "New on Heap 2"
                                    (rule "definitionOfNewOnHeap" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,0,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,1,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "81")))
                                    (rule "closeTrue" (formula "106"))
                                 )
                                 (branch "Same Types"
                                    (rule "definitionOfSameTypes" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,0"))
                                    (rule "castDel" (formula "105") (term "2,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "sameTypeTrue" (formula "106") (ifseqformula "47") (ifseqformula "77"))
                                    (rule "closeTrue" (formula "106"))
                                 )
                                 (branch "Objects Isomorphic"
                                    (rule "definitionOfObjectsIsomorphic" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "3,1,0"))
                                    (rule "castDel" (formula "105") (term "1,3,1,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "3,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,3,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "definitionOfObjectIsomorphic" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_1"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,1,1,0"))
                                    (rule "castDel" (formula "106") (term "1,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "106"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,1,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "106"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "2,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "closeTrue" (formula "107"))
                                 )
                              )
                           )
                           (branch " result_54.value@anon_heap_getOrder<<anonHeapFunction>> >= 0 FALSE"
                              (rule "inEqSimp_geqRight" (formula "75"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "59") (term "0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "59") (term "1,0,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0,0"))
                              (rule "qeq_literals" (formula "59") (term "0,0"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "applyEq" (formula "63") (term "0,0") (ifseqformula "60"))
                              (rule "polySimp_mulComm0" (formula "63") (term "0"))
                              (rule "applyEq" (formula "59") (term "0") (ifseqformula "63"))
                              (rule "inEqSimp_homoInEq0" (formula "59"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "59") (term "0"))
                              (rule "polySimp_addComm0" (formula "59") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "59") (term "0"))
                              (rule "add_literals" (formula "59") (term "1,1,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0"))
                              (rule "add_zero_right" (formula "59") (term "0"))
                              (rule "applyEq" (formula "61") (term "0") (ifseqformula "63"))
                              (rule "inEqSimp_homoInEq1" (formula "61"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "61") (term "0"))
                              (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "61") (term "0"))
                              (rule "add_literals" (formula "61") (term "1,1,0"))
                              (rule "times_zero_1" (formula "61") (term "1,0"))
                              (rule "add_zero_right" (formula "61") (term "0"))
                              (rule "applyEq" (formula "62") (term "0,1") (ifseqformula "60"))
                              (rule "inEqSimp_invertInEq1" (formula "59"))
                              (rule "times_zero_2" (formula "59") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                              (rule "polySimp_elimOne" (formula "61") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "59"))
                              (rule "add_zero_right" (formula "61") (term "0"))
                              (rule "polySimp_rightDist" (formula "61") (term "0"))
                              (rule "mul_literals" (formula "61") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                              (rule "polySimp_elimOne" (formula "61") (term "0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "94")))
                              (rule "true_left" (formula "13"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "95")))
                              (rule "true_left" (formula "1"))
                              (rule "cut_direct" (formula "103") (term "0"))
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                  (builtin "One Step Simplification" (formula "104"))
                                 (rule "impRight" (formula "104"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "64") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "67") (term "0,1,1") (ifseqformula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                  (builtin "One Step Simplification" (formula "104"))
                                 (rule "false_right" (formula "104"))
                                 (rule "definitionOfNewObjectsIsomorphic" (formula "103"))
                                 (branch "New on Heap 1"
                                    (rule "definitionOfNewOnHeap" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,1,0,0,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "90")))
                                    (rule "closeTrue" (formula "106"))
                                 )
                                 (branch "New on Heap 2"
                                    (rule "definitionOfNewOnHeap" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,1,0,0,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "81")))
                                    (rule "closeTrue" (formula "106"))
                                 )
                                 (branch "Same Types"
                                    (rule "definitionOfSameTypes" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,0"))
                                    (rule "castDel" (formula "105") (term "2,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,0,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "sameTypeTrue" (formula "106") (ifseqformula "48") (ifseqformula "77"))
                                    (rule "closeTrue" (formula "106"))
                                 )
                                 (branch "Objects Isomorphic"
                                    (rule "definitionOfObjectsIsomorphic" (formula "103") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "allRight" (formula "103") (inst "sk=i_0"))
                                    (rule "impRight" (formula "103"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "3,1,0"))
                                    (rule "castDel" (formula "105") (term "1,3,1,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "105") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "1,1,0"))
                                    (rule "castDel" (formula "105") (term "1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "105") (term "3,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "106") (term "0,1,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "definitionOfObjectIsomorphic" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_1"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,1,1,0"))
                                    (rule "castDel" (formula "106") (term "1,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "106"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,1,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "106"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "2,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "closeTrue" (formula "107"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "Exceptional Post (multiply)"
                         (builtin "One Step Simplification" (formula "81"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "46"))
                        (rule "andLeft" (formula "65"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "1,0") (ifseqformula "65"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,1,0") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,1,0") (ifseqformula "46"))
                        (rule "andLeft" (formula "66"))
                        (rule "andLeft" (formula "66"))
                        (rule "andLeft" (formula "68"))
                        (rule "notLeft" (formula "66"))
                        (rule "close" (formula "69") (ifseqformula "68"))
                     )
                     (branch "Pre (multiply)"
                         (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                        (rule "wellFormedAnonEQ" (formula "79") (term "0,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1,1") (ifseqformula "46"))
                        (rule "wellFormedAnonEQ" (formula "79") (term "0,0,1") (ifseqformula "46"))
                        (rule "replace_known_left" (formula "79") (term "1,0,1") (ifseqformula "53"))
                         (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "21")) (ifInst ""  (formula "45")) (ifInst ""  (formula "64")) (ifInst ""  (formula "65")) (ifInst ""  (formula "55")))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "79"))
                        (rule "closeTrue" (formula "79"))
                     )
                     (branch "Null reference (_p_3_B = null)"
                         (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "82")))
                        (rule "closeTrue" (formula "79"))
                     )
                  )
                  (branch "Exceptional Post (mod)"
                      (builtin "One Step Simplification" (formula "54"))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "46"))
                     (rule "andLeft" (formula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,0") (ifseqformula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0") (ifseqformula "46"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "57"))
                     (rule "notLeft" (formula "55"))
                     (rule "close" (formula "58") (ifseqformula "57"))
                  )
                  (branch "Pre (mod)"
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                     (rule "wellFormedAnonEQ" (formula "65") (term "0,1") (ifseqformula "46"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "1,1") (ifseqformula "46"))
                     (rule "replace_known_left" (formula "65") (term "0,0,1") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "45")) (ifInst ""  (formula "53")) (ifInst ""  (formula "47")))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "65"))
                     (rule "pullOutSelect" (formula "65") (term "0,1") (inst "selectSK=java_math_BigInteger_value_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                     (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                     (rule "applyEqReverse" (formula "66") (term "0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "26")))
                     (rule "closeTrue" (formula "65"))
                  )
                  (branch "Null reference (var_4 = null)"
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "69")))
                     (rule "closeTrue" (formula "65"))
                  )
               )
               (branch "Exceptional Post (getOrder)"
                   (builtin "One Step Simplification" (formula "57"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0") (ifseqformula "46"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "49"))
                  (rule "notLeft" (formula "47"))
                  (rule "close" (formula "50") (ifseqformula "49"))
               )
               (branch "Pre (getOrder)"
                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "21")))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "55"))
                  (rule "closeTrue" (formula "55"))
               )
               (branch "Null reference (s = null)"
                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                  (rule "closeTrue" (formula "55"))
               )
            )
            (branch "Exceptional Post (multiply)"
                (builtin "One Step Simplification" (formula "39"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "30"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "33"))
               (rule "notLeft" (formula "31"))
               (rule "close" (formula "34") (ifseqformula "33"))
            )
            (branch "Pre (multiply)"
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")) (ifInst ""  (formula "6")) (ifInst ""  (formula "40")) (ifInst ""  (formula "10")))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "37"))
               (rule "closeTrue" (formula "37"))
            )
            (branch "Null reference (_p_3_A = null)"
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "39")))
               (rule "closeTrue" (formula "37"))
            )
         )
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "30"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "assignment" (formula "40") (term "1"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "blockEmpty" (formula "40") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
         (rule "leq_literals" (formula "19") (term "0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "returnUnfold" (formula "39") (term "1") (inst "#v0=e"))
         (rule "variableDeclarationAssign" (formula "39") (term "1"))
         (rule "variableDeclaration" (formula "39") (term "1") (newnames "e_1"))
          (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_multiply,result_53,exc_69,heapAfter_multiply,anon_heap_multiply") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
         (branch "Post (multiply)"
             (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "47")) (ifInst ""  (formula "10")) (ifInst ""  (formula "47")) (ifInst ""  (formula "14")))
             (builtin "One Step Simplification" (formula "32"))
             (builtin "One Step Simplification" (formula "31"))
             (builtin "One Step Simplification" (formula "43"))
            (rule "andLeft" (formula "31"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,1,0") (ifseqformula "31"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "36"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "38"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
            (rule "assignment" (formula "51") (term "1"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "applyEq" (formula "38") (term "5") (ifseqformula "32"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "39"))
            (rule "true_left" (formula "39"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "36"))
            (rule "true_left" (formula "36"))
            (rule "methodCallReturn" (formula "48") (term "1"))
            (rule "assignment" (formula "48") (term "1"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "methodCallEmpty" (formula "48") (term "1"))
            (rule "tryEmpty" (formula "48") (term "1"))
            (rule "emptyModality" (formula "48") (term "1"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "notRight" (formula "48"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "3"))
            (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "4"))
            (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "41")))
            (rule "ifthenelse_negated" (formula "6") (term "0"))
            (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "42") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "42"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "applyEqReverse" (formula "58") (term "0,1,1") (ifseqformula "6"))
            (rule "hideAuxiliaryEq" (formula "6"))
            (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "39") (term "4") (ifseqformula "2"))
            (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "57") (term "1,1,0,1,0,1") (ifseqformula "1"))
            (rule "ifElseSplit" (formula "50"))
            (branch "if x_2 true"
                (builtin "One Step Simplification" (formula "51"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption0" (formula "30") (term "0") (ifseqformula "1"))
               (rule "leq_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "1"))
               (rule "leq_literals" (formula "28") (term "0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "30") (term "0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "notLeft" (formula "30"))
               (rule "inEqSimp_geqRight" (formula "39"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "1"))
               (rule "leq_literals" (formula "30") (term "0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "1,1,1,0,1") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "methodCallWithAssignmentUnfoldArguments" (formula "50") (term "1"))
               (rule "variableDeclarationAssign" (formula "50") (term "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_4"))
               (rule "assignment" (formula "50") (term "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "variableDeclarationAssign" (formula "50") (term "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_5"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "11"))
               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "18"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "19"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "20"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "methodCallWithAssignmentWithinClass" (formula "55") (term "1") (inst "#v0=b"))
               (rule "variableDeclaration" (formula "55") (term "1") (newnames "b_1"))
               (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_order,savedHeapBefore_order"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "returnUnfold" (formula "55") (term "1") (inst "#v0=b_2"))
               (rule "variableDeclarationAssign" (formula "55") (term "1"))
               (rule "variableDeclaration" (formula "55") (term "1") (newnames "b_2"))
               (rule "methodCallWithAssignmentUnfoldTarget" (formula "55") (term "1") (inst "#v0=s"))
               (rule "variableDeclaration" (formula "55") (term "1") (newnames "s"))
               (rule "assignment_read_attribute_this" (formula "55") (term "1"))
                (builtin "One Step Simplification" (formula "55"))
                (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_getOrder,result_54,exc_70,heapAfter_getOrder,anon_heap_getOrder") (contract "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve[org.bouncycastle.math.ec.ECCurve::getOrder()].JML normal_behavior operation contract.0"))
               (branch "Post (getOrder)"
                   (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "15")))
                   (builtin "One Step Simplification" (formula "59"))
                   (builtin "One Step Simplification" (formula "47"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,1,0") (ifseqformula "46"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "48"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "48"))
                  (rule "andLeft" (formula "49"))
                  (rule "andLeft" (formula "50"))
                  (rule "andLeft" (formula "49"))
                  (rule "notLeft" (formula "52"))
                  (rule "andLeft" (formula "49"))
                  (rule "andLeft" (formula "49"))
                  (rule "notLeft" (formula "49"))
                  (rule "notLeft" (formula "49"))
                  (rule "eqSymm" (formula "48"))
                  (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "55")))
                  (rule "assignment" (formula "67") (term "1"))
                   (builtin "One Step Simplification" (formula "67"))
                  (rule "applyEq" (formula "53") (term "4") (ifseqformula "52"))
                  (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "63")) (ifInst ""  (formula "6")))
                  (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "48"))
                  (rule "hideAuxiliaryEq" (formula "48"))
                  (rule "eqSymm" (formula "48"))
                  (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_math_BigInteger_value_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                  (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "48"))
                  (rule "hideAuxiliaryEq" (formula "48"))
                  (rule "eqSymm" (formula "48"))
                  (rule "applyEq" (formula "74") (term "1,1,0,1") (ifseqformula "48"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "54"))
                  (rule "true_left" (formula "54"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "51"))
                  (rule "true_left" (formula "51"))
                  (rule "methodCallReturn" (formula "65") (term "1"))
                  (rule "assignment" (formula "65") (term "1"))
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "methodCallEmpty" (formula "65") (term "1"))
                  (rule "blockEmpty" (formula "65") (term "1"))
                  (rule "assignment" (formula "65") (term "1"))
                   (builtin "One Step Simplification" (formula "65"))
                   (builtin "Use Operation Contract" (formula "65") (newnames "heapBefore_mod,result_55,exc_71,heapAfter_mod,anon_heap_mod") (contract "java.math.BigInteger[java.math.BigInteger::mod(java.math.BigInteger)].JML normal_behavior operation contract.0"))
                  (branch "Post (mod)"
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                      (builtin "One Step Simplification" (formula "54"))
                      (builtin "One Step Simplification" (formula "55"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,1") (ifseqformula "46"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "46"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,1,0") (ifseqformula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,1,0") (ifseqformula "46"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "57"))
                     (rule "andLeft" (formula "57"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "61"))
                     (rule "andLeft" (formula "59"))
                     (rule "notLeft" (formula "63"))
                     (rule "andLeft" (formula "59"))
                     (rule "notLeft" (formula "59"))
                     (rule "notLeft" (formula "59"))
                     (rule "orRight" (formula "66"))
                     (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "47")))
                     (rule "true_left" (formula "65"))
                     (rule "replace_known_right" (formula "56") (term "1,0,1") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "67")) (ifInst ""  (formula "65")))
                     (rule "assignment" (formula "80") (term "1"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "blockEmpty" (formula "80") (term "1"))
                     (rule "applyEq" (formula "62") (term "5") (ifseqformula "55"))
                     (rule "jmod_axiom" (formula "57") (term "1"))
                     (rule "polySimp_mulComm1" (formula "57") (term "1,1"))
                     (rule "polySimp_homoEq" (formula "57"))
                     (rule "polySimp_addComm1" (formula "57") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "57"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                     (rule "polySimp_elimOne" (formula "57") (term "0"))
                     (rule "pullOutSelect" (formula "57") (term "0,1") (inst "selectSK=java_math_BigInteger_value_1"))
                     (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                     (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "83")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0") (ifseqformula "46"))
                     (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "46"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "83")) (ifInst ""  (formula "19")))
                     (rule "applyEqReverse" (formula "58") (term "0,1") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                     (rule "hideAuxiliaryEq" (formula "57"))
                     (rule "pullOutSelect" (formula "57") (term "0,1,1") (inst "selectSK=java_math_BigInteger_value_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "68")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0") (ifseqformula "46"))
                     (rule "replace_known_right" (formula "57") (term "0,0,0,0") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "67")))
                     (rule "applyEqReverse" (formula "58") (term "0,1,1") (ifseqformula "57"))
                     (rule "hideAuxiliaryEq" (formula "57"))
                     (rule "polySimp_addComm0" (formula "57") (term "1"))
                     (rule "pullOutSelect" (formula "57") (term "1,0") (inst "selectSK=java_math_BigInteger_value_3"))
                     (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "57"))
                     (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "70")))
                     (rule "replaceKnownSelect_taclet000100_8" (formula "57") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000100_9" (formula "57") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0") (ifseqformula "46"))
                     (rule "replace_known_right" (formula "57") (term "0,0,0,0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "47")))
                     (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "58") (term "1,0,0") (ifseqformula "57"))
                     (rule "hideAuxiliaryEq" (formula "57"))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "notLeft" (formula "63"))
                     (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=java_math_BigInteger_value_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "46"))
                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "66")))
                     (rule "ifthenelse_negated" (formula "63") (term "0"))
                     (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "64"))
                     (rule "ifEqualsInteger" (formula "63"))
                     (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                     (rule "applyEq" (formula "64") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "64") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "64") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "64") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "64") (term "1,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "64") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "64") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "64") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "63") (term "0,0,1") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "37")) (ifInst ""  (formula "20")))
                     (rule "true_left" (formula "63"))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "58"))
                     (rule "andLeft" (formula "58"))
                     (rule "notLeft" (formula "58"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=java_math_BigInteger_value_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "54"))
                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "66")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0") (ifseqformula "46"))
                     (rule "ifthenelse_negated" (formula "58") (term "0"))
                     (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "59"))
                     (rule "ifEqualsInteger" (formula "58"))
                     (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                     (rule "applyEq" (formula "59") (term "1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "59") (term "1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "59") (term "1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "59") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet0000100_19" (formula "1") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000100_20" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "59") (term "1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "59") (term "1,0,1,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "59") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "59") (term "1,0,0,0,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "59") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "59") (term "1,0,1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "58") (term "0,0,0,1") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "37")))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=java_math_BigInteger_value_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "46"))
                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "80")) (ifInst ""  (formula "37")))
                     (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "58"))
                     (rule "hideAuxiliaryEq" (formula "58"))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "61"))
                     (rule "replaceKnownSelect_taclet0000100_21" (formula "61") (term "0,1"))
                     (rule "replaceKnownSelect_taclet0000100_22" (formula "61") (term "0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000100_23" (formula "61") (term "0,0,0"))
                     (rule "andLeft" (formula "61"))
                     (rule "notLeft" (formula "61"))
                     (rule "returnUnfold" (formula "79") (term "1") (inst "#v0=e"))
                     (rule "variableDeclarationAssign" (formula "79") (term "1"))
                     (rule "variableDeclaration" (formula "79") (term "1") (newnames "e_2"))
                     (rule "jdiv_axiom" (formula "57") (term "0,0"))
                     (rule "eqSymm" (formula "57"))
                     (rule "inEqSimp_contradInEq0" (formula "57") (term "0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "57") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "eqSymm" (formula "57"))
                     (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "57"))
                     (rule "polySimp_mulComm1" (formula "58") (term "0"))
                     (rule "polySimp_homoEq" (formula "58"))
                     (rule "polySimp_mulLiterals" (formula "58") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "58") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "58"))
                     (rule "polySimp_mulComm0" (formula "58") (term "1"))
                     (rule "polySimp_rightDist" (formula "58") (term "1"))
                     (rule "polySimp_mulAssoc" (formula "58") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "58") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "58") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "58") (term "0,1"))
                      (builtin "Use Operation Contract" (formula "80") (newnames "heapBefore_multiply_0,result_56,exc_72,heapAfter_multiply_0,anon_heap_multiply_0") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
                     (branch "Post (multiply)"
                         (builtin "One Step Simplification" (formula "84"))
                         (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                         (builtin "One Step Simplification" (formula "66"))
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,1") (ifseqformula "46"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "46"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1,0") (ifseqformula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1,0") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,1,1,0") (ifseqformula "46"))
                        (rule "andLeft" (formula "70"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "69"))
                        (rule "andLeft" (formula "70"))
                        (rule "andLeft" (formula "69"))
                        (rule "notLeft" (formula "72"))
                        (rule "andLeft" (formula "69"))
                        (rule "andLeft" (formula "69"))
                        (rule "notLeft" (formula "69"))
                        (rule "notLeft" (formula "69"))
                        (rule "orRight" (formula "77"))
                        (rule "orRight" (formula "77"))
                        (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "82")) (ifInst ""  (formula "56")))
                        (rule "true_left" (formula "76"))
                        (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")))
                        (rule "assignment" (formula "95") (term "1"))
                         (builtin "One Step Simplification" (formula "95"))
                        (rule "applyEq" (formula "73") (term "5") (ifseqformula "72"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "74"))
                        (rule "true_left" (formula "74"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "70"))
                        (rule "true_left" (formula "70"))
                        (rule "methodCallReturn" (formula "92") (term "1"))
                        (rule "assignment" (formula "92") (term "1"))
                         (builtin "One Step Simplification" (formula "92"))
                        (rule "methodCallEmpty" (formula "92") (term "1"))
                        (rule "tryEmpty" (formula "92") (term "1"))
                        (rule "emptyModality" (formula "92") (term "1"))
                         (builtin "One Step Simplification" (formula "92"))
                        (rule "notRight" (formula "92"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "75") (term "4") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "4"))
                        (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,0,0") (ifseqformula "58"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,1,0,0") (ifseqformula "50"))
                        (rule "replace_known_right" (formula "18") (term "1,0,1,0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "77")) (ifInst ""  (formula "78")))
                        (rule "ifthenelse_negated" (formula "18") (term "0"))
                        (rule "applyEq" (formula "100") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "91") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "88") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "80"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "applyEqReverse" (formula "102") (term "1,1,1") (ifseqformula "18"))
                        (rule "hideAuxiliaryEq" (formula "18"))
                        (rule "eqSymm" (formula "101") (term "1,1"))
                        (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "8") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "55") (term "1,2") (ifseqformula "1"))
                        (rule "div_axiom" (formula "60") (term "0,1") (inst "quotient=quotient_0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "60") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "60") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "60") (term "1,2,1,1"))
                        (rule "polySimp_addComm1" (formula "60") (term "1,1,1,1"))
                        (rule "commute_and" (formula "60") (term "0,1"))
                        (rule "equiv_left" (formula "33"))
                        (branch "Case 1"
                           (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "33"))
                           (rule "leq_literals" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "inEqSimp_antiSymm" (formula "34") (ifseqformula "33"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                           (rule "leq_literals" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "applyEq" (formula "102") (term "0,0,0,0,1") (ifseqformula "33"))
                           (rule "eqSymm" (formula "102") (term "0,0,0,1"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                           (rule "qeq_literals" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "inEqSimp_contradEq3" (formula "101") (term "0,0,0,1") (ifseqformula "11"))
                           (rule "times_zero_1" (formula "101") (term "1,0,0,0,0,0,1"))
                           (rule "add_literals" (formula "101") (term "0,0,0,0,0,1"))
                           (rule "qeq_literals" (formula "101") (term "0,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "101"))
                           (rule "definitionOfNewObjectsIsomorphic" (formula "101"))
                           (branch "New on Heap 1"
                              (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "32"))
                              (rule "applyEq" (formula "35") (term "4") (ifseqformula "17"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "17"))
                              (rule "leq_literals" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "definitionOfNewOnHeap" (formula "100") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "allRight" (formula "100") (inst "sk=i_0"))
                              (rule "impRight" (formula "100"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,1"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,0"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,0"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "102") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "103") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "78")))
                              (rule "closeTrue" (formula "103"))
                           )
                           (branch "New on Heap 2"
                              (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "32"))
                              (rule "applyEq" (formula "35") (term "4") (ifseqformula "17"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "17"))
                              (rule "leq_literals" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "definitionOfNewOnHeap" (formula "100") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "allRight" (formula "100") (inst "sk=i_0"))
                              (rule "impRight" (formula "100"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,1"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,0"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,0"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "102") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "103") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "87")))
                              (rule "closeTrue" (formula "103"))
                           )
                           (branch "Same Types"
                              (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "32"))
                              (rule "applyEq" (formula "35") (term "4") (ifseqformula "17"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "17"))
                              (rule "leq_literals" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "definitionOfSameTypes" (formula "100") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "allRight" (formula "100") (inst "sk=i_0"))
                              (rule "impRight" (formula "100"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0"))
                              (rule "castDel" (formula "102") (term "1,0,0"))
                              (rule "castDel" (formula "102") (term "2,0,0"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,1"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,0"))
                              (rule "castDel" (formula "102") (term "1,1,0"))
                              (rule "castDel" (formula "102") (term "2,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "103") (term "0,1,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "sameTypeTrue" (formula "103") (ifseqformula "74") (ifseqformula "47"))
                              (rule "closeTrue" (formula "103"))
                           )
                           (branch "Objects Isomorphic"
                              (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "32"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "17"))
                              (rule "leq_literals" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "33") (term "4") (ifseqformula "17"))
                              (rule "definitionOfObjectsIsomorphic" (formula "100") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "100"))
                              (rule "allRight" (formula "100") (inst "sk=i_0"))
                              (rule "impRight" (formula "100"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "3,1,0"))
                              (rule "castDel" (formula "102") (term "1,3,1,0"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "3,1,1"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,0"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,0"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "102") (term "1,1,0"))
                              (rule "castDel" (formula "102") (term "1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "102") (term "0,0,0,1"))
                              (rule "castDel" (formula "102") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "102") (term "1,0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "103") (term "0,3,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "definitionOfObjectIsomorphic" (formula "101") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "101"))
                              (rule "allRight" (formula "101") (inst "sk=i_1"))
                              (rule "impRight" (formula "101"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "103") (term "2,1,1"))
                              (rule "getOfSeqSingleton" (formula "103") (term "0,0,0,1"))
                              (rule "castDel" (formula "103") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "103") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "103") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "103") (term "0,1,1,0"))
                              (rule "castDel" (formula "103") (term "1,0,1,1,0"))
                               (builtin "One Step Simplification" (formula "103"))
                              (rule "getOfSeqSingleton" (formula "103") (term "0,0,1,0"))
                              (rule "castDel" (formula "103") (term "1,0,0,1,0"))
                               (builtin "One Step Simplification" (formula "103"))
                              (rule "getOfSeqSingleton" (formula "103") (term "0,0,0,0"))
                              (rule "castDel" (formula "103") (term "1,0,0,0,0"))
                              (rule "castDel" (formula "103") (term "2,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "104") (term "0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "104"))
                           )
                        )
                        (branch "Case 2"
                           (rule "inEqSimp_leqRight" (formula "77"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "77"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "2"))
                           (rule "leq_literals" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "ifthenelse_split_for" (formula "59") (term "1,1"))
                           (branch " result_54.value@anon_heap_getOrder<<anonHeapFunction>> >= 0 TRUE"
                              (rule "cnf_rightDist" (formula "60"))
                              (rule "andLeft" (formula "60"))
                              (rule "commute_or" (formula "61"))
                              (rule "cnf_rightDist" (formula "60"))
                              (rule "andLeft" (formula "60"))
                              (rule "commute_or" (formula "61"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "1,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "94")))
                              (rule "true_left" (formula "50"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "94")))
                              (rule "true_left" (formula "12"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "19"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                              (rule "true_left" (formula "1"))
                              (rule "cut_direct" (formula "104") (term "0"))
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                  (builtin "One Step Simplification" (formula "105"))
                                 (rule "impRight" (formula "105"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "17"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                  (builtin "One Step Simplification" (formula "105"))
                                 (rule "false_right" (formula "105"))
                                 (rule "definitionOfNewObjectsIsomorphic" (formula "104"))
                                 (branch "New on Heap 1"
                                    (rule "definitionOfNewOnHeap" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,0,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "82")))
                                    (rule "closeTrue" (formula "107"))
                                 )
                                 (branch "New on Heap 2"
                                    (rule "definitionOfNewOnHeap" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,0,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "91")))
                                    (rule "closeTrue" (formula "107"))
                                 )
                                 (branch "Same Types"
                                    (rule "definitionOfSameTypes" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,0"))
                                    (rule "castDel" (formula "106") (term "2,1,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "sameTypeTrue" (formula "107") (ifseqformula "78") (ifseqformula "48"))
                                    (rule "closeTrue" (formula "107"))
                                 )
                                 (branch "Objects Isomorphic"
                                    (rule "definitionOfObjectsIsomorphic" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "3,1,0"))
                                    (rule "castDel" (formula "106") (term "1,3,1,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "3,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,1,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "definitionOfObjectIsomorphic" (formula "105") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "105"))
                                    (rule "allRight" (formula "105") (inst "sk=i_1"))
                                    (rule "impRight" (formula "105"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,0,0,0"))
                                    (rule "castDel" (formula "107") (term "2,0,0,0,0"))
                                    (rule "castDel" (formula "107") (term "1,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,0,0,1"))
                                    (rule "castDel" (formula "107") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "107") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,1,1,0"))
                                    (rule "castDel" (formula "107") (term "1,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "107"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,0,1,0"))
                                    (rule "castDel" (formula "107") (term "1,0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "107"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "2,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "108") (term "0,0,0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "closeTrue" (formula "108"))
                                 )
                              )
                           )
                           (branch " result_54.value@anon_heap_getOrder<<anonHeapFunction>> >= 0 FALSE"
                              (rule "inEqSimp_geqRight" (formula "76"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "60") (term "0") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "60") (term "1,0,0,0"))
                              (rule "add_literals" (formula "60") (term "0,0,0"))
                              (rule "qeq_literals" (formula "60") (term "0,0"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "andLeft" (formula "60"))
                              (rule "andLeft" (formula "60"))
                              (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "61"))
                              (rule "polySimp_mulComm0" (formula "64") (term "0"))
                              (rule "applyEq" (formula "62") (term "0") (ifseqformula "64"))
                              (rule "inEqSimp_homoInEq1" (formula "62"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "62") (term "0"))
                              (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "62") (term "0"))
                              (rule "add_literals" (formula "62") (term "1,1,0"))
                              (rule "times_zero_1" (formula "62") (term "1,0"))
                              (rule "add_zero_right" (formula "62") (term "0"))
                              (rule "applyEq" (formula "60") (term "0") (ifseqformula "64"))
                              (rule "inEqSimp_homoInEq0" (formula "60"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "60") (term "0"))
                              (rule "polySimp_addComm0" (formula "60") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "60") (term "0"))
                              (rule "add_literals" (formula "60") (term "1,1,0"))
                              (rule "times_zero_1" (formula "60") (term "1,0"))
                              (rule "add_zero_right" (formula "60") (term "0"))
                              (rule "applyEq" (formula "63") (term "0,1") (ifseqformula "61"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                              (rule "polySimp_elimOne" (formula "62") (term "0"))
                              (rule "inEqSimp_invertInEq1" (formula "60"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                              (rule "mul_literals" (formula "60") (term "1"))
                              (rule "polySimp_elimOne" (formula "60") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "60"))
                              (rule "add_zero_right" (formula "62") (term "0"))
                              (rule "polySimp_rightDist" (formula "62") (term "0"))
                              (rule "mul_literals" (formula "62") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                              (rule "polySimp_elimOne" (formula "62") (term "0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "1,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "1,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "94")))
                              (rule "true_left" (formula "51"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                              (rule "true_left" (formula "1"))
                              (rule "cut_direct" (formula "104") (term "0"))
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                                  (builtin "One Step Simplification" (formula "105"))
                                 (rule "impRight" (formula "105"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                              (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                                  (builtin "One Step Simplification" (formula "105"))
                                 (rule "false_right" (formula "105"))
                                 (rule "definitionOfNewObjectsIsomorphic" (formula "104"))
                                 (branch "New on Heap 1"
                                    (rule "definitionOfNewOnHeap" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "82")))
                                    (rule "closeTrue" (formula "107"))
                                 )
                                 (branch "New on Heap 2"
                                    (rule "definitionOfNewOnHeap" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,0,0,1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "91")))
                                    (rule "closeTrue" (formula "107"))
                                 )
                                 (branch "Same Types"
                                    (rule "definitionOfSameTypes" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,0"))
                                    (rule "castDel" (formula "106") (term "2,1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "sameTypeTrue" (formula "107") (ifseqformula "78") (ifseqformula "49"))
                                    (rule "closeTrue" (formula "107"))
                                 )
                                 (branch "Objects Isomorphic"
                                    (rule "definitionOfObjectsIsomorphic" (formula "104") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "104"))
                                    (rule "allRight" (formula "104") (inst "sk=i_0"))
                                    (rule "impRight" (formula "104"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,0"))
                                    (rule "castDel" (formula "106") (term "1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,1"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "1,1,1"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "3,1,0"))
                                    (rule "castDel" (formula "106") (term "1,3,1,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "2,0,0,0,0"))
                                    (rule "castDel" (formula "106") (term "1,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "106") (term "3,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "107") (term "0,0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "definitionOfObjectIsomorphic" (formula "105") (inst "i=i"))
                                     (builtin "One Step Simplification" (formula "105"))
                                    (rule "allRight" (formula "105") (inst "sk=i_1"))
                                    (rule "impRight" (formula "105"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,0,1,0"))
                                    (rule "castDel" (formula "107") (term "1,0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "107"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,1,1,0"))
                                    (rule "castDel" (formula "107") (term "1,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "107"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,0,0,0"))
                                    (rule "castDel" (formula "107") (term "2,0,0,0,0"))
                                    (rule "castDel" (formula "107") (term "1,0,0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,0,0,1"))
                                    (rule "castDel" (formula "107") (term "1,0,0,0,1"))
                                    (rule "castDel" (formula "107") (term "2,0,0,0,1"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "0,1,1"))
                                    (rule "getOfSeqSingleton" (formula "107") (term "2,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "replace_known_left" (formula "108") (term "0,2,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "closeTrue" (formula "108"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "Exceptional Post (multiply)"
                         (builtin "One Step Simplification" (formula "82"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "46"))
                        (rule "andLeft" (formula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0") (ifseqformula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,0") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,1,0") (ifseqformula "46"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "69"))
                        (rule "notLeft" (formula "67"))
                        (rule "close" (formula "70") (ifseqformula "69"))
                     )
                     (branch "Pre (multiply)"
                         (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")))
                        (rule "wellFormedAnonEQ" (formula "80") (term "0,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "1,1") (ifseqformula "54"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,1,1") (ifseqformula "46"))
                        (rule "wellFormedAnonEQ" (formula "80") (term "0,0,1") (ifseqformula "46"))
                        (rule "replace_known_left" (formula "80") (term "1,0,1") (ifseqformula "53"))
                         (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "15")) (ifInst ""  (formula "45")) (ifInst ""  (formula "65")) (ifInst ""  (formula "66")) (ifInst ""  (formula "56")))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "80"))
                        (rule "closeTrue" (formula "80"))
                     )
                     (branch "Null reference (_p_3_A = null)"
                         (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "81")))
                        (rule "closeTrue" (formula "80"))
                     )
                  )
                  (branch "Exceptional Post (mod)"
                      (builtin "One Step Simplification" (formula "54"))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,1,0,1,1") (ifseqformula "46"))
                     (rule "andLeft" (formula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,0") (ifseqformula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0") (ifseqformula "46"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "57"))
                     (rule "notLeft" (formula "55"))
                     (rule "close" (formula "59") (ifseqformula "58"))
                  )
                  (branch "Pre (mod)"
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                     (rule "wellFormedAnonEQ" (formula "65") (term "0,1") (ifseqformula "46"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "1,1") (ifseqformula "46"))
                     (rule "replace_known_left" (formula "65") (term "0,0,1") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "45")) (ifInst ""  (formula "53")) (ifInst ""  (formula "47")))
                     (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "65"))
                     (rule "pullOutSelect" (formula "65") (term "0,1") (inst "selectSK=java_math_BigInteger_value_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
                     (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                     (rule "applyEqReverse" (formula "66") (term "0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "63"))
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "20")))
                     (rule "closeTrue" (formula "65"))
                  )
                  (branch "Null reference (var_4 = null)"
                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "67")))
                     (rule "closeTrue" (formula "65"))
                  )
               )
               (branch "Exceptional Post (getOrder)"
                   (builtin "One Step Simplification" (formula "57"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0") (ifseqformula "46"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "49"))
                  (rule "notLeft" (formula "47"))
                  (rule "close" (formula "50") (ifseqformula "49"))
               )
               (branch "Pre (getOrder)"
                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "15")))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "55"))
                  (rule "closeTrue" (formula "55"))
               )
               (branch "Null reference (s = null)"
                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "50")))
                  (rule "closeTrue" (formula "55"))
               )
            )
            (branch "if x_2 false"
                (builtin "One Step Simplification" (formula "51"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_leqRight" (formula "40"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "assignment" (formula "51") (term "1"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "blockEmpty" (formula "51") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "1"))
               (rule "leq_literals" (formula "29") (term "0"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "returnUnfold" (formula "50") (term "1") (inst "#v0=e"))
               (rule "variableDeclarationAssign" (formula "50") (term "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "e_2"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "14"))
               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "1,1,1,0,1") (ifseqformula "8"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "1"))
                (builtin "Use Operation Contract" (formula "51") (newnames "heapBefore_multiply_0,result_54,exc_70,heapAfter_multiply_0,anon_heap_multiply_0") (contract "org.bouncycastle.math.ec.ECPoint[org.bouncycastle.math.ec.ECPoint::multiply(java.math.BigInteger)].JML normal_behavior operation contract.0"))
               (branch "Post (multiply)"
                   (builtin "One Step Simplification" (formula "43"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")) (ifInst ""  (formula "57")) (ifInst ""  (formula "13")))
                   (builtin "One Step Simplification" (formula "55"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1,0") (ifseqformula "42"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "45"))
                  (rule "andLeft" (formula "45"))
                  (rule "andLeft" (formula "47"))
                  (rule "andLeft" (formula "45"))
                  (rule "notLeft" (formula "49"))
                  (rule "andLeft" (formula "45"))
                  (rule "notLeft" (formula "46"))
                  (rule "notLeft" (formula "45"))
                  (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")))
                  (rule "assignment" (formula "63") (term "1"))
                   (builtin "One Step Simplification" (formula "63"))
                  (rule "applyEq" (formula "49") (term "5") (ifseqformula "48"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "50"))
                  (rule "true_left" (formula "50"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "46"))
                  (rule "true_left" (formula "46"))
                  (rule "methodCallReturn" (formula "60") (term "1"))
                  (rule "assignment" (formula "60") (term "1"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "methodCallEmpty" (formula "60") (term "1"))
                  (rule "tryEmpty" (formula "60") (term "1"))
                  (rule "emptyModality" (formula "60") (term "1"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "notRight" (formula "60"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "3"))
                  (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "68") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "70") (term "1,1,1,1,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "4") (ifseqformula "2"))
                  (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "2"))
                  (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "4"))
                  (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                  (rule "applyEqReverse" (formula "70") (term "1,1,1") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "eqSymm" (formula "69") (term "1,1"))
                  (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0") (ifseqformula "12"))
                  (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "62")))
                  (rule "true_left" (formula "17"))
                  (rule "equiv_left" (formula "27"))
                  (branch "Case 1"
                     (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "27"))
                     (rule "leq_literals" (formula "26") (term "0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "26"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "applyEq" (formula "29") (term "4") (ifseqformula "11"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "11"))
                     (rule "leq_literals" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "26"))
                     (rule "applyEq" (formula "69") (term "0,0,0,0,1") (ifseqformula "27"))
                     (rule "eqSymm" (formula "69") (term "0,0,0,1"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                     (rule "leq_literals" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "equiv_left" (formula "31"))
                     (branch "Case 1"
                        (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "31"))
                        (rule "leq_literals" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "30"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "32") (term "4") (ifseqformula "6"))
                        (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "30"))
                        (rule "replace_known_left" (formula "67") (term "0,0,0,1") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
                        (rule "qeq_literals" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                        (rule "leq_literals" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "1,1,1,0,1") (ifseqformula "12"))
                        (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "1,0,1,0,1") (ifseqformula "19"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "20"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "15"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "22"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "cut_direct" (formula "70") (term "0"))
                        (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                            (builtin "One Step Simplification" (formula "71"))
                           (rule "impRight" (formula "71"))
                           (rule "andLeft" (formula "1"))
                           (rule "Use_information_flow_contract_for_compareTo_325434207_0_0" (formula "39") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                           (rule "true_left" (formula "39"))
                           (rule "Use_information_flow_contract_for_compareTo_325434207_00_1" (formula "39") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                           (rule "true_left" (formula "39"))
                           (rule "Use_information_flow_contract_for_compareTo_325434207_00_1" (formula "39") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                           (rule "true_left" (formula "39"))
                           (rule "Use_information_flow_contract_for_compareTo_325434207_0_0" (formula "39") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                           (rule "true_left" (formula "39"))
                           (rule "Use_information_flow_contract_for_multiply_1272441881_0100_2" (formula "54") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "69")) (ifInst ""  (formula "71")))
                           (rule "replaceKnownSelect_taclet010100_6" (formula "54") (term "0,1,1,1"))
                           (rule "replaceKnownSelect_taclet0100_3" (formula "54") (term "1,1,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010100_7" (formula "54") (term "0,1,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0100_4" (formula "54") (term "1,1,1,1"))
                           (rule "eqSymm" (formula "54") (term "1,0,1,1"))
                           (rule "eqSymm" (formula "54") (term "0,0,1,1"))
                           (rule "eqSymm" (formula "54") (term "0,1"))
                           (rule "replace_known_left" (formula "54") (term "0,0,1,1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "74")))
                           (rule "applyEq" (formula "54") (term "0,0,1,1") (ifseqformula "34"))
                           (rule "eqSymm" (formula "54") (term "0,1,1"))
                           (rule "replace_known_left" (formula "54") (term "0,1,1") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "notLeft" (formula "54"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "55") (term "1"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "55"))
                           (rule "closeTrue" (formula "55"))
                        )
                        (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                            (builtin "One Step Simplification" (formula "71"))
                           (rule "false_right" (formula "71"))
                           (rule "definitionOfNewObjectsIsomorphic" (formula "70"))
                           (branch "New on Heap 1"
                              (rule "definitionOfNewOnHeap" (formula "70") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "70"))
                              (rule "allRight" (formula "70") (inst "sk=i_0"))
                              (rule "impRight" (formula "70"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0,0,0"))
                              (rule "castDel" (formula "72") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "72") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0,0,1"))
                              (rule "castDel" (formula "72") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "72") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "72") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "73") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "55")))
                              (rule "closeTrue" (formula "73"))
                           )
                           (branch "New on Heap 2"
                              (rule "definitionOfNewOnHeap" (formula "70") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "70"))
                              (rule "allRight" (formula "70") (inst "sk=i_0"))
                              (rule "impRight" (formula "70"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0,0,0"))
                              (rule "castDel" (formula "72") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "72") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0,0,1"))
                              (rule "castDel" (formula "72") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "72") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "72") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "73") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "57")))
                              (rule "closeTrue" (formula "73"))
                           )
                           (branch "Same Types"
                              (rule "definitionOfSameTypes" (formula "70") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "70"))
                              (rule "allRight" (formula "70") (inst "sk=i_0"))
                              (rule "impRight" (formula "70"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0"))
                              (rule "castDel" (formula "72") (term "2,0,0"))
                              (rule "castDel" (formula "72") (term "1,0,0"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,0"))
                              (rule "castDel" (formula "72") (term "2,1,0"))
                              (rule "castDel" (formula "72") (term "1,1,0"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0,0,1"))
                              (rule "castDel" (formula "72") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "72") (term "2,0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "73") (term "0,0,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "sameTypeTrue" (formula "73") (ifseqformula "52") (ifseqformula "46"))
                              (rule "closeTrue" (formula "73"))
                           )
                           (branch "Objects Isomorphic"
                              (rule "definitionOfObjectsIsomorphic" (formula "70") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "70"))
                              (rule "allRight" (formula "70") (inst "sk=i_0"))
                              (rule "impRight" (formula "70"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0,0,1"))
                              (rule "castDel" (formula "72") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "72") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "3,1,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "72") (term "0,0,0,0"))
                              (rule "castDel" (formula "72") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "72") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "72") (term "3,1,0"))
                              (rule "castDel" (formula "72") (term "1,3,1,0"))
                              (rule "getOfSeqSingleton" (formula "72") (term "1,1,0"))
                              (rule "castDel" (formula "72") (term "1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "73") (term "0,1,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "definitionOfObjectIsomorphic" (formula "71") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "71"))
                              (rule "allRight" (formula "71") (inst "sk=i_1"))
                              (rule "impRight" (formula "71"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "73") (term "0,0,0,1"))
                              (rule "castDel" (formula "73") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "73") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "73") (term "0,1,1,0"))
                              (rule "castDel" (formula "73") (term "1,0,1,1,0"))
                               (builtin "One Step Simplification" (formula "73"))
                              (rule "getOfSeqSingleton" (formula "73") (term "0,0,0,0"))
                              (rule "castDel" (formula "73") (term "1,0,0,0,0"))
                              (rule "castDel" (formula "73") (term "2,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "73") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "73") (term "0,0,1,0"))
                              (rule "castDel" (formula "73") (term "1,0,0,1,0"))
                               (builtin "One Step Simplification" (formula "73"))
                              (rule "getOfSeqSingleton" (formula "73") (term "2,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "74") (term "0,2,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "74"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "inEqSimp_leqRight" (formula "48"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "49"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "68") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "68") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "68") (term "0,0,0,0,0,1"))
                        (rule "leq_literals" (formula "68") (term "0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                        (rule "leq_literals" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "definitionOfNewObjectsIsomorphic" (formula "66"))
                        (branch "New on Heap 1"
                           (rule "definitionOfNewOnHeap" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,0,0,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,0,0,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "51")))
                           (rule "closeTrue" (formula "69"))
                        )
                        (branch "New on Heap 2"
                           (rule "definitionOfNewOnHeap" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,0,0,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,0,0,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "53")))
                           (rule "closeTrue" (formula "69"))
                        )
                        (branch "Same Types"
                           (rule "definitionOfSameTypes" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,0"))
                           (rule "castDel" (formula "68") (term "2,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                           (rule "sameTypeTrue" (formula "69") (ifseqformula "48") (ifseqformula "42"))
                           (rule "closeTrue" (formula "69"))
                        )
                        (branch "Objects Isomorphic"
                           (rule "definitionOfObjectsIsomorphic" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "3,1,0"))
                           (rule "castDel" (formula "68") (term "1,3,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "3,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,1,1,1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "definitionOfObjectIsomorphic" (formula "67") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "67"))
                           (rule "allRight" (formula "67") (inst "sk=i_1"))
                           (rule "impRight" (formula "67"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,0,1,0"))
                           (rule "castDel" (formula "69") (term "1,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "getOfSeqSingleton" (formula "69") (term "2,1,1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,1,1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,0,0,1"))
                           (rule "castDel" (formula "69") (term "2,0,0,0,1"))
                           (rule "castDel" (formula "69") (term "1,0,0,0,1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,0,0,0"))
                           (rule "castDel" (formula "69") (term "1,0,0,0,0"))
                           (rule "castDel" (formula "69") (term "2,0,0,0,0"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,1,1,0"))
                           (rule "castDel" (formula "69") (term "1,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "70") (term "0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "70"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "inEqSimp_leqRight" (formula "50"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "51"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                     (rule "leq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                     (rule "leq_literals" (formula "28") (term "0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "equiv_left" (formula "32"))
                     (branch "Case 1"
                        (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "32"))
                        (rule "leq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "31"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEq" (formula "34") (term "4") (ifseqformula "8"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "8"))
                        (rule "leq_literals" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "inEqSimp_antiSymm" (formula "32") (ifseqformula "31"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                        (rule "leq_literals" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
                        (rule "qeq_literals" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "applyEq" (formula "66") (term "1,0,0,0,1") (ifseqformula "31"))
                        (rule "inEqSimp_contradEq7" (formula "66") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "66") (term "0,0,0,0,0,1"))
                        (rule "leq_literals" (formula "66") (term "0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "definitionOfNewObjectsIsomorphic" (formula "66"))
                        (branch "New on Heap 1"
                           (rule "definitionOfNewOnHeap" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,0,0,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,0,0,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "51")))
                           (rule "closeTrue" (formula "69"))
                        )
                        (branch "New on Heap 2"
                           (rule "definitionOfNewOnHeap" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,0,0,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,0,0,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "53")))
                           (rule "closeTrue" (formula "69"))
                        )
                        (branch "Same Types"
                           (rule "definitionOfSameTypes" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,0"))
                           (rule "castDel" (formula "68") (term "2,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                           (rule "sameTypeTrue" (formula "69") (ifseqformula "48") (ifseqformula "42"))
                           (rule "closeTrue" (formula "69"))
                        )
                        (branch "Objects Isomorphic"
                           (rule "definitionOfObjectsIsomorphic" (formula "66") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "allRight" (formula "66") (inst "sk=i_0"))
                           (rule "impRight" (formula "66"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,0"))
                           (rule "castDel" (formula "68") (term "1,1,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,0"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,0"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "1,1,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "3,1,0"))
                           (rule "castDel" (formula "68") (term "1,3,1,0"))
                           (rule "getOfSeqSingleton" (formula "68") (term "0,0,0,1"))
                           (rule "castDel" (formula "68") (term "1,0,0,0,1"))
                           (rule "castDel" (formula "68") (term "2,0,0,0,1"))
                           (rule "getOfSeqSingleton" (formula "68") (term "3,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "69") (term "0,1,1,1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "definitionOfObjectIsomorphic" (formula "67") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "67"))
                           (rule "allRight" (formula "67") (inst "sk=i_1"))
                           (rule "impRight" (formula "67"))
                           (rule "andLeft" (formula "1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,0,0,1"))
                           (rule "castDel" (formula "69") (term "1,0,0,0,1"))
                           (rule "castDel" (formula "69") (term "2,0,0,0,1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,0,1,0"))
                           (rule "castDel" (formula "69") (term "1,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "getOfSeqSingleton" (formula "69") (term "2,1,1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,1,1,0"))
                           (rule "castDel" (formula "69") (term "1,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,1,1"))
                           (rule "getOfSeqSingleton" (formula "69") (term "0,0,0,0"))
                           (rule "castDel" (formula "69") (term "1,0,0,0,0"))
                           (rule "castDel" (formula "69") (term "2,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "70") (term "0,0,1,1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "70"))
                        )
                     )
                     (branch "Case 2"
                        (rule "inEqSimp_leqRight" (formula "50"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "50"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "2"))
                        (rule "leq_literals" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "20"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "15"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "22"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "1,0") (ifseqformula "17"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "1,1,1,0,1") (ifseqformula "18"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "1,0,1,0,1") (ifseqformula "24"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "cut_direct" (formula "72") (term "0"))
                        (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) TRUE"
                            (builtin "One Step Simplification" (formula "73"))
                           (rule "impRight" (formula "73"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                           (rule "Use_information_flow_contract_for_multiply_1272441881_010100_5" (formula "56") (ifseqformula "49"))
                            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "71")) (ifInst ""  (formula "73")))
                           (rule "replaceKnownSelect_taclet010100_6" (formula "56") (term "0,1,1,1"))
                           (rule "replaceKnownSelect_taclet0100_3" (formula "56") (term "1,1,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010100_7" (formula "56") (term "0,1,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0100_4" (formula "56") (term "1,1,1,1"))
                           (rule "eqSymm" (formula "56") (term "1,0,1,1"))
                           (rule "eqSymm" (formula "56") (term "0,1"))
                           (rule "eqSymm" (formula "56") (term "0,0,1,1"))
                           (rule "replace_known_left" (formula "56") (term "0,0,1,1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "1")) (ifInst ""  (formula "76")))
                           (rule "notLeft" (formula "56"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "57") (term "1"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "57"))
                           (rule "closeTrue" (formula "57"))
                        )
                        (branch "CUT: newObjectsIsomorphic(seqSingleton(resultAtPost_50_A), heapAtPre_A<<anonHeapFunction>>, seqSingleton(resultAtPost_50_B), heapAtPre_B<<anonHeapFunction>>) FALSE"
                            (builtin "One Step Simplification" (formula "73"))
                           (rule "false_right" (formula "73"))
                           (rule "definitionOfNewObjectsIsomorphic" (formula "72"))
                           (branch "New on Heap 1"
                              (rule "definitionOfNewOnHeap" (formula "72") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "allRight" (formula "72") (inst "sk=i_0"))
                              (rule "impRight" (formula "72"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0,0,1"))
                              (rule "castDel" (formula "74") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "74") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "74") (term "1,1,0,0,1,0"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0,0,0"))
                              (rule "castDel" (formula "74") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "74") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "75") (term "0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "57")))
                              (rule "closeTrue" (formula "75"))
                           )
                           (branch "New on Heap 2"
                              (rule "definitionOfNewOnHeap" (formula "72") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "allRight" (formula "72") (inst "sk=i_0"))
                              (rule "impRight" (formula "72"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0,0,1"))
                              (rule "castDel" (formula "74") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "74") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,0,0,1,0"))
                              (rule "castDel" (formula "74") (term "1,1,0,0,1,0"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0,0,0"))
                              (rule "castDel" (formula "74") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "74") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "75") (term "0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "59")))
                              (rule "closeTrue" (formula "75"))
                           )
                           (branch "Same Types"
                              (rule "definitionOfSameTypes" (formula "72") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "allRight" (formula "72") (inst "sk=i_0"))
                              (rule "impRight" (formula "72"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0"))
                              (rule "castDel" (formula "74") (term "2,0,0"))
                              (rule "castDel" (formula "74") (term "1,0,0"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0,0,1"))
                              (rule "castDel" (formula "74") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "74") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,0"))
                              (rule "castDel" (formula "74") (term "1,1,0"))
                              (rule "castDel" (formula "74") (term "2,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "75") (term "0,0,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "sameTypeTrue" (formula "75") (ifseqformula "54") (ifseqformula "48"))
                              (rule "closeTrue" (formula "75"))
                           )
                           (branch "Objects Isomorphic"
                              (rule "definitionOfObjectsIsomorphic" (formula "72") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "allRight" (formula "72") (inst "sk=i_0"))
                              (rule "impRight" (formula "72"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0,0,0"))
                              (rule "castDel" (formula "74") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "74") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,1,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "0,0,0,1"))
                              (rule "castDel" (formula "74") (term "1,0,0,0,1"))
                              (rule "castDel" (formula "74") (term "2,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "3,1,1"))
                              (rule "getOfSeqSingleton" (formula "74") (term "1,1,0"))
                              (rule "castDel" (formula "74") (term "1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "74") (term "3,1,0"))
                              (rule "castDel" (formula "74") (term "1,3,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "75") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "definitionOfObjectIsomorphic" (formula "73") (inst "i=i"))
                               (builtin "One Step Simplification" (formula "73"))
                              (rule "allRight" (formula "73") (inst "sk=i_1"))
                              (rule "impRight" (formula "73"))
                              (rule "andLeft" (formula "1"))
                              (rule "getOfSeqSingleton" (formula "75") (term "0,0,0,0"))
                              (rule "castDel" (formula "75") (term "2,0,0,0,0"))
                              (rule "castDel" (formula "75") (term "1,0,0,0,0"))
                              (rule "getOfSeqSingleton" (formula "75") (term "0,0,1,0"))
                              (rule "castDel" (formula "75") (term "1,0,0,1,0"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "getOfSeqSingleton" (formula "75") (term "2,1,1"))
                              (rule "getOfSeqSingleton" (formula "75") (term "0,0,0,1"))
                              (rule "castDel" (formula "75") (term "2,0,0,0,1"))
                              (rule "castDel" (formula "75") (term "1,0,0,0,1"))
                              (rule "getOfSeqSingleton" (formula "75") (term "0,1,1"))
                              (rule "getOfSeqSingleton" (formula "75") (term "0,1,1,0"))
                              (rule "castDel" (formula "75") (term "1,0,1,1,0"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "76") (term "0,0,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "76"))
                           )
                        )
                     )
                  )
               )
               (branch "Exceptional Post (multiply)"
                   (builtin "One Step Simplification" (formula "53"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "42"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "45"))
                  (rule "notLeft" (formula "43"))
                  (rule "close" (formula "47") (ifseqformula "46"))
               )
               (branch "Pre (multiply)"
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "53")) (ifInst ""  (formula "9")) (ifInst ""  (formula "53")) (ifInst ""  (formula "13")))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "51"))
                  (rule "closeTrue" (formula "51"))
               )
               (branch "Null reference (_p_3_A = null)"
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "52")))
                  (rule "closeTrue" (formula "51"))
               )
            )
         )
         (branch "Exceptional Post (multiply)"
             (builtin "One Step Simplification" (formula "31"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "andLeft" (formula "31"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0") (ifseqformula "31"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "32"))
            (rule "close" (formula "35") (ifseqformula "34"))
         )
         (branch "Pre (multiply)"
             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")) (ifInst ""  (formula "43")) (ifInst ""  (formula "14")))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "39"))
            (rule "closeTrue" (formula "39"))
         )
         (branch "Null reference (_p_3_B = null)"
             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")))
            (rule "closeTrue" (formula "39"))
         )
      )
   )
   (branch "Exceptional Post (compareTo)"
       (builtin "One Step Simplification" (formula "32"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "25"))
      (rule "notLeft" (formula "23"))
      (rule "close" (formula "27") (ifseqformula "26"))
   )
   (branch "Pre (compareTo)"
       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "29")) (ifInst ""  (formula "3")) (ifInst ""  (formula "29")))
      (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "31") (term "0"))
      (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "29")))
      (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "29"))
      (rule "close" (formula "31") (ifseqformula "3"))
   )
   (branch "Null reference (var_2 = null)"
       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "34")))
      (rule "closeTrue" (formula "31"))
   )
)
(branch "Exceptional Post (compareTo)"
    (builtin "One Step Simplification" (formula "26"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "16"))
   (rule "close" (formula "20") (ifseqformula "19"))
)
(branch "Pre (compareTo)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")) (ifInst ""  (formula "9")) (ifInst ""  (formula "22")))
   (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "24") (term "0"))
   (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
   (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "22"))
   (rule "close" (formula "24") (ifseqformula "9"))
)
(branch "Null reference (var = null)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")))
   (rule "closeTrue" (formula "24"))
)
)
}
